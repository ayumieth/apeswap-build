{"version":3,"sources":["views/Dex/Orders/components/OrderHistoryPanel/MonkeyImage.tsx","hooks/Orders/Trades.ts","state/orders/hooks.ts","hooks/useOrderCallback.ts","hooks/useAutonomyOrdersLib.ts","views/Dex/Orders/components/SwapModalHeader.tsx","views/Dex/Orders/components/TradePrice.tsx","views/Dex/Orders/components/OrderTradeInfo/index.tsx","views/Dex/Orders/components/SwapModalFooter.tsx","views/Dex/Orders/components/OrderSwapModal.tsx","views/Dex/Orders/components/SwapSwitchButton.tsx","views/Dex/Orders/components/PriceInputPanel/NumericalInput.tsx","views/Dex/Orders/components/PriceInputPanel/styles.ts","views/Dex/Orders/components/PriceInputPanel/index.tsx","views/Dex/Orders/components/OrdersActions/styles.ts","views/Dex/Orders/components/OrdersActions/index.tsx","views/Dex/Orders/components/OrderHistoryPanel/styles.ts","views/Dex/Orders/components/OrderHistoryPanel/OrderRows.tsx","views/Dex/Orders/components/OrderHistoryPanel/index.tsx","views/Dex/Orders/index.tsx","views/Dex/Orders/components/confirmPriceImpactWithoutFee.ts"],"names":["MonkeyImage","color","width","height","viewBox","fill","xmlns","sx","opacity","d","useAllCommonPairs","currencyA","currencyB","chainId","useActiveWeb3React","wrappedCurrency","undefined","tokenA","tokenB","bases","useMemo","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","address","additionalB","basePairs","flatMap","base","map","otherBase","allPairCombinations","filter","tokens","Boolean","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","equals","allPairs","usePairs","Object","values","result","PairState","EXISTS","reduce","memo","curr","liquidityToken","useSwapState","useSelector","state","orders","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","some","token","pairs","pair","useDerivedSwapInfo","inputError","account","independentField","typedValue","inputCurrencyId","Field","INPUT","currencyId","outputCurrencyId","OUTPUT","recipient","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","value","currency","typedValueParsed","parseUnits","decimals","toString","Token","TokenAmount","JSBI","BigInt","CurrencyAmount","ether","error","console","debug","tryParseAmount","bestTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","useUserSingleHopOnly","singleHopOnly","length","Trade","maxHops","maxNumResults","bestTradeSoFar","i","currentTrade","isTradeBetter","BETTER_TRADE_LESS_HOPS_THRESHOLD","useTradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useTradeExactOut","v2Trade","currencyBalances","currencies","formattedTo","isAddress","indexOf","useUserSlippageTolerance","allowedSlippage","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","balanceIn","amountIn","lessThan","getSymbol","v1Trade","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","chainAddress","contracts","banana","test","validatedRecipient","exactAmount","isNaN","parseFloat","toLowerCase","parseIndependentFieldURLParameter","exactField","SwapCallbackState","useAutonomyOrdersLib","library","AutonomyLimitStopOrders","getSigner","message","SwapModalHeader","showAcceptChanges","onAcceptChanges","realOutputAmount","t","useTranslation","priceImpactWithoutFee","computeLegacyPriceBreakdown","priceImpactSeverity","warningSeverity","truncatedRecipient","truncateHash","split","recipientSentToText","postSentToText","styles","SwapConfirmDisabledInputContainer","transform","size","weight","tradeType","TradeType","EXACT_OUTPUT","inputAmount","toSignificant","alignItems","ml","justifyContent","outerLogoCircle","innerLogoCircle","icon","EXACT_INPUT","outputAmount","margin","Row","mr","bold","onClick","justify","gap","style","padding","title","TradePrice","price","showInverted","setShowInverted","formattedPrice","invert","show","baseCurrency","quoteCurrency","label","fontWeight","OrderTradeInfo","executionPrice","orderMarketStatus","realPriceValue","useState","flexDirection","borderRadius","background","mt","cursor","symbol1","symbol2","toFixed","React","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","severity","maxWidth","fullWidth","disabled","id","OrderSwapModal","originalTrade","onDismiss","customOnDismiss","bestRoute","attemptingTxn","txHash","tradeB","tradeA","currencyEquals","equalTo","modalHeader","useCallback","modalBottom","pendingText","confirmationContent","TransactionConfirmationModal","hash","content","currencyToAdd","SwapSwitchButton","swapSwitchContainer","swapSwitchButton","StyledInput","styled","input","theme","colors","text","fontSize","align","inputRegex","RegExp","Input","onUserInput","placeholder","removeLiquidity","rest","onChange","event","nextUserInput","target","replace","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","marginRight","pricePanelContainer","flexWrap","priceInputContainer","minWidth","marginLeft","marginTop","currentButton","textTransform","transition","buttonHover","messageContainer","PriceInputPanel","inputValue","currentPrice","mb","lineHeight","textAlign","val","tokenSelectorStyles","primaryFlex","tokenText","dexActionsContainer","position","navLinkContainer","paddingRight","navIconContainer","navLink","OrdersActions","swapInputError","isExpertMode","showWrap","wrapType","swapCallbackError","userHasSpecifiedInputOutput","routerType","onWrap","handleSwap","onPresentConfirmModal","setSwapState","useApproveCallbackFromTrade","approval","approveCallback","showApproveFlow","ApprovalState","NOT_APPROVED","PENDING","WrapType","WRAP","load","tradeToConfirm","UnlockButton","listContainer","titleContainer","titleTextContainer","OrderRows","allTokens","useAllTokens","autonomyOrdersLib","columns","alignSelf","order","inputToken","getAddress","outputToken","formatUnits","orderStatus","status","handleCancel","a","cancelOrder","paddingLeft","body","time","updateTime","placement","transformTip","wordBreak","OrderHistoryPanel","viewType","setViewType","setOrders","currentOrders","setCurrentOrders","pageCount","setPageCount","orderOffset","setOrderOffset","switchTab","index","data","useQuery","getOrders","allOrders","sort","x","y","Date","parse","refetchInterval","useEffect","endOffset","slice","Math","ceil","dexStyles","dexContainer","activeTab","variant","Pagination","previousLabel","nextLabel","renderOnZeroPageCount","onPageChange","newOffset","selected","ReactPaginate","attrs","activeClassName","Orders","loadedUrlParams","dispatch","useDispatch","useParsedQueryString","setResult","parsed","replaceSwapState","field","useDefaultsFromURLSearch","history","useHistory","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","c","defaultTokens","importTokensNotInDefault","useModal","ImportTokenWarningModal","onCancel","push","onPresentImportTokenWarningModal","useExpertModeManager","onCurrencySelection","selectCurrency","ETHER","onSwitchTokens","switchCurrencies","typeInput","onChangeRecipient","setRecipient","useSwapActionHandlers","useWrapCallback","execute","NOT_APPLICABLE","dependentField","parsedAmounts","formattedAmounts","toExact","maxAmountInput","maxAmountSpend","limitOrderPrice","setLimitOrderPrice","inputFocused","setInputFocused","Number","Infinity","outputMinAmount","realOutputValue","marketOutput","handleTypePrice","handleAcceptChanges","prevState","handleConfirmDismiss","showConfirm","handleMaxInput","greaterThan","recipientAddressOrName","outputMinMaxAmount","recipientAddress","useUserAutonomyPrepay","autonomyPrepay","VALID","callback","output","symbol","getNativeWrappedAddress","inputCurrencyDecimals","parseEther","div","outputCurrencyDecimals","submitOrder","then","response","catch","code","Error","INVALID","LOADING","useOrderCallback","swapCallback","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","confirmWord","window","prompt","percent","ALLOWED_PRICE_IMPACT_HIGH","confirm","confirmPriceImpactWithoutFee","pageContainer","DexNav","DexPanel","panelText","otherCurrency","fieldType","onCurrencySelect","ordersDisabled","external","href"],"mappings":"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","file":"static/js/39.7e690c38.chunk.js","sourcesContent":["/** @jsxImportSource theme-ui */\nimport { SvgProps } from '@ape.swap/uikit'\nimport * as React from 'react'\n\nconst MonkeyImage: React.FC<SvgProps> = ({ color = 'text' }) => {\n  return (\n    <svg\n      width=\"200\"\n      height=\"90\"\n      viewBox=\"0 0 200 90\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      sx={{ fill: color }}\n    >\n      <g opacity=\"0.5\">\n        <path d=\"M149.206 89.0034L148.996 88.2934L148.876 87.8434C148.856 87.7834 148.846 87.7334 148.826 87.6734C147.886 83.9834 147.726 80.1134 147.576 76.3634C147.406 72.1434 147.236 67.7734 145.956 63.5134L145.916 63.2034C145.736 62.5534 145.536 61.9034 145.316 61.2534C145.116 60.6134 144.896 59.9834 144.656 59.3534C139.306 45.0034 127.116 32.6634 113.206 27.7634L112.986 20.6834L104.146 25.9134C103.556 25.8234 103.016 25.7934 102.466 25.7834C102.266 24.8234 101.966 23.4334 101.696 22.2534C101.506 21.3834 101.346 20.6434 101.276 20.3034L101.116 19.5434L100.346 19.5034C93.6458 19.1434 88.3158 25.3134 87.1858 27.8834C72.9158 32.7634 60.8358 44.8434 55.3958 59.3934C55.1558 60.0234 54.9358 60.6534 54.7358 61.2934C54.4958 61.9834 54.2858 62.6834 54.0858 63.3934C52.9058 67.5934 52.7558 71.9034 52.6058 76.0834C52.4758 79.9134 52.3358 83.8734 51.3658 87.6734C51.3558 87.7334 51.3358 87.7834 51.3258 87.8434C51.2858 88.0034 51.2358 88.1534 51.1958 88.3134C51.1058 88.6534 51.0158 88.9934 50.9258 89.3434H52.9958C53.0358 89.1734 53.0858 89.0134 53.1258 88.8434C53.2158 88.5134 53.3058 88.1734 53.3858 87.8434C53.4058 87.7834 53.4158 87.7234 53.4258 87.6734C54.3458 83.8334 54.4758 79.9334 54.6058 76.1534C54.7458 72.0934 54.8958 67.9034 56.0158 63.9334C60.3958 48.3234 73.3658 34.5434 88.2858 29.6234L88.8358 29.3834L88.9558 28.8334C89.1558 27.9634 93.4258 21.6734 99.4858 21.4934C99.5558 21.8334 99.6458 22.2434 99.7458 22.6834C100.076 24.1834 100.536 26.2334 100.656 26.9434L100.796 27.7734H101.646C102.586 27.7734 103.276 27.7734 104.146 27.9434L104.516 28.0234L111.086 24.1234L111.256 29.2134L111.916 29.4334C126.686 34.3634 139.546 48.0834 143.956 63.6134L143.996 63.9534C145.246 68.0134 145.416 72.3034 145.586 76.4434C145.726 80.1334 145.886 83.9334 146.776 87.6734C146.786 87.7334 146.796 87.7834 146.816 87.8434C146.896 88.1734 146.986 88.5134 147.076 88.8434L147.226 89.3434H149.306C149.276 89.2334 149.236 89.1134 149.206 89.0034Z\" />\n        <path d=\"M56.5251 60.0032C56.4451 59.9232 56.2751 59.8232 56.0651 59.8132L56.0151 59.9032V61.8132C55.6751 61.8132 55.4351 61.6832 55.2851 61.5632L55.1551 61.5032C55.0151 61.4332 54.8751 61.3532 54.7351 61.2932C52.3151 60.1232 49.6951 60.0832 46.9451 61.1732C43.7551 62.3832 41.3151 65.3732 40.2451 69.3832C38.7851 74.7832 40.0351 80.8032 43.5051 85.0832C44.2751 86.0632 45.0651 86.9232 45.8851 87.6732C45.9551 87.7332 46.0151 87.7932 46.0751 87.8432C46.7051 88.4132 47.3451 88.9032 48.0051 89.3432H44.7651C44.2451 88.8832 43.7251 88.3832 43.2451 87.8432C43.1851 87.7932 43.1351 87.7332 43.0851 87.6732C42.6951 87.2532 42.3151 86.8032 41.9451 86.3332C38.0851 81.5732 36.6951 74.8732 38.3051 68.8632C39.5551 64.2332 42.4351 60.7532 46.2251 59.3032C50.0951 57.7732 53.2551 58.4132 55.3951 59.3932C55.5951 59.4732 55.7851 59.5732 55.9651 59.6632C56.2651 59.7532 56.4551 59.9332 56.5251 60.0032Z\" />\n        <path d=\"M158.056 86.3438C157.686 86.8138 157.306 87.2638 156.916 87.6738C156.866 87.7338 156.816 87.7938 156.766 87.8438C156.246 88.3938 155.726 88.8938 155.206 89.3438H151.896C152.546 88.9238 153.216 88.4338 153.886 87.8438C153.956 87.7838 154.016 87.7338 154.076 87.6738C154.886 86.9538 155.706 86.1038 156.496 85.0938C159.966 80.8038 161.226 74.7838 159.766 69.3838C158.696 65.3738 156.246 62.3838 153.066 61.1738C150.256 60.1138 147.706 60.1438 145.316 61.2538C145.036 61.3738 144.766 61.5138 144.496 61.6738L143.496 59.9438C143.876 59.7238 144.266 59.5238 144.656 59.3538C147.486 58.1038 150.546 58.0838 153.776 59.3038C157.566 60.7538 160.456 64.2338 161.696 68.8638C163.316 74.8738 161.916 81.5738 158.056 86.3438Z\" />\n        <path d=\"M116.274 55.0537C112.384 55.0537 108.724 55.9937 105.374 57.8537C102.004 59.7837 97.8142 59.7837 94.4242 57.8437C91.0942 55.9937 87.4342 55.0537 83.5442 55.0537C71.8442 55.0537 62.3242 64.0337 62.3242 75.0737C62.3242 77.9637 62.9642 80.7537 64.1642 83.1237C64.5642 83.9137 64.9742 84.7237 65.5642 85.4937C66.0042 86.1837 66.3642 86.9137 66.6442 87.6737C66.6642 87.7237 66.6842 87.7837 66.6942 87.8437C66.8742 88.3337 67.0142 88.8337 67.1142 89.3437H69.1442C69.0542 88.8437 68.9442 88.3337 68.7942 87.8437C68.7742 87.7837 68.7642 87.7237 68.7342 87.6737C68.3842 86.5237 67.8742 85.4037 67.2042 84.3537C66.6842 83.6637 66.3242 82.9637 65.9542 82.2237C64.8942 80.1237 64.3242 77.6537 64.3242 75.0737C64.3242 65.1337 72.9442 57.0537 83.5442 57.0537C87.0842 57.0537 90.4242 57.9137 93.4442 59.5837C97.4342 61.8637 102.384 61.8637 106.364 59.5937C109.394 57.9137 112.724 57.0537 116.274 57.0537C126.864 57.0537 135.484 65.1337 135.484 75.0737C135.484 77.6537 134.924 80.1237 133.864 82.2237L133.784 82.4237C133.644 82.9937 133.114 83.6837 132.564 84.4237C131.914 85.4437 131.414 86.5437 131.074 87.6737C131.044 87.7237 131.034 87.7837 131.014 87.8437C130.864 88.3337 130.754 88.8337 130.674 89.3437H132.694C132.794 88.8337 132.934 88.3337 133.104 87.8437C133.124 87.7837 133.144 87.7237 133.164 87.6737C133.434 86.9337 133.784 86.2337 134.204 85.5637C134.804 84.7637 135.424 83.9437 135.694 83.0337C136.864 80.6737 137.484 77.9237 137.484 75.0737C137.484 64.0337 127.964 55.0537 116.274 55.0537Z\" />\n        <path d=\"M82.5847 68.7432C78.9047 68.7432 75.8047 71.7332 75.8047 75.2632V77.1632C75.8047 80.8132 78.7847 83.6732 82.5847 83.6732C86.3847 83.6732 89.3547 80.8132 89.3547 77.1632V75.2632C89.3547 71.6032 86.3747 68.7432 82.5847 68.7432ZM87.3547 77.1632C87.3547 79.6932 85.2547 81.6732 82.5847 81.6732C79.9147 81.6732 77.8047 79.6932 77.8047 77.1632V75.2632C77.8047 72.8132 79.9947 70.7432 82.5847 70.7432C85.1747 70.7432 87.3547 72.7332 87.3547 75.2632V77.1632Z\" />\n        <path d=\"M117.425 68.7432C113.755 68.7432 110.645 71.7332 110.645 75.2632V77.1632C110.645 80.8132 113.625 83.6732 117.425 83.6732C121.225 83.6732 124.205 80.8132 124.205 77.1632V75.2632C124.205 71.6032 121.225 68.7432 117.425 68.7432ZM122.205 77.1632C122.205 79.6932 120.105 81.6732 117.425 81.6732C114.745 81.6732 112.645 79.6932 112.645 77.1632V75.2632C112.645 72.8132 114.835 70.7432 117.425 70.7432C120.015 70.7432 122.205 72.7332 122.205 75.2632V77.1632Z\" />\n        <path d=\"M199.316 87.6729H0.685547V89.3428H199.316V87.6729Z\" />\n        <g opacity=\"0.5\">\n          <path d=\"M159.577 65.0828C159.177 65.0828 158.797 64.8428 158.647 64.4528C158.447 63.9428 158.697 63.3628 159.217 63.1528C160.007 62.8428 160.767 62.5228 161.477 62.2028C161.977 61.9728 162.577 62.2028 162.797 62.7028C163.027 63.2028 162.797 63.8028 162.297 64.0228C161.547 64.3628 160.767 64.6928 159.937 65.0128C159.817 65.0628 159.697 65.0828 159.567 65.0828H159.577Z\" />\n          <path d=\"M166.067 61.8933C165.737 61.8933 165.407 61.7233 165.217 61.4233C164.927 60.9533 165.067 60.3333 165.537 60.0433C166.927 59.1733 168.137 58.2533 169.127 57.3033C169.527 56.9233 170.157 56.9333 170.537 57.3333C170.917 57.7333 170.907 58.3633 170.507 58.7433C169.417 59.7933 168.097 60.8033 166.587 61.7433C166.417 61.8433 166.237 61.8933 166.057 61.8933H166.067ZM172.647 55.2533C172.497 55.2533 172.357 55.2233 172.207 55.1533C171.707 54.9133 171.507 54.3133 171.747 53.8133C172.307 52.6533 172.597 51.4533 172.597 50.2633C172.597 50.0833 172.597 49.9133 172.577 49.7333C172.537 49.1833 172.947 48.7033 173.497 48.6633C174.027 48.6133 174.527 49.0333 174.567 49.5833C174.587 49.8033 174.587 50.0333 174.587 50.2533C174.587 51.7533 174.237 53.2433 173.537 54.6833C173.367 55.0433 173.007 55.2433 172.637 55.2433L172.647 55.2533ZM157.087 52.0133C157.037 52.0133 156.977 52.0133 156.927 52.0033C154.947 51.6833 153.287 50.7533 152.247 49.3733C151.917 48.9333 151.997 48.3033 152.437 47.9733C152.877 47.6333 153.507 47.7233 153.837 48.1633C154.567 49.1233 155.777 49.7933 157.247 50.0233C157.787 50.1133 158.167 50.6233 158.077 51.1733C157.997 51.6633 157.577 52.0133 157.087 52.0133ZM161.747 51.5333C161.337 51.5333 160.947 51.2733 160.807 50.8633C160.627 50.3433 160.897 49.7733 161.427 49.5933C162.387 49.2633 163.337 48.7633 164.257 48.1333C164.567 47.9233 164.877 47.6833 165.167 47.4233C165.577 47.0633 166.217 47.1033 166.577 47.5133C166.947 47.9333 166.897 48.5633 166.487 48.9233C166.137 49.2333 165.767 49.5233 165.387 49.7833C164.317 50.5133 163.207 51.0933 162.077 51.4833C161.967 51.5233 161.857 51.5433 161.747 51.5433V51.5333ZM172.067 46.2233C171.737 46.2233 171.407 46.0533 171.217 45.7533C170.877 45.2033 170.467 44.6733 170.007 44.1733C169.877 44.4333 169.747 44.6933 169.607 44.9333C169.337 45.4133 168.737 45.5933 168.247 45.3233C167.767 45.0533 167.587 44.4433 167.857 43.9633C168.067 43.5833 168.277 43.1733 168.467 42.7533C168.397 42.6933 168.317 42.6433 168.247 42.5833C167.807 42.2533 167.707 41.6233 168.037 41.1833C168.317 40.8033 168.817 40.6833 169.237 40.8633C169.357 40.5133 169.477 40.1533 169.597 39.7833C169.757 39.2533 170.317 38.9633 170.847 39.1233C171.377 39.2833 171.667 39.8433 171.507 40.3733C171.317 41.0033 171.107 41.6133 170.877 42.1933C171.667 42.9533 172.367 43.8033 172.917 44.6833C173.207 45.1533 173.077 45.7633 172.607 46.0633C172.437 46.1633 172.257 46.2133 172.077 46.2133L172.067 46.2233ZM152.537 45.2833C152.407 45.2833 152.277 45.2533 152.147 45.2033C151.637 44.9933 151.397 44.4033 151.617 43.8933C152.217 42.4633 153.357 41.1233 154.997 39.9233C155.447 39.5933 156.067 39.6933 156.397 40.1333C156.727 40.5833 156.627 41.2033 156.187 41.5333C154.837 42.5233 153.927 43.5733 153.467 44.6633C153.307 45.0433 152.937 45.2733 152.547 45.2733L152.537 45.2833ZM164.647 40.6333C164.547 40.6333 164.447 40.6133 164.347 40.5833C162.897 40.1233 161.457 39.9433 160.067 40.0833C159.507 40.1333 159.027 39.7333 158.977 39.1833C158.927 38.6333 159.327 38.1433 159.877 38.0933C161.537 37.9333 163.237 38.1433 164.947 38.6833C165.477 38.8533 165.767 39.4133 165.597 39.9433C165.457 40.3733 165.067 40.6433 164.647 40.6433V40.6333ZM171.617 36.4733C171.567 36.4733 171.507 36.4733 171.447 36.4633C170.907 36.3733 170.537 35.8533 170.627 35.3133C170.867 33.8633 171.047 32.3133 171.167 30.6933C171.207 30.1433 171.697 29.7333 172.237 29.7633C172.787 29.8033 173.207 30.2833 173.167 30.8333C173.047 32.5133 172.857 34.1233 172.607 35.6333C172.527 36.1233 172.107 36.4733 171.617 36.4733Z\" />\n          <path d=\"M172.308 26.9732C171.758 26.9732 171.318 26.5332 171.308 25.9832C171.288 24.4932 171.218 23.5632 171.218 23.5532C171.178 23.0032 171.588 22.5232 172.138 22.4832C172.678 22.4432 173.168 22.8532 173.208 23.4032C173.208 23.4432 173.288 24.4032 173.298 25.9632C173.298 26.5132 172.858 26.9632 172.308 26.9732H172.298H172.308Z\" />\n        </g>\n        <g opacity=\"0.5\">\n          <path d=\"M29.9151 85.622C29.6851 85.622 29.4651 85.542 29.2751 85.392C29.2451 85.362 28.4651 84.712 27.3851 83.592C27.0051 83.192 27.0151 82.562 27.4151 82.182C27.8151 81.802 28.4451 81.812 28.8251 82.212C29.8151 83.242 30.5451 83.852 30.5551 83.862C30.9751 84.212 31.0351 84.842 30.6851 85.272C30.4851 85.512 30.2051 85.632 29.9151 85.632V85.622Z\" />\n          <path d=\"M24.9851 80.0622C24.6651 80.0622 24.3451 79.9122 24.1551 79.6222C23.1051 78.0622 22.3051 76.5022 21.7751 74.9922C21.6751 74.7022 21.7151 74.4022 21.8551 74.1522C21.4451 74.1122 21.0451 74.0522 20.6551 73.9822C20.1151 73.8822 19.7451 73.3622 19.8451 72.8222C19.9451 72.2822 20.4651 71.9122 21.0051 72.0122C21.7851 72.1522 22.5951 72.2222 23.4251 72.2222C24.1551 72.2222 24.8851 72.1622 25.6051 72.0522C26.1551 71.9622 26.6651 72.3422 26.7451 72.8922C26.8251 73.4422 26.4551 73.9522 25.9051 74.0322C25.1451 74.1522 24.3751 74.2122 23.6051 74.2222C23.6251 74.2522 23.6351 74.2922 23.6451 74.3322C24.1151 75.6822 24.8351 77.0822 25.7851 78.4922C26.0951 78.9522 25.9751 79.5722 25.5151 79.8822C25.3451 80.0022 25.1451 80.0522 24.9551 80.0522L24.9851 80.0622ZM30.4351 72.4722C30.0951 72.4722 29.7551 72.2922 29.5651 71.9722C29.2851 71.4922 29.4451 70.8822 29.9251 70.6022C31.1051 69.9122 31.9851 69.0722 32.5351 68.1022C32.6451 67.9122 32.7451 67.7122 32.8151 67.5222C33.0251 67.0122 33.6051 66.7722 34.1151 66.9722C34.6251 67.1822 34.8751 67.7622 34.6651 68.2722C34.5551 68.5322 34.4251 68.8022 34.2651 69.0822C33.5351 70.3622 32.4051 71.4522 30.9151 72.3222C30.7551 72.4122 30.5851 72.4622 30.4151 72.4622L30.4351 72.4722ZM16.2851 72.1722C16.0851 72.1722 15.8751 72.1122 15.7051 71.9822C14.1251 70.8522 13.0251 69.3722 12.4251 67.5922C12.2451 67.0722 12.5251 66.5022 13.0551 66.3222C13.5751 66.1422 14.1451 66.4222 14.3251 66.9522C14.7951 68.3322 15.6551 69.4722 16.8851 70.3622C17.3351 70.6822 17.4351 71.3122 17.1151 71.7622C16.9151 72.0322 16.6151 72.1822 16.3051 72.1822L16.2851 72.1722ZM22.0851 70.8022C22.0851 70.8022 22.0151 70.8022 21.9851 70.8022C21.4351 70.7422 21.0351 70.2522 21.0951 69.7022C21.1851 68.8122 21.3951 67.9322 21.7151 67.0922C22.0651 66.1722 22.5151 65.3522 23.0451 64.6322C23.3751 64.1922 24.0051 64.1022 24.4451 64.4322C24.8851 64.7622 24.9751 65.3922 24.6451 65.8322C24.2251 66.4022 23.8651 67.0622 23.5851 67.8022C23.3251 68.4822 23.1651 69.1822 23.0851 69.9022C23.0351 70.4122 22.5951 70.8022 22.0951 70.8022H22.0851ZM32.6151 64.4922C32.4051 64.4922 32.1951 64.4222 32.0151 64.2922C31.0351 63.5522 29.5051 63.2622 28.1051 63.5622C27.5651 63.6822 27.0351 63.3322 26.9151 62.7922C26.8051 62.2522 27.1451 61.7222 27.6851 61.6022C29.6451 61.1822 31.7651 61.6022 33.2151 62.7022C33.6551 63.0322 33.7451 63.6622 33.4051 64.1022C33.2051 64.3622 32.9051 64.5022 32.6051 64.5022L32.6151 64.4922ZM13.3551 63.4122C13.2551 63.4122 13.1451 63.3922 13.0351 63.3622C12.5151 63.1922 12.2251 62.6222 12.4051 62.1022C12.9451 60.4822 13.9451 58.9622 15.3651 57.6022C15.7651 57.2222 16.3951 57.2322 16.7751 57.6322C17.1551 58.0322 17.1451 58.6622 16.7451 59.0422C15.5551 60.1722 14.7351 61.4122 14.2951 62.7222C14.1551 63.1422 13.7651 63.4122 13.3451 63.4122H13.3551ZM20.1451 56.5522C19.7751 56.5522 19.4151 56.3422 19.2451 55.9822C19.0051 55.4822 19.2151 54.8822 19.7151 54.6422C21.2151 53.9222 22.8551 53.3522 24.6051 52.9622C25.1451 52.8422 25.6751 53.1822 25.7951 53.7222C25.9151 54.2622 25.5751 54.7922 25.0351 54.9122C23.4351 55.2722 21.9351 55.7822 20.5751 56.4422C20.4351 56.5122 20.2851 56.5422 20.1451 56.5422V56.5522ZM44.3951 56.4822C44.2951 56.4822 44.1851 56.4622 44.0851 56.4322C42.5851 55.9422 41.1951 55.7422 39.7251 55.5222L39.4051 55.4722C38.8551 55.3922 38.4851 54.8822 38.5651 54.3322C38.6451 53.7822 39.1551 53.4122 39.7051 53.4922L40.0251 53.5422C41.5151 53.7622 43.0451 53.9922 44.7151 54.5222C45.2451 54.6922 45.5251 55.2522 45.3551 55.7822C45.2151 56.2022 44.8251 56.4722 44.4051 56.4722L44.3951 56.4822ZM34.6751 54.6322C34.6751 54.6322 34.5851 54.6322 34.5351 54.6322C32.9251 54.4122 31.3151 54.3222 29.7651 54.3622C29.2351 54.3922 28.7551 53.9422 28.7351 53.3922C28.7151 52.8422 29.1551 52.3822 29.7051 52.3622C31.3551 52.3122 33.0951 52.4122 34.8151 52.6522C35.3651 52.7322 35.7451 53.2322 35.6651 53.7822C35.5951 54.2822 35.1651 54.6422 34.6751 54.6422V54.6322Z\" />\n          <path d=\"M50.925 60.1723C50.705 60.1723 50.485 60.1023 50.305 59.9523C49.645 59.4223 48.995 58.9423 48.365 58.5323C47.905 58.2323 47.775 57.6123 48.085 57.1423C48.385 56.6823 49.015 56.5523 49.475 56.8623C50.155 57.3123 50.865 57.8323 51.565 58.3923C51.995 58.7423 52.065 59.3623 51.725 59.8023C51.525 60.0523 51.235 60.1823 50.945 60.1823L50.925 60.1723Z\" />\n        </g>\n        <path d=\"M172.096 17.6621C170.576 17.6621 169.336 16.4221 169.336 14.9021V5.42211C169.336 3.90211 170.576 2.66211 172.096 2.66211C173.616 2.66211 174.856 3.90211 174.856 5.42211V14.9021C174.856 16.4221 173.616 17.6621 172.096 17.6621ZM172.096 4.65211C171.676 4.65211 171.336 4.99211 171.336 5.41211V14.9021C171.336 15.3221 171.676 15.6621 172.096 15.6621C172.516 15.6621 172.856 15.3221 172.856 14.9021V5.42211C172.856 5.00211 172.516 4.66211 172.096 4.66211V4.65211Z\" />\n        <path d=\"M179.205 16.9529C175.705 16.9529 172.855 14.1029 172.855 10.6029C172.855 7.10293 175.705 4.25293 179.205 4.25293C182.705 4.25293 185.555 7.10293 185.555 10.6029C185.555 14.1029 182.705 16.9529 179.205 16.9529ZM179.205 6.25293C176.805 6.25293 174.855 8.20293 174.855 10.6029C174.855 13.0029 176.805 14.9529 179.205 14.9529C181.605 14.9529 183.555 13.0029 183.555 10.6029C183.555 8.20293 181.605 6.25293 179.205 6.25293Z\" />\n        <path d=\"M164.987 16.9529C161.487 16.9529 158.637 14.1029 158.637 10.6029C158.637 7.10293 161.487 4.25293 164.987 4.25293C168.487 4.25293 171.337 7.10293 171.337 10.6029C171.337 14.1029 168.487 16.9529 164.987 16.9529ZM164.987 6.25293C162.587 6.25293 160.637 8.20293 160.637 10.6029C160.637 13.0029 162.587 14.9529 164.987 14.9529C167.387 14.9529 169.337 13.0029 169.337 10.6029C169.337 8.20293 167.387 6.25293 164.987 6.25293Z\" />\n        <path d=\"M170.967 5.0625C170.707 5.0625 170.457 4.9625 170.257 4.7725L167.187 1.7025C166.797 1.3125 166.797 0.6825 167.187 0.2925C167.577 -0.0975 168.207 -0.0975 168.597 0.2925L171.667 3.3625C172.057 3.7525 172.057 4.3825 171.667 4.7725C171.467 4.9725 171.217 5.0625 170.957 5.0625H170.967Z\" />\n        <path d=\"M173.208 5.0625C172.948 5.0625 172.698 4.9625 172.498 4.7725C172.108 4.3825 172.108 3.7525 172.498 3.3625L175.568 0.2925C175.958 -0.0975 176.588 -0.0975 176.978 0.2925C177.368 0.6825 177.368 1.3125 176.978 1.7025L173.908 4.7725C173.708 4.9725 173.458 5.0625 173.198 5.0625H173.208Z\" />\n        <path d=\"M48.9938 37.7103C48.5138 37.7103 48.0938 37.3703 48.0138 36.8803C47.9238 36.3403 48.2838 35.8203 48.8338 35.7303L53.6138 34.9103C54.1638 34.8203 54.6738 35.1803 54.7638 35.7303C54.8538 36.2703 54.4938 36.7903 53.9438 36.8803L49.1638 37.7003C49.1038 37.7003 49.0538 37.7103 48.9938 37.7103Z\" />\n        <path d=\"M60.1428 25.9404C59.8828 25.9404 59.6328 25.8404 59.4328 25.6504L53.3628 19.5804C52.9728 19.1904 52.9728 18.5604 53.3628 18.1704C53.7528 17.7804 54.3828 17.7804 54.7728 18.1704L60.8428 24.2404C61.2328 24.6304 61.2328 25.2604 60.8428 25.6504C60.6428 25.8504 60.3928 25.9404 60.1328 25.9404H60.1428Z\" />\n        <path d=\"M70.4941 19.87C69.9441 19.87 69.4941 19.42 69.4941 18.87V13C69.4941 12.45 69.9441 12 70.4941 12C71.0441 12 71.4941 12.45 71.4941 13V18.87C71.4941 19.42 71.0441 19.87 70.4941 19.87Z\" />\n        <path d=\"M85.3555 78.7422C87.5646 78.7422 89.3555 76.9513 89.3555 74.7422C89.3555 72.533 87.5646 70.7422 85.3555 70.7422C83.1463 70.7422 81.3555 72.533 81.3555 74.7422C81.3555 76.9513 83.1463 78.7422 85.3555 78.7422Z\" />\n        <path d=\"M119.984 77.873C122.194 77.873 123.984 76.0822 123.984 73.873C123.984 71.6639 122.194 69.873 119.984 69.873C117.775 69.873 115.984 71.6639 115.984 73.873C115.984 76.0822 117.775 77.873 119.984 77.873Z\" />\n      </g>\n    </svg>\n  )\n}\n\nexport default MonkeyImage\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@apeswapfinance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../../config/constants'\nimport { PairState, usePairs } from '../usePairs'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from '../Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade, ChainId } from '@apeswapfinance/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport contracts from 'config/constants/contracts'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useENS from 'hooks/ENS/useENS'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Orders/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { isAddress } from 'utils'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { OrdersState } from './reducer'\n\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\n\nexport function useSwapState(): AppState['orders'] {\n  return useSelector<AppState, AppState['orders']>((state) => state.orders)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ETH' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0xBCfCcbde45cE874adCB698cC183deBcF17952812', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n  v1Trade: Trade | undefined\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = 'Connect Wallet'\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount'\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token'\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient'\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? 'Invalid recipient'\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `Insufficient ${amountIn.currency.getSymbol(chainId)} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n    v1Trade: undefined,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'ETH') return 'ETH'\n    if (valid === false) return 'ETH'\n  }\n  return 'ETH' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs, chainId: ChainId): OrdersState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n\n  const chainAddress = contracts.banana[chainId]\n\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = chainAddress\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs, chainId)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parseEther } from '@ethersproject/units'\nimport { Trade, Token } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getNativeWrappedAddress } from 'utils/addressHelper'\nimport { useUserAutonomyPrepay } from 'state/user/hooks'\nimport useAutonomyOrdersLib from './useAutonomyOrdersLib'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useOrderCallback(\n  trade: Trade | undefined, // trade to execute, required\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n  outputMinMaxAmount: string,\n  orderMarketStatus: number,\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const autonomyOrdersLib = useAutonomyOrdersLib()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  const [autonomyPrepay] = useUserAutonomyPrepay()\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const { input, output } = trade.route\n        const inputToken =\n          input.symbol === 'ETH' ? getNativeWrappedAddress(chainId) : input instanceof Token ? input.address : ''\n        const inputCurrencyDecimals = trade.inputAmount.currency.decimals || 18\n        const inputAmount = parseEther(trade.inputAmount.toSignificant(6)).div(10 ** (18 - inputCurrencyDecimals))\n        const outputToken =\n          output.symbol === 'ETH' ? getNativeWrappedAddress(chainId) : output instanceof Token ? output.address : ''\n        const outputCurrencyDecimals = trade?.outputAmount.currency.decimals || 18\n        const outputAmount = parseEther(outputMinMaxAmount || '0').div(10 ** (18 - outputCurrencyDecimals))\n\n        return autonomyOrdersLib\n          .submitOrder(\n            orderMarketStatus > 0 ? 'Limit' : 'Stop',\n            inputToken,\n            inputAmount,\n            outputToken,\n            outputAmount,\n            recipient,\n            autonomyPrepay,\n          )\n          .then((response: any) => {\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [\n    trade,\n    library,\n    account,\n    chainId,\n    recipient,\n    autonomyOrdersLib,\n    autonomyPrepay,\n    orderMarketStatus,\n    outputMinMaxAmount,\n    recipientAddressOrName,\n  ])\n}\n","import { useMemo } from 'react'\nimport { AutonomyLimitStopOrders } from '@autonomylabs/limit-stop-orders'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport default function useAutonomyOrdersLib(): AutonomyLimitStopOrders | undefined {\n  const { chainId, library } = useActiveWeb3React()\n\n  return useMemo(() => {\n    try {\n      return chainId && library\n        ? new AutonomyLimitStopOrders(\n            chainId,\n            library?.getSigner(),\n            '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7',\n            '0x0841BD0B734E4F5853f0dD8d7Ea041c241fb0Da6',\n          )\n        : undefined\n    } catch (error: any) {\n      console.error(`Could not instantiate AutonomyLimitStopOrders: ${error.message}`)\n      return undefined\n    }\n  }, [chainId, library])\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@apeswapfinance/sdk'\nimport { Text, ErrorIcon, Button, Flex, Svg } from '@ape.swap/uikit'\nimport { computeLegacyPriceBreakdown, warningSeverity } from 'utils/prices'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AutoColumn } from 'components/layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles } from './styles'\n\nexport default function SwapModalHeader({\n  trade,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n  realOutputAmount,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  realPriceValue: string\n  realOutputAmount: string\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n\n  const { chainId } = useActiveWeb3React()\n  const { priceImpactWithoutFee } = useMemo(() => computeLegacyPriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = `${t('Output will be sent to')} ${truncatedRecipient}`\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <>\n      <Flex sx={{ ...styles.SwapConfirmDisabledInputContainer, transform: 'translate(0px, 12px)' }}>\n        <Text\n          size=\"22px\"\n          weight={700}\n          color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'yellow' : 'text'}\n        >\n          {trade.inputAmount.toSignificant(6)}\n        </Text>\n        <Flex sx={{ alignItems: 'center' }}>\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"30px\" />\n          <Text size=\"14px\" weight={700} ml=\"10px\">\n            {trade.inputAmount.currency.getSymbol(chainId)}\n          </Text>\n        </Flex>\n      </Flex>\n      <Flex sx={{ justifyContent: 'center' }}>\n        <Flex sx={{ ...styles.outerLogoCircle }}>\n          <Flex sx={{ ...styles.innerLogoCircle }}>\n            <Svg icon=\"arrow\" width=\"6px\" color=\"primaryBright\" />\n          </Flex>\n        </Flex>\n      </Flex>\n      <Flex sx={{ ...styles.SwapConfirmDisabledInputContainer, transform: 'translate(0px, -12px)' }}>\n        <Text\n          size=\"22px\"\n          weight={700}\n          color={\n            priceImpactSeverity > 2\n              ? 'error'\n              : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n              ? 'yellow'\n              : 'text'\n          }\n        >\n          {realOutputAmount}\n        </Text>\n        <Flex sx={{ alignItems: 'center' }}>\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"30px\" />\n          <Text size=\"14px\" weight={700} ml=\"10px\">\n            {trade.outputAmount.currency.getSymbol(chainId)}\n          </Text>\n        </Flex>\n      </Flex>\n      <>\n        {showAcceptChanges ? (\n          <Flex sx={{ margin: '10px 0px' }}>\n            <RowBetween>\n              <RowFixed>\n                <ErrorIcon mr=\"8px\" />\n                <Text bold>{t('Price Updated')}</Text>\n              </RowFixed>\n              <Button size=\"sm\" onClick={onAcceptChanges}>\n                {t('Accept')}\n              </Button>\n            </RowBetween>\n          </Flex>\n        ) : null}\n        {recipient !== null ? (\n          <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n            <Text>\n              {recipientSentToText}\n              <b title={recipient}>{truncatedRecipient}</b>\n              {postSentToText}\n            </Text>\n          </AutoColumn>\n        ) : null}\n      </>\n    </>\n  )\n}\n","import React from 'react'\nimport { Price } from '@apeswapfinance/sdk'\nimport { Text } from '@ape.swap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n  color?: string\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const { chainId } = useActiveWeb3React()\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `1 ${price?.baseCurrency?.getSymbol(chainId)} = ${formattedPrice} ${price?.quoteCurrency?.getSymbol(chainId)}`\n    : `1 ${price?.quoteCurrency?.getSymbol(chainId)} = ${formattedPrice} ${price?.baseCurrency?.getSymbol(chainId)}`\n\n  return (\n    <Text size=\"12px\" sx={{ fontWeight: '500' }} onClick={() => setShowInverted(!showInverted)}>\n      {show && label}\n    </Text>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { Currency, Price } from '@apeswapfinance/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React, { useState } from 'react'\nimport { Field } from 'state/orders/actions'\nimport TradePrice from '../TradePrice'\n\nconst OrderTradeInfo: React.FC<{\n  executionPrice: Price\n  orderMarketStatus: number\n  realPriceValue: string\n  currencies: {\n    INPUT?: Currency\n    OUTPUT?: Currency\n  }\n}> = ({ executionPrice, currencies, orderMarketStatus, realPriceValue }) => {\n  const { chainId } = useActiveWeb3React()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const { t } = useTranslation()\n\n  return (\n    <Flex\n      sx={{\n        flexDirection: 'column',\n        borderRadius: '10px',\n        background: 'white3',\n        padding: '10px',\n        mt: '10px',\n        width: '100%',\n      }}\n    >\n      <Flex sx={{ alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n        <Text size=\"12px\" weight={500}>\n          {' '}\n          {t('Current Price')}\n        </Text>\n        <span sx={{ cursor: 'pointer', fontWeight: 600 }}>\n          <TradePrice price={executionPrice} showInverted={showInverted} setShowInverted={setShowInverted} />\n        </span>\n      </Flex>\n      <Flex sx={{ alignItems: 'center', justifyContent: 'space-between', width: '100%', mt: '5px' }}>\n        <Text size=\"12px\" weight={500}>\n          {t('Target Order Price')}\n        </Text>\n        <Text size=\"12px\" weight={600}>\n          {realPriceValue}\n        </Text>\n      </Flex>\n      <Flex sx={{ alignItems: 'center', justifyContent: 'space-between', width: '100%', mt: '5px' }}>\n        <Text size=\"12px\" weight={500}>\n          {t('Required %symbol1%/%symbol2% change', {\n            symbol1: currencies[Field.INPUT]?.getSymbol(chainId) ?? '',\n            symbol2: currencies[Field.OUTPUT]?.getSymbol(chainId) ?? '',\n          })}\n        </Text>\n        <Text size=\"12px\" weight={600}>\n          {orderMarketStatus?.toFixed(2)}%\n        </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(OrderTradeInfo)\n","/** @jsxImportSource theme-ui */\nimport React, { useMemo } from 'react'\nimport { Currency, Trade } from '@apeswapfinance/sdk'\nimport { computeLegacyPriceBreakdown, warningSeverity } from 'utils/prices'\nimport { useTranslation } from 'contexts/Localization'\nimport { Button, Flex } from '@ape.swap/uikit'\nimport { RouterTypeParams } from 'state/swap/actions'\nimport OrderTradeInfo from './OrderTradeInfo'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  swapErrorMessage,\n  disabledConfirm,\n  currencies,\n  orderMarketStatus,\n  realPriceValue,\n}: {\n  trade: Trade\n  currencies: {\n    INPUT?: Currency\n    OUTPUT?: Currency\n  }\n  orderMarketStatus: number\n  allowedSlippage: number\n  onConfirm: () => void\n  bestRoute: RouterTypeParams\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n  realPriceValue: string\n}) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee } = useMemo(() => computeLegacyPriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <Flex sx={{ flexDirection: 'column', transform: 'translate(0px, -10px)', maxWidth: '100%' }}>\n      <OrderTradeInfo\n        executionPrice={trade?.executionPrice}\n        currencies={currencies}\n        orderMarketStatus={orderMarketStatus}\n        realPriceValue={realPriceValue}\n      />\n      <>\n        <Button fullWidth onClick={onConfirm} disabled={disabledConfirm} mt=\"12px\" id=\"confirm-swap-or-send\">\n          {severity > 2 ? t('Order Anyway') : t('Confirm Order')}\n        </Button>\n        {swapErrorMessage ? 'eror' : null}\n      </>\n    </Flex>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useMemo } from 'react'\nimport { Currency, currencyEquals, Trade } from '@apeswapfinance/sdk'\nimport { ModalProps } from '@apeswapfinance/uikit'\nimport { Flex } from '@ape.swap/uikit'\nimport { RouterTypeParams } from 'state/swap/actions'\nimport TransactionConfirmationModal, { TransactionErrorContent } from 'components/TransactionConfirmationModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapModalHeader from './SwapModalHeader'\nimport SwapModalFooter from './SwapModalFooter'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  currencies: {\n    INPUT?: Currency\n    OUTPUT?: Currency\n  }\n  orderMarketStatus: number\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  realPriceValue: string\n  realOutputAmount: string\n  bestRoute: RouterTypeParams\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst OrderSwapModal: React.FC<ModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  bestRoute,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n  currencies,\n  orderMarketStatus,\n  realPriceValue,\n  realOutputAmount,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n        realOutputAmount={realOutputAmount}\n        realPriceValue={realPriceValue}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade, realPriceValue, realOutputAmount])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        bestRoute={bestRoute}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n        currencies={currencies}\n        orderMarketStatus={orderMarketStatus}\n        realPriceValue={realPriceValue}\n      />\n    ) : null\n  }, [\n    allowedSlippage,\n    onConfirm,\n    showAcceptChanges,\n    swapErrorMessage,\n    currencies,\n    orderMarketStatus,\n    bestRoute,\n    trade,\n    realPriceValue,\n  ])\n\n  // text to show while loading\n  const pendingText = `${t('Swapping')} ${trade?.inputAmount?.toSignificant(6) ?? ''} ${\n    trade?.inputAmount?.currency?.getSymbol(chainId) ?? ''\n  } for ${trade?.outputAmount?.toSignificant(6) ?? ''} ${trade?.outputAmount?.currency?.getSymbol(chainId) ?? ''}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <Flex sx={{ flexDirection: 'column', width: '100%' }}>\n          {modalHeader()}\n          {modalBottom()}\n        </Flex>\n        // <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Order')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default React.memo(OrderSwapModal)\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg } from '@ape.swap/uikit'\nimport React from 'react'\nimport { styles } from './styles'\n\nconst SwapSwitchButton: React.FC<{ onClick?: () => void }> = ({ onClick }) => (\n  <Flex sx={{ ...styles.swapSwitchContainer }}>\n    <Flex sx={{ ...styles.swapSwitchButton }} onClick={onClick}>\n      <Svg icon=\"swapArrows\" width=\"13px\" color=\"primaryBright\" />\n    </Flex>\n  </Flex>\n)\n\nexport default React.memo(SwapSwitchButton)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../../../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.error : theme.colors.text)};\n  width: 0;\n  height: 100%;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: ${({ fontSize }) => fontSize || '16px'};\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  margin-left: ${({ align }) => (align === 'left' ? '5px' : '0px')};\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  removeLiquidity,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  removeLiquidity?: boolean\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <StyledInput\n        {...rest}\n        value={value}\n        onChange={(event) => {\n          // replace commas with periods, because we exclusively uses period as the decimal separator\n          enforcer(event.target.value.replace(/,/g, '.'))\n        }}\n        // universal input options\n        inputMode=\"decimal\"\n        title={t('Token Amount')}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        // text-specific options\n        type=\"text\"\n        pattern=\"^[0-9]*[.,]?[0-9]*$\"\n        placeholder={placeholder || '0.0'}\n        minLength={1}\n        maxLength={79}\n        spellCheck=\"false\"\n        fontSize=\"22px\"\n        style={{ marginRight: removeLiquidity ? '2.5px' : '6px' }}\n      />\n      {removeLiquidity && (\n        <div style={{ marginRight: '10px' }}>\n          <Text fontSize=\"22px\" mt=\".55px\" bold>\n            %\n          </Text>\n        </div>\n      )}\n    </>\n  )\n})\n\nexport default Input\n","import { ThemeUIStyleObject } from 'theme-ui'\nimport { buttonHover } from 'views/Dex/styles'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  pricePanelContainer: {\n    padding: '10px 0px',\n    alignItems: 'center',\n    '@media screen and (max-width: 370px)': {\n      flexWrap: 'wrap',\n    },\n  },\n  priceInputContainer: {\n    width: '100%',\n    minWidth: '250px',\n    height: '55px',\n    background: 'white3',\n    borderRadius: '10px',\n    alignItems: 'center',\n    marginLeft: '7px',\n    '@media screen and (max-width: 370px)': {\n      marginTop: '10px',\n      minWidth: '100%',\n      marginLeft: '0px',\n    },\n  },\n  currentButton: {\n    background: 'yellow',\n    height: 'fit-content',\n    width: '110px',\n    maxWidth: '100%',\n    padding: '5px',\n    borderRadius: '10px',\n    cursor: 'pointer',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textTransform: 'uppercase',\n    transition: 'all .3s linear',\n    '&:active': {\n      transform: 'scale(0.9)',\n    },\n    ':hover': buttonHover,\n  },\n  messageContainer: {\n    background: 'white3',\n    padding: '20px',\n    borderRadius: '10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Currency } from '@apeswapfinance/sdk'\nimport { Text, Flex } from '@ape.swap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport { Input as NumericalInput } from './NumericalInput'\nimport { styles as tokenSelectorStyles } from '../../../components/TokenSelector/styles'\nimport { styles } from './styles'\n\ninterface PriceInputPanelProps {\n  value: string\n  currentPrice?: string\n  onUserInput: (value: string) => void\n  inputValue: string\n  inputCurrency?: Currency | null\n  outputCurrency?: Currency | null\n  id: string\n}\nconst PriceInputPanel: React.FC<PriceInputPanelProps> = ({\n  value,\n  onUserInput,\n  inputValue,\n  inputCurrency,\n  outputCurrency,\n  currentPrice = '0',\n  id,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex sx={styles.pricePanelContainer} id={id}>\n        <Flex sx={{ flexDirection: 'column' }}>\n          <Text mb=\"5px\">{t('Price')}</Text>\n          <Flex sx={styles.currentButton} onClick={() => onUserInput(currentPrice)}>\n            <Text size=\"10px\" weight={600} color=\"primaryBright\" sx={{ lineHeight: '12px', textAlign: 'center' }}>\n              {t('Use Current')}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex sx={styles.priceInputContainer}>\n          <NumericalInput\n            id=\"token-price-input\"\n            value={value}\n            onUserInput={(val) => {\n              onUserInput(val)\n            }}\n            align=\"left\"\n          />\n          <Flex\n            sx={{\n              ...tokenSelectorStyles.primaryFlex,\n              marginRight: '10px',\n              cursor: 'default',\n              '&:active': { transform: 'none' },\n              ':hover': { background: 'white4' },\n            }}\n          >\n            <CurrencyLogo currency={outputCurrency} size=\"30px\" />\n            <Text sx={tokenSelectorStyles.tokenText}>{outputCurrency?.getSymbol(chainId)}</Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Flex sx={styles.messageContainer}>\n        <Text size=\"14px\" weight={400} sx={{ textAlign: 'center' }}>\n          {' '}\n          {t('When')} <span sx={{ fontWeight: 700 }}> {inputCurrency?.getSymbol(chainId)} </span> {t('equals')}{' '}\n          <span sx={{ fontWeight: 700 }}>\n            {' '}\n            {value || '0'} {outputCurrency?.getSymbol(chainId)}\n          </span>\n          ,{' '}\n          <span sx={{ fontWeight: 700 }}>\n            {' '}\n            {inputValue || '0'} {inputCurrency?.getSymbol(chainId)}{' '}\n          </span>{' '}\n          {t('will be swapped for')}{' '}\n          <span sx={{ fontWeight: 700 }}>\n            {(parseFloat(value) * parseFloat(inputValue)).toString() || '0'} {outputCurrency?.getSymbol(chainId)}\n          </span>{' '}\n        </Text>\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(PriceInputPanel)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Token selector container\n  dexActionsContainer: {\n    position: 'relative',\n    width: '100%',\n    marginTop: '10px',\n  },\n\n  navLinkContainer: {\n    width: '100%',\n    maxWidth: '225px',\n    paddingRight: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navIconContainer: {\n    width: '100%',\n    maxWidth: '60px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navLink: {\n    cursor: 'pointer',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Button, Flex, Text } from '@ape.swap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { WrapType } from 'hooks/useWrapCallback'\nimport React from 'react'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { warningSeverity } from 'utils/prices'\nimport { styles } from './styles'\nimport { OrdersActionProps } from './types'\n\nconst OrdersActions: React.FC<OrdersActionProps> = ({\n  trade,\n  swapInputError,\n  isExpertMode,\n  showWrap,\n  wrapType,\n  priceImpactWithoutFee,\n  swapCallbackError,\n  userHasSpecifiedInputOutput,\n  routerType,\n  disabled,\n  onWrap,\n  handleSwap,\n  onPresentConfirmModal,\n  setSwapState,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage, true, routerType)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const renderAction = () => {\n    if (!account) {\n      return <UnlockButton fullWidth />\n    }\n    if (showWrap) {\n      return (\n        <Button fullWidth onClick={onWrap}>\n          {wrapType === WrapType.WRAP ? t('Wrap') : t('Unwrap')}\n        </Button>\n      )\n    }\n    if (!trade?.route && userHasSpecifiedInputOutput) {\n      return (\n        <Text margin=\"10px 0px\" sx={{ width: '100%', textAlign: 'center' }}>\n          {t('Insufficient liquidity for this trade')}\n        </Text>\n      )\n    }\n    if (showApproveFlow) {\n      return (\n        <Button\n          fullWidth\n          onClick={approveCallback}\n          disabled={approval !== ApprovalState.NOT_APPROVED || disabled}\n          load={approval === ApprovalState.PENDING}\n        >\n          {approval === ApprovalState.PENDING ? t('Approving') : t('Approve Order')}\n        </Button>\n      )\n    }\n    return (\n      <Button\n        fullWidth\n        onClick={() => {\n          if (isExpertMode) {\n            handleSwap()\n          } else {\n            setSwapState({\n              tradeToConfirm: trade,\n              attemptingTxn: false,\n              swapErrorMessage: undefined,\n              txHash: undefined,\n            })\n            onPresentConfirmModal()\n          }\n        }}\n        id=\"swap-button\"\n        disabled={!!swapInputError || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError || disabled}\n      >\n        {swapInputError ||\n          (priceImpactSeverity > 3 && !isExpertMode\n            ? t('Price Impact Too High')\n            : priceImpactSeverity > 2\n            ? t('Place Order Anyway')\n            : t('Place Order'))}\n      </Button>\n    )\n  }\n\n  return <Flex sx={styles.dexActionsContainer}>{renderAction()}</Flex>\n}\n\nexport default React.memo(OrdersActions)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  listContainer: {},\n  titleContainer: {\n    background: 'white4',\n    borderRadius: '10px 10px 0px 0px',\n    height: '38px',\n    marginTop: '10px',\n    padding: '5px',\n  },\n  titleTextContainer: {\n    width: '100%',\n    justifyContent: 'center',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, Text, TooltipBubble } from '@ape.swap/uikit'\nimport { Order } from '@autonomylabs/limit-stop-orders'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatUnits, getAddress } from 'ethers/lib/utils'\nimport { useAllTokens } from 'hooks/Tokens'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useAutonomyOrdersLib from 'hooks/useAutonomyOrdersLib'\nimport React from 'react'\nimport { Grid, Divider } from 'theme-ui'\nimport MonkeyImage from './MonkeyImage'\nimport { styles } from './styles'\n\nconst OrderRows: React.FC<{ orders: Order[] }> = ({ orders }) => {\n  const { chainId } = useActiveWeb3React()\n  const allTokens = useAllTokens()\n  const autonomyOrdersLib = useAutonomyOrdersLib()\n  const { t } = useTranslation()\n  return (\n    <>\n      <Grid gap=\"0px\" columns={['.5fr .2fr 2fr 2fr 2.5fr .5fr']} sx={styles.titleContainer}>\n        <span />\n        <span />\n        <Text size=\"14px\" weight={700} sx={{ alignSelf: 'center' }}>\n          {t('Swap')}\n        </Text>\n        <Text size=\"14px\" weight={700} sx={{ alignSelf: 'center' }}>\n          {t('For')}\n        </Text>\n        <Text size=\"14px\" weight={700} sx={{ alignSelf: 'center' }}>\n          {t('Price')}\n        </Text>\n        <span />\n      </Grid>\n      <div sx={{ background: 'white3', borderRadius: '0px 0px 10px 10px' }}>\n        {orders?.length !== 0 ? (\n          orders.map((order, i) => {\n            const inputToken = allTokens[getAddress(order.inputToken)]\n            const outputToken = allTokens[getAddress(order.outputToken)]\n            const inputAmount = formatUnits(order.inputAmount, inputToken?.decimals)\n            const outputAmount = formatUnits(order.outputAmount, outputToken?.decimals)\n            const orderStatus = order.status\n            const handleCancel = async () => {\n              if (autonomyOrdersLib) {\n                await autonomyOrdersLib.cancelOrder(order)\n              }\n            }\n            return (\n              <>\n                <Grid\n                  gap=\"0px\"\n                  columns={['.5fr .2fr 2fr 2fr 2.5fr .5fr']}\n                  sx={{ margin: '10px 0px', padding: '0px 5px' }}\n                  key={order.id}\n                >\n                  <Flex\n                    sx={{\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      paddingLeft: '2.5px',\n                    }}\n                  >\n                    <TooltipBubble\n                      body={\n                        <Flex sx={{ flexDirection: 'column', padding: '0px' }}>\n                          <Flex sx={{ justifyContent: 'space-between', alignItems: 'center' }}>\n                            <Text size=\"12px\">{t('Placed')}:</Text>\n                            <Text size=\"12px\" weight={700}>\n                              {order.time}\n                            </Text>\n                          </Flex>\n                          {order.updateTime !== 'null' && (\n                            <Flex sx={{ justifyContent: 'space-between', alignItems: 'center', mt: '1px' }}>\n                              <Text size=\"12px\">\n                                {order.status === 'executed' ? `${t('Closed')}:` : `${t('Cancelled')}:`}\n                              </Text>\n                              <Text size=\"12px\" weight={700}>\n                                {order.updateTime}\n                              </Text>\n                            </Flex>\n                          )}\n                        </Flex>\n                      }\n                      width=\"300px\"\n                      placement=\"topLeft\"\n                      transformTip=\"translate(-18px, 0px)\"\n                    >\n                      <Svg icon=\"info\" width=\"12px\" />\n                    </TooltipBubble>\n                  </Flex>\n                  <span />\n                  <Flex sx={{ flexDirection: 'column', justifyContent: 'center' }}>\n                    <Text size=\"12px\" weight={700} sx={{ lineHeight: '17.5px' }}>\n                      {parseFloat((+inputAmount).toFixed(6))}\n                    </Text>\n                    <Flex sx={{ alignItems: 'center' }}>\n                      <CurrencyLogo currency={inputToken} size=\"12px\" />\n                      <Text size=\"10px\" weight={400} ml=\"3px\" sx={{ lineHeight: '15px' }}>\n                        {inputToken?.getSymbol(chainId)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex sx={{ flexDirection: 'column', justifyContent: 'center' }}>\n                    <Text size=\"12px\" weight={700} sx={{ lineHeight: '17.5px', wordBreak: 'break-all' }}>\n                      {parseFloat((+outputAmount).toFixed(6))}\n                    </Text>\n                    <Flex sx={{ alignItems: 'center' }}>\n                      <CurrencyLogo currency={outputToken} size=\"12px\" />\n                      <Text size=\"10px\" weight={400} ml=\"3px\" sx={{ lineHeight: '15px' }}>\n                        {outputToken?.getSymbol(chainId)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex sx={{ flexDirection: 'column', justifyContent: 'center' }}>\n                    <Text size=\"12px\" weight={700} sx={{ lineHeight: '17.5px', wordBreak: 'break-all' }}>\n                      {parseFloat((+outputAmount / +inputAmount).toFixed(6))}\n                    </Text>\n                    <Flex sx={{ alignItems: 'center' }}>\n                      <Text size=\"10px\" weight={400} sx={{ lineHeight: '15px', wordBreak: 'break-all' }}>\n                        {outputToken?.getSymbol(chainId)} / {inputToken?.getSymbol(chainId)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex sx={{ alignItems: 'center', justifyContent: 'center' }}>\n                    {orderStatus === 'cancelled' ? (\n                      <Svg icon=\"cancelled\" width=\"12px\" color=\"error\" />\n                    ) : orderStatus === 'open' ? (\n                      <Flex sx={{ cursor: 'pointer' }} onClick={handleCancel}>\n                        <Svg icon=\"trash\" width=\"12px\" />\n                      </Flex>\n                    ) : (\n                      <Svg icon=\"successOutline\" width=\"12px\" color=\"success\" />\n                    )}\n                  </Flex>\n                </Grid>\n                {i !== orders?.length - 1 && <Divider sx={{ background: 'text', opacity: 0.1 }} />}\n              </>\n            )\n          })\n        ) : (\n          <Flex sx={{ flexDirection: 'column', alignItems: 'center', justifyContent: 'center', padding: '50px 0px' }}>\n            <MonkeyImage />\n            <Text size=\"14px\" sx={{ margin: '10px 0px 5px 0px', opacity: '.5' }}>\n              {t('Empty list')}\n            </Text>\n            <Text size=\"12px\" sx={{ opacity: '.5' }}>\n              {t('Your orders will appear here')}\n            </Text>\n          </Flex>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(OrderRows)\n","/** @jsxImportSource theme-ui */\nimport { Order } from '@autonomylabs/limit-stop-orders'\nimport React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { useQuery } from 'react-query'\nimport styled from 'styled-components'\nimport { Flex, Tabs, Tab } from '@ape.swap/uikit'\nimport { dexStyles } from 'views/Dex/styles'\nimport useAutonomyOrdersLib from '../../../../../hooks/useAutonomyOrdersLib'\nimport useActiveWeb3React from '../../../../../hooks/useActiveWeb3React'\nimport { useTranslation } from '../../../../../contexts/Localization'\nimport OrderRows from './OrderRows'\n\nconst ORDERS_PER_PAGE = 5\n\nconst OrderHistoryPanel: React.FC = () => {\n  const [viewType, setViewType] = useState(0)\n  const [orders, setOrders] = useState<Order[]>([])\n  const [currentOrders, setCurrentOrders] = useState<Order[]>([])\n  const [pageCount, setPageCount] = useState(0)\n  const [orderOffset, setOrderOffset] = useState(0)\n  const { t } = useTranslation()\n\n  const autonomyOrdersLib = useAutonomyOrdersLib()\n  const { account } = useActiveWeb3React()\n\n  const switchTab = (index) => setViewType(index)\n\n  const { data } = useQuery(\n    'orders',\n    async () => {\n      if (!account || !autonomyOrdersLib) {\n        return []\n      }\n      const allOrders = await autonomyOrdersLib.getOrders(account)\n      allOrders.sort((x, y) => Date.parse(y.time) - Date.parse(x.time))\n      return allOrders\n    },\n    {\n      refetchInterval: 4_000,\n    },\n  )\n\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * ORDERS_PER_PAGE) % orders.length\n    setOrderOffset(newOffset)\n  }\n\n  useEffect(() => {\n    if (data?.length > 0) {\n      setOrders(\n        data.filter((order) =>\n          viewType === 0 ? order.status === 'open' : order.status === 'executed' || order.status === 'cancelled',\n        ),\n      )\n      setOrderOffset(0)\n    }\n  }, [data, viewType])\n\n  useEffect(() => {\n    const endOffset = orderOffset + ORDERS_PER_PAGE\n    setCurrentOrders(orders.slice(orderOffset, endOffset))\n    setPageCount(Math.ceil(orders.length / ORDERS_PER_PAGE))\n  }, [orders, orderOffset])\n\n  return (\n    <Flex sx={{ ...dexStyles.dexContainer, marginTop: '10px' }}>\n      <Flex sx={{ maxWidth: '100%', width: '420px' }} />\n      <div sx={{ width: '100%' }}>\n        <Tabs activeTab={viewType} size=\"md\" variant=\"fullWidth\">\n          <Tab index={0} label={t('OPEN')} size=\"md\" activeTab={viewType} variant=\"fullWidth\" onClick={switchTab} />\n          <Tab index={1} label={t('HISTORY')} variant=\"fullWidth\" size=\"md\" activeTab={viewType} onClick={switchTab} />\n        </Tabs>\n      </div>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <OrderRows orders={currentOrders} />\n        <Flex sx={{ alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n          <Pagination\n            previousLabel=\"<\"\n            nextLabel=\">\"\n            pageCount={pageCount}\n            renderOnZeroPageCount={null}\n            onPageChange={handlePageClick}\n          />\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(OrderHistoryPanel)\n\nconst Pagination = styled(ReactPaginate).attrs({\n  activeClassName: 'active',\n})`\n  display: flex;\n  flex-direction: row;\n  list-style-type: none;\n  padding: 0.75rem 0;\n  li {\n    height: 32px;\n    width: 32px;\n    border-radius: 7px;\n    border: gray 1px solid;\n    cursor: pointer;\n    margin-right: 0.5rem;\n  }\n  li.previous,\n  li.next,\n  li.break {\n    border-color: transparent;\n  }\n  li.active {\n    background-color: #ffb300;\n    border-color: transparent;\n    color: white;\n  }\n  li.disabled a {\n    color: grey;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n\n  li a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n`\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAllTokens, useCurrency } from 'hooks/Tokens'\nimport { Field } from 'state/orders/actions'\nimport { Flex, Text, useModal } from '@ape.swap/uikit'\nimport { Link } from '@apeswapfinance/uikit'\nimport { computeLegacyPriceBreakdown } from 'utils/prices'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@apeswapfinance/sdk'\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/orders/hooks'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { useOrderCallback } from 'hooks/useOrderCallback'\nimport maxAmountSpend from 'utils/maxAmountSpend'\nimport { dexStyles } from '../styles'\nimport DexPanel from '../components/DexPanel'\nimport DexNav from '../components/DexNav'\nimport OrderSwapModal from './components/OrderSwapModal'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport SwapSwitchButton from './components/SwapSwitchButton'\nimport PriceInputPanel from './components/PriceInputPanel'\nimport OrdersActions from './components/OrdersActions'\nimport OrderHistoryPanel from './components/OrderHistoryPanel'\nimport OrderTradeInfo from './components/OrderTradeInfo'\nimport ImportTokenWarningModal from '../Swap/components/ImportTokenWarningModal'\n\nconst Orders: React.FC = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const { t } = useTranslation()\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const history = useHistory()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/limit-orders')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  const { INPUT, OUTPUT, independentField, typedValue, recipient } = useSwapState()\n\n  // the callback to execute the swap\n  const { onSwitchTokens, onCurrencySelection, onUserInput } = useSwapActionHandlers()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const [inputCurrency, outputCurrency] = [useCurrency(INPUT?.currencyId), useCurrency(OUTPUT?.currencyId)]\n\n  const { wrapType, execute: onWrap } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n\n  const { priceImpactWithoutFee } = computeLegacyPriceBreakdown(trade)\n\n  const [limitOrderPrice, setLimitOrderPrice] = useState<string>('')\n  const [inputFocused, setInputFocused] = useState<boolean>(true)\n  const realPriceValue = useMemo(() => {\n    if (inputFocused) {\n      const price = Number(formattedAmounts[Field.OUTPUT]) / Number(formattedAmounts[Field.INPUT])\n      return price === Infinity || Number.isNaN(price) ? '' : price.toFixed(6)\n    }\n    return limitOrderPrice\n  }, [inputFocused, limitOrderPrice, formattedAmounts])\n\n  const outputMinAmount = useMemo(() => {\n    return (Number(realPriceValue) * Number(formattedAmounts[Field.INPUT])).toString()\n  }, [realPriceValue, formattedAmounts])\n\n  const realOutputValue = useMemo(\n    () => (inputFocused ? formattedAmounts[Field.OUTPUT] : outputMinAmount),\n    [inputFocused, formattedAmounts, outputMinAmount],\n  )\n\n  const orderMarketStatus = useMemo(() => {\n    const marketOutput = trade?.outputAmount.toExact()\n    if (marketOutput && outputMinAmount) {\n      return ((Number(outputMinAmount) - Number(marketOutput)) * 100) / Number(marketOutput)\n    }\n    return 0\n  }, [trade, outputMinAmount])\n\n  const handleTypePrice = useCallback(\n    (value: string) => {\n      setInputFocused(false)\n      setLimitOrderPrice(value)\n    },\n    [setInputFocused, setLimitOrderPrice],\n  )\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false })) // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash])\n\n  const handleMaxInput = useCallback(\n    (field: Field) => {\n      if (maxAmountInput) {\n        onUserInput(field, maxAmountInput.toExact())\n      }\n    },\n    [maxAmountInput, onUserInput],\n  )\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useOrderCallback(\n    trade,\n    recipient,\n    outputMinAmount,\n    orderMarketStatus,\n  )\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(async (hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n  const [onPresentConfirmModal] = useModal(\n    <OrderSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      bestRoute={null}\n      currencies={currencies}\n      orderMarketStatus={orderMarketStatus}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n      realPriceValue={realPriceValue}\n      realOutputAmount={realOutputValue}\n    />,\n    true,\n    true,\n    'swapConfirmModal',\n  )\n\n  return (\n    <Flex sx={dexStyles.pageContainer}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex sx={dexStyles.dexContainer}>\n          <DexNav />\n          <Flex sx={{ margin: '25px 0px', maxWidth: '100%', width: '420px' }} />\n          <DexPanel\n            value={formattedAmounts[Field.INPUT]}\n            panelText=\"From\"\n            currency={inputCurrency}\n            otherCurrency={outputCurrency}\n            fieldType={Field.INPUT}\n            onCurrencySelect={onCurrencySelection}\n            onUserInput={(field, val) => {\n              onUserInput(field, val)\n              setInputFocused(true)\n            }}\n            handleMaxInput={handleMaxInput}\n          />\n          <SwapSwitchButton onClick={onSwitchTokens} />\n          <DexPanel\n            value={realOutputValue}\n            panelText=\"To\"\n            currency={outputCurrency}\n            otherCurrency={inputCurrency}\n            fieldType={Field.OUTPUT}\n            onCurrencySelect={onCurrencySelection}\n            onUserInput={onUserInput}\n            ordersDisabled\n          />\n          <PriceInputPanel\n            value={realPriceValue}\n            currentPrice={trade?.executionPrice.toSignificant(6)}\n            inputValue={formattedAmounts[Field.INPUT]}\n            inputCurrency={currencies[Field.INPUT]}\n            outputCurrency={currencies[Field.OUTPUT]}\n            onUserInput={handleTypePrice}\n            id=\"orders-currency-price\"\n          />\n          <OrderTradeInfo\n            executionPrice={trade?.executionPrice}\n            currencies={currencies}\n            orderMarketStatus={orderMarketStatus}\n            realPriceValue={realPriceValue}\n          />\n          <OrdersActions\n            trade={trade}\n            swapInputError={swapInputError}\n            isExpertMode={isExpertMode}\n            showWrap={showWrap}\n            wrapType={wrapType}\n            routerType={null}\n            swapCallbackError={swapCallbackError}\n            priceImpactWithoutFee={priceImpactWithoutFee}\n            userHasSpecifiedInputOutput={userHasSpecifiedInputOutput}\n            onWrap={onWrap}\n            handleSwap={handleSwap}\n            onPresentConfirmModal={onPresentConfirmModal}\n            setSwapState={setSwapState}\n          />\n          <Flex sx={{ justifyContent: 'center', mt: '8px', transform: 'translate(0px, 3px)' }}>\n            <Link external href=\"https://autonomynetwork.io\">\n              <Text size=\"12px\">Powered by Autonomy Network</Text>\n            </Link>\n          </Flex>\n        </Flex>\n        <OrderHistoryPanel />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(Orders)\n","import { Percent } from '@apeswapfinance/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          `This swap has a price impact of at least %percent%%. Please type the word \"%confirmWord%\" to continue with this swap.`,\n          {\n            percent: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        `This swap has a price impact of at least %percent%%. Please confirm that you would like to continue with this swap.`,\n        {\n          percent: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n"],"sourceRoot":""}
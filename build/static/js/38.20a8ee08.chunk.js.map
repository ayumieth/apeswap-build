{"version":3,"sources":["components/TabNav/styles.ts","components/TabNav/index.tsx","views/ProtocolDashboard/Overview/components/BananaSupplyDistribution/styles.ts","state/protocolDashboard/hooks.ts","views/ProtocolDashboard/Overview/components/BananaSupplyDistribution/index.tsx","views/ProtocolDashboard/Overview/components/MarketCapToTvlRatio/styles.ts","views/ProtocolDashboard/Overview/components/MarketCapToTvlRatio/index.tsx","views/ProtocolDashboard/Overview/components/ProtocolMetricGraph/styles.ts","views/ProtocolDashboard/Overview/components/ProtocolMetricGraph/index.tsx","views/ProtocolDashboard/Overview/components/ProtocolMetrics/styles.ts","views/ProtocolDashboard/Overview/components/ProtocolMetrics/index.tsx","views/ProtocolDashboard/Overview/components/TotalTradeVolume/styles.ts","views/ProtocolDashboard/Overview/components/TotalTradeVolume/index.tsx","views/ProtocolDashboard/Overview/components/TotalValueLocked/styles.ts","views/ProtocolDashboard/Overview/components/TotalValueLocked/index.tsx","views/ProtocolDashboard/Overview/index.tsx","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/AssetBreakdown/styles.ts","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/AssetBreakdown/AssetCard.tsx","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/AssetBreakdown/index.tsx","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/AssetOverview/styles.ts","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/AssetOverview/index.tsx","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/styles.ts","views/ProtocolDashboard/Treasury/components/TreasuryBreakdown/index.tsx","views/ProtocolDashboard/Treasury/components/TreasuryHistory/styles.ts","views/ProtocolDashboard/Treasury/components/TreasuryHistory/index.tsx","views/ProtocolDashboard/Treasury/index.tsx","views/ProtocolDashboard/index.tsx","hooks/useProgressiveImage.ts","components/Banner/styles.ts","components/Banner/index.tsx"],"names":["Container","styled","div","theme","mediaQueries","md","xxl","StyledTabNavStats","Tab","disabled","props","isActive","Bar","colors","white3","Indicator","text","TabNav","tabOptions","activeTab","onChangeActiveTab","useState","width","setWidth","left","setLeft","refs","useRef","useEffect","current","offsetLeft","offsetWidth","style","map","tab","index","ref","element","onClick","el","handleActiveTab","sx","alignItems","background","height","padding","pt","borderRadius","justifyContent","ml","size","weight","color","styles","cardContainer","maxWidth","margin","flexDirection","useFetchOverviewProtocolMetrics","dispatch","useAppDispatch","slowRefresh","useRefresh","fetchOverviewProtocolMetrics","useSelector","state","protocolDashboard","overviewProtocolMetrics","useFetchTreasuryHistory","fetchTreasuryHistory","treasuryHistory","doughnutLabelsLine","id","beforeDraw","chart","ctx","chartArea","data","datasets","forEach","dataset","i","totalBanana","reduce","a","b","getDatasetMeta","datapoint","j","tooltipPosition","x","y","halfWidth","xLine","yLine","extraLine","beginPath","moveTo","lineTo","strokeStyle","stroke","percent","toFixed","label","labels","textAlignPos","font","textBaseline","fillStyle","backgroundColor","textAlign","fillText","BananaSupplyDistribution","bananaSupply","fetchOverviewBananaDistribution","overviewBananaDistribution","useFetchOverviewBananaDistribution","gnanaPrice","usePriceGnanaBusd","toNumber","isMobile","useIsMobile","t","useTranslation","useTheme","useMemo","distribution","description","amount","hoverOffset","setData","mb","total","end","decimals","duration","separator","flexWrap","overflow","zIndex","options","maintainAspectRatio","layout","elements","arc","borderWidth","borderColor","white2","plugins","legend","display","tooltip","enabled","mode","displayColors","callbacks","title","ti","context","parsed","toLocaleString","minimumFractionDigits","maximumFractionDigits","afterLabel","parseFloat","currency","titleFont","family","bodyFont","titleColor","boxPadding","bodyColor","inputBorder","bodySpacing","caretSize","cornerRadius","position","mr","React","memo","MarketCapToTvlRatio","mcapTvlData","fetchOverviewMcapTvlRatio","overviewMcapTvlRatio","useFetchOverviewMcapTvlRatio","curr","timestamp","ratio","fill","tension","marginBottom","length","point","radius","scales","type","grid","white4","drawBorder","ticks","autoSkip","maxTicksLimit","min","Date","getTime","time","unit","displayFormats","month","responsive","intersect","minHeight","ProtocolMetricsGraph","currentDate","minDateMap","metrics","polHistory","bananaHolders","filter","marketCap","bananaBurned","pol","history","hist","polValue","listOfMetrics","activeCatTab","setActiveCatTab","activeTime","onSetTime","categories","switchCatTab","indexOf","onChange","e","target","value","active","lineHeight","variant","stepSize","formattedValue","TOOLTIPS","POL","ProtocolMetrics","protocolMetrics","filterProtocolMetrics","metric","body","transformTip","placement","icon","graphContainer","BACKGROUND_COLORS","Ethereum","Polygon","BORDER_COLORS","TotalTradeVolume","tradeVolume","fetchOverviewVolume","overviewVolume","useFetchOverviewVolume","totalVolume","useHomepageStats","sortTradeVol","orderBy","vol","lineTension","callback","notation","reverse","justifyContnet","COLORS","TotalValueLocked","useFetchHomepageStats","tvl","fetchOverviewTvl","overviewTvl","useFetchOverviewTvl","sortTvl","Object","fromEntries","entries","sort","orderedTvl","key","other","_","boxWidth","cutout","alignSelf","textTransform","opacity","Overview","assetBreakdownContainer","maxHeight","overflowY","overflowX","marginTop","assetContainer","pr","assetRow","StyledTag","Tag","AssetCard","token","expanded","setExpanded","cursor","prev","isLp","ServiceTokenDisplay","token1","token0","symbol","token2","noEarnToken","transform","CHAIN_PARAMS","chainId","nativeCurrency","toUpperCase","direction","AnimatePresence","motion","initial","animate","transition","exit","mt","NETWORK_LABEL","location","AssetBreakdown","activeView","treasury","fetchTreasuryBreakdown","treasuryBreakdown","useFetchTreasuryBreakdown","sortedTreasury","tokens","lpTokens","lp","filterLowAmounts","sortedOpFunds","sortedPolFunds","activeAssets","address","AssetOverview","assets","fetchTreasuryAssetOverview","treasuryAssetOverview","useFetchTreasuryAssetOverview","treasuryAssets","asset","polAssets","cleanedAssets","sortedAssets","topSix","slice","otherAssetsSum","sortAndAddAssets","treasAsset","matchAsset","TreasuryBreakdown","setActiveTab","legendContainer","top","fontSize","TreasuryHistory","oppFundValue","totalApePol","apePolValue","totalPartnerPol","partnerPolValue","totalTreasury","stacked","fullSize","Treasury","ChartJS","register","LineElement","PointElement","LinearScale","CategoryScale","TimeScale","ArcElement","Tooltip","Legend","Filler","ProtocolDashboard","Banner","banner","link","useProgressiveImage","src","sourceLoaded","setSourceLoaded","img","Image","onload","fontWeight","FlexImage","Flex","listViewBreak","FlexSkeleton","Skeleton","LearnMoreArrow","ArrowDropDownIcon","children","useHistory","isDark","loaded","backgroundImage","bannerLink","includes","push","search","window","open","textDecoration"],"mappings":"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","file":"static/js/38.20a8ee08.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  padding: 0 10px;\n  width: 100%;\n  margin-top: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    padding: 0;\n  }\n`\n\nexport const StyledTabNavStats = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  margin: 0 auto;\n  width: 100%;\n`\n\ninterface TabProps {\n  isActive: boolean\n  disabled?: boolean\n}\n\nexport const Tab = styled.div<TabProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: ${({ disabled }) => (!disabled ? 'pointer' : 'arrow')};\n  font-weight: ${(props) => (props.isActive ? 700 : 500)};\n  transition: all 0.3s ease-out;\n  :hover {\n    opacity: ${({ disabled }) => !disabled && '0.6'};\n  }\n`\n\nexport const Bar = styled.div`\n  height: 5px;\n  width: 100%;\n  border-radius: 10px;\n  margin-top: 8px;\n  background: ${({ theme }) => theme.colors.white3};\n`\n\nexport const Indicator = styled.div`\n  position: absolute;\n  bottom: -13px;\n  left: 0;\n  width: 0;\n  height: 5px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 10px;\n  transition: 0.2s;\n`\n","import { Flex, Text } from '@ape.swap/uikit'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Bar, Container, Indicator, StyledTabNavStats, Tab } from './styles'\n\ninterface TabNavProps {\n  activeTab: string\n  tabOptions: string[]\n  onChangeActiveTab: (tab: string) => void\n}\n\nexport const TabNav: React.FC<TabNavProps> = ({ tabOptions, activeTab, onChangeActiveTab }) => {\n  const [width, setWidth] = useState(0)\n  const [left, setLeft] = useState(0)\n  const refs = useRef([])\n\n  const handleActiveTab = (el: HTMLDivElement, tab: string) => {\n    setLeft(el.offsetLeft)\n    setWidth(el.offsetWidth)\n\n    onChangeActiveTab(tab)\n  }\n\n  useEffect(() => {\n    setLeft(refs.current[0].offsetLeft)\n    setWidth(refs.current[0].offsetWidth)\n  }, [])\n\n  return (\n    <>\n      <Container>\n        <StyledTabNavStats>\n          <Indicator style={{ left, width }} />\n          {tabOptions.map((tab, index) => (\n            <Tab\n              key={tab}\n              ref={(element) => {\n                refs.current[index] = element\n              }}\n              onClick={() => tab !== 'Products' && handleActiveTab(refs.current[index], tab)}\n              isActive={activeTab === tab}\n              disabled={tab === 'Products'}\n            >\n              <Flex sx={{ alignItems: 'center' }}>\n                {tab}\n                {tab === 'Products' && (\n                  <Flex\n                    sx={{\n                      background: 'yellow',\n                      height: '16px',\n                      padding: '0px 5px',\n                      pt: '2px',\n                      borderRadius: '5px',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      ml: '5px',\n                    }}\n                  >\n                    <Text size=\"10px\" weight={700} color=\"primaryBright\">\n                      SOON!\n                    </Text>\n                  </Flex>\n                )}\n              </Flex>\n            </Tab>\n          ))}\n        </StyledTabNavStats>\n        <Bar />\n      </Container>\n    </>\n  )\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '387px',\n    width: '100%',\n    background: 'white2',\n    height: '320px',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    padding: '20px 10px',\n    alignItems: 'center',\n  },\n}\n","import useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State } from 'state/types'\nimport {\n  fetchOverviewTvl,\n  fetchOverviewVolume,\n  fetchOverviewBananaDistribution,\n  fetchOverviewProtocolMetrics,\n  fetchTreasuryAssetOverview,\n  fetchTreasuryBreakdown,\n  fetchTreasuryHistory,\n  fetchOverviewMcapTvlRatio,\n} from '.'\n\nexport const useFetchOverviewTvl = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchOverviewTvl())\n  }, [slowRefresh, dispatch])\n\n  return useSelector((state: State) => state.protocolDashboard.overviewTvl)\n}\n\nexport const useFetchOverviewVolume = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchOverviewVolume())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.overviewVolume)\n}\n\nexport const useFetchOverviewBananaDistribution = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchOverviewBananaDistribution())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.overviewBananaDistribution)\n}\n\nexport const useFetchOverviewProtocolMetrics = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchOverviewProtocolMetrics())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.overviewProtocolMetrics)\n}\n\nexport const useFetchOverviewMcapTvlRatio = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchOverviewMcapTvlRatio())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.overviewMcapTvlRatio)\n}\n\nexport const useFetchTreasuryAssetOverview = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchTreasuryAssetOverview())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.treasuryAssetOverview)\n}\n\nexport const useFetchTreasuryBreakdown = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchTreasuryBreakdown())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.treasuryBreakdown)\n}\n\nexport const useFetchTreasuryHistory = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchTreasuryHistory())\n  }, [slowRefresh, dispatch])\n  return useSelector((state: State) => state.protocolDashboard.treasuryHistory)\n}\n","/** @jsxImportSource theme-ui */\n// @ts-nocheck\n// ChartJS has borderRadius in vs 3^, but react-chartjs does not have the type for it\nimport { ApeSwapTheme, Flex, Text } from '@ape.swap/uikit'\nimport React, { useMemo } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\nimport { styles } from './styles'\nimport CountUp from 'react-countup'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { BananaIcon } from 'components/Icons'\nimport { useFetchOverviewBananaDistribution } from 'state/protocolDashboard/hooks'\nimport { OverviewBananaDistributionInterface } from 'state/protocolDashboard/types'\nimport { usePriceGnanaBusd } from 'state/tokenPrices/hooks'\nimport useIsMobile from 'hooks/useIsMobile'\n\nconst doughnutLabelsLine = {\n  id: 'doughnutLabelsLine',\n  beforeDraw(chart) {\n    const {\n      ctx,\n      chartArea: { width, height },\n    } = chart\n    chart.data.datasets.forEach((dataset, i) => {\n      const totalBanana = dataset.data.reduce((a, b) => a + b, 0)\n      chart.getDatasetMeta(i).data.forEach((datapoint, j) => {\n        const { x, y } = datapoint.tooltipPosition()\n        const halfWidth = width / 2\n        const halfHeight = height / 2\n        const xLine = x >= halfWidth ? x + 30 : x - 30\n        const yLine = y >= halfHeight ? y + 30 : y - 30\n        const extraLine = x >= halfWidth ? 20 : -20\n        // Line\n        ctx.beginPath()\n        ctx.moveTo(x, y)\n        ctx.lineTo(xLine, yLine)\n        ctx.lineTo(xLine + extraLine, yLine)\n        ctx.strokeStyle = 'rgba(205, 205, 205, 1)'\n        ctx.stroke()\n        // Text\n        const percent = ` ${((dataset.data[j] / totalBanana) * 100).toFixed(2)}% `\n        const label = chart.data.labels[j]\n        const textAlignPos = x >= halfWidth ? 'left' : 'right'\n        ctx.font = '600 14px Poppins'\n        ctx.textBaseline = 'bottom'\n        ctx.fillStyle = dataset.backgroundColor\n        ctx.textAlign = textAlignPos\n        ctx.fillText(percent, xLine + extraLine, yLine)\n        ctx.fillText(label, xLine + extraLine, yLine + 15)\n      })\n    })\n  },\n}\n\nconst setData = (bananaSupply: OverviewBananaDistributionInterface, theme: ApeSwapTheme) => {\n  return {\n    labels: bananaSupply?.distribution?.map((data) => data.description),\n    datasets: [\n      {\n        data: bananaSupply?.distribution?.map((data) => data.amount),\n        backgroundColor: theme.colors.text,\n        hoverOffset: 4,\n      },\n    ],\n  }\n}\n\nconst BananaSupplyDistribution: React.FC = () => {\n  const bananaSupply = useFetchOverviewBananaDistribution()\n  const gnanaPrice = usePriceGnanaBusd()?.toNumber()\n  const isMobile = useIsMobile()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const data = useMemo(() => setData(bananaSupply, theme), [bananaSupply, theme])\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', mb: '5px' }}>\n        <Text size=\"22px\" weight={700} mb=\"5px\">\n          {t('BANANA Supply Distribution')}\n        </Text>\n        <Text size=\"16px\" weight={500}>\n          {bananaSupply?.total && (\n            <>\n              <CountUp end={bananaSupply?.total} decimals={2} duration={1} separator=\",\" />\n            </>\n          )}\n        </Text>\n      </Flex>\n      <Flex sx={{ width: '100%', justifyContent: 'space-around', alignItems: 'center', flexWrap: 'wrap' }}>\n        {bananaSupply && (\n          <>\n            <Flex sx={{ width: '100%', height: '225px', overflow: 'visible', zIndex: 1 }}>\n              <Doughnut\n                data={data}\n                options={{\n                  maintainAspectRatio: false,\n                  layout: {\n                    padding: isMobile ? 22.5 : 20,\n                  },\n                  elements: {\n                    arc: {\n                      borderWidth: 4,\n                      borderColor: theme.colors.white2,\n                    },\n                  },\n\n                  plugins: {\n                    legend: { display: false },\n                    tooltip: {\n                      enabled: true,\n                      mode: 'nearest',\n                      displayColors: false,\n                      callbacks: {\n                        title: (title) => {\n                          return title.map((ti) => {\n                            return ti.label\n                          })\n                        },\n                        label: (context) => {\n                          return `Amount: ${context.parsed.toLocaleString('en-US', {\n                            minimumFractionDigits: 2,\n                            maximumFractionDigits: 2,\n                          })}`\n                        },\n                        afterLabel: (context) => {\n                          return `Value: ${(parseFloat(context.parsed) * gnanaPrice).toLocaleString('en-US', {\n                            style: 'currency',\n                            currency: 'USD',\n                            minimumFractionDigits: 0,\n                            maximumFractionDigits: 0,\n                          })}\\nRatio: ${((parseFloat(context.parsed) / bananaSupply.total) * 100).toFixed(2)}%`\n                        },\n                      },\n                      titleFont: { family: 'poppins', weight: '700', size: 16 },\n                      bodyFont: { family: 'poppins', weight: '500', size: 16 },\n                      titleColor: theme.colors.text,\n                      backgroundColor: theme.colors.white2,\n                      boxPadding: 5,\n                      bodyColor: theme.colors.text,\n                      borderColor: theme.colors.inputBorder,\n                      bodySpacing: 10,\n                      borderWidth: 1,\n                      caretSize: 8,\n                      cornerRadius: 10,\n                      padding: 15,\n                    },\n                  },\n                  borderRadius: 8,\n                }}\n                plugins={[doughnutLabelsLine]}\n              />\n            </Flex>\n            <Flex\n              sx={{\n                position: 'absolute',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mr: '5px',\n                zIndex: 0,\n              }}\n            >\n              <BananaIcon />\n            </Flex>\n          </>\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(BananaSupplyDistribution)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '793px',\n    width: '100%',\n    background: 'white2',\n    height: '320px',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    padding: '20px 20px',\n    '@media screen and (min-width: 726px)': {\n      mr: '10px',\n    },\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport React, { useMemo } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport useTheme from 'hooks/useTheme'\nimport { styles } from './styles'\nimport { useTranslation } from 'contexts/Localization'\nimport CountUp from 'react-countup'\nimport { OverviewMcapTvlRatioInterface } from 'state/protocolDashboard/types'\nimport { useFetchOverviewMcapTvlRatio } from 'state/protocolDashboard/hooks'\n\nconst setData = (data: OverviewMcapTvlRatioInterface[], theme: any) => {\n  return {\n    labels: data?.map((curr) => curr.timestamp * 1000),\n    datasets: [\n      {\n        data: data?.map((curr) => curr.ratio),\n        fill: false,\n        borderColor: theme.colors.text,\n        backgroundColor: theme.colors.text,\n        tension: 0.3,\n      },\n    ],\n  }\n}\n\nconst MarketCapToTvlRatio: React.FC = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const mcapTvlData = useFetchOverviewMcapTvlRatio()\n  const data = useMemo(() => setData(mcapTvlData, theme), [mcapTvlData, theme])\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', marginBottom: '10px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Market Cap to TVL Ratio')}\n        </Text>\n        {mcapTvlData?.length > 0 && (\n          <Text size=\"16px\" weight={500}>\n            <CountUp end={mcapTvlData[mcapTvlData.length - 1].ratio} decimals={2} duration={1} separator=\",\" />\n          </Text>\n        )}\n      </Flex>\n      {mcapTvlData?.length > 0 && (\n        <Flex sx={{ maxWidth: '100%', width: '99%', height: '200px' }}>\n          <Line\n            data={data}\n            options={{\n              elements: {\n                point: {\n                  radius: 0,\n                },\n              },\n              scales: {\n                y: {\n                  position: 'right',\n                  type: 'linear',\n                  grid: { color: theme.colors.white4, drawBorder: false },\n                  ticks: {\n                    color: theme.colors.text,\n                    font: { family: 'poppins', weight: '500' },\n                    autoSkip: true,\n                    maxTicksLimit: 5,\n                  },\n                },\n                x: {\n                  grid: { display: false, drawBorder: false },\n                  min: new Date(new Date().getTime() - 180 * 24 * 60 * 60 * 1000).getTime(),\n                  ticks: {\n                    color: theme.colors.text,\n                    font: { family: 'poppins', weight: '500' },\n                    autoSkip: true,\n                    maxTicksLimit: 5,\n                  },\n                  type: 'time',\n                  time: {\n                    unit: 'month',\n                    displayFormats: {\n                      month: 'MMM YY',\n                    },\n                  },\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n              color: 'red',\n              plugins: {\n                legend: {\n                  display: false,\n                },\n                tooltip: {\n                  enabled: true,\n                  mode: 'nearest',\n                  intersect: false,\n                  titleFont: { family: 'poppins', weight: '700', size: 16 },\n                  bodyFont: { family: 'poppins', weight: '500', size: 14 },\n                  titleColor: theme.colors.text,\n                  backgroundColor: theme.colors.white2,\n                  boxPadding: 5,\n                  bodyColor: theme.colors.text,\n                  borderColor: theme.colors.inputBorder,\n                  bodySpacing: 20,\n                  borderWidth: 1,\n                  cornerRadius: 10,\n                  caretSize: 8,\n                  padding: 15,\n                },\n              },\n            }}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default React.memo(MarketCapToTvlRatio)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '793px',\n    width: '100%',\n    background: 'white2',\n    height: 'fit-content',\n    minHeight: '200px',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    padding: '10px 10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Tab, Tabs, Text } from '@ape.swap/uikit'\nimport { Select, SelectItem } from '@apeswapfinance/uikit'\nimport React, { useMemo, useState } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport useTheme from 'hooks/useTheme'\nimport { styles } from './styles'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFetchOverviewProtocolMetrics, useFetchTreasuryHistory } from 'state/protocolDashboard/hooks'\nimport useIsMobile from 'hooks/useIsMobile'\n\nconst setData = (data: any, theme: any) => {\n  return {\n    labels: data?.history?.map((history) => history.time * 1000),\n    datasets: [\n      {\n        data: data?.history?.map((history) => history.amount),\n        fill: false,\n        borderColor: theme.colors.text,\n        backgroundColor: theme.colors.text,\n        tension: 0.3,\n      },\n    ],\n  }\n}\n\nconst ProtocolMetricsGraph: React.FC = () => {\n  const currentDate = new Date()\n  const minDateMap = {\n    '180d': new Date(currentDate.getTime() - 180 * 24 * 60 * 60 * 1000).getTime(),\n    '7d': new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000).getTime(),\n    '30d': new Date(currentDate.getTime() - 30 * 24 * 60 * 60 * 1000).getTime(),\n  }\n  const metrics = useFetchOverviewProtocolMetrics()\n  // Using this endpoint for pol until the original gets fixed\n  const polHistory = useFetchTreasuryHistory()\n  const bananaHolders = metrics?.filter((data) => data.description === 'Banana Holders')[0]\n  const marketCap = metrics?.filter((data) => data.description === 'Market Cap')[0]\n  const bananaBurned = metrics?.filter((data) => data.description === 'Banana Burned')[0]\n  // Using this until POL endpoint gets fixed\n  // Replace with this:  metrics?.filter((data) => data.description === 'POL')[0]\n  const pol = useMemo(() => {\n    return {\n      history: polHistory?.map((hist) => {\n        return { amount: hist.polValue, time: hist.timestamp }\n      }),\n    }\n  }, [polHistory])\n  const listOfMetrics = useMemo(\n    () => [bananaHolders, marketCap, bananaBurned, pol],\n    [bananaHolders, marketCap, bananaBurned, pol],\n  )\n  const [activeCatTab, setActiveCatTab] = useState(1)\n  const [activeTime, onSetTime] = useState('30d')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const isMobile = useIsMobile()\n  const data = useMemo(() => setData(listOfMetrics[activeCatTab], theme), [listOfMetrics, activeCatTab, theme])\n  const categories = ['Banana Holders', 'Market Cap', 'Burned', 'POL']\n\n  const switchCatTab = (index) => {\n    isMobile ? setActiveCatTab(categories.indexOf(index)) : setActiveCatTab(index)\n  }\n\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ marginBottom: '10px', justifyContent: 'space-between', flexWrap: 'wrap' }}>\n        <Flex sx={{ width: 'fit-content' }}>\n          {!isMobile ? (\n            <Tabs activeTab={activeCatTab} size=\"sm\" variant=\"centered\" sx={{ mb: '5px' }}>\n              {/* <Tab\n                index={0}\n                size=\"sm\"\n                label={t('Holders')}\n                activeTab={activeCatTab}\n                variant=\"centered\"\n                onClick={switchCatTab}\n              /> */}\n              <Tab\n                index={1}\n                size=\"sm\"\n                label={t('Market Cap')}\n                variant=\"fullWidth\"\n                activeTab={activeCatTab}\n                onClick={switchCatTab}\n              />\n              <Tab\n                index={2}\n                size=\"sm\"\n                label={t('Burned')}\n                variant=\"centered\"\n                activeTab={activeCatTab}\n                onClick={switchCatTab}\n              />\n              <Tab\n                index={3}\n                size=\"sm\"\n                label={t('POL')}\n                variant=\"centered\"\n                activeTab={activeCatTab}\n                onClick={switchCatTab}\n              />\n            </Tabs>\n          ) : (\n            <Select\n              size=\"sm\"\n              width=\"140px\"\n              onChange={(e) => switchCatTab(e.target.value)}\n              active={categories[activeCatTab]}\n            >\n              {/* <SelectItem size=\"sm\" value=\"Holders\" key=\"holders\">\n                <Text sx={{ lineHeight: '20px' }}>{t('Holders')}</Text>\n              </SelectItem> */}\n              <SelectItem size=\"sm\" value=\"Market Cap\" key=\"marketCap\">\n                <Text sx={{ lineHeight: '20px' }}>{t('Market Cap')}</Text>\n              </SelectItem>\n              <SelectItem size=\"sm\" value=\"Burned\" key=\"burned\">\n                <Text sx={{ lineHeight: '20px' }}>{t('Burned')}</Text>\n              </SelectItem>\n              <SelectItem size=\"sm\" value=\"POL\" key=\"pol\">\n                <Text sx={{ lineHeight: '20px' }}>{t('POL')}</Text>\n              </SelectItem>\n            </Select>\n          )}\n        </Flex>\n        <Flex sx={{ height: '40px' }}>\n          <Select size=\"sm\" width=\"126px\" onChange={(e) => onSetTime(e.target.value)} active={activeTime}>\n            <SelectItem size=\"sm\" value=\"7d\" key=\"7d\">\n              <Text sx={{ lineHeight: '20px' }}>{t('7d')}</Text>\n            </SelectItem>\n            <SelectItem size=\"sm\" value=\"30d\" key=\"30d\">\n              <Text sx={{ lineHeight: '20px' }}>{t('30d')}</Text>\n            </SelectItem>\n            <SelectItem size=\"sm\" value=\"180d\" key=\"total\">\n              <Text sx={{ lineHeight: '20px' }}>{t('180d')}</Text>\n            </SelectItem>\n          </Select>\n        </Flex>\n      </Flex>\n      <Flex sx={{ maxWidth: '100%', width: '99%', height: '200px' }}>\n        {data && (\n          <Line\n            data={data}\n            options={{\n              elements: {\n                point: {\n                  radius: 0,\n                },\n              },\n              scales: {\n                y: {\n                  position: 'right',\n                  grid: { color: theme.colors.white4, drawBorder: false },\n                  ticks: { stepSize: 20, color: theme.colors.text, font: { family: 'poppins', weight: '500' } },\n                },\n\n                x: {\n                  type: 'time',\n                  min: minDateMap[activeTime],\n                  grid: { display: false, drawBorder: false },\n                  ticks: {\n                    color: theme.colors.text,\n                    font: { family: 'poppins', weight: '500' },\n                  },\n                  time: {\n                    unit: activeTime === 'total' ? 'month' : activeTime === '24h' ? 'hour' : 'day',\n                  },\n                },\n              },\n\n              responsive: true,\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n                tooltip: {\n                  enabled: true,\n                  mode: 'nearest',\n                  intersect: false,\n                  callbacks: {\n                    label: (context) => {\n                      return `${activeCatTab === 1 || activeCatTab === 3 ? '$' : ''}${context.formattedValue}`\n                    },\n                  },\n                  titleFont: { family: 'poppins', weight: '700', size: 16 },\n                  bodyFont: { family: 'poppins', weight: '500', size: 14 },\n                  titleColor: theme.colors.text,\n                  backgroundColor: theme.colors.white2,\n                  boxPadding: 5,\n                  bodyColor: theme.colors.text,\n                  borderColor: theme.colors.inputBorder,\n                  bodySpacing: 20,\n                  borderWidth: 1,\n                  cornerRadius: 10,\n                  caretSize: 8,\n                  padding: 15,\n                },\n              },\n            }}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(ProtocolMetricsGraph)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '387px',\n    width: '100%',\n    background: 'white2',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    padding: '20px',\n    '@media screen and (min-width: 726px)': {\n      mr: '10px',\n    },\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, Text, TooltipBubble } from '@ape.swap/uikit'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport CountUp from 'react-countup'\nimport { useFetchOverviewProtocolMetrics } from 'state/protocolDashboard/hooks'\nimport { styles } from './styles'\n\nconst TOOLTIPS = {\n  'Banana Holders': 'Includes the number of wallets that actively hold or stake BANANA or GNANA.',\n  'Market Cap': 'Total value of BANANA tokens in circulation, based on current BANANA price.',\n  'Banana Burned': 'Total number of BANANA tokens burned through manual and protocol burns.',\n  POL: 'Total value of the liquidity that ApeSwap owns in the form of LP tokens.',\n}\n\nconst ProtocolMetrics: React.FC = () => {\n  const protocolMetrics = useFetchOverviewProtocolMetrics()\n  const filterProtocolMetrics = protocolMetrics?.filter((metric) => metric.description !== 'Banana Holders')\n  const { t } = useTranslation()\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', marginBottom: '20px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Protocol Metrics')}\n        </Text>\n      </Flex>\n      {filterProtocolMetrics?.map((data) => {\n        return (\n          <Flex sx={{ justifyContent: 'space-between', margin: '8.5px 0px' }} key={data.description}>\n            <Flex sx={{ alignItems: 'center' }}>\n              <Text weight={500} mr=\"5px\">\n                {t(data.description)}\n              </Text>\n              <TooltipBubble\n                body={<Text>{t(TOOLTIPS[data.description])}</Text>}\n                transformTip=\"translate(-15px, 0px)\"\n                width=\"200px\"\n                placement=\"topLeft\"\n              >\n                <Svg icon=\"info\" width=\"15px\" color=\"gray\" />\n              </TooltipBubble>\n            </Flex>\n            <Text weight={700}>\n              {(data.description === 'Market Cap' || data.description === 'POL') && '$'}\n              <CountUp end={data.amount} decimals={2} duration={1} separator=\",\" />\n            </Text>\n          </Flex>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default React.memo(ProtocolMetrics)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '590px',\n    width: '100%',\n    background: 'white2',\n    height: '355px',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    padding: '20px',\n    '@media screen and (max-width: 1100px)': {\n      height: '537px',\n    },\n  },\n  graphContainer: {\n    width: '99%',\n    maxWidth: '100%',\n    minHeight: '210px',\n    '@media screen and (max-width: 1100px)': {\n      minHeight: '350px',\n    },\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport React, { useMemo } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport useTheme from 'hooks/useTheme'\nimport CountUp from 'react-countup'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFetchOverviewVolume } from 'state/protocolDashboard/hooks'\nimport { styles } from './styles'\nimport { useHomepageStats } from 'state/hooks'\nimport { OverviewVolumeInterface } from 'state/protocolDashboard/types'\nimport { orderBy } from 'lodash'\n\nconst BACKGROUND_COLORS = {\n  Ethereum: 'rgba(98, 126, 234, .8)',\n  Polygon: 'rgba(130, 71, 229, .8)',\n  'BNB Chain': 'rgba(243, 186, 47, .8)',\n}\nconst BORDER_COLORS = {\n  Ethereum: 'rgba(98, 126, 234, 1)',\n  Polygon: 'rgba(130, 71, 229, 1)',\n  'BNB Chain': 'rgba(243, 186, 47, 1)',\n}\n\nconst setData = (tradeVolume: OverviewVolumeInterface[]) => {\n  return {\n    labels: tradeVolume?.[0]?.history.map((hist) => hist.time * 1000),\n    datasets: tradeVolume?.map((data, i) => {\n      return {\n        label: data.description,\n        data: data.history?.map((hist) => hist.amount),\n        backgroundColor: BACKGROUND_COLORS[data.description],\n        borderColor: BORDER_COLORS[data.description],\n        lineTension: 0.3,\n        fill: true,\n      }\n    }),\n  }\n}\n\nconst TotalTradeVolume: React.FC = () => {\n  const tradeVolume = useFetchOverviewVolume()\n  const totalVolume = useHomepageStats()?.totalVolume\n  const sortTradeVol = orderBy(tradeVolume, (vol) => vol.history?.[vol.history.length - 1].amount, 'asc')\n  const { theme } = useTheme()\n  const data = useMemo(() => setData(sortTradeVol), [sortTradeVol])\n  const { t } = useTranslation()\n\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', marginBottom: '10px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Total Trade Volume')}\n        </Text>\n        <Text size=\"16px\" weight={500}>\n          {totalVolume && (\n            <>\n              $<CountUp end={totalVolume} decimals={0} duration={1} separator=\",\" />\n            </>\n          )}\n        </Text>\n      </Flex>\n      <Flex sx={styles.graphContainer}>\n        {data && (\n          <Line\n            data={data}\n            options={{\n              elements: {\n                point: {\n                  radius: 0,\n                },\n              },\n              color: theme.colors.text,\n              scales: {\n                y: {\n                  type: 'linear',\n                  grid: { color: theme.colors.white4, drawBorder: false },\n                  ticks: {\n                    color: theme.colors.text,\n                    font: { family: 'poppins', weight: '500' },\n                    autoSkip: true,\n                    callback: function (value) {\n                      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD', notation: 'compact' })\n                    },\n                    maxTicksLimit: 5,\n                  },\n                },\n                x: {\n                  grid: { display: false, drawBorder: false },\n                  ticks: {\n                    color: theme.colors.text,\n                    font: { family: 'poppins', weight: '500' },\n                    autoSkip: true,\n                    maxTicksLimit: 5,\n                  },\n                  type: 'time',\n                  time: {\n                    unit: 'month',\n                    displayFormats: {\n                      month: 'MMM YY',\n                    },\n                  },\n                },\n              },\n              plugins: {\n                legend: {\n                  display: false,\n                },\n                tooltip: {\n                  enabled: true,\n                  mode: 'nearest',\n                  intersect: false,\n                  titleFont: { family: 'poppins', weight: '700', size: 16 },\n                  bodyFont: { family: 'poppins', weight: '500', size: 14 },\n                  titleColor: theme.colors.text,\n                  backgroundColor: theme.colors.white2,\n                  boxPadding: 5,\n                  bodyColor: theme.colors.text,\n                  borderColor: theme.colors.inputBorder,\n                  bodySpacing: 20,\n                  borderWidth: 1,\n                  cornerRadius: 10,\n                  caretSize: 8,\n                  padding: 15,\n                },\n              },\n              responsive: true,\n              maintainAspectRatio: false,\n            }}\n          />\n        )}\n      </Flex>\n      <Flex\n        sx={{\n          margin: '5px 0px 10px 0px',\n          height: '70px',\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          flexWrap: 'wrap',\n        }}\n      >\n        {sortTradeVol?.reverse()?.map((data, i) => {\n          const totalVolume = data.history[data.history.length - 1].amount\n          return (\n            <Flex key={data.description} sx={{ alignItems: 'center', flexWrap: 'no-wrap', margin: '5px 5px' }}>\n              <Flex\n                sx={{\n                  background: BORDER_COLORS[data.description],\n                  width: '25px',\n                  height: '10px',\n                  borderRadius: '10px',\n                  mr: '5px',\n                }}\n              />\n              <Flex sx={{ alignItems: 'center', justifyContnet: 'center' }}>\n                <Text size=\"12px\" weight={700} mr=\"5px\" sx={{ lineHeight: '10px' }}>\n                  {data.description}\n                </Text>\n                <Text size=\"12px\" sx={{ lineHeight: '10px' }}>\n                  $<CountUp end={totalVolume} decimals={0} duration={1} separator=\",\" />\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        })}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(TotalTradeVolume)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '590px',\n    width: '100%',\n    background: 'white2',\n    minHeight: '350px',\n    height: 'auto',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    alignItems: 'space-between',\n    justifyContent: 'space-between',\n    padding: '20px 10px',\n    '@media screen and (min-width: 726px)': {\n      mr: '10px',\n    },\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Tvl } from 'components/Icons'\nimport { Flex, Text } from '@ape.swap/uikit'\nimport React, { useMemo } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\nimport useTheme from 'hooks/useTheme'\nimport { useFetchOverviewTvl } from 'state/protocolDashboard/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport CountUp from 'react-countup'\nimport { styles } from './styles'\nimport { useFetchHomepageStats } from 'state/hooks'\n\nconst COLORS = [\n  'rgba(244, 190, 55, 1)',\n  'rgba(84, 141, 225, 1)',\n  'rgba(231, 79, 79, 1)',\n  'rgba(144, 51, 246, 1)',\n  'rgba(105, 165, 136, 1)',\n  'grey',\n]\n\nconst setData = (tvl: any) => {\n  if (!tvl) return\n  return {\n    labels: Object.entries(tvl)?.map((data) => data[0]),\n    datasets: [\n      {\n        data: Object.entries(tvl)?.map((data) => data[1]),\n        backgroundColor: Object.entries(tvl)?.map((_, i) => COLORS[i]),\n        hoverOffset: 4,\n      },\n    ],\n  }\n}\n\nconst TotalValueLocked: React.FC = () => {\n  useFetchHomepageStats(true)\n  const tvl = useFetchOverviewTvl()\n  const sortTvl = tvl && Object.fromEntries(Object.entries(tvl).sort(([, a], [, b]) => b - a))\n  const orderedTvl = useMemo(() => {\n    return (\n      sortTvl && {\n        ...Object.fromEntries(Object.entries(sortTvl).filter(([key, _]) => key !== 'other')),\n        other: sortTvl['other'],\n      }\n    )\n  }, [sortTvl])\n  const data = useMemo(() => setData(orderedTvl), [orderedTvl])\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const total = tvl && Object.entries(tvl)?.reduce((a, b) => a + b[1], 0)\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', mb: '0px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Total Value Locked')}\n        </Text>\n        <Text size=\"22px\" weight={700}>\n          $<CountUp end={total} decimals={2} duration={1} separator=\",\" />\n        </Text>\n      </Flex>\n      <Flex\n        sx={{\n          width: '100%',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          flexWrap: 'wrap',\n        }}\n      >\n        {data && (\n          <Flex\n            sx={{\n              position: 'relative',\n              margin: '10px 0px',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Flex sx={{ width: '200px', zIndex: 1 }}>\n              <Doughnut\n                data={data}\n                options={{\n                  layout: {\n                    padding: 5,\n                  },\n                  elements: {\n                    arc: {\n                      borderWidth: 1.5,\n                    },\n                  },\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                    tooltip: {\n                      enabled: true,\n                      mode: 'nearest',\n                      callbacks: {\n                        label: (context) => {\n                          return `${context.label}: ${context.parsed.toLocaleString('en-US', {\n                            style: 'currency',\n                            currency: 'USD',\n                            minimumFractionDigits: 0,\n                            maximumFractionDigits: 0,\n                          })}`\n                        },\n                      },\n                      titleFont: { family: 'poppins', weight: '700', size: 16 },\n                      bodyFont: { family: 'poppins', weight: '500', size: 14 },\n                      titleColor: theme.colors.text,\n                      backgroundColor: theme.colors.white2,\n                      boxPadding: 5,\n                      bodyColor: theme.colors.text,\n                      borderColor: theme.colors.inputBorder,\n                      bodySpacing: 20,\n                      borderWidth: 1,\n                      cornerRadius: 10,\n                      caretSize: 8,\n                      padding: 10,\n                      boxWidth: 10,\n                    },\n                  },\n                  cutout: 60,\n                }}\n              />\n            </Flex>\n            <Flex\n              sx={{\n                height: '10px',\n                mb: '25px',\n                alignSelf: 'center',\n                position: 'absolute',\n                alignItems: 'center',\n                justifyContent: 'center',\n                zIndex: 0,\n              }}\n            >\n              <Tvl fill={theme.colors.text} color={theme.colors.background} width=\"90px\" />\n            </Flex>\n          </Flex>\n        )}\n        <Flex sx={{ flexDirection: 'column', maxWidth: '310px', width: '100%', margin: '10px 0px' }}>\n          {tvl &&\n            Object.entries(orderedTvl)?.map((data, i) => {\n              return (\n                <Flex key={data[0]} sx={{ alignItems: 'center', justifyContent: 'space-between', margin: '5px 0px' }}>\n                  <Flex sx={{ alignItems: 'center' }}>\n                    <Flex sx={{ background: COLORS[i], width: '8px', height: '8px', borderRadius: '4px' }} />\n                    <Text ml=\"10px\" weight={500} sx={{ textTransform: 'capitalize' }}>\n                      {data[0]}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    sx={{\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      maxWidth: '180px',\n                      width: '100%',\n                    }}\n                  >\n                    <Text weight={700} mr=\"10px\">\n                      $<CountUp end={data[1]} decimals={0} duration={1} separator=\",\" />\n                    </Text>\n                    <Text weight={500} sx={{ opacity: 0.5 }}>\n                      <CountUp end={(data[1] / total) * 100} decimals={2} duration={1} separator=\",\" />%\n                    </Text>\n                  </Flex>\n                </Flex>\n              )\n            })}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(TotalValueLocked)\n","/** @jsxImportSource theme-ui */\nimport { Flex } from '@ape.swap/uikit'\nimport React from 'react'\nimport BananaSupplyDistribution from './components/BananaSupplyDistribution'\nimport MarketCapToTvlRatio from './components/MarketCapToTvlRatio'\nimport ProtocolMetricsGraph from './components/ProtocolMetricGraph'\nimport ProtocolMetrics from './components/ProtocolMetrics'\nimport TotalTradeVolume from './components/TotalTradeVolume'\nimport TotalValueLocked from './components/TotalValueLocked'\n\nconst Overview: React.FC = () => {\n  return (\n    <Flex\n      sx={{\n        position: 'relative',\n        maxWidth: '1200px',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n      }}\n    >\n      <Flex\n        sx={{\n          justifyContent: 'space-between',\n          width: '100%',\n          flexWrap: 'no-wrap',\n          '@media screen and (max-width: 725px)': {\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          },\n        }}\n      >\n        <TotalValueLocked />\n        <TotalTradeVolume />\n      </Flex>\n      <Flex\n        sx={{\n          justifyContent: 'space-between',\n          width: '100%',\n          flexWrap: 'no-wrap',\n          '@media screen and (max-width: 725px)': {\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          },\n        }}\n      >\n        <MarketCapToTvlRatio />\n        <BananaSupplyDistribution />\n      </Flex>\n      <Flex\n        sx={{\n          position: 'relative',\n          justifyContent: 'space-between',\n          width: '100%',\n          flexWrap: 'no-wrap',\n          '@media screen and (max-width: 725px)': {\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          },\n        }}\n      >\n        <ProtocolMetrics />\n        <ProtocolMetricsGraph />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(Overview)\n","import styled from 'styled-components'\nimport { Tag } from '@ape.swap/uikit'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    width: '100%',\n    maxWidth: '580px',\n    minHeight: '350px',\n    height: 'fit-content',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    alignItems: 'space-between',\n    padding: '20px 0px',\n  },\n  assetBreakdownContainer: {\n    maxWidth: '580px',\n    width: '100%',\n    height: 'auto',\n    maxHeight: '545px',\n    background: 'white3',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    borderRadius: '10px',\n    marginTop: '20px',\n  },\n  assetContainer: {\n    position: 'relative',\n    background: 'white3',\n    minHeight: '60px',\n    height: 'fit-content',\n    width: '100%',\n    maxWidth: '580px',\n    justifyContent: 'center',\n    pr: '20px',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    borderRadius: '10px',\n    margin: '5px 10px',\n  },\n  assetRow: {\n    maxWidth: '250px',\n    width: '100%',\n    justifyContent: 'space-between',\n    margin: '2.5px 0px',\n    '@media screen and (max-width: 578px)': {\n      margin: '10px 0px',\n    },\n  },\n}\n\nexport const StyledTag = styled(Tag)`\n  font-size: 10px;\n  padding: 0px 6px !important;\n  margin-left: 6px;\n  font-weight: 700;\n  border: 1px;\n  border-radius: 10px;\n  height: auto;\n  width: max-content;\n`\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, TagVariants, Text } from '@ape.swap/uikit'\nimport { styles, StyledTag } from './styles'\nimport ServiceTokenDisplay from 'components/ServiceTokenDisplay'\nimport React, { useState } from 'react'\nimport CountUp from 'react-countup'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { useTranslation } from 'contexts/Localization'\nimport { CHAIN_PARAMS, NETWORK_LABEL } from 'config/constants/chains'\nimport useIsMobile from 'hooks/useIsMobile'\n\nconst AssetCard: React.FC<{ token: any }> = ({ token }) => {\n  const isMobile = useIsMobile()\n  const [expanded, setExpanded] = useState(false)\n  const { t } = useTranslation()\n  return (\n    <Flex sx={{ ...styles.assetContainer, background: expanded ? 'white4' : 'white3' }}>\n      <Flex\n        sx={{\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          cursor: 'pointer',\n          minHeight: '60px',\n        }}\n        onClick={() => setExpanded((prev) => !prev)}\n      >\n        <Flex sx={{ alignItems: 'center' }}>\n          <Flex>\n            {token?.isLp ? (\n              <ServiceTokenDisplay\n                token1={token?.token0?.symbol}\n                token2={token?.token1?.symbol}\n                size={40}\n                noEarnToken\n              />\n            ) : (\n              <ServiceTokenDisplay token1={token?.symbol} size={40} />\n            )}\n            <Flex sx={{ alignItems: 'flex-start', transform: 'translate(-10px, 0px)' }}>\n              <ServiceTokenDisplay token1={CHAIN_PARAMS?.[token?.chainId]?.nativeCurrency?.symbol} size={13.5} />\n            </Flex>\n          </Flex>\n          <Text weight={700} ml=\"5px\" size={isMobile ? '12px' : '16px'}>\n            {token?.isLp ? `${token?.token0?.symbol}-${token?.token1?.symbol}` : token?.symbol}\n          </Text>\n          {token?.type &&\n            (token?.type === 'apeswap' ? (\n              <StyledTag variant={'rgb(77, 64, 64)' as TagVariants}>\n                {isMobile ? t('APE') : t(token?.type.toUpperCase())}\n              </StyledTag>\n            ) : (\n              <StyledTag variant={'#00983D' as TagVariants}>\n                {isMobile ? t('PTNR') : t(token?.type.toUpperCase())}\n              </StyledTag>\n            ))}\n        </Flex>\n        <Flex>\n          <Text weight={700} mr=\"10px\">\n            $<CountUp end={token?.value} decimals={0} duration={1} separator=\",\" />\n          </Text>\n          <Svg icon=\"caret\" direction={expanded ? 'up' : 'down'} />\n        </Flex>\n      </Flex>\n      <AnimatePresence>\n        {expanded && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'fit-content' }}\n            transition={{ opacity: { duration: 0.2 } }}\n            exit={{ opacity: 0, height: 0 }}\n            sx={{ position: 'relative' }}\n          >\n            <Flex sx={{ width: '100%', flexDirection: 'column', flexWrap: 'wrap', mt: '5px', height: 'fit-content' }}>\n              <Flex sx={{ justifyContent: 'space-around', flexWrap: 'wrap' }}>\n                <Flex sx={styles.assetRow}>\n                  <Text weight={500} sx={{ lineHeight: '10px' }}>\n                    {t('Value')}:\n                  </Text>\n                  <Text weight={700} sx={{ lineHeight: '10px' }}>\n                    $<CountUp end={token?.value} decimals={2} duration={1} separator=\",\" />\n                  </Text>\n                </Flex>\n                <Flex sx={styles.assetRow}>\n                  <Text weight={500} sx={{ lineHeight: '10px' }}>\n                    {t('Chain')}:\n                  </Text>\n                  <Text weight={700} sx={{ lineHeight: '10px' }}>\n                    {NETWORK_LABEL[token?.chainId]}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex sx={{ justifyContent: 'space-around', flexWrap: 'wrap' }}>\n                <Flex sx={styles.assetRow}>\n                  <Text weight={500} sx={{ lineHeight: '10px' }}>\n                    {t('Location')}:\n                  </Text>\n                  <Text weight={700} sx={{ lineHeight: '10px' }}>\n                    {token?.location === 'POL' ? `${token?.location} - ${token?.type.toUpperCase()}` : token?.location}\n                  </Text>\n                </Flex>\n                <Flex sx={styles.assetRow}>\n                  <Text weight={500} sx={{ lineHeight: '10px' }}>\n                    {t('Amount')}:\n                  </Text>\n                  <Text weight={700} sx={{ lineHeight: '10px' }}>\n                    <CountUp end={token?.amount} decimals={2} duration={1} separator=\",\" />\n                  </Text>\n                </Flex>\n              </Flex>\n            </Flex>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Flex>\n  )\n}\n\nexport default React.memo(AssetCard)\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { styles } from './styles'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { orderBy } from 'lodash'\nimport { useFetchTreasuryBreakdown } from 'state/protocolDashboard/hooks'\nimport AssetCard from './AssetCard'\n\nconst AssetBreakdown: React.FC<{ activeView: number }> = ({ activeView }) => {\n  const { t } = useTranslation()\n  const treasury = useFetchTreasuryBreakdown()\n\n  // To make image display easier adding a isLp field to lpTokens\n  const sortedTreasury = orderBy(\n    [\n      ...(treasury?.tokens || []),\n      ...(treasury?.lpTokens?.map((lp) => {\n        return { ...lp, isLp: true }\n      }) || []),\n    ],\n    (token) => token?.value,\n    'desc',\n  )\n  const filterLowAmounts = sortedTreasury?.filter((token) => token.value > 500)\n  const sortedOpFunds = filterLowAmounts?.filter((token) => token.location === 'Operational Funds')\n  const sortedPolFunds = filterLowAmounts?.filter((token) => token.location === 'POL')\n  const activeAssets = [filterLowAmounts, sortedOpFunds, sortedPolFunds][activeView]\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', mb: '5px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Asset Breakdown')}\n        </Text>\n      </Flex>\n      <div sx={styles.assetBreakdownContainer}>\n        {activeAssets?.map((token) => (\n          <AssetCard token={token} key={token?.address} />\n        ))}\n      </div>\n    </Flex>\n  )\n}\n\nexport default React.memo(AssetBreakdown)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    maxWidth: '400px',\n    width: '100%',\n    minHeight: '350px',\n    height: 'auto',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    alignItems: 'space-between',\n    justifyContent: 'space-between',\n    padding: '20px 10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport React, { useMemo } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\nimport { styles } from './styles'\nimport { useTranslation } from 'contexts/Localization'\nimport CountUp from 'react-countup'\nimport { useFetchTreasuryAssetOverview } from 'state/protocolDashboard/hooks'\nimport { orderBy } from 'lodash'\nimport { TreasuryAssetOverviewInterface } from 'state/protocolDashboard/types'\nimport { useTheme } from 'styled-components'\n\nconst COLORS = [\n  'rgba(244, 190, 55, 1)',\n  'rgba(84, 141, 225, 1)',\n  'rgba(231, 79, 79, 1)',\n  'rgba(144, 51, 246, 1)',\n  'rgba(105, 165, 136, 1)',\n  '#7FDBFF',\n  'grey',\n]\n\nconst setData = (assets: (TreasuryAssetOverviewInterface | { symbol: string; value: number })[]) => {\n  return {\n    labels: assets?.map((data) => data.symbol),\n    datasets: [\n      {\n        data: assets?.map((data) => data.value),\n        backgroundColor: assets?.map((_, i) => COLORS[i]),\n        hoverOffset: 4,\n      },\n    ],\n  }\n}\n\nconst sortAndAddAssets = (assets: TreasuryAssetOverviewInterface[]) => {\n  const sortedAssets = orderBy(assets, (asset) => asset.value, 'desc')\n  const topSix = sortedAssets.length > 6 ? sortedAssets.slice(0, 6) : sortedAssets\n  const otherAssets = sortedAssets.length > 6 ? sortedAssets.slice(6) : []\n  const otherAssetsSum = otherAssets.reduce((a, b) => a + b.value, 0)\n  if (sortedAssets.length === 0) return null\n  return [...topSix, { symbol: 'Other', value: otherAssetsSum }]\n}\n\nconst AssetOverview: React.FC<{ activeView: number }> = ({ activeView }) => {\n  const assets = useFetchTreasuryAssetOverview()\n  const treasuryAssets = assets?.filter((asset) => asset.location === 'Operational Funds')\n  const polAssets = assets?.filter((asset) => asset.location === 'POL')\n  const mergedAssets = treasuryAssets?.map((treasAsset) => {\n    const matchAsset = polAssets?.filter((asset) => asset.symbol === treasAsset.symbol)\n    return {\n      ...treasAsset,\n      value: (matchAsset.length > 0 ? matchAsset[0].value : 0) + treasAsset.value,\n    }\n  })\n  const cleanedAssets = sortAndAddAssets([mergedAssets, treasuryAssets, polAssets][activeView])\n  const data = useMemo(() => setData(cleanedAssets), [cleanedAssets])\n  const { t } = useTranslation()\n  const total = cleanedAssets?.reduce((a, b) => a + b.value, 0)\n  const theme = useTheme()\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', mb: '5px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Assets Overview')}\n        </Text>\n      </Flex>\n      <Flex\n        sx={{\n          width: '100%',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          flexWrap: 'wrap',\n          flexDirection: 'column',\n        }}\n      >\n        <Flex sx={{ margin: '10px 0px' }}>\n          <Flex sx={{ width: '300px' }}>\n            <Doughnut\n              data={data}\n              options={{\n                layout: {\n                  padding: 15,\n                },\n                elements: {\n                  arc: {\n                    borderWidth: 1.5,\n                  },\n                },\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                  tooltip: {\n                    enabled: true,\n                    mode: 'nearest',\n                    callbacks: {\n                      label: (context) => {\n                        return `${context.label}: ${context.parsed.toLocaleString('en-US', {\n                          style: 'currency',\n                          currency: 'USD',\n                          minimumFractionDigits: 0,\n                          maximumFractionDigits: 0,\n                        })}`\n                      },\n                    },\n                    titleFont: { family: 'poppins', weight: '700', size: 16 },\n                    bodyFont: { family: 'poppins', weight: '500', size: 14 },\n                    titleColor: theme.colors.text,\n                    backgroundColor: theme.colors.white2,\n                    boxPadding: 5,\n                    bodyColor: theme.colors.text,\n                    borderColor: theme.colors.inputBorder,\n                    bodySpacing: 20,\n                    borderWidth: 1,\n                    caretSize: 8,\n                    cornerRadius: 10,\n                    padding: 15,\n                  },\n                },\n                cutout: 85,\n              }}\n            />\n          </Flex>\n        </Flex>\n        <Flex sx={{ flexDirection: 'column', maxWidth: '300px', width: '100%', margin: '10px 0px' }}>\n          {cleanedAssets &&\n            cleanedAssets.map((asset, i) => {\n              return (\n                <Flex\n                  key={asset.symbol}\n                  sx={{ alignItems: 'center', justifyContent: 'space-between', margin: '5px 0px' }}\n                >\n                  <Flex sx={{ alignItems: 'center' }}>\n                    <Flex sx={{ background: COLORS[i], width: '8px', height: '8px', borderRadius: '4px' }} />\n                    <Text ml=\"10px\" weight={500}>\n                      {asset.symbol}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    sx={{\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      maxWidth: '150px',\n                      width: '100%',\n                    }}\n                  >\n                    <Text weight={700} mr=\"10px\">\n                      $<CountUp end={asset.value} decimals={0} duration={1} separator=\",\" />\n                    </Text>\n                    <Text weight={500} sx={{ opacity: 0.5 }}>\n                      <CountUp end={(asset.value / total) * 100} decimals={2} duration={1} separator=\",\" />%\n                    </Text>\n                  </Flex>\n                </Flex>\n              )\n            })}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(AssetOverview)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    width: '100%',\n    background: 'white2',\n    minHeight: '662px',\n    height: 'auto',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    alignItems: 'space-around',\n    justifyContent: 'center',\n    padding: '20px 0px',\n  },\n}\n","import { Flex, Tab, Tabs, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React, { useState } from 'react'\nimport AssetBreakdown from './AssetBreakdown'\nimport AssetOverview from './AssetOverview'\nimport { styles } from './styles'\n\nconst TreasuryBreakdown: React.FC = () => {\n  const { t } = useTranslation()\n  const [activeTab, setActiveTab] = useState(0)\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', mb: '5px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Funds Breakdown')}\n        </Text>\n      </Flex>\n      <Flex sx={{ alignItems: 'center', justifyContent: 'center', margin: '10px 0px 5px 0px' }}>\n        <Tabs activeTab={activeTab} size=\"sm\" variant=\"centered\">\n          <Tab index={0} size=\"sm\" label={t('All')} activeTab={activeTab} variant=\"centered\" onClick={setActiveTab} />\n          <Tab\n            index={1}\n            size=\"sm\"\n            label={t('Op. Funds')}\n            variant=\"fullWidth\"\n            activeTab={activeTab}\n            onClick={setActiveTab}\n          />\n          <Tab index={2} size=\"sm\" label={t('POL')} variant=\"centered\" activeTab={activeTab} onClick={setActiveTab} />\n        </Tabs>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-around', flexWrap: 'wrap' }}>\n        <AssetOverview activeView={activeTab} />\n        <AssetBreakdown activeView={activeTab} />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(TreasuryBreakdown)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  cardContainer: {\n    width: '100%',\n    background: 'white2',\n    minHeight: '260px',\n    height: 'auto',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n    alignItems: 'space-between',\n    justifyContent: 'space-between',\n    padding: '20px 10px',\n  },\n  legendContainer: {\n    position: 'absolute',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    top: '40px',\n    left: '50px',\n    fontSize: '14px',\n    '@media screen and (max-width: 800px)': {\n      left: '30px',\n      top: '60px',\n      fontSize: '12px',\n    },\n    '@media screen and (max-width: 650px)': {\n      left: '10px',\n      top: '80px',\n    },\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, Text, TooltipBubble } from '@ape.swap/uikit'\nimport React, { useMemo } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport { styles } from './styles'\nimport useTheme from 'hooks/useTheme'\nimport CountUp from 'react-countup'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFetchTreasuryHistory } from 'state/protocolDashboard/hooks'\nimport { TreasuryHistoryInterface } from 'state/protocolDashboard/types'\n\nconst setData = (treasuryHistory: TreasuryHistoryInterface[]) => {\n  return {\n    labels: treasuryHistory?.map((data) => data.timestamp),\n    datasets: [\n      {\n        label: 'partnerPolValue',\n        data: treasuryHistory?.map((data) => data.polValue),\n        backgroundColor: 'green',\n        borderColor: 'rgba(255,255,255, .5)',\n        fill: true,\n        lineTension: 0.3,\n      },\n      {\n        label: 'apePolValue',\n        data: treasuryHistory?.map((data) => data.polValue),\n        backgroundColor: 'rgba(77, 64, 64, 1)',\n        borderColor: 'rgba(255,255,255, .5)',\n        fill: true,\n        lineTension: 0.3,\n      },\n      {\n        label: 'treasury',\n        data: treasuryHistory?.map((data) => data.oppFundValue),\n        backgroundColor: 'rgba(243, 186, 47, .6)',\n        borderColor: 'rgba(255,255,255, .5)',\n        fill: true,\n        lineTension: 0.3,\n      },\n    ],\n  }\n}\n\nconst TreasuryHistory: React.FC = () => {\n  const treasuryHistory = useFetchTreasuryHistory()\n  const { theme } = useTheme()\n  const data = useMemo(() => setData(treasuryHistory), [treasuryHistory])\n  const totalApePol = treasuryHistory?.[treasuryHistory?.length - 1]?.apePolValue\n  const totalPartnerPol = treasuryHistory?.[treasuryHistory?.length - 1]?.partnerPolValue\n  const totalTreasury = treasuryHistory?.[treasuryHistory?.length - 1]?.oppFundValue\n\n  const { t } = useTranslation()\n\n  return (\n    <Flex sx={styles.cardContainer}>\n      <Flex sx={{ flexDirection: 'column', textAlign: 'center', marginBottom: '20px' }}>\n        <Text size=\"22px\" weight={700} mb=\"10px\">\n          {t('Total Funds')}\n        </Text>\n        {totalApePol && totalTreasury && (\n          <Text size=\"16px\" weight={500}>\n            $<CountUp end={totalApePol + totalTreasury + totalPartnerPol} decimals={0} duration={1} separator=\",\" />\n          </Text>\n        )}\n      </Flex>\n\n      {totalApePol && totalTreasury && totalPartnerPol && (\n        <>\n          <Flex sx={styles.legendContainer}>\n            <Flex sx={{ alignItems: 'center', flexWrap: 'no-wrap', margin: '4px 0px' }}>\n              <Flex\n                sx={{\n                  background: 'rgba(243, 186, 47, .5)',\n                  width: '25px',\n                  height: '10px',\n                  borderRadius: '10px',\n                  mr: '5px',\n                }}\n              />\n              <Flex sx={{ alignItems: 'center', justifyContnet: 'center' }}>\n                <Text weight={700} mr=\"5px\" sx={{ lineHeight: '10px' }}>\n                  {t('Operational Funds')}\n                </Text>\n                <Text sx={{ lineHeight: '10px', mr: '5px' }}>\n                  $<CountUp end={totalTreasury} decimals={0} duration={1} separator=\",\" />\n                </Text>\n                <TooltipBubble\n                  body={<Text>{t('Capital that ApeSwap has on hand to use for DAO expenses.')}</Text>}\n                  width=\"200px\"\n                  transformTip=\"translate(25px, 0px)\"\n                >\n                  <Svg icon=\"info\" width=\"13px\" />\n                </TooltipBubble>\n              </Flex>\n            </Flex>\n            <Flex sx={{ alignItems: 'center', flexWrap: 'no-wrap', margin: '4px 0px' }}>\n              <Flex\n                sx={{\n                  background: 'rgba(77, 64, 64, 1)',\n                  width: '25px',\n                  height: '10px',\n                  borderRadius: '10px',\n                  mr: '5px',\n                }}\n              />\n              <Flex sx={{ alignItems: 'center', justifyContnet: 'center' }}>\n                <Text weight={700} mr=\"5px\" sx={{ lineHeight: '10px' }}>\n                  Apeswap POL\n                </Text>\n                <Text sx={{ lineHeight: '10px', mr: '5px' }}>\n                  $<CountUp end={totalApePol} decimals={0} duration={1} separator=\",\" />\n                </Text>\n                <TooltipBubble\n                  body={<Text>{t('Total value of the liquidity that ApeSwap owns in the form of LP tokens.')}</Text>}\n                  width=\"180px\"\n                  transformTip=\"translate(25px, 0px)\"\n                >\n                  <Svg icon=\"info\" width=\"13px\" />\n                </TooltipBubble>\n              </Flex>\n            </Flex>\n            <Flex sx={{ alignItems: 'center', flexWrap: 'no-wrap', margin: '5px 0px' }}>\n              <Flex\n                sx={{\n                  background: 'green',\n                  width: '25px',\n                  height: '10px',\n                  borderRadius: '10px',\n                  mr: '5px',\n                }}\n              />\n              <Flex sx={{ alignItems: 'center', justifyContnet: 'center' }}>\n                <Text weight={700} mr=\"5px\" sx={{ lineHeight: '10px' }}>\n                  Partner POL\n                </Text>\n                <Text sx={{ lineHeight: '10px', mr: '4px' }}>\n                  $<CountUp end={totalPartnerPol} decimals={0} duration={1} separator=\",\" />\n                </Text>\n                <TooltipBubble\n                  body={\n                    <Text>{t('Total value of the liquidity that ApeSwap Partners own in the form of LP tokens.')}</Text>\n                  }\n                  width=\"180px\"\n                  transformTip=\"translate(25px, 0px)\"\n                >\n                  <Svg icon=\"info\" width=\"13px\" />\n                </TooltipBubble>\n              </Flex>\n            </Flex>\n          </Flex>\n        </>\n      )}\n\n      <Flex sx={{ maxWidth: '100%', width: '99%', height: '100%' }}>\n        <Line\n          data={data}\n          options={{\n            color: theme.colors.text,\n            elements: {\n              point: {\n                radius: 0,\n              },\n            },\n            scales: {\n              y: {\n                stacked: true,\n                grid: { display: false, drawBorder: false },\n                ticks: { display: false },\n              },\n              x: {\n                grid: { display: false, drawBorder: false },\n                ticks: { display: false },\n              },\n            },\n            plugins: {\n              legend: {\n                display: false,\n                position: 'bottom',\n                fullSize: true,\n                labels: {\n                  color: theme.colors.text,\n                  font: { family: 'poppins', weight: '600' },\n                },\n              },\n              tooltip: {\n                enabled: false,\n              },\n            },\n            responsive: true,\n            maintainAspectRatio: false,\n          }}\n        />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(TreasuryHistory)\n","import { Flex } from '@ape.swap/uikit'\nimport React from 'react'\nimport TreasuryBreakdown from './components/TreasuryBreakdown'\nimport TreasuryHistory from './components/TreasuryHistory'\n\nconst Treasury: React.FC = () => {\n  return (\n    <Flex\n      sx={{\n        position: 'relative',\n        maxWidth: '1200px',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n      }}\n    >\n      <TreasuryHistory />\n      <TreasuryBreakdown />\n    </Flex>\n  )\n}\n\nexport default React.memo(Treasury)\n","/** @jsxImportSource theme-ui */\nimport 'chartjs-adapter-moment'\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  CategoryScale,\n  ArcElement,\n  TimeScale,\n  Filler,\n  Legend,\n  Tooltip,\n} from 'chart.js'\nimport { Flex } from '@ape.swap/uikit'\nimport Banner from 'components/Banner'\nimport { TabNav } from 'components/TabNav'\nimport React, { useState } from 'react'\nimport Overview from './Overview'\nimport Treasury from './Treasury'\n\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, TimeScale, ArcElement, Tooltip, Legend, Filler)\n\nconst ProtocolDashboard = () => {\n  const [activeTab, setActiveTab] = useState('Overview')\n\n  return (\n    <Flex\n      sx={{\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        mb: '100px',\n        marginTop: '10px',\n      }}\n    >\n      <Flex sx={{ flexDirection: 'column', padding: '0px 10px', width: 'fit-contnet', maxWidth: '1150px' }}>\n        <Flex sx={{ mt: '20px' }}>\n          <Banner\n            banner=\"protocol-dashboard\"\n            title=\"Protocol Dashboard\"\n            titleColor=\"primaryBright\"\n            link=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/protocol-dashboard\"\n            maxWidth={1130}\n          />\n        </Flex>\n        <Flex sx={{ margin: '30px 0px' }}>\n          <TabNav\n            tabOptions={['Overview', 'Treasury', 'Products']}\n            activeTab={activeTab}\n            onChangeActiveTab={setActiveTab}\n          />\n        </Flex>\n        {activeTab === 'Overview' && <Overview />}\n        {activeTab === 'Treasury' && <Treasury />}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(ProtocolDashboard)\n","import { useEffect, useState } from 'react'\n\nconst useProgressiveImage = (src: string) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null)\n  useEffect(() => {\n    const img = new Image()\n    img.src = src\n    img.onload = () => setSourceLoaded(src)\n  }, [src])\n\n  return sourceLoaded\n}\n\nexport default useProgressiveImage\n","import { ArrowDropDownIcon, Flex, Skeleton } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Style for the banner flex\n  flexPrimary: {\n    position: 'relative',\n    width: '100%',\n  },\n  // Style for title container\n  titleContainer: {\n    position: 'absolute',\n    flexDirection: 'column',\n    top: '20%',\n    left: '5%',\n    width: '45%',\n  },\n  // Style for the banner text\n  titleText: {\n    fontWeight: 700,\n    lineHeight: '4.5vw',\n    fontSize: '5vw',\n    '@media screen and (min-width: 1130px)': {\n      lineHeight: '50px',\n      fontSize: '55px',\n    },\n  },\n  // Style for learn more text\n  learnText: {\n    mt: '5%',\n    fontSize: 'calc(6px + 1.5vw)',\n    textTransform: 'capitalize',\n    padding: 0,\n    fontWeight: 600,\n    '@media screen and (min-width: 1130px)': {\n      fontSize: '22.5px',\n    },\n  },\n}\n\nexport const FlexImage = styled(Flex)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const FlexSkeleton = styled(Skeleton)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const LearnMoreArrow = styled(ArrowDropDownIcon)`\n  transform: rotate(270deg);\n  margin-left: 10px;\n  width: calc(4px + 0.9vw);\n  @media screen and (min-width: 1130px) {\n    width: 14px;\n  }\n`\n","/** @jsxImportSource theme-ui */\nimport { useHistory } from 'react-router-dom'\nimport { Flex, Button } from '@ape.swap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { Text } from 'theme-ui'\nimport useProgressiveImage from 'hooks/useProgressiveImage'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles, FlexImage, LearnMoreArrow, FlexSkeleton } from './styles'\nimport { BannerTypes, ColorProps } from './types'\n\nconst Banner: React.FC<{\n  banner: BannerTypes\n  link: string\n  title?: string\n  children?: React.FC\n  listViewBreak?: boolean\n  margin?: string\n  titleColor?: ColorProps\n  maxWidth?: number\n}> = ({ banner, children, title, listViewBreak, margin, titleColor, link, maxWidth = 1200 }) => {\n  const history = useHistory()\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n  const loaded = useProgressiveImage(`../images/new-banners/${banner}-${isDark ? 'night' : 'day'}.svg`)\n\n  const openBannerLink = (bannerLink: string) =>\n    bannerLink.includes('modal') ? history.push({ search: bannerLink }) : window.open(bannerLink, '_blank')\n\n  // Media breaks are used until tablet mode on list view is designed\n  return (\n    <Flex sx={{ ...styles.flexPrimary, margin }}>\n      {loaded ? (\n        <FlexImage sx={{ backgroundImage: `url(${loaded})` }} maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      ) : (\n        <FlexSkeleton maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      )}\n      <Flex sx={{ ...styles.titleContainer }}>\n        <Text\n          sx={{\n            ...styles.titleText,\n            color: titleColor || 'text',\n            '@media screen and (min-width: 500px) and (max-width: 851px)': {\n              fontSize: listViewBreak ? '25px' : '5vw',\n              lineHeight: listViewBreak ? '25px' : '5vw',\n            },\n          }}\n        >\n          {title.toUpperCase()}\n        </Text>\n        <Button\n          variant=\"text\"\n          onClick={() => openBannerLink(link)}\n          sx={{\n            ...styles.learnText,\n            color: titleColor || 'text',\n\n            '&&&:hover': {\n              textDecoration: 'none',\n              color: titleColor || 'text',\n            },\n          }}\n        >\n          {t('Learn More')} <LearnMoreArrow color={titleColor || 'text'} />\n        </Button>\n      </Flex>\n      {children}\n    </Flex>\n  )\n}\n\nexport default React.memo(Banner)\n"],"sourceRoot":""}
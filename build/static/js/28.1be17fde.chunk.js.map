{"version":3,"sources":["state/lpPrices/hooks.ts","state/vaults/hooks.ts","views/Vaults/components/styles.ts","views/Vaults/components/Actions/styles.ts","views/Vaults/hooks/useApproveVault.tsx","views/Vaults/components/Actions/ApprovalAction.tsx","views/Vaults/components/Modals/DepositModal.tsx","views/Vaults/components/Modals/WithdrawModal.tsx","views/Vaults/components/Actions/StakeActions.tsx","views/Vaults/hooks/useVaultStake.tsx","views/Vaults/hooks/useVaultUnstake.tsx","views/Vaults/components/Actions/index.tsx","views/Vaults/hooks/useHarvestMaximizer.tsx","views/Vaults/components/Actions/HarvestAction.tsx","views/Vaults/components/InfoContent.tsx","views/Vaults/components/DisplayVaults.tsx","views/Vaults/helpers.ts","views/Vaults/components/Menu/SearchInput.tsx","views/Vaults/components/Menu/styles.ts","views/Vaults/components/Menu/constants.ts","views/Vaults/hooks/useHarvestAllMaximizer.tsx","views/Vaults/components/Actions/HarvestAll.tsx","views/Vaults/components/Menu/index.tsx","views/Vaults/Vaults.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/styles.ts","components/ListViewMenu/MenuTabButtons/index.tsx","components/ListViewMenu/styles.ts","../node_modules/lodash/partition.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["useFetchLpTokenPrices","dispatch","useAppDispatch","slowRefresh","useRefresh","chainId","useActiveWeb3React","farms","useSelector","state","data","useEffect","fetchLpTokenPrices","useVaults","vaults","loadVaultData","userDataLoaded","StyledButton","styled","Button","Container","ArrowDropUpIcon","Flex","ActionContainer","theme","mediaQueries","md","StyledTag","Tag","StyledButtonSquare","minWidth","height","StyledUnlockButton","UnlockButton","SmallButtonSquare","CenterContainer","useApproveVault","stakeTokenAddress","version","vaultApeAddressV1","useVaultApeAddressV1","vaultApeAddressV2","useVaultApeAddressV2","tokenContract","useERC20","onApprove","useCallback","a","approve","ethers","constants","MaxUint256","then","trx","wait","tx","ApprovalAction","stakingTokenContractAddress","vaultVersion","isLoading","account","useState","pendingTrx","setPendingTrx","toastSuccess","useToast","width","sx","textAlign","className","disabled","onClick","resp","trxHash","transactionHash","text","url","getEtherscanLink","catch","e","console","error","fetchVaultUserDataAsync","load","React","memo","DepositModal","max","onConfirm","onDismiss","tokenName","addLiquidityUrl","val","setVal","pendingTx","setPendingTx","t","useTranslation","fullBalance","useMemo","getFullDisplayBalance","BigNumber","handleChange","currentTarget","value","handleSelectMax","title","ModalInput","onSelectMax","onChange","symbol","inputTitle","fullWidth","parseFloat","endIcon","spin","color","style","borderRadius","WithdrawModal","withdrawFee","padding","StakeAction","stakingTokenBalance","stakedTokenSymbol","stakedBalance","stakeTokenValueUsd","pid","rawStakedBalance","getBalanceNumber","userStakedBalanceUsd","toFixed","pendingDepositTrx","setPendingDepositTrx","pendingWithdrawTrx","setPendingWithdrawTrx","isMobile","useIsMobile","firstStake","gt","vaultApeContractV1","useVaultApeV1","vaultApeContractV2","useVaultApeV2","handleStake","amount","stakeVaultV1","stakeVaultV2","track","event","chain","cat","info","onStake","useVaultStake","handleUnstake","vaultUnstakeV1","vaultUnstakeV2","onUnstake","useVaultUnstake","useModal","onPresentDeposit","onPresentWithdraw","ListViewContent","value2","value2Secondary","lineHeight","ml","mr","size","fontWeight","renderStakingButtons","Actions","allowance","actionToRender","useHarvestMaximizer","onHarvest","harvestMaximizer","txHash","HarvestAction","earnTokenSymbol","userEarnings","handleHarvest","InfoContent","vault","explorerLink","BLOCK_EXPLORER","contractLink","stratAddress","alignItems","justifyContent","fontSize","bold","keeperFee","mt","href","DisplayVaults","openId","isActive","useLocation","pathname","includes","closeModal","handleClose","onPresentAddLiquidityWidgetModal","vaultsListView","map","totalDollarAmountStaked","Math","round","totalStaked","stakeTokenPrice","userAllowance","userData","pendingRewards","userEarningsUsd","rewardTokenPrice","userTokenBalance","tokenBalance","userTokenBalanceUsd","userStakedBalance","token1","token2","stakeLp","earnLp","tokenDisplay","lpToken","split","token3","splitToken1","splitToken2","token4","vaultTokenDisplay","stakeToken","rewardToken","tokens","alignServiceTokens","tag","marginRight","variant","type","id","titleContainerWidth","infoContent","infoContentPosition","ttWidth","toolTipIconWidth","toolTipStyle","marginTop","expandedContentJustified","open","cardContent","apy","daily","toolTip","toolTipPlacement","toolTipTransform","yearly","toLocaleString","undefined","expandedContent","stakeTokenSymbol","token","address","quoteToken","selectCurrency","field","Field","INPUT","currencyId","OUTPUT","target","rel","toString","ListView","listViews","StyledInput","Input","colors","white3","div","SearchInput","toggled","setToggled","inputEl","useRef","ref","onBlur","icon","ControlContainer","white2","sm","xl","LabelWrapper","StyledText","Text","ClaimAllWrapper","yellow","TOKEN_OPTIONS","label","OPTIONS","useHarvestAllMaximizer","pids","onHarvestAll","harvestPromises","Promise","all","HarvestAll","handleHarvestAll","length","VaultMenu","onHandleQueryChange","onSetSortOption","onSetVaultType","query","activeVaultType","activeOption","onSetStake","stakedOnly","vaultPids","active","option","MenuTabButtons","checked","Vaults","useFetchTokenPrices","setInitialVaultDataAsync","useSetVaults","includeArchive","tokenPrices","useTokenPrices","farmLpAprs","useFarmLpAprs","fetchVaultsPublicDataAsync","usePollVaultsData","useFetchFarmLpAprs","setStakedOnly","vaultType","setVaultType","observerIsSet","setObserverIsSet","searchQuery","setSearchQuery","sortOption","setSortOption","numberOfVaultsVisible","setNumberOfVaultsVisible","search","window","location","initVaults","params","URLSearchParams","urlSearchedVault","parseInt","get","allVaults","setAllVaults","loadMoreRef","IntersectionObserver","entries","isIntersecting","vaultsCurrentlyVisible","rootMargin","threshold","observe","current","partition","inactive","inactiveVaults","activeVaults","stakedOnlyVaults","filter","isGreaterThan","vaultsHasRewards","stakedInactiveVaults","flexDirection","mb","position","top","ListViewLayout","Banner","banner","link","titleColor","maxWidth","chosenVaults","find","toUpperCase","lowercaseQuery","toLowerCase","vaultsToSort","orderBy","platform","sortVaults","slice","renderVaults","StyledTokenInput","xs","primaryBright","displayDecimals","isBalanceZero","displayBalance","isWarning","pl","placeholder","FarmButton","NextArrow","Wrapper","lg","MenuTabButton","useRouteMatch","isExact","history","useHistory","labels","push","MobilePadding","ToggleWrapper","isDark","StyledCheckbox","Checkbox","StyledImage","img","HarvestAllWrapper","Heading","require","createAggregator","result","key","module","exports","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","func","accumulator","array","index","baseEach"],"mappings":"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","file":"static/js/28.1be17fde.chunk.js","sourcesContent":["import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State } from 'state/types'\nimport { fetchLpTokenPrices } from '.'\n\nexport const useFetchLpTokenPrices = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { chainId } = useActiveWeb3React()\n  const farms = useSelector((state: State) => state.farms.data)\n  useEffect(() => {\n    dispatch(fetchLpTokenPrices(chainId, farms))\n  }, [dispatch, farms, slowRefresh, chainId])\n}\n","import BigNumber from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useFarmLpAprs } from 'state/hooks'\nimport { useFetchLpTokenPrices } from 'state/lpPrices/hooks'\nimport { useFetchTokenPrices, useTokenPrices } from 'state/tokenPrices/hooks'\nimport { VaultsState, State, Vault } from 'state/types'\nimport { fetchVaultsPublicDataAsync, fetchVaultUserDataAsync, setInitialVaultDataAsync } from '.'\n\n// Vault data\nexport const usePollVaultsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account, chainId } = useActiveWeb3React()\n  const { tokenPrices } = useTokenPrices()\n  const farmLpAprs = useFarmLpAprs()\n  useEffect(() => {\n    dispatch(fetchVaultsPublicDataAsync(chainId, tokenPrices, farmLpAprs))\n    if (account) {\n      dispatch(fetchVaultUserDataAsync(account, chainId))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account, chainId, tokenPrices, farmLpAprs])\n}\n\n// Vaults\n\nexport const useVaults = () => {\n  const { loadVaultData, userDataLoaded, data }: VaultsState = useSelector((state: State) => state.vaults)\n  return { vaults: data, loadVaultData, userDataLoaded }\n}\n\nexport const useVaultFromPid = (pid): Vault => {\n  const vault = useSelector((state: State) => state.vaults.data.find((v) => v.pid === pid))\n  return vault\n}\n\nexport const useVaultUser = (pid) => {\n  const vault = useVaultFromPid(pid)\n\n  return {\n    allowance: vault.userData ? new BigNumber(vault.userData.allowance) : new BigNumber(0),\n    tokenBalance: vault.userData ? new BigNumber(vault.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: vault.userData ? new BigNumber(vault.userData.stakedBalance) : new BigNumber(0),\n    stakedWantBalance: vault.userData ? new BigNumber(vault.userData.stakedWantBalance) : new BigNumber(0),\n  }\n}\n\nexport const useSetVaults = () => {\n  useFetchTokenPrices()\n  useFetchLpTokenPrices()\n  const dispatch = useAppDispatch()\n  const { vaults } = useVaults()\n  const { chainId } = useActiveWeb3React()\n  if (vaults.length === 0) {\n    dispatch(setInitialVaultDataAsync(chainId))\n  }\n}\n","import { ArrowDropUpIcon } from '@apeswapfinance/uikit'\nimport { Button, Flex, Tag } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\n\nexport const StyledButton = styled(Button)`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: 129px;\n  height: 44px;\n`\n\nexport const NextArrow = styled(ArrowDropUpIcon)`\n  transform: rotate(90deg);\n`\n\nexport const Container = styled(Flex)`\n  position: relative;\n`\n\nexport const ActionContainer = styled(Flex)`\n  width: 100%;\n  justify-content: space-between;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: fit-content;\n  }\n`\n\nexport const StyledTag = styled(Tag)`\n  font-size: 10px;\n  padding: 0px 6px !important;\n  font-weight: 700;\n  border: none;\n  border-radius: 10px;\n  height: auto;\n  width: max-content;\n`\n","import { Button, Flex } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport UnlockButton from 'components/UnlockButton'\n\nexport const StyledButtonSquare = styled(Button)<{ height?: number; minWidth?: number }>`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: ${({ minWidth }) => minWidth || 227}px;\n  height: ${({ height }) => height || 44}px;\n`\n\nexport const StyledUnlockButton = styled(UnlockButton)`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: 227px;\n  height: 44px;\n`\n\nexport const SmallButtonSquare = styled(Button)`\n  max-width: 44px;\n  height: 44px;\n`\n\nexport const ActionContainer = styled(Flex)`\n  width: 100%;\n  justify-content: space-between;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: auto;\n    min-width: 225px;\n  }\n`\n\nexport const CenterContainer = styled(Flex)`\n  width: 100%;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: auto;\n    justify-content: auto;\n  }\n`\n","import { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { useERC20 } from 'hooks/useContract'\nimport { useVaultApeAddressV1, useVaultApeAddressV2 } from 'hooks/useAddress'\n\n// Approve a vault\nconst useApproveVault = (stakeTokenAddress: string, version: 'V1' | 'V2') => {\n  const vaultApeAddressV1 = useVaultApeAddressV1()\n  const vaultApeAddressV2 = useVaultApeAddressV2()\n  const tokenContract = useERC20(stakeTokenAddress)\n  const handleApprove = useCallback(async () => {\n    const tx = await tokenContract\n      .approve(version === 'V1' ? vaultApeAddressV1 : vaultApeAddressV2, ethers.constants.MaxUint256)\n      .then((trx) => trx.wait())\n    return tx\n  }, [vaultApeAddressV1, version, vaultApeAddressV2, tokenContract])\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveVault\n","import React, { useState } from 'react'\nimport { Skeleton } from '@apeswapfinance/uikit'\nimport useApproveVault from 'views/Vaults/hooks/useApproveVault'\nimport { useAppDispatch } from 'state'\nimport { fetchVaultUserDataAsync } from 'state/vaults'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useToast } from 'state/hooks'\nimport { StyledButton } from '../styles'\n\ninterface ApprovalActionProps {\n  stakingTokenContractAddress: string\n  vaultVersion: 'V1' | 'V2'\n  pid: number\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({\n  stakingTokenContractAddress,\n  vaultVersion,\n  isLoading = false,\n}) => {\n  const { chainId, account } = useActiveWeb3React()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveVault(stakingTokenContractAddress, vaultVersion)\n  const { toastSuccess } = useToast()\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <StyledButton\n          sx={{ minWidth: '227px', width: '227px', textAlign: 'center' }}\n          className=\"noClick\"\n          disabled={pendingTrx}\n          onClick={async () => {\n            setPendingTrx(true)\n            await onApprove()\n              .then((resp) => {\n                const trxHash = resp.transactionHash\n                toastSuccess('Approve Successful', {\n                  text: 'View Transaction',\n                  url: getEtherscanLink(trxHash, 'transaction', chainId),\n                })\n              })\n              .catch((e) => {\n                console.error(e)\n                setPendingTrx(false)\n              })\n            dispatch(fetchVaultUserDataAsync(account, chainId))\n            setPendingTrx(false)\n          }}\n          load={pendingTrx}\n        >\n          ENABLE\n        </StyledButton>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(ApprovalAction)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon, ModalFooter } from '@apeswapfinance/uikit'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DepositModalProps {\n  max: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(new BigNumber(max))\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={tokenName === 'BANANA' ? t('Stake BANANA') : t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <ModalFooter onDismiss={onDismiss}>\n        <Button\n          fullWidth\n          disabled={pendingTx || fullBalance === '0' || val === '0' || parseFloat(fullBalance) < parseFloat(val)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              onDismiss()\n            } catch (e) {\n              console.error('Transaction Failed')\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default React.memo(DepositModal)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon, ModalFooter } from '@apeswapfinance/uikit'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, Text } from '@ape.swap/uikit'\n\ninterface WithdrawModalProps {\n  max: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  withdrawFee?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, withdrawFee, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(new BigNumber(max))\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={tokenName === 'BANANA' ? t('Unstake BANANA') : t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalFooter onDismiss={onDismiss}>\n        <Flex sx={{ padding: '10px' }}>\n          <Text>{t(`Withdrawing will have a %withdrawFee%% fee`, { withdrawFee })}</Text>\n        </Flex>\n        <Button\n          disabled={pendingTx || parseFloat(fullBalance) < parseFloat(val)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              onDismiss()\n            } catch (e) {\n              console.error('Transaction Failed')\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          fullWidth\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default React.memo(WithdrawModal)\n","import React, { useState } from 'react'\nimport { Flex, AddIcon, MinusIcon, useModal } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchVaultUserDataAsync } from 'state/vaults'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useToast } from 'state/hooks'\nimport { useAppDispatch } from 'state'\nimport { useVaultStake } from 'views/Vaults/hooks/useVaultStake'\nimport { useVaultUnstake } from 'views/Vaults/hooks/useVaultUnstake'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ListViewContent from 'components/ListViewContent'\nimport DepositModal from '../Modals/DepositModal'\nimport WithdrawModal from '../Modals/WithdrawModal'\nimport { ActionContainer, CenterContainer, SmallButtonSquare, StyledButtonSquare } from './styles'\n\ninterface StakeActionsProps {\n  stakingTokenBalance: string\n  stakedTokenSymbol: string\n  stakedBalance: string\n  stakeTokenValueUsd: number\n  withdrawFee: string\n  pid: number\n  vaultVersion: 'V1' | 'V2'\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  stakingTokenBalance,\n  stakedTokenSymbol,\n  stakedBalance,\n  stakeTokenValueUsd,\n  withdrawFee,\n  pid,\n  vaultVersion,\n}) => {\n  const rawStakedBalance = getBalanceNumber(new BigNumber(stakedBalance))\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const userStakedBalanceUsd = `$${(\n    getBalanceNumber(new BigNumber(stakedBalance) || new BigNumber(0)) * stakeTokenValueUsd\n  ).toFixed(2)}`\n  const [pendingDepositTrx, setPendingDepositTrx] = useState(false)\n  const [pendingWithdrawTrx, setPendingWithdrawTrx] = useState(false)\n\n  const { toastSuccess } = useToast()\n  const isMobile = useIsMobile()\n  const firstStake = !new BigNumber(stakedBalance)?.gt(0)\n\n  const { onStake } = useVaultStake(pid, vaultVersion)\n  const { onUnstake } = useVaultUnstake(pid, vaultVersion)\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingTokenBalance}\n      tokenName={stakedTokenSymbol}\n      onConfirm={async (val) => {\n        setPendingDepositTrx(true)\n        await onStake(val)\n          .then((resp) => {\n            const trxHash = resp.transactionHash\n            toastSuccess('Deposit Successful', {\n              text: 'View Transaction',\n              url: getEtherscanLink(trxHash, 'transaction', chainId),\n            })\n          })\n          .catch((e) => {\n            console.error(e)\n            setPendingDepositTrx(false)\n          })\n        dispatch(fetchVaultUserDataAsync(account, chainId))\n        setPendingDepositTrx(false)\n      }}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      tokenName={stakedTokenSymbol}\n      withdrawFee={withdrawFee}\n      onConfirm={async (val) => {\n        setPendingWithdrawTrx(true)\n        await onUnstake(val)\n          .then((resp) => {\n            const trxHash = resp.transactionHash\n            toastSuccess('Withdraw Successful', {\n              text: 'View Transaction',\n              url: getEtherscanLink(trxHash, 'transaction', chainId),\n            })\n          })\n          .catch((e) => {\n            console.error(e)\n            setPendingWithdrawTrx(false)\n          })\n        dispatch(fetchVaultUserDataAsync(account, chainId))\n        setPendingWithdrawTrx(false)\n      }}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    if (firstStake) {\n      return (\n        <CenterContainer>\n          <StyledButtonSquare onClick={onPresentDeposit} load={pendingDepositTrx} disabled={pendingDepositTrx}>\n            DEPOSIT\n          </StyledButtonSquare>\n        </CenterContainer>\n      )\n    }\n    return (\n      <ActionContainer style={{ minWidth: 'auto' }}>\n        {isMobile && (\n          <ListViewContent\n            title={`Staked ${stakedTokenSymbol}`}\n            value={rawStakedBalance.toFixed(2)}\n            value2={userStakedBalanceUsd}\n            value2Secondary\n            width={150}\n            height={50}\n            lineHeight={15}\n            ml={10}\n          />\n        )}\n        <Flex>\n          <SmallButtonSquare\n            onClick={onPresentWithdraw}\n            load={pendingWithdrawTrx}\n            disabled={pendingWithdrawTrx}\n            mr=\"6px\"\n            size=\"sm\"\n          >\n            <MinusIcon color=\"white\" width=\"20px\" height=\"20px\" fontWeight={700} />\n          </SmallButtonSquare>\n          <SmallButtonSquare\n            onClick={onPresentDeposit}\n            load={pendingDepositTrx}\n            disabled={pendingDepositTrx || !new BigNumber(stakingTokenBalance)?.gt(0)}\n            size=\"sm\"\n          >\n            <AddIcon color=\"white\" width=\"25px\" height=\"25px\" fontWeight={700} />\n          </SmallButtonSquare>\n        </Flex>\n        {!isMobile && (\n          <ListViewContent\n            title={`Staked ${stakedTokenSymbol}`}\n            value={`${rawStakedBalance.toFixed(2)}`}\n            value2={userStakedBalanceUsd}\n            value2Secondary\n            width={200}\n            height={50}\n            lineHeight={15}\n            ml={10}\n          />\n        )}\n      </ActionContainer>\n    )\n  }\n\n  return renderStakingButtons()\n}\n\nexport default React.memo(StakeAction)\n","import { useCallback } from 'react'\nimport { useVaultApeV1, useVaultApeV2 } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { stakeVaultV1, stakeVaultV2 } from 'utils/callHelpers'\nimport track from 'utils/track'\n\nexport const useVaultStake = (pid: number, version: 'V1' | 'V2') => {\n  const { chainId } = useActiveWeb3React()\n  const vaultApeContractV1 = useVaultApeV1()\n  const vaultApeContractV2 = useVaultApeV2()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      try {\n        const trxHash =\n          version === 'V1'\n            ? await stakeVaultV1(vaultApeContractV1, pid, amount)\n            : await stakeVaultV2(vaultApeContractV2, pid, amount)\n        track({\n          event: 'vault',\n          chain: chainId,\n          data: {\n            cat: 'stake',\n            amount,\n            pid,\n          },\n        })\n        console.info(trxHash)\n        return trxHash\n      } catch (e) {\n        console.error(e)\n      }\n      return null\n    },\n    [vaultApeContractV1, vaultApeContractV2, version, pid, chainId],\n  )\n\n  return { onStake: handleStake }\n}\n","import { useCallback } from 'react'\nimport { useVaultApeV1, useVaultApeV2 } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { vaultUnstakeV1, vaultUnstakeV2, vaultUnstakeAll } from 'utils/callHelpers'\nimport track from 'utils/track'\n\nexport const useVaultUnstake = (pid: number, version: 'V1' | 'V2') => {\n  const { chainId } = useActiveWeb3React()\n  const vaultApeContractV1 = useVaultApeV1()\n  const vaultApeContractV2 = useVaultApeV2()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      try {\n        const trxHash =\n          version === 'V1'\n            ? await vaultUnstakeV1(vaultApeContractV1, pid, amount)\n            : await vaultUnstakeV2(vaultApeContractV2, pid, amount)\n        track({\n          event: 'vault',\n          chain: chainId,\n          data: {\n            cat: 'unstake',\n            amount,\n            pid,\n          },\n        })\n        console.info(trxHash)\n        return trxHash\n      } catch (e) {\n        console.error(e)\n      }\n      return null\n    },\n    [vaultApeContractV1, pid, version, vaultApeContractV2, chainId],\n  )\n  return { onUnstake: handleUnstake }\n}\n\nexport const useVaultUnstakeAll = (pid: number) => {\n  const { chainId } = useActiveWeb3React()\n  const vaultApeContractV1 = useVaultApeV1()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const trxHash = await vaultUnstakeAll(vaultApeContractV1, pid)\n      track({\n        event: 'vault',\n        chain: chainId,\n        data: {\n          cat: 'unstakeAll',\n          amount,\n          pid,\n        },\n      })\n      console.info(trxHash)\n      return trxHash\n    },\n    [vaultApeContractV1, chainId, pid],\n  )\n\n  return { onUnstakeAll: handleUnstake }\n}\n","import React from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport BigNumber from 'bignumber.js'\nimport { CenterContainer, StyledUnlockButton } from './styles'\nimport ApprovalAction from './ApprovalAction'\nimport StakeAction from './StakeActions'\n\n// Changed props to type string because BigNumbers cause re-renders\n\ninterface CardActionProps {\n  allowance: string\n  stakingTokenBalance: string\n  stakedTokenSymbol: string\n  stakedBalance: string\n  stakeTokenValueUsd: number\n  stakeTokenAddress: string\n  withdrawFee: string\n  pid: number\n  vaultVersion: 'V1' | 'V2'\n}\n\nconst Actions: React.FC<CardActionProps> = ({\n  allowance,\n  stakingTokenBalance,\n  stakedTokenSymbol,\n  stakedBalance,\n  stakeTokenValueUsd,\n  stakeTokenAddress,\n  withdrawFee,\n  pid,\n  vaultVersion,\n}) => {\n  const { account } = useActiveWeb3React()\n  const actionToRender = () => {\n    if (!account) {\n      return (\n        <CenterContainer>\n          <StyledUnlockButton />\n        </CenterContainer>\n      )\n    }\n    if (!new BigNumber(allowance)?.gt(0)) {\n      return (\n        <CenterContainer>\n          <ApprovalAction stakingTokenContractAddress={stakeTokenAddress} vaultVersion={vaultVersion} pid={pid} />\n        </CenterContainer>\n      )\n    }\n    return (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        stakedTokenSymbol={stakedTokenSymbol}\n        stakingTokenBalance={stakingTokenBalance}\n        stakeTokenValueUsd={stakeTokenValueUsd}\n        withdrawFee={withdrawFee}\n        pid={pid}\n        vaultVersion={vaultVersion}\n      />\n    )\n  }\n  return actionToRender()\n}\n\nexport default React.memo(Actions)\n","import { useCallback } from 'react'\nimport { useVaultApeV2 } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { harvestMaximizer } from 'utils/callHelpers'\nimport track from 'utils/track'\n\nconst useHarvestMaximizer = (pid: number) => {\n  const { chainId } = useActiveWeb3React()\n  const vaultApeContractV2 = useVaultApeV2()\n\n  const handleHarvest = useCallback(async () => {\n    try {\n      const txHash = await harvestMaximizer(vaultApeContractV2, pid)\n      track({\n        event: 'vault',\n        chain: chainId,\n        data: {\n          cat: 'harvest',\n          pid,\n        },\n      })\n      console.info(txHash)\n      return txHash\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [vaultApeContractV2, pid, chainId])\n\n  return { onHarvest: handleHarvest }\n}\n\nexport default useHarvestMaximizer\n","import React, { useState } from 'react'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useToast } from 'state/hooks'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ListViewContent from 'components/ListViewContent'\nimport { fetchVaultUserDataAsync } from 'state/vaults'\nimport useHarvestMaximizer from 'views/Vaults/hooks/useHarvestMaximizer'\nimport { useAppDispatch } from 'state'\nimport { StyledButton } from '../styles'\nimport { ActionContainer } from './styles'\n\ninterface HarvestActionsProps {\n  pid: number\n  userEarnings: number\n  earnTokenSymbol: string\n  disabled: boolean\n}\n\nconst HarvestAction: React.FC<HarvestActionsProps> = ({ pid, earnTokenSymbol, disabled, userEarnings }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { onHarvest } = useHarvestMaximizer(pid)\n  const { toastSuccess } = useToast()\n  const isMobile = useIsMobile()\n\n  const handleHarvest = async () => {\n    setPendingTrx(true)\n    await onHarvest()\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        toastSuccess('Harvest Successful', {\n          text: 'View Transaction',\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        setPendingTrx(false)\n      })\n    dispatch(fetchVaultUserDataAsync(account, chainId))\n    setPendingTrx(false)\n  }\n\n  return (\n    <ActionContainer>\n      {isMobile && (\n        <ListViewContent\n          title={`Earned ${earnTokenSymbol}`}\n          value={userEarnings?.toFixed(4)}\n          width={100}\n          height={50}\n          ml={10}\n        />\n      )}\n      <StyledButton disabled={disabled || pendingTrx} onClick={handleHarvest} load={pendingTrx}>\n        HARVEST\n      </StyledButton>\n      {!isMobile && (\n        <ListViewContent\n          title={`Earned ${earnTokenSymbol}`}\n          value={userEarnings?.toFixed(4)}\n          width={150}\n          height={50}\n          ml={10}\n        />\n      )}\n    </ActionContainer>\n  )\n}\n\nexport default React.memo(HarvestAction)\n","import React from 'react'\nimport { Flex, Text, LinkExternal } from '@apeswapfinance/uikit'\nimport { Vault } from 'state/types'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\n\nconst InfoContent: React.FC<{ vault: Vault }> = ({ vault }) => {\n  const { chainId } = useActiveWeb3React()\n  const explorerLink = BLOCK_EXPLORER[chainId]\n  const contractLink = `${explorerLink}/address/${vault?.stratAddress[chainId]}`\n  const { t } = useTranslation()\n  return (\n    <>\n      <Flex alignItems=\"space-between\" justifyContent=\"space-between\" style={{ width: '100%' }}>\n        <Text style={{ fontSize: '13px' }}>{t('Withdraw Fee')}: </Text>\n        <Text style={{ fontSize: '13px' }} bold>\n          {vault?.withdrawFee}%\n        </Text>\n      </Flex>\n      <Flex alignItems=\"space-between\" justifyContent=\"space-between\" style={{ width: '100%' }}>\n        <Text style={{ fontSize: '13px' }}>{t('Performance Fee')}: </Text>\n        <Text style={{ fontSize: '13px' }} bold>\n          {vault?.keeperFee}%\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"15px\">\n        <LinkExternal href={contractLink} style={{ fontSize: '13px' }}>\n          {t('View Vault Contract')}\n        </LinkExternal>\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(InfoContent)\n","/** @jsxImportSource theme-ui */\nimport { Text, useModal } from '@ape.swap/uikit'\nimport BigNumber from 'bignumber.js'\nimport ListView from 'components/ListView'\nimport { ExtendedListViewProps } from 'components/ListView/types'\nimport ListViewContent from 'components/ListViewContent'\nimport { useLocation } from 'react-router-dom'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Box } from 'theme-ui'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useAppDispatch } from 'state'\nimport { Field, selectCurrency } from 'state/swap/actions'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vault } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { NextArrow } from 'views/Farms/components/styles'\nimport { LiquidityModal } from 'components/LiquidityWidget'\nimport { Container, StyledButton, ActionContainer, StyledTag } from './styles'\nimport { vaultTokenDisplay } from '../helpers'\nimport Actions from './Actions'\nimport HarvestAction from './Actions/HarvestAction'\nimport InfoContent from './InfoContent'\n\nconst DisplayVaults: React.FC<{ vaults: Vault[]; openId?: number }> = ({ vaults, openId }) => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const isMobile = useIsMobile()\n  const { pathname } = useLocation()\n  const isActive = !pathname.includes('history')\n  const { t } = useTranslation()\n\n  // TODO: clean up this code\n  // Hack to get the close modal function from the provider\n  // Need to export ModalContext from uikit to clean up the code\n  const [, closeModal] = useModal(<></>)\n  const [onPresentAddLiquidityWidgetModal] = useModal(\n    <LiquidityModal handleClose={closeModal} />,\n    true,\n    true,\n    'liquidityWidgetModal',\n  )\n\n  const showLiquidity = (token, quoteToken) => {\n    dispatch(\n      selectCurrency({\n        field: Field.INPUT,\n        currencyId: token,\n      }),\n    )\n    dispatch(\n      selectCurrency({\n        field: Field.OUTPUT,\n        currencyId: quoteToken,\n      }),\n    )\n    onPresentAddLiquidityWidgetModal()\n  }\n\n  const vaultsListView = vaults.map((vault) => {\n    const totalDollarAmountStaked = Math.round(parseFloat(vault?.totalStaked) * vault?.stakeTokenPrice * 100) / 100\n    const liquidityUrl = `https://apeswap.finance/swap/`\n    const userAllowance = vault?.userData?.allowance\n    const userEarnings = getBalanceNumber(new BigNumber(vault?.userData?.pendingRewards) || new BigNumber(0))\n    const userEarningsUsd = `$${(\n      (getBalanceNumber(new BigNumber(vault?.userData?.pendingRewards)) || 0) * vault.rewardTokenPrice\n    ).toFixed(2)}`\n    const userTokenBalance = (getBalanceNumber(new BigNumber(vault?.userData?.tokenBalance)) || 0).toFixed(4)\n    const userTokenBalanceUsd = `$${(parseFloat(userTokenBalance || '0') * vault?.stakeTokenPrice).toFixed(2)}`\n    const userStakedBalance = getBalanceNumber(new BigNumber(vault?.userData?.stakedBalance))\n    const userStakedBalanceUsd = `$${((userStakedBalance || 0) * vault?.stakeTokenPrice).toFixed(2)}`\n\n    const { tokenDisplay, stakeLp, earnLp } = vaultTokenDisplay(vault.stakeToken, vault.rewardToken)\n\n    return {\n      tokens: tokenDisplay,\n      alignServiceTokens: true,\n      stakeLp,\n      earnLp,\n      tag: (\n        <Box sx={{ marginRight: '5px', mt: '1px' }}>\n          <StyledTag key={vault?.id} variant={vault.type === 'AUTO' ? 'error' : 'success'}>\n            {t(vault?.type)}\n          </StyledTag>\n        </Box>\n      ),\n      title: <Text style={{ fontSize: isMobile ? '14px' : '16px' }}>{vault.stakeToken.symbol}</Text>,\n      titleContainerWidth: 400,\n      id: vault.id,\n      infoContent: <InfoContent vault={vault} />,\n      infoContentPosition: 'translate(8%, 0%)',\n      ttWidth: '250px',\n      toolTipIconWidth: isMobile && '20px',\n      toolTipStyle: isMobile && { marginTop: '10px', marginRight: '10px' },\n      expandedContentJustified: vault.version === 'V1' && 'center',\n      open: openId === vault.id,\n      cardContent: (\n        <>\n          <ListViewContent\n            title={t('Daily APY')}\n            value={`${isActive ? vault?.apy?.daily?.toFixed(2) : '0.00'}%`}\n            width={isMobile ? 90 : 140}\n            toolTip={t(\n              'Daily APY includes BANANA rewards (calculated based on token value, reward rate, and percentage of vault owned) and DEX swap fees, compounded daily.',\n            )}\n            toolTipPlacement=\"bottomLeft\"\n            toolTipTransform=\"translate(25%, 0%)\"\n            height={50}\n          />\n          <ListViewContent\n            title={t('Yearly APY')}\n            value={`${isActive ? vault?.apy?.yearly?.toFixed(2) : '0.00'}%`}\n            width={isMobile ? 95 : 155}\n            toolTip={t(\n              'Annual APY includes annualized BANANA rewards (calculated based on token value, reward rate, and percentage of vault owned) and DEX swap fees, compounded daily.',\n            )}\n            toolTipPlacement=\"bottomLeft\"\n            toolTipTransform=\"translate(28%, 0%)\"\n            height={50}\n          />\n          <ListViewContent\n            title={t('Total Staked')}\n            value={`$${totalDollarAmountStaked.toLocaleString(undefined)}`}\n            width={isMobile ? 100 : 170}\n            toolTip={t('The total value of the tokens currently staked in this vault.')}\n            toolTipPlacement=\"bottomRight\"\n            toolTipTransform=\"translate(13%, 0%)\"\n            height={50}\n          />\n          <ListViewContent\n            title={vault.version === 'V1' ? t('Staked') : t('Earned')}\n            value={vault.version === 'V1' ? userStakedBalanceUsd : userEarningsUsd}\n            width={isMobile ? 50 : 115}\n            height={50}\n          />\n        </>\n      ),\n      expandedContent: (\n        <>\n          <ActionContainer>\n            {isMobile && (\n              <ListViewContent\n                title={t('Available %stakeTokenSymbol%', {\n                  stakeTokenSymbol: vault.stakeToken.lpToken ? 'LP' : vault?.stakeToken?.symbol,\n                })}\n                value={userTokenBalance}\n                value2={userTokenBalanceUsd}\n                value2Secondary\n                width={190}\n                height={50}\n                lineHeight={15}\n                ml={10}\n              />\n            )}\n            {vault.stakeToken?.lpToken ? (\n              <StyledButton\n                sx={{ width: '150px' }}\n                onClick={() =>\n                  showLiquidity(\n                    vault.token.symbol === 'BNB' ? 'ETH' : vault.token.address[chainId],\n                    vault.quoteToken.symbol === 'BNB' ? 'ETH' : vault.quoteToken.address[chainId],\n                  )\n                }\n              >\n                GET LP\n              </StyledButton>\n            ) : (\n              <a href={liquidityUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <StyledButton sx={{ width: '150px' }}>GET {vault?.stakeToken?.symbol}</StyledButton>\n              </a>\n            )}\n            {!isMobile && (\n              <ListViewContent\n                title={t('Available %stakeTokenSymbol%', {\n                  stakeTokenSymbol: vault.stakeToken.lpToken ? 'LP' : vault?.stakeToken?.symbol,\n                })}\n                value={userTokenBalance}\n                value2={userTokenBalanceUsd}\n                value2Secondary\n                width={190}\n                height={50}\n                lineHeight={15}\n                ml={10}\n              />\n            )}\n          </ActionContainer>\n          {vault.version === 'V1' ? !isMobile && <NextArrow ml=\"30px\" mr=\"50px\" /> : !isMobile && <NextArrow />}\n          <Actions\n            allowance={userAllowance?.toString()}\n            stakedBalance={vault?.userData?.stakedBalance?.toString()}\n            stakedTokenSymbol={vault?.stakeToken?.symbol}\n            stakingTokenBalance={vault?.userData?.tokenBalance?.toString()}\n            stakeTokenAddress={vault?.stakeToken?.address[chainId]}\n            stakeTokenValueUsd={vault?.stakeTokenPrice}\n            withdrawFee={vault?.withdrawFee}\n            pid={vault.pid}\n            vaultVersion={vault.version}\n          />\n          {vault.version === 'V2' && !isMobile && <NextArrow />}\n          {vault.version === 'V2' && (\n            <HarvestAction\n              pid={vault?.pid}\n              disabled={userEarnings <= 0}\n              userEarnings={userEarnings}\n              earnTokenSymbol={vault?.rewardToken?.symbol}\n            />\n          )}\n        </>\n      ),\n    } as ExtendedListViewProps\n  })\n  return (\n    <Container>\n      <ListView listViews={vaultsListView} />\n    </Container>\n  )\n}\n\nexport default React.memo(DisplayVaults)\n","import { Token } from 'config/constants/types'\n\nexport const vaultTokenDisplay = (token1: Token, token2: Token) => {\n  let stakeLp = false\n  let earnLp = false\n  let tokenDisplay = {}\n  if (!token1.lpToken && !token2.lpToken) {\n    tokenDisplay = { token1: token1.symbol, token2: token2.symbol }\n  }\n  if (token1.lpToken && !token2.lpToken) {\n    const [splitToken1, splitToken2] = token1.symbol.split('-')\n    stakeLp = true\n    tokenDisplay = { token1: splitToken1, token2: splitToken2, token3: token2.symbol }\n  }\n  if (token1.lpToken && token2.lpToken) {\n    stakeLp = true\n    earnLp = true\n    const [splitToken1, splitToken2] = token1.symbol.split('-')\n    const [splitToken3, splitToken4] = token2.symbol.split('-')\n    tokenDisplay = { token1: splitToken1, token2: splitToken2, token3: splitToken3, token4: splitToken4 }\n  }\n  return { tokenDisplay, stakeLp, earnLp }\n}\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst StyledInput = styled(Input)`\n  border-radius: 10px;\n  background: ${({ theme }) => theme.colors.white3};\n  font-weight: 800;\n  border: none;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 180px;\n  }\n  @media screen and (min-width: 900px) {\n    width: 100px;\n  }\n  @media screen and (min-width: 1000px) {\n    width: 200px;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  width?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <StyledInput ref={inputEl} value={value} onChange={onChange} onBlur={() => setToggled(false)} icon=\"search\" />\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { Text, Flex } from '@apeswapfinance/uikit'\nimport { Button } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\n\nexport const ControlContainer = styled(Flex)`\n  align-items: center;\n  position: relative;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  justify-content: space-between;\n  flex-direction: row;\n  margin: 20px 0px 20px 0px;\n  padding: 15px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.white2};\n  min-width: 300px;\n  max-width: 500px;\n  width: 100%;\n  align-self: center;\n  height: 250px;\n  padding: 10px 30px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 180px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    min-height: 59px;\n    height: 100%;\n    padding: 0px 50px 0px 30px;\n    align-items: center;\n    max-width: 100%;\n    height: auto;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: 0px 30px 0px 30px;\n  }\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 16px !important;\n`\n\nexport const LearnMoreButton = styled(Button)`\n  height: 36px;\n  width: 192px;\n  align-items: center;\n  padding-left: 40px;\n  color: ${({ theme }) => theme.colors.yellow};\n  border: 2px solid ${({ theme }) => theme.colors.yellow};\n`\n\nexport const ClaimAllWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nexport const ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  }\n`\n","export const NUMBER_OF_FARMS_VISIBLE = 10\n\nexport const TOKEN_OPTIONS = [\n  {\n    label: 'All Types',\n    value: 'allTypes',\n  },\n  {\n    label: 'Max',\n    value: 'max',\n  },\n  {\n    label: 'Auto',\n    value: 'auto',\n  },\n]\n\nexport const OPTIONS = [\n  {\n    label: 'Hot',\n    value: 'hot',\n  },\n  {\n    label: 'APY',\n    value: 'apy',\n  },\n  {\n    label: 'Total Staked',\n    value: 'totalStaked',\n  },\n]\n","import { useCallback } from 'react'\nimport { useVaultApeV2 } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { harvestMaximizer } from 'utils/callHelpers'\nimport track from 'utils/track'\n\nconst useHarvestAllMaximizer = (pids: number[]) => {\n  const { chainId } = useActiveWeb3React()\n  const vaultApeContractV2 = useVaultApeV2()\n\n  const handleHarvestAll = useCallback(async () => {\n    try {\n      const harvestPromises = pids.map((pid) => {\n        return harvestMaximizer(vaultApeContractV2, pid)\n      })\n\n      track({\n        event: 'vault',\n        chain: chainId,\n        data: {\n          cat: 'harvestAll',\n        },\n      })\n      return Promise.all(harvestPromises)\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [vaultApeContractV2, pids, chainId])\n\n  return { onHarvestAll: handleHarvestAll }\n}\n\nexport default useHarvestAllMaximizer\n","import React, { useState } from 'react'\nimport { useToast } from 'state/hooks'\nimport { fetchVaultUserDataAsync } from 'state/vaults'\nimport { getEtherscanLink } from 'utils'\nimport useHarvestAllMaximizer from 'views/Vaults/hooks/useHarvestAllMaximizer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAppDispatch } from 'state'\nimport { StyledButtonSquare } from './styles'\n\ninterface HarvestActionsProps {\n  pids: number[]\n  disabled?: boolean\n}\n\nconst HarvestAll: React.FC<HarvestActionsProps> = ({ pids, disabled }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { onHarvestAll } = useHarvestAllMaximizer(pids)\n  const { toastSuccess } = useToast()\n\n  const handleHarvestAll = async () => {\n    setPendingTrx(true)\n    await onHarvestAll()\n      .then((resp) => {\n        resp.map((trx) =>\n          toastSuccess('Harvest Successful', {\n            text: 'View Transaction',\n            url: getEtherscanLink(trx.transactionHash, 'transaction', chainId),\n          }),\n        )\n      })\n      .catch((e) => {\n        console.error(e)\n        setPendingTrx(false)\n      })\n    dispatch(fetchVaultUserDataAsync(account, chainId))\n    setPendingTrx(false)\n  }\n\n  return (\n    <StyledButtonSquare\n      height={36}\n      minWidth={100}\n      disabled={disabled || pendingTrx || pids.length <= 0}\n      onClick={handleHarvestAll}\n      load={pendingTrx}\n    >\n      HARVEST ALL ({pids.length})\n    </StyledButtonSquare>\n  )\n}\n\nexport default React.memo(HarvestAll)\n","import React from 'react'\nimport { Flex, Select, SelectItem, Text } from '@apeswapfinance/uikit'\nimport { Checkbox } from '@ape.swap/uikit'\nimport { ToggleWrapper } from 'components/ListViewMenu/styles'\nimport MenuTabButtons from 'components/ListViewMenu/MenuTabButtons'\nimport { ListViewProps } from './types'\nimport SearchInput from './SearchInput'\nimport { ClaimAllWrapper, ControlContainer, LabelWrapper, StyledText } from './styles'\nimport { OPTIONS, TOKEN_OPTIONS } from './constants'\nimport HarvestAll from '../Actions/HarvestAll'\n\nconst VaultMenu: React.FC<ListViewProps> = ({\n  onHandleQueryChange,\n  onSetSortOption,\n  onSetVaultType,\n  query,\n  activeVaultType,\n  activeOption,\n  vaults,\n  onSetStake,\n  stakedOnly,\n}) => {\n  const vaultPids = vaults.map((vault) => {\n    return vault.pid\n  })\n  return (\n    <ControlContainer>\n      <LabelWrapper>\n        <StyledText bold mr=\"15px\">\n          Search\n        </StyledText>\n        <SearchInput onChange={onHandleQueryChange} value={query} />\n      </LabelWrapper>\n      <Flex>\n        <Select size=\"sm\" width=\"140px\" onChange={(e) => onSetSortOption(e.target.value)} active={activeOption}>\n          {OPTIONS.map((option) => {\n            return (\n              <SelectItem size=\"sm\" value={option.value} key={option.label}>\n                <Text>{option.label}</Text>\n              </SelectItem>\n            )\n          })}\n        </Select>\n      </Flex>\n      <Flex>\n        <Select size=\"sm\" width=\"126px\" onChange={(e) => onSetVaultType(e.target.value)} active={activeVaultType}>\n          {TOKEN_OPTIONS.map((option) => {\n            return (\n              <SelectItem size=\"sm\" value={option.value} key={option.label}>\n                <Text>{option.label}</Text>\n              </SelectItem>\n            )\n          })}\n        </Select>\n      </Flex>\n      <MenuTabButtons />\n      <ToggleWrapper onClick={() => onSetStake(!stakedOnly)}>\n        <Checkbox checked={stakedOnly} onChange={() => onSetStake(!stakedOnly)} />\n        <StyledText> Staked </StyledText>\n      </ToggleWrapper>\n      <ClaimAllWrapper>\n        <HarvestAll pids={vaultPids} />\n      </ClaimAllWrapper>\n    </ControlContainer>\n  )\n}\n\nexport default React.memo(VaultMenu)\n","/** @jsxImportSource theme-ui */\nimport React, { useState, useRef, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Flex } from '@apeswapfinance/uikit'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from 'contexts/Localization'\nimport Banner from 'components/Banner'\nimport ListViewLayout from 'components/layout/ListViewLayout'\nimport partition from 'lodash/partition'\nimport { useFetchFarmLpAprs } from 'state/hooks'\nimport { useVaults, usePollVaultsData, useSetVaults } from 'state/vaults/hooks'\nimport { Vault } from 'state/types'\nimport DisplayVaults from './components/DisplayVaults'\nimport VaultMenu from './components/Menu'\n\nconst NUMBER_OF_VAULTS_VISIBLE = 12\n\nconst Vaults: React.FC = () => {\n  useSetVaults()\n  usePollVaultsData()\n  const { chainId } = useActiveWeb3React()\n  useFetchFarmLpAprs(chainId)\n  const { t } = useTranslation()\n  const [stakedOnly, setStakedOnly] = useState(false)\n  const [vaultType, setVaultType] = useState('allTypes')\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const [numberOfVaultsVisible, setNumberOfVaultsVisible] = useState(NUMBER_OF_VAULTS_VISIBLE)\n  const { pathname } = useLocation()\n  const { search } = window.location\n  const { vaults: initVaults } = useVaults()\n  const params = new URLSearchParams(search)\n  const urlSearchedVault = parseInt(params.get('id'))\n  const [allVaults, setAllVaults] = useState(initVaults)\n  const isActive = !pathname.includes('history')\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  useEffect(() => {\n    setAllVaults(initVaults)\n  }, [initVaults])\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfVaultsVisible((vaultsCurrentlyVisible) => vaultsCurrentlyVisible + NUMBER_OF_VAULTS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const [inactiveVaults, activeVaults] = partition(allVaults, (vault) => vault.inactive)\n\n  const stakedOnlyVaults = activeVaults.filter(\n    (vault) => vault.userData && new BigNumber(vault.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const vaultsHasRewards = stakedOnlyVaults.filter((vault) =>\n    new BigNumber(vault.userData.pendingRewards).isGreaterThan(0),\n  )\n\n  const stakedInactiveVaults = inactiveVaults.filter(\n    (vault) => vault.userData && new BigNumber(vault.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortVaults = (vaultsToSort: Vault[]) => {\n    switch (sortOption) {\n      case 'apy':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(vaultsToSort, (vault: Vault) => vault?.apy?.daily, 'desc')\n      case 'totalStaked':\n        return orderBy(vaultsToSort, (vault: Vault) => parseInt(vault?.totalStaked) * vault?.stakeTokenPrice, 'desc')\n      default:\n        return orderBy(vaultsToSort, (vault: Vault) => vault.platform, 'asc')\n    }\n  }\n\n  const renderVaults = (): Vault[] => {\n    let chosenVaults = isActive ? activeVaults : inactiveVaults\n\n    if (urlSearchedVault) {\n      const vaultCheck =\n        activeVaults?.find((vault) => {\n          return vault.id === urlSearchedVault\n        }) !== undefined\n      if (vaultCheck) {\n        chosenVaults = [\n          activeVaults?.find((vault) => {\n            return vault.id === urlSearchedVault\n          }),\n          ...activeVaults?.filter((vault) => {\n            return vault.id !== urlSearchedVault\n          }),\n        ]\n      }\n    }\n\n    if (stakedOnly) {\n      chosenVaults = isActive ? stakedOnlyVaults : stakedInactiveVaults\n    }\n\n    if (vaultType !== 'allTypes') {\n      chosenVaults = chosenVaults.filter((vault) => vault.type === vaultType.toUpperCase())\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = searchQuery.toLowerCase()\n      chosenVaults = chosenVaults.filter((vault) =>\n        `${vault?.stakeToken?.symbol.toLowerCase()}-${vault?.rewardToken?.symbol.toLowerCase()}`.includes(\n          lowercaseQuery,\n        ),\n      )\n    }\n    return sortVaults(chosenVaults).slice(0, numberOfVaultsVisible)\n  }\n\n  return (\n    <>\n      <Flex\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        mb=\"100px\"\n        style={{ position: 'relative', top: '30px', width: '100%' }}\n      >\n        <ListViewLayout>\n          <Banner\n            title={t('BANANA Maximizers')}\n            banner=\"banana-maximizers\"\n            link=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/stake/vaults\"\n            titleColor=\"primaryBright\"\n            maxWidth={1130}\n          />\n          <VaultMenu\n            onHandleQueryChange={handleChangeQuery}\n            onSetSortOption={setSortOption}\n            onSetStake={setStakedOnly}\n            onSetVaultType={setVaultType}\n            vaults={vaultsHasRewards}\n            activeOption={sortOption}\n            activeVaultType={vaultType}\n            stakedOnly={stakedOnly}\n            query={searchQuery}\n          />\n          <DisplayVaults vaults={renderVaults()} openId={urlSearchedVault} />\n        </ListViewLayout>\n        <div ref={loadMoreRef} />\n      </Flex>\n    </>\n  )\n}\n\nexport default Vaults\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Text, Button, Input, InputProps, Flex } from '@apeswapfinance/uikit'\nimport { useTranslation } from '../../contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  displayDecimals?: number\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white3};\n  border-radius: 16px;\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  border: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  font-weight: 800;\n  background-color: ${({ theme }) => theme.colors.white3};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryBright};\n  font-weight: 500;\n  font-size: 16px;\n  padding: 3px 10px;\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  inputTitle,\n  displayDecimals,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(displayDecimals || 4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\" fontWeight={800}>\n            {inputTitle}\n          </Text>\n          <Text fontSize=\"16px\" fontWeight={500}>\n            {t('Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <StyledButton size=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </StyledButton>\n          <Text fontSize=\"16px\" fontWeight={600}>\n            {symbol}\n          </Text>\n        </Flex>\n      </StyledTokenInput>\n    </div>\n  )\n}\n\nexport default ModalInput\n","import styled from 'styled-components'\nimport { Button, ArrowDropUpIcon, Flex, Text } from '@apeswapfinance/uikit'\n\nexport const FarmButton = styled(Button)`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: 129px;\n  height: 44px;\n`\n\nexport const NextArrow = styled(ArrowDropUpIcon)`\n  transform: rotate(90deg);\n`\n\nexport const Container = styled(Flex)`\n  flex-direction: row;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n`\n\nexport const TitleText = styled(Text)`\n  font-size: 12px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Toggle } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst MenuTabButton: React.FC = () => {\n  const { url, isExact } = useRouteMatch()\n  const history = useHistory()\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (isExact) {\n      history.push(`${url}/history`)\n    } else {\n      history.push(url)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Toggle size=\"md\" labels={[t('ACTIVE'), t('INACTIVE')]} onClick={handleClick} checked={!isExact} />\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MenuTabButton)\n","import styled from 'styled-components'\nimport { Text, Checkbox, Heading, Flex } from '@apeswapfinance/uikit'\n\nexport const ControlContainer = styled(Flex)`\n  position: relative;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  align-items: space-around;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 15px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.white2};\n  min-width: 300px;\n  max-width: 500px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    min-height: 59px;\n    height: 100%;\n    padding: 20px 150px 20px 20px;\n    align-items: center;\n    max-width: 100%;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: 0px 130px 0px 30px;\n  }\n`\n\nexport const MobilePadding = styled(Flex)`\n  padding: 7.5px 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 0 0;\n  }\n`\n\nexport const ControlWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid red;\n`\n\nexport const ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  }\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: center;\n    align-items: center;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nexport const HeadingContainer = styled.div`\n  max-width: 1024px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const Header = styled.div`\n  padding-top: 36px;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-image: ${({ theme }) => (theme.isDark ? 'url(/images/farm-night.svg)' : 'url(/images/farm-day.svg)')};\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 250px;\n  background-position: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 24px;\n    padding-right: 24px;\n    height: 300px;\n  }\n`\n\nexport const StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 16px !important;\n  }\n`\nexport const StyledCheckbox = styled(Checkbox)<{ checked?: boolean }>`\n  height: 21px;\n  width: 21px;\n  margin-left: 20px;\n`\n\nexport const StyledImage = styled.img`\n  height: 187px;\n  width: 134px;\n  position: absolute;\n  right: 0px;\n  bottom: 51px;\n  display: none;\n\n  @media screen and (min-width: 340px) {\n    right: 20px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    bottom: 51px;\n    right: 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    bottom: 0px;\n    right: 0px;\n    display: block;\n  }\n`\n\nexport const StyledHeading = styled(Heading)`\n  font-size: 30px;\n  max-width: 176px !important;\n  color: ${({ theme }) => theme.colors.text};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 30px;\n    max-width: 240px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 44px;\n    max-width: 400px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    font-size: 60px;\n    max-width: 600px !important;\n  }\n`\n\nexport const SectionOneWrapper = styled(Flex)`\n  justify-content: space-between;\n  align-items: flex-end;\n  z-index: 1;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 410px;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 430px;\n    align-items: center;\n  }\n`\n\nexport const SectionTwoWrapper = styled(Flex)`\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n  margin-top: 15px;\n  align-self: flex-start;\n  z-index: 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 245px;\n    margin-top: 0px;\n    align-self: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 275px;\n  }\n`\n\nexport const HarvestAllWrapper = styled(Flex)`\n  justify-content: center;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 250px;\n    margin-top: 20px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 180px;\n    margin-top: 0px;\n  }\n`\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n"],"sourceRoot":""}
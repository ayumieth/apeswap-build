{"version":3,"sources":["components/UnsupportedCurrencyFooter.tsx","components/LiquidityWidget/LiquidityInfo.tsx","components/LiquidityWidget/ConfirmAddModalBottom.tsx","components/LiquidityWidget/CurrencyInput/NumericalInput.tsx","components/LiquidityWidget/CurrencyInput/index.tsx","components/LiquidityWidget/LiquidityWidget.tsx","components/LiquidityWidget/LiquidityModal.tsx","components/ListView/ListCard.tsx","components/ListView/MobileListCard.tsx","components/ListView/index.tsx","components/layout/ListViewLayout.ts","components/ListView/styles.ts","components/LiquidityWidget/styles.ts","components/LiquidityWidget/ConnectButton.tsx","utils/callHelpers.ts","hooks/useProgressiveImage.ts","components/Banner/styles.ts","components/Banner/index.tsx","components/ListViewContent/styles.ts","components/ListViewContent/index.tsx"],"names":["DetailsFooter","styled","div","theme","colors","text","white4","UnsupportedModal","currencies","onDismiss","chainId","useActiveWeb3React","t","useTranslation","tokens","map","currency","wrappedCurrency","unsupportedTokens","useUnsupportedTokens","title","gap","token","Object","keys","includes","address","align","size","symbol","external","small","color","href","getEtherscanLink","concat","UnsupportedCurrencyFooter","useModal","onPresentModal","variant","onClick","LiquidityInfo","noLiquidity","poolTokenPercentage","price","as","sx","marginY","styles","row","Field","CURRENCY_B","getSymbol","CURRENCY_A","toSignificant","lessThan","ONE_BIPS","toFixed","invert","ConfirmAddModalBottom","parsedAmounts","onAdd","Row","style","marginRight","justifyContent","fullWidth","mt","height","fontSize","StyledInput","input","error","inputRegex","RegExp","NumericalInput","React","memo","value","onUserInput","placeholder","removeLiquidity","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","bold","CurrencySelectButton","Button","attrs","scale","InputPanel","Container","CurrencyInputContainer","CurrencyInputPanelLiquidity","onMax","onCurrencySelect","disableCurrencySelect","pair","otherCurrency","id","showCommonBases","addLiquidity","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","position","alignItems","width","paddingLeft","currency0","token0","currency1","token1","margin","marginLeft","length","slice","className","display","cursor","top","val","LiquidiyWidget","onCancel","isDark","useTheme","account","library","useMintState","independentField","typedValue","otherTypedValue","useSwapState","INPUT","OUTPUT","swapCurrencyA","currencyId","swapCurrencyB","useState","currencyA1","setcurrencyA1","currencyB1","setcurrencyB1","currencyA","useCurrency","currencyB","useDerivedMintInfo","undefined","dependentField","pairState","currencyBalances","liquidityMinted","useMintActionHandlers","onFieldAInput","onFieldBInput","formattedAmounts","maxAmounts","reduce","accumulator","field","maxAmountSpend","atMaxAmounts","equalTo","addIsUnsupported","useIsTransactionUnsupported","balanceA","useCurrencyBalance","balanceB","StyledBalanceText","Text","Balance","balance","toExact","useApproveCallback","parseAddress","ROUTER_ADDRESS","approvalA","approveACallback","approvalB","approveBCallback","deadline","useTransactionDeadline","useUserSlippageTolerance","allowedSlippage","txHash","setTxHash","isValid","expertMode","useIsExpertMode","attemptingTxn","setAttemptingTxn","addTransaction","useTransactionAdder","a","router","getRouterContract","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","ETHER","tokenBIsETH","estimate","estimateGas","addLiquidityETH","method","args","raw","toString","toHexString","BigNumber","from","then","estimatedGasLimit","gasLimit","calculateGasMargin","response","summary","hash","track","chain","data","token2","token1Amount","token2Amount","cat","catch","err","code","console","modalHeader","fontWeight","lineHeight","textAlign","marginTop","marginBottom","fontStyle","modalBottom","pendingText","handleDismissConfirmation","useCallback","TransactionConfirmationModal","customOnDismiss","content","topContent","bottomContent","currencyToAdd","liquidityToken","onPresentAddLiquidityModal","csx","border","borderRadius","padding","currencyA_","newCurrencyIdA","showMaxButton","backgroundColor","currencyB_","button","disabled","mb","ApprovalState","NOT_APPROVED","PENDING","columnGap","APPROVED","Dots","ConnectButton","PairState","INVALID","UnderlinedButton","handleClick","LiquidityModal","widgetProps","newModalProps","modalProps","handleClose","open","merge","minWidth","maxWidth","zIndex","overflowY","maxHeight","Svg","flexDirection","LiquidityWidget","ListCard","serviceTokenDisplay","tag","cardContent","expandedContent","infoContent","infoContentPosition","expandedContentJustified","titleContainerWidth","alignServiceTokens","toolTipIconWidth","ttWidth","expanded","setExpanded","prev","titleContainer","mr","icon","direction","placement","body","transformTip","MobileListCard","expandedContentSize","toolTipStyle","ListView","listViews","isMobile","useIsMobile","view","ServiceTokenDisplay","token3","token4","billArrow","earnLp","stakeLp","dualEarn","ListViewLayout","Flex","mediaQueries","md","ExpandLargeAnimation","keyframes","ListExpandedContainer","ExpandSmallAnimation","white3","ListCardContainer","white2","ListViewContainer","DropDownIcon","ArrowDropDownIcon","ContentContainer","background","useAuth","login","logout","onPresentConnectModal","useWalletModal","approve","lpContract","masterChefContract","ethers","constants","MaxUint256","trx","wait","stake","pid","amount","enterStaking","times","pow","deposit","sousStake","sousChefContract","jungleStake","jungleChefContract","unstake","leaveStaking","withdraw","sousUnstake","jungleUnstake","sousEmegencyWithdraw","emergencyWithdraw","harvest","soushHarvest","jungleHarvest","bid","auctionContract","nextAuction","endAuction","listNfa","auctionLength","timeToExtend","minimumExtendTime","minimumBid","pushToAuction","removeAuction","nfaStake","nfaStakingChefContract","ids","nfaStakeHarvest","nfaUnstake","harvestMaximizer","vaultApeContract","harvestAll","stakeVaultV1","vaultUnstakeV1","stakeVaultV2","vaultUnstakeV2","vaultUnstakeAll","withdrawAll","miniChefStake","miniChefContract","miniChefHarvest","miniChefUnstake","withdrawAndHarvest","createNewIazo","iazoFactoryContract","iazoOwner","iazoToken","baseToken","burnRemains","unitParams","creationFee","createIAZO","userDeposit","iazoContract","userDepositNative","userWithdraw","withdrawOfferTokensOnFailure","userBuyBill","billContract","user","lpAmount","maxPrice","userClaimBill","billIds","batchRedeem","userTransferBillNft","billNft","billId","fromAddress","toAddress","useProgressiveImage","src","sourceLoaded","setSourceLoaded","useEffect","img","Image","onload","left","textTransform","FlexImage","listViewBreak","FlexSkeleton","Skeleton","LearnMoreArrow","Banner","banner","children","titleColor","link","history","useHistory","loaded","backgroundImage","toUpperCase","bannerLink","push","search","window","textDecoration","ListViewContentContainer","TitleText","ValueText","valueColor","value2Secondary","ValueSkeleton","ListViewContent","value2","valueIcon","value2Icon","ml","toolTip","aprCalculator","toolTipPlacement","toolTipTransform"],"mappings":"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","file":"static/js/4.4aa0742c.chunk.js","sourcesContent":["import React from 'react'\nimport { Currency, Token } from '@apeswapfinance/sdk'\nimport { Button, Text, Modal, useModal, ModalProps, Link } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/layout/Row'\nimport { AutoColumn } from 'components/layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getEtherscanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends ModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.white4};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title={t('Unsupported Assets')} onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getEtherscanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            {t(\n              'Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.',\n            )}\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  const { t } = useTranslation()\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        {t('Read more about unsupported assets')}\n      </Button>\n    </DetailsFooter>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Currency, Percent, Price } from '@apeswapfinance/sdk'\nimport { Text, Flex, Box } from 'theme-ui'\nimport { ONE_BIPS } from 'config/constants'\nimport { Field } from 'state/mint/actions'\nimport styles from './styles'\n\ninterface LiquidityInfoProps {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n  chainId?: number\n}\n\nconst LiquidityInfo: React.FC<LiquidityInfoProps> = ({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n  chainId,\n}) => {\n  return (\n    <Box as=\"ul\" sx={{ marginY: '30px' }}>\n      <Flex as=\"li\" sx={styles.row}>\n        <Text sx={styles.text}>\n          {`${currencies[Field.CURRENCY_B]?.getSymbol(chainId) ?? ''} per ${\n            currencies[Field.CURRENCY_A]?.getSymbol(chainId) ?? ''\n          }`}\n        </Text>\n        <Text sx={styles.text}>{price?.toSignificant(6) ?? '-'}</Text>\n      </Flex>\n      <Flex as=\"li\" sx={styles.row}>\n        <Text sx={styles.text}>Share of Pool</Text>\n        <Text sx={styles.text}>\n          {noLiquidity && price\n            ? '100'\n            : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n          %\n        </Text>\n      </Flex>\n      <Flex as=\"li\" sx={styles.row}>\n        <Text sx={styles.text}>\n          {`${currencies[Field.CURRENCY_A]?.getSymbol(chainId) ?? ''} per ${\n            currencies[Field.CURRENCY_B]?.getSymbol(chainId) ?? ''\n          }`}\n        </Text>\n        <Text sx={styles.text}>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default LiquidityInfo\n","import React from 'react'\nimport { Currency, CurrencyAmount, Fraction, Percent } from '@apeswapfinance/sdk'\nimport { Button, Text } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{`${currencies[Field.CURRENCY_A]?.getSymbol(chainId)} ${t('Deposited')}`}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{`${currencies[Field.CURRENCY_B]?.getSymbol(chainId)} ${t('Deposited')}`}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.getSymbol(chainId)} = ${price?.toSignificant(4)} ${currencies[\n            Field.CURRENCY_B\n          ]?.getSymbol(chainId)}`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.getSymbol(chainId)} = ${price?.invert().toSignificant(4)} ${currencies[\n            Field.CURRENCY_A\n          ]?.getSymbol(chainId)}`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button fullWidth onClick={onAdd} mt=\"25px\" style={{ height: '50px', fontSize: '20px' }}>\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.error : theme.colors.text)};\n  width: inherit;\n  height: 100%;\n  position: relative;\n  font-weight: 700;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: ${({ fontSize }) => fontSize || '16px'};\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0 0 0 15px;\n  text-align: right;\n  -webkit-appearance: textfield;\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nconst NumericalInput = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  removeLiquidity,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  removeLiquidity?: boolean\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const { t } = useTranslation()\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <>\n      <StyledInput\n        {...rest}\n        value={value}\n        onChange={(event) => {\n          // replace commas with periods, because we exclusively uses period as the decimal separator\n          enforcer(event.target.value.replace(/,/g, '.'))\n        }}\n        // universal input options\n        inputMode=\"decimal\"\n        title={t('Token Amount')}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        // text-specific options\n        type=\"text\"\n        pattern=\"^[0-9]*[.,]?[0-9]*$\"\n        placeholder={placeholder || '0.0'}\n        minLength={1}\n        maxLength={79}\n        spellCheck=\"false\"\n        fontSize=\"22px\"\n        style={{ marginRight: removeLiquidity ? '2.5px' : '10px' }}\n      />\n      {removeLiquidity && (\n        <div style={{ marginRight: '10px' }}>\n          <Text fontSize=\"22px\" mt=\".55px\" bold>\n            %\n          </Text>\n        </div>\n      )}\n    </>\n  )\n})\n\nexport default NumericalInput\n","import React from 'react'\nimport { Currency, Pair } from '@apeswapfinance/sdk'\nimport { Button, Text, useModal, Flex, ArrowDropDownIcon } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearchModal from '../../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../../Logo'\nimport { RowBetween } from '../../layout/Row'\nimport NumericalInput from './NumericalInput'\n\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })<{ removeLiquidity: boolean }>`\n  display: flex;\n  justify-content: flex-start;\n  background-color: ${({ theme }) => theme.colors.white4};\n  padding: 0;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.white4} !important;\n  }\n`\nconst InputPanel = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  border-radius: 10px;\n  z-index: 1;\n`\nconst Container = styled.div<{ removeLiquidity: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.colors.white4};\n`\n\nconst CurrencyInputContainer = styled.div<{ removeLiquidity: boolean }>`\n  background-color: ${({ theme }) => theme.colors.white4};\n  border-radius: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  otherCurrency?: Currency | null\n  id: string\n  isLp?: boolean\n  showCommonBases?: boolean\n  removeLiquidity?: boolean\n  addLiquidity?: boolean\n}\nexport default function CurrencyInputPanelLiquidity({\n  value,\n  onUserInput,\n  onMax,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  pair = null, // used for double token logo\n  otherCurrency,\n  id,\n  showCommonBases,\n  removeLiquidity,\n  addLiquidity,\n}: CurrencyInputPanelProps) {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n\n  return (\n    <CurrencyInputContainer removeLiquidity={removeLiquidity}>\n      <Flex style={{ position: 'relative' }}>\n        <CurrencySelectButton\n          removeLiquidity={removeLiquidity}\n          onClick={() => {\n            if (!disableCurrencySelect) {\n              onPresentCurrencyModal()\n            }\n          }}\n        >\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\" style={{ width: '100%' }}>\n            {pair ? (\n              <div style={{ paddingLeft: '10px' }}>\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={30} margin />\n              </div>\n            ) : currency ? (\n              <CurrencyLogo currency={currency} size=\"36px\" style={{ margin: '0 0px 0 10px' }} />\n            ) : null}\n            {pair ? (\n              <Text id=\"pair\" bold fontSize=\"19px\">\n                {pair?.token0.getSymbol(chainId)}-{pair?.token1.getSymbol(chainId)}\n              </Text>\n            ) : (\n              <Text id=\"pair\" fontSize=\"16px\" bold style={{ marginLeft: '10px' }}>\n                {(currency && currency.symbol && currency.symbol.length > 20\n                  ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                      currency.symbol.length - 5,\n                      currency.symbol.length,\n                    )}`\n                  : currency?.getSymbol(chainId)) || (\n                  <div className=\"bg-transparent hover:bg-primary border border-low-emphesis rounded-full px-2 py-1 text-xs font-medium mt-1 whitespace-nowrap \">\n                    {t('Select a token')}\n                  </div>\n                )}\n              </Text>\n            )}\n            {!disableCurrencySelect && <ArrowDropDownIcon width=\"8px\" style={{ marginLeft: '10px' }} />}\n          </Flex>\n        </CurrencySelectButton>\n        {!removeLiquidity && !addLiquidity && (\n          <Text\n            onClick={onMax}\n            fontSize=\"14px\"\n            style={{ display: 'inline', cursor: 'pointer', position: 'absolute', top: '-30px', marginLeft: '10px' }}\n          >\n            {id === 'swap-currency-output' ? 'To:' : 'From:'}\n          </Text>\n        )}\n      </Flex>\n      <InputPanel id={id}>\n        <Container removeLiquidity={removeLiquidity}>\n          <RowBetween>\n            <NumericalInput\n              id=\"token-amount-input\"\n              removeLiquidity={removeLiquidity}\n              value={value}\n              onUserInput={(val) => {\n                onUserInput(val)\n              }}\n            />\n          </RowBetween>\n        </Container>\n      </InputPanel>\n    </CurrencyInputContainer>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useState } from 'react'\nimport { AddIcon, Button } from '@ape.swap/uikit'\nimport { useModal } from '@apeswapfinance/uikit'\nimport { Box, Flex, Text } from 'theme-ui'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Currency, ETHER, TokenAmount, ROUTER_ADDRESS, CurrencyAmount } from '@apeswapfinance/sdk'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport track from 'utils/track'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport styled from 'styled-components'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { parseAddress } from 'hooks/useAddress'\nimport useTheme from 'hooks/useTheme'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from 'state/user/hooks'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport DoubleCurrencyLogo from 'components/Logo/DoubleLogo'\nimport { useSwapState } from 'state/swap/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { PairState } from '../../hooks/usePairs'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport Row, { RowBetween } from '../layout/Row'\nimport Dots from '../Loader/Dots'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { Field } from '../../state/mint/actions'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { currencyId } from '../../utils/currencyId'\nimport { AutoColumn } from '../layout/Column'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport LiquidityInfo from './LiquidityInfo'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport CurrencyInput from './CurrencyInput'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport ConnectButton from './ConnectButton'\nimport styles from './styles'\n\ninterface ILiquidityWidgetProps {\n  onCancel?: () => void\n}\n\nconst LiquidiyWidget: React.FC<ILiquidityWidgetProps> = ({ onCancel }) => {\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n\n  const { account, chainId, library } = useActiveWeb3React()\n\n  // get formatted amounts\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const { INPUT, OUTPUT } = useSwapState()\n\n  const swapCurrencyA = INPUT.currencyId\n  const swapCurrencyB = OUTPUT.currencyId\n\n  const [currencyA1, setcurrencyA1] = useState(swapCurrencyA || 'ETH')\n  const [currencyB1, setcurrencyB1] = useState(swapCurrencyB || '0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95')\n\n  const currencyA = useCurrency(currencyA1)\n  const currencyB = useCurrency(currencyB1)\n\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const handleCurrencyASelect = (currencyA_: Currency) => {\n    const newCurrencyIdA = currencyId(currencyA_)\n    setcurrencyA1(newCurrencyIdA)\n  }\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const handleCurrencyBSelect = (currencyB_: Currency) => {\n    setcurrencyB1(currencyId(currencyB_))\n  }\n  const balanceA = useCurrencyBalance(account ?? undefined, currencies[Field.CURRENCY_A])\n  const balanceB = useCurrencyBalance(account ?? undefined, currencies[Field.CURRENCY_B])\n\n  const StyledBalanceText = styled(Text)`\n    white-space: nowrap;\n    overflow: hidden;\n    max-width: 5rem;\n    text-overflow: ellipsis;\n  `\n  function Balance({ balance }: { balance: CurrencyAmount }) {\n    return <StyledBalanceText title={balance?.toExact()}>{balance?.toSignificant(4)}</StyledBalanceText>\n  }\n\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    parseAddress(ROUTER_ADDRESS, chainId),\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    parseAddress(ROUTER_ADDRESS, chainId),\n  )\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  const isValid = !error\n  const expertMode = useIsExpertMode()\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  const addTransaction = useTransactionAdder()\n  const onAdd = async () => {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${currencies[\n              Field.CURRENCY_A\n            ]?.getSymbol(chainId)} and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[\n              Field.CURRENCY_B\n            ]?.getSymbol(chainId)}`,\n          })\n\n          setTxHash(response.hash)\n\n          track({\n            event: 'liquidity',\n            chain: chainId,\n            data: {\n              token1: currencies[Field.CURRENCY_A]?.getSymbol(chainId),\n              token2: currencies[Field.CURRENCY_B]?.getSymbol(chainId),\n              token1Amount: parsedAmounts[Field.CURRENCY_A]?.toSignificant(3),\n              token2Amount: parsedAmounts[Field.CURRENCY_B]?.toSignificant(3),\n              cat: 'add',\n            },\n          })\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex>\n        <Text sx={{ fontSize: '24px', marginRight: '10px', fontWeight: '700', lineHeight: '1.5' }}>\n          {`${currencies[Field.CURRENCY_A]?.getSymbol(chainId)}/${currencies[Field.CURRENCY_B]?.getSymbol(chainId)}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text sx={{ fontSize: '24px', marginRight: '10px', fontWeight: '700', lineHeight: '1.5' }}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text sx={{ fontSize: '20px', fontWeight: '400', lineHeight: '1.5' }}>\n            {`${currencies[Field.CURRENCY_A]?.getSymbol(chainId)}/${currencies[Field.CURRENCY_B]?.getSymbol(\n              chainId,\n            )} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text\n          sx={{\n            textAlign: 'left',\n            fontSize: '14px',\n            fontWeight: '400',\n            marginTop: '24px',\n            marginBottom: '24px',\n            lineHeight: '1.5',\n            fontStyle: 'italic',\n          }}\n        >\n          {t(\n            'Output is estimated. If the price changes by more than %allowedSlippage%% your transaction will revert.',\n            { allowedSlippage: allowedSlippage / 100 },\n          )}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? ''} ${\n    currencies[Field.CURRENCY_A]?.getSymbol(chainId) ?? ''\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? ''} ${\n    currencies[Field.CURRENCY_B]?.getSymbol(chainId) ?? ''\n  }`\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <>\n      <Flex sx={{ justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px', marginTop: '20px' }}>\n        <Flex>\n          <Text\n            sx={{\n              fontSize: '16px',\n              fontWeight: 700,\n              lineHeight: '24px',\n              color: isDark ? 'primaryBright' : 'brown',\n            }}\n          >\n            Token 1\n          </Text>\n        </Flex>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text\n            sx={{\n              fontSize: '12px',\n              fontWeight: 500,\n              lineHeight: '14px',\n              marginRight: '10px',\n              color: isDark ? 'primaryBright' : 'brown',\n            }}\n          >\n            <Box>\n              {t('Balance')}:&nbsp;&nbsp;\n              <Balance balance={balanceA} />\n            </Box>\n          </Text>\n          <Button\n            size=\"sm\"\n            csx={{ border: 'hidden', borderRadius: '6px', padding: '3px 14px !important' }}\n            variant=\"primary\"\n            onClick={() => {\n              onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n            }}\n          >\n            <Text sx={{ fontSize: '16px', fontWeight: 500, lineHeight: '24px' }}>Max</Text>\n          </Button>\n        </Flex>\n      </Flex>\n\n      <CurrencyInput\n        value={formattedAmounts[Field.CURRENCY_A]}\n        onUserInput={onFieldAInput}\n        onCurrencySelect={handleCurrencyASelect}\n        showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n        currency={currencies[Field.CURRENCY_A]}\n        addLiquidity\n        id=\"add-liquidity-input-tokena\"\n        showCommonBases\n      />\n\n      <Flex\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          margin: '15px auto 15px',\n        }}\n      >\n        <Flex\n          sx={{\n            justifyContent: 'center',\n            backgroundColor: '#FFB300',\n            borderRadius: '30px',\n            width: '29px',\n            height: '29px',\n          }}\n        >\n          <AddIcon width=\"25px\" color=\"primaryBright\" />\n        </Flex>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\n        <Flex>\n          <Text\n            sx={{\n              fontSize: '16px',\n              fontWeight: 700,\n              lineHeight: '24px',\n              color: isDark ? 'primaryBright' : 'brown',\n            }}\n          >\n            {t('Token 2')}\n          </Text>\n        </Flex>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text\n            sx={{\n              fontSize: '12px',\n              fontWeight: 500,\n              lineHeight: '14px',\n              marginRight: '10px',\n              color: isDark ? 'primaryBright' : 'brown',\n            }}\n          >\n            {t('Balance')}:&nbsp;&nbsp;\n            <Balance balance={balanceB} />\n          </Text>\n          <Button\n            size=\"sm\"\n            csx={{ border: 'hidden', borderRadius: '6px', padding: '3px 14px !important' }}\n            variant=\"primary\"\n            onClick={() => {\n              onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n            }}\n          >\n            <Text sx={{ fontSize: '16px', fontWeight: 500, lineHeight: '24px' }}>Max</Text>\n          </Button>\n        </Flex>\n      </Flex>\n      {/* </ColumnCenter> */}\n      <CurrencyInput\n        value={formattedAmounts[Field.CURRENCY_B]}\n        onUserInput={onFieldBInput}\n        onCurrencySelect={handleCurrencyBSelect}\n        onMax={() => {\n          onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n        }}\n        showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n        currency={currencies[Field.CURRENCY_B]}\n        id=\"add-liquidity-input-tokenb\"\n        addLiquidity\n        showCommonBases\n      />\n      <LiquidityInfo\n        currencies={currencies}\n        poolTokenPercentage={poolTokenPercentage}\n        noLiquidity={noLiquidity}\n        price={price}\n        chainId={chainId}\n      />\n\n      <Flex\n        sx={{\n          justifyContent: 'center',\n          Button: {\n            padding: '7px 30px',\n          },\n        }}\n      >\n        {addIsUnsupported ? (\n          <Button sx={styles.button} disabled mb=\"4px\">\n            Unsupported Asset\n          </Button>\n        ) : !account ? (\n          <ConnectButton />\n        ) : (\n          <AutoColumn gap=\"md\">\n            {(approvalA === ApprovalState.NOT_APPROVED ||\n              approvalA === ApprovalState.PENDING ||\n              approvalB === ApprovalState.NOT_APPROVED ||\n              approvalB === ApprovalState.PENDING) &&\n              isValid && (\n                <RowBetween>\n                  <Flex sx={{ justifyContent: 'space-between', columnGap: '15px' }}>\n                    {approvalA !== ApprovalState.APPROVED && (\n                      <Button\n                        csx={styles.button}\n                        onClick={approveACallback}\n                        disabled={approvalA === ApprovalState.PENDING}\n                      >\n                        {approvalA === ApprovalState.PENDING ? (\n                          <Dots>{`${t('Enabling')} ${currencies[Field.CURRENCY_A]?.getSymbol(chainId)}`}</Dots>\n                        ) : (\n                          `${t('Enable')} ${currencies[Field.CURRENCY_A]?.getSymbol(chainId)}`\n                        )}\n                      </Button>\n                    )}\n\n                    {approvalB !== ApprovalState.APPROVED && (\n                      <Box sx={{ padding: '0 5px' }}>\n                        <Button\n                          csx={styles.button}\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{`${t('Enabling')} ${currencies[Field.CURRENCY_B]?.getSymbol(chainId)}`}</Dots>\n                          ) : (\n                            `${t('Enable')} ${currencies[Field.CURRENCY_B]?.getSymbol(chainId)}`\n                          )}\n                        </Button>\n                      </Box>\n                    )}\n                  </Flex>\n                </RowBetween>\n              )}\n            <Button\n              sx={styles.button}\n              onClick={() => {\n                if (expertMode) {\n                  onAdd()\n                } else onPresentAddLiquidityModal()\n              }}\n              disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n            >\n              {error ?? t('Add Liquidity')}\n            </Button>\n          </AutoColumn>\n        )}\n        {!addIsUnsupported ? (\n          pair && !noLiquidity && pairState !== PairState.INVALID ? (\n            <></>\n          ) : null\n        ) : (\n          <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n        )}\n      </Flex>\n      <Flex sx={{ justifyContent: 'center', margin: '10px 0 0' }}>\n        <UnderlinedButton text=\"cancel\" handleClick={onCancel} />\n      </Flex>\n    </>\n  )\n}\n\nexport default LiquidiyWidget\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { LiquidityWidget } from 'components/LiquidityWidget'\nimport { Modal, ModalHeader, Heading, Link, ModalProvider, HelpIcon } from '@ape.swap/uikit'\nimport { Flex } from 'theme-ui'\nimport { merge } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface LiquidityModalProps {\n  widgetProps?: Record<string, any>\n  modalProps?: Record<string, any>\n  handleClose?: () => void\n}\n\nconst LiquidityModal: React.FC<LiquidityModalProps> = ({ widgetProps, modalProps: newModalProps, handleClose }) => {\n  const { t } = useTranslation()\n  const modalProps = {\n    minWidth: '385px',\n    maxWidth: '385px',\n    style: {\n      zIndex: 10,\n      overflowY: 'auto',\n      maxHeight: 'calc(100% - 30px)',\n    },\n  }\n\n  return (\n    <ModalProvider>\n      <Modal open {...merge(modalProps, newModalProps)}>\n        <ModalHeader onDismiss={handleClose}>\n          <Flex\n            sx={{\n              Svg: {\n                marginLeft: 0,\n                marginRight: '11px',\n              },\n              flexDirection: 'row-reverse',\n            }}\n          >\n            <Link\n              href=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/exchange/liquidity\"\n              target=\"_blank\"\n              textAlign=\"center\"\n            >\n              <HelpIcon width=\"20px\" style={{ marginLeft: '10px' }} />\n            </Link>\n            <Heading sx={{ fontSize: '22px', lineHeight: '33px' }} as=\"h4\">\n              {t('Add Liquidity')}\n            </Heading>\n          </Flex>\n        </ModalHeader>\n        <LiquidityWidget {...widgetProps} onCancel={handleClose} />\n      </Modal>\n    </ModalProvider>\n  )\n}\n\nexport default LiquidityModal\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, TooltipBubble } from '@ape.swap/uikit'\nimport { InfoIcon } from '@apeswapfinance/uikit'\nimport React, { useState } from 'react'\nimport { ContentContainer, ListCardContainer, ListExpandedContainer, styles } from './styles'\nimport { ListCardProps } from './types'\n\nconst ListCard: React.FC<ListCardProps> = ({\n  serviceTokenDisplay,\n  tag,\n  title,\n  cardContent,\n  expandedContent,\n  infoContent,\n  infoContentPosition,\n  expandedContentJustified,\n  titleContainerWidth,\n  open,\n  alignServiceTokens,\n  toolTipIconWidth,\n  ttWidth,\n}) => {\n  const [expanded, setExpanded] = useState(open)\n  return (\n    <>\n      <ListCardContainer onClick={() => setExpanded((prev) => !prev)}>\n        <Flex sx={{ ...styles.titleContainer, maxWidth: titleContainerWidth || '290px' }}>\n          <Flex sx={{ mr: '10px' }}>\n            {alignServiceTokens ? (\n              <Flex sx={{ width: '130px', justifyContent: 'flex-end' }}>{serviceTokenDisplay}</Flex>\n            ) : (\n              serviceTokenDisplay\n            )}\n          </Flex>\n          <Flex sx={{ justifyContent: 'center' }}>\n            {tag}\n            {title}\n          </Flex>\n        </Flex>\n        <ContentContainer>{cardContent}</ContentContainer>\n        {expandedContent && (\n          <span style={{ marginRight: '30px' }}>\n            <Svg icon=\"caret\" direction={expanded ? 'up' : 'down'} width=\"15px\" />\n          </span>\n        )}\n        {infoContent && (\n          <div style={{ display: 'inline-block' }}>\n            <TooltipBubble\n              placement=\"bottomRight\"\n              body={infoContent}\n              transformTip={infoContentPosition || 'translate(-82%, 40%)'}\n              width={ttWidth || '200px'}\n            >\n              <InfoIcon width={toolTipIconWidth || '25px'} />\n            </TooltipBubble>\n          </div>\n        )}\n      </ListCardContainer>\n      {expandedContent && expanded && (\n        <ListExpandedContainer justifyContent={expandedContentJustified}>{expandedContent}</ListExpandedContainer>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(ListCard)\n","/** @jsxImportSource theme-ui */\nimport { Flex, TooltipBubble, InfoIcon } from '@ape.swap/uikit'\nimport React, { useState } from 'react'\nimport { ContentContainer, DropDownIcon, ListCardContainer, ListExpandedContainer, styles } from './styles'\nimport { ListCardProps } from './types'\n\nconst MobileListCard: React.FC<ListCardProps> = ({\n  serviceTokenDisplay,\n  tag,\n  title,\n  cardContent,\n  expandedContent,\n  infoContent,\n  infoContentPosition,\n  open,\n  expandedContentSize,\n  toolTipIconWidth,\n  toolTipStyle,\n  ttWidth,\n}) => {\n  const [expanded, setExpanded] = useState(open)\n  return (\n    <>\n      <ListCardContainer onClick={() => setExpanded((prev) => !prev)}>\n        <Flex sx={{ width: '100%', justifyContent: 'space-between' }}>\n          <Flex sx={styles.titleContainer}>\n            {serviceTokenDisplay}\n            <Flex sx={{ flexDirection: 'column', marginLeft: '10px' }}>\n              {tag}\n              {title}\n            </Flex>\n          </Flex>\n          <Flex>\n            {expandedContent && <DropDownIcon open={expanded} mr=\"20px\" />}\n            {infoContent && (\n              <div style={{ display: 'inline-block', ...toolTipStyle }}>\n                <TooltipBubble\n                  body={infoContent}\n                  transformTip={infoContentPosition || 'translate(0%, 0%)'}\n                  width={ttWidth || '200px'}\n                >\n                  <InfoIcon width={toolTipIconWidth || '25px'} />\n                </TooltipBubble>\n              </div>\n            )}\n          </Flex>\n        </Flex>\n        <ContentContainer>{cardContent}</ContentContainer>\n      </ListCardContainer>\n      {expandedContent && expanded && (\n        <ListExpandedContainer size={expandedContentSize}>{expandedContent}</ListExpandedContainer>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(MobileListCard)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport ServiceTokenDisplay from 'components/ServiceTokenDisplay'\nimport useIsMobile from 'hooks/useIsMobile'\nimport ListCard from './ListCard'\nimport { ListViewContainer } from './styles'\nimport MobileListCard from './MobileListCard'\nimport { ExtendedListViewProps } from './types'\n\nconst ListView: React.FC<{ listViews: ExtendedListViewProps[] }> = ({ listViews }) => {\n  const isMobile = useIsMobile()\n\n  return (\n    <ListViewContainer>\n      {listViews.map((view) => {\n        return isMobile ? (\n          <MobileListCard\n            serviceTokenDisplay={\n              <ServiceTokenDisplay\n                token1={view.tokens.token1}\n                token2={view.tokens.token2}\n                token3={view.tokens?.token3}\n                token4={view.tokens?.token4}\n                billArrow={view?.billArrow}\n                earnLp={view?.earnLp}\n                stakeLp={view?.stakeLp}\n                dualEarn={view.tokens?.token4 != null}\n              />\n            }\n            tag={view?.tag}\n            title={view.title}\n            cardContent={view.cardContent}\n            expandedContent={view.expandedContent}\n            infoContent={view.infoContent}\n            infoContentPosition={view?.infoContentPosition}\n            key={view.id}\n            open={view?.open}\n            expandedContentSize={view?.expandedContentSize}\n            titleContainerWidth={view?.titleContainerWidth}\n            toolTipIconWidth={view?.toolTipIconWidth}\n            toolTipStyle={view?.toolTipStyle}\n            ttWidth={view?.ttWidth}\n          />\n        ) : (\n          <ListCard\n            serviceTokenDisplay={\n              <ServiceTokenDisplay\n                token1={view.tokens.token1}\n                token2={view.tokens.token2}\n                token3={view.tokens?.token3}\n                token4={view.tokens?.token4}\n                billArrow={view?.billArrow}\n                earnLp={view?.earnLp}\n                stakeLp={view?.stakeLp}\n                dualEarn={view.tokens?.token4 != null}\n              />\n            }\n            tag={view?.tag}\n            title={view.title}\n            cardContent={view.cardContent}\n            expandedContent={view.expandedContent}\n            infoContent={view.infoContent}\n            infoContentPosition={view?.infoContentPosition}\n            expandedContentJustified={view?.expandedContentJustified}\n            titleContainerWidth={view?.titleContainerWidth}\n            key={view.id}\n            open={view?.open}\n            alignServiceTokens={view?.alignServiceTokens}\n            toolTipIconWidth={view?.toolTipIconWidth}\n            toolTipStyle={view?.toolTipStyle}\n            ttWidth={view?.ttWidth}\n          />\n        )\n      })}\n    </ListViewContainer>\n  )\n}\n\nexport default React.memo(ListView)\n","import { Flex } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst ListViewLayout = styled(Flex)`\n  position: relative;\n  flex-direction: column;\n  align-self: center;\n  max-width: 500px;\n  min-width: 300px;\n  width: 100%;\n  padding: 0px 10px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 100%;\n    max-width: 1150px;\n  }\n`\n\nexport default ListViewLayout\n","import { ThemeUIStyleObject } from 'theme-ui'\nimport { ArrowDropDownIcon, Flex, Text } from '@apeswapfinance/uikit'\nimport styled, { keyframes } from 'styled-components'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  titleContainer: {\n    alignItems: 'center',\n    height: '100%',\n    maxWidth: '290px',\n    width: '100%',\n  },\n}\n\nconst ExpandLargeAnimation = keyframes`\n    0%{height: 0;}\n    100%{height: 100px;}\n`\n\nconst ExpandSmallAnimation = (size?: number) => keyframes`\n    0%{height: 0;}\n    100%{height: ${size || 234}px;}\n`\n\nexport const ListExpandedContainer = styled(Flex)<{ size?: number; justifyContent?: string }>`\n  height: ${({ size }) => size || 234}px;\n  align-items: center;\n  justify-content: ${({ justifyContent }) => justifyContent || 'space-between'};\n  flex-wrap: wrap;\n  animation: ${({ size }) => ExpandSmallAnimation(size)} 0.3s ease;\n  overflow: hidden;\n  margin: 0px 10px 0px 10px;\n  padding: 10px;\n  background: ${({ theme }) => theme.colors.white3};\n  max-width: 500px;\n  min-width: 300px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 0px 30px 0px 30px;\n    animation: ${ExpandLargeAnimation} 0.3s ease;\n    height: 100px;\n    max-width: 100%;\n    flex-wrap: no-wrap;\n  }\n`\n\nexport const ListCardContainer = styled(Flex)`\n  height: 130px;\n  border-radius: 0;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.colors.white2};\n  border-bottom: 1px solid rgba(226, 226, 226, 0.2);\n  padding: 10px;\n  margin: 0px 10px 0px 10px;\n  max-width: 500px;\n  min-width: 300px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    height: 86px;\n    padding: 0px 30px 0px 30px;\n    max-width: 100%;\n  }\n`\nexport const ListViewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  & ${ListCardContainer}:first-child {\n    border-radius: 10px 10px 0px 0px;\n  }\n  & ${ListCardContainer}:last-child {\n    border-radius: 0px 0px 10px 10px;\n    border: none;\n  }\n`\n\nexport const DropDownIcon = styled(ArrowDropDownIcon)<{ open: boolean; width?: string }>`\n  width: ${({ width }) => width || '15px'};\n  transform: ${({ open }) => (open ? 'rotate(-180deg)' : '')};\n  transition: transform 0.3s ease;\n  right: 0;\n  cursor: pointer;\n`\n\nexport const TagContainer = styled(Flex)<{ backgroundColor: string }>`\n  align-items: center;\n  justify-content: center;\n  height: 15px;\n  border-radius: 7px;\n  color: white;\n  font-weight: 800;\n  line-height: 0px;\n  font-size: 10px;\n  padding: 9px 5px;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n`\n\nexport const ContentContainer = styled(Flex)`\n  position: relative;\n  width: 100%;\n  height: 62.5px;\n  align-items: flex-end;\n  justify-content: space-between;\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 60px;\n  }\n`\n\nexport const TitleText = styled(Text)`\n  font-size: 12px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 16px;\n  }\n`\n","const styles = {\n  text: {\n    fontSize: '12px',\n    lineHeight: '14px',\n    fontWeight: '700',\n    color: 'text',\n  },\n  row: {\n    backgroundColor: 'white3',\n    width: '100%',\n    padding: '6px 10px',\n    justifyContent: 'space-between',\n    '&:first-child': {\n      borderRadius: '6px 6px 0 0',\n    },\n    '&:last-child': {\n      borderRadius: '0 0 6px 6px',\n    },\n    '&:nth-child(2)': {\n      background: 'white4',\n    },\n  },\n  button: {\n    '&&': {\n      fontSize: '16px',\n      fontWeight: 700,\n      padding: '10px 32px',\n    },\n  },\n}\n\nexport default styles\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Button, useWalletModal } from '@ape.swap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport styles from './styles'\n\nconst ConnectButton = () => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} csx={styles.button}>\n      {t('CONNECT WALLET')}\n    </Button>\n  )\n}\n\nexport default ConnectButton\n","import BigNumber from 'bignumber.js'\nimport { Contract, ethers } from 'ethers'\nimport {\n  VaultApeV1,\n  Iazo,\n  SousChef,\n  Masterchef,\n  Erc20,\n  MiniApeV2,\n  Auction,\n  NfaStaking,\n  IazoFactory,\n  Bill,\n  BillNft,\n  VaultApeV2,\n  JungleChef,\n} from 'config/abi/types'\n\nexport const approve = async (lpContract: Erc20, masterChefContract: Contract) => {\n  return lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stake = async (masterChefContract: Masterchef, pid, amount) => {\n  if (pid === 0) {\n    return masterChefContract\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .then((trx) => {\n        return trx.wait()\n      })\n  }\n\n  return masterChefContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const sousStake = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const sousStakeBnb = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleStake = async (jungleChefContract: JungleChef, amount) => {\n  return jungleChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const unstake = async (masterChefContract: Masterchef, pid, amount) => {\n  if (pid === 0) {\n    return masterChefContract\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .then((trx) => {\n        return trx.wait()\n      })\n  }\n  return masterChefContract\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const sousUnstake = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleUnstake = async (jungleChefContract: JungleChef, amount) => {\n  return jungleChefContract.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const sousEmegencyWithdraw = async (sousChefContract: SousChef) => {\n  return sousChefContract.emergencyWithdraw().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const harvest = async (masterChefContract: Masterchef, pid) => {\n  if (pid === 0) {\n    return masterChefContract.leaveStaking('0').then((trx) => {\n      return trx.wait()\n    })\n  }\n  return masterChefContract.deposit(pid, '0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const soushHarvest = async (sousChefContract: SousChef) => {\n  return sousChefContract.deposit('0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleHarvest = async (jungleChefContract: JungleChef) => {\n  return jungleChefContract.deposit('0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const bid = async (auctionContract: Auction, amount, id) => {\n  return auctionContract\n    .bid(id, { value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const nextAuction = async (auctionContract: Auction, id) => {\n  return auctionContract.endAuction(id).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const listNfa = async (\n  auctionContract: Auction,\n  id,\n  auctionLength,\n  timeToExtend,\n  minimumExtendTime,\n  minimumBid,\n) => {\n  return auctionContract\n    .pushToAuction(\n      id,\n      auctionLength,\n      timeToExtend,\n      minimumExtendTime,\n      new BigNumber(minimumBid).times(new BigNumber(10).pow(18)).toString(),\n    )\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const removeAuction = async (auctionContract: Auction, id) => {\n  return auctionContract.removeAuction(id).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaStake = async (nfaStakingChefContract: NfaStaking, ids) => {\n  return nfaStakingChefContract.deposit(ids).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaStakeHarvest = async (nfaStakingChefContract: NfaStaking) => {\n  return nfaStakingChefContract.deposit([]).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaUnstake = async (nfaStakingChefContract: NfaStaking, ids) => {\n  return nfaStakingChefContract.withdraw(ids).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const harvestMaximizer = async (vaultApeContract: VaultApeV2, pid) => {\n  return vaultApeContract.harvestAll(pid).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stakeVaultV1 = async (vaultApeContract: VaultApeV1, pid, amount) => {\n  return vaultApeContract['deposit(uint256,uint256)'](\n    pid,\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n  ).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const vaultUnstakeV1 = async (vaultApeContract: VaultApeV1, pid, amount) => {\n  return vaultApeContract['withdraw(uint256,uint256)'](\n    pid,\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n  ).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stakeVaultV2 = async (vaultApeContract: VaultApeV2, pid, amount) => {\n  return vaultApeContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const vaultUnstakeV2 = async (vaultApeContract: VaultApeV2, pid, amount) => {\n  return vaultApeContract\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const vaultUnstakeAll = async (vaultApeContract: VaultApeV1 | VaultApeV2, pid) => {\n  return vaultApeContract.withdrawAll(pid).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const miniChefStake = async (miniChefContract: MiniApeV2, pid, amount, account) => {\n  return miniChefContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const miniChefHarvest = async (miniChefContract: MiniApeV2, pid, account) => {\n  return miniChefContract.harvest(pid, account).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const miniChefUnstake = async (miniChefContract: MiniApeV2, pid, amount, account) => {\n  return miniChefContract\n    .withdrawAndHarvest(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\n/* \nunitParams[9]\n0: tokenPrice - string\n1: amount - string (hardcap)\n2: softCap - string\n3: startTime - string (unix timstamp)\n4: activeTime - number (seconds)\n5: lockPeriod - number (seconds)\n6: maxSpendPerBuyer - string\n7: liquidityPercent - number\n8: listingPrice - number (if 0 same as tokenPrice)\n*/\nexport const createNewIazo = async (\n  iazoFactoryContract: IazoFactory, // Contract\n  iazoOwner, // Address\n  iazoToken, // Address\n  baseToken, // Address\n  burnRemains, // Bool\n  unitParams, // uint256[9]\n  creationFee, // string\n) => {\n  return iazoFactoryContract\n    .createIAZO(iazoOwner, iazoToken, baseToken, burnRemains, unitParams, {\n      value: creationFee,\n    })\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const userDeposit = async (iazoContract: Iazo, amount) => {\n  return iazoContract.userDeposit(amount).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userDepositNative = async (iazoContract: Iazo, amount) => {\n  return iazoContract.userDepositNative({ value: amount }).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userWithdraw = async (iazoContract: Iazo) => {\n  return iazoContract.userWithdraw().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const withdrawOfferTokensOnFailure = async (iazoContract: Iazo) => {\n  return iazoContract.withdrawOfferTokensOnFailure().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userBuyBill = async (billContract: Bill, user: string, lpAmount: string, maxPrice: string) => {\n  return billContract\n    .deposit(new BigNumber(lpAmount).times(new BigNumber(10).pow(18)).toString(), maxPrice, user)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const userClaimBill = async (billContract: Bill, billIds: string[]) => {\n  return billContract.batchRedeem(billIds).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userTransferBillNft = async (billNft: BillNft, billId: string, fromAddress: string, toAddress: string) => {\n  return billNft['safeTransferFrom(address,address,uint256)'](fromAddress, toAddress, billId).then((trx) => {\n    return trx.wait()\n  })\n}\n","import { useEffect, useState } from 'react'\n\nconst useProgressiveImage = (src: string) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null)\n  useEffect(() => {\n    const img = new Image()\n    img.src = src\n    img.onload = () => setSourceLoaded(src)\n  }, [src])\n\n  return sourceLoaded\n}\n\nexport default useProgressiveImage\n","import { ArrowDropDownIcon, Flex, Skeleton } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Style for the banner flex\n  flexPrimary: {\n    position: 'relative',\n    width: '100%',\n  },\n  // Style for title container\n  titleContainer: {\n    position: 'absolute',\n    flexDirection: 'column',\n    top: '20%',\n    left: '5%',\n    width: '45%',\n  },\n  // Style for the banner text\n  titleText: {\n    fontWeight: 700,\n    lineHeight: '4.5vw',\n    fontSize: '5vw',\n    '@media screen and (min-width: 1130px)': {\n      lineHeight: '50px',\n      fontSize: '55px',\n    },\n  },\n  // Style for learn more text\n  learnText: {\n    mt: '5%',\n    fontSize: 'calc(6px + 1.5vw)',\n    textTransform: 'capitalize',\n    padding: 0,\n    fontWeight: 600,\n    '@media screen and (min-width: 1130px)': {\n      fontSize: '22.5px',\n    },\n  },\n}\n\nexport const FlexImage = styled(Flex)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const FlexSkeleton = styled(Skeleton)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const LearnMoreArrow = styled(ArrowDropDownIcon)`\n  transform: rotate(270deg);\n  margin-left: 10px;\n  width: calc(4px + 0.9vw);\n  @media screen and (min-width: 1130px) {\n    width: 14px;\n  }\n`\n","/** @jsxImportSource theme-ui */\nimport { useHistory } from 'react-router-dom'\nimport { Flex, Button } from '@ape.swap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { Text } from 'theme-ui'\nimport useProgressiveImage from 'hooks/useProgressiveImage'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles, FlexImage, LearnMoreArrow, FlexSkeleton } from './styles'\nimport { BannerTypes, ColorProps } from './types'\n\nconst Banner: React.FC<{\n  banner: BannerTypes\n  link: string\n  title?: string\n  children?: React.FC\n  listViewBreak?: boolean\n  margin?: string\n  titleColor?: ColorProps\n  maxWidth?: number\n}> = ({ banner, children, title, listViewBreak, margin, titleColor, link, maxWidth = 1200 }) => {\n  const history = useHistory()\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n  const loaded = useProgressiveImage(`../images/new-banners/${banner}-${isDark ? 'night' : 'day'}.svg`)\n\n  const openBannerLink = (bannerLink: string) =>\n    bannerLink.includes('modal') ? history.push({ search: bannerLink }) : window.open(bannerLink, '_blank')\n\n  // Media breaks are used until tablet mode on list view is designed\n  return (\n    <Flex sx={{ ...styles.flexPrimary, margin }}>\n      {loaded ? (\n        <FlexImage sx={{ backgroundImage: `url(${loaded})` }} maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      ) : (\n        <FlexSkeleton maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      )}\n      <Flex sx={{ ...styles.titleContainer }}>\n        <Text\n          sx={{\n            ...styles.titleText,\n            color: titleColor || 'text',\n            '@media screen and (min-width: 500px) and (max-width: 851px)': {\n              fontSize: listViewBreak ? '25px' : '5vw',\n              lineHeight: listViewBreak ? '25px' : '5vw',\n            },\n          }}\n        >\n          {title.toUpperCase()}\n        </Text>\n        <Button\n          variant=\"text\"\n          onClick={() => openBannerLink(link)}\n          sx={{\n            ...styles.learnText,\n            color: titleColor || 'text',\n\n            '&&&:hover': {\n              textDecoration: 'none',\n              color: titleColor || 'text',\n            },\n          }}\n        >\n          {t('Learn More')} <LearnMoreArrow color={titleColor || 'text'} />\n        </Button>\n      </Flex>\n      {children}\n    </Flex>\n  )\n}\n\nexport default React.memo(Banner)\n","import { Flex, Skeleton, Text } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\n\nexport const ListViewContentContainer = styled(Flex)<{ width?: number; height?: number }>`\n  flex-direction: column;\n  align-items: flex-start:\n  justify-content: flex-start;\n  height: ${({ height }) => (height ? `${height}px` : '100%')};\n  max-width: ${({ width }) => width || 100}px;\n  width: 100%;\n`\n\nexport const TitleText = styled(Text)<{ lineHeight?: number }>`\n  opacity: 0.6;\n  font-size: 12px;\n  line-height: ${({ lineHeight }) => lineHeight || 20}px;\n`\n\nexport const ValueText = styled(Text)<{ lineHeight?: number; value2Secondary?: boolean; valueColor?: string }>`\n  font-size: 12px;\n  color: ${({ valueColor, theme }) => valueColor || theme.colors.text};\n  line-height: ${({ lineHeight }) => lineHeight || 20}px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: ${({ value2Secondary }) => (value2Secondary ? '12px' : '16px')};\n  }\n`\n\nexport const IconImage = styled.img`\n  width: 16px;\n  height: 16px;\n  margin-right: 5px;\n`\n\nexport const ValueSkeleton = styled(Skeleton)`\n  width: 60px;\n  height: 20px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 100px;\n  }\n`\n","/** @jsxImportSource theme-ui */\nimport { Flex, HelpIcon } from '@apeswapfinance/uikit'\nimport { TooltipBubble } from '@ape.swap/uikit'\nimport React from 'react'\nimport { TitleText, ListViewContentContainer, ValueText, ValueSkeleton } from './styles'\nimport { ListViewContentProps } from './types'\n\nconst ListViewContent: React.FC<ListViewContentProps> = ({\n  title,\n  value,\n  value2,\n  value2Secondary,\n  valueIcon,\n  value2Icon,\n  mb,\n  ml,\n  width,\n  height,\n  valueColor,\n  lineHeight,\n  toolTip,\n  aprCalculator,\n  toolTipPlacement,\n  toolTipTransform,\n  justifyContent,\n}) => {\n  return (\n    <ListViewContentContainer mb={mb} ml={ml} width={width} height={height}>\n      <Flex alignItems=\"center\">\n        {toolTip ? (\n          <Flex alignItems=\"flex-start\">\n            <div style={{ display: 'inline-block' }}>\n              <TooltipBubble\n                placement={toolTipPlacement || 'topLeft'}\n                transformTip={toolTipTransform}\n                body={<Flex>{toolTip}</Flex>}\n                width=\"180px\"\n              >\n                <TitleText lineHeight={lineHeight}>\n                  {title}\n                  <HelpIcon width=\"12px\" ml=\"5px\" />\n                </TitleText>\n              </TooltipBubble>\n            </div>\n            <div style={{ marginLeft: '5px' }} />\n            {aprCalculator}\n          </Flex>\n        ) : (\n          <Flex>\n            <TitleText lineHeight={lineHeight}>{title}</TitleText>\n            {aprCalculator}\n          </Flex>\n        )}\n      </Flex>\n\n      <Flex alignItems=\"center\" justifyContent={justifyContent}>\n        {valueIcon && valueIcon}\n        <ValueText bold lineHeight={lineHeight} valueColor={valueColor}>\n          {value.includes('NaN') || value.includes('undefined') || value.includes('null') ? <ValueSkeleton /> : value}\n        </ValueText>\n      </Flex>\n\n      <Flex alignItems=\"center\" justifyContent={justifyContent}>\n        {value2Icon && value2Icon}\n        {value2 && (\n          <ValueText bold={!value2Secondary} value2Secondary={value2Secondary} lineHeight={lineHeight}>\n            {value2.includes('NaN') || value2.includes('undefined') || value.includes('null') ? (\n              <ValueSkeleton />\n            ) : (\n              value2\n            )}\n          </ValueText>\n        )}\n      </Flex>\n    </ListViewContentContainer>\n  )\n}\n\nexport default React.memo(ListViewContent)\n"],"sourceRoot":""}
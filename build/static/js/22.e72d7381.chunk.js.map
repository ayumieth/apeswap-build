{"version":3,"sources":["views/Nft/components/InfoRow.tsx","views/Nft/components/NftCard/index.tsx","views/Nft/components/NftGrid.tsx","views/Nft/components/NftList.tsx","views/Nft/components/SortNfts.tsx","views/Nft/components/TransferNftModal.tsx","views/Nft/components/WalletNft.tsx","views/Nft/components/OwnedNft.tsx","views/Nft/index.tsx","hooks/useProgressiveImage.ts","components/Banner/styles.ts","components/Banner/index.tsx","views/Nft/components/Image.tsx"],"names":["InfoRow","styled","div","Header","NftCard","n","width","nft","index","name","image","attributes","to","sx","borderRadius","overflow","Image","src","alt","originalLink","rarityTier","rarityTierNumber","height","display","alignItems","justifyContent","as","textAlign","length","Array","join","NftGrid","BaseLayout","theme","mediaQueries","sm","NftList","nftSet","map","SortHolder","DropDownContent","props","colors","gray","DropDownItem","p","DropDown","primary","ResetArrow","svg","SearchBoxHolder","SearchBox","input","BackToTop","button","SortTitle","primaryBright","SortNfts","useState","filterState","setFilterState","filterNftSet","setFilterNftSet","endPagination","setEndPagination","slice","nftToDisplay","setNftToDisplay","currentFilterName","setCurrentFilterName","currentSortName","setCurrentSortName","t","useTranslation","useEffect","document","addEventListener","pageHeight","documentElement","offsetHeight","window","scrollY","pageNum","sortBy","sortType","tempRaritySort","orderBy","tempIndexSort","filterBy","tier","tempFilter","filter","onClick","nextSet","viewBox","d","onChange","e","toLowerCase","includes","target","value","search","type","placeholder","scrollTop","Value","Text","ModalContent","Actions","Label","label","text","TransferNftModal","tokenId","onDismiss","isLoading","setIsLoading","setValue","error","setError","account","useWeb3React","nonFungibleApesContract","useNonFungibleApes","handleConfirm","a","Web3","utils","isAddress","then","trx","wait","console","warn","title","color","mb","htmlFor","id","evt","inputValue","isWarning","disabled","fullWidth","UnderlinedButton","handleClick","CardFlipInner","CardFlip","CardFlipFront","CardFlipBack","Row","StyledText","WalletNft","reInitialize","useContext","NftProviderContext","nfaAttributes","useModal","onSuccess","onPresentTransferModal","fontSize","paddingTop","Object","keys","key","style","paddingLeft","paddingRight","variant","position","left","bottom","OwnedNfts","profile","useProfile","ownedNfts","fontWeight","flexDirection","flexWrap","alignContent","backgroundColor","boxShadow","padding","marginTop","marginBottom","StyledHero","StyledAnchor","Nft","useFetchNfas","useNfas","nfas","isInitialized","Page","Banner","banner","link","margin","textDecoration","href","rel","OwnedNft","useProgressiveImage","sourceLoaded","setSourceLoaded","img","onload","styles","top","lineHeight","mt","textTransform","FlexImage","Flex","listViewBreak","maxWidth","FlexSkeleton","Skeleton","LearnMoreArrow","ArrowDropDownIcon","children","titleColor","history","useHistory","isDark","useTheme","loaded","backgroundImage","toUpperCase","bannerLink","push","open","React","memo","sway","keyframes","StyledImage","imageBorderRadius","Container","gradient","backgroundSize","TierSvg","TierNumber","hideTier","gradientStyle"],"mappings":"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","file":"static/js/22.e72d7381.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport default InfoRow\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Card, Heading } from '@apeswapfinance/uikit'\nimport { Nft } from 'config/constants/types'\nimport { Box } from 'theme-ui'\nimport InfoRow from '../InfoRow'\nimport Image from '../Image'\n\ninterface NftCardProps {\n  nft: Nft\n}\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\n  const { index, name, image, attributes } = nft\n\n  const pad = (n, width) => {\n    return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n\n  }\n\n  return (\n    <Link to={`/nft/${index}`}>\n      <Card sx={{ borderRadius: '10px', overflow: 'hidden' }}>\n        <Image src={image} alt={name} originalLink={image} rarityTier={attributes.rarityTierNumber} />\n        <Box sx={{ height: '80px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Header>\n            <Heading as=\"h5\" sx={{ textAlign: 'center' }}>\n              {name} - #{pad(`${index}`, '4')}\n            </Heading>\n          </Header>\n        </Box>\n      </Card>\n    </Link>\n  )\n}\n\nexport default NftCard\n","import styled from 'styled-components'\nimport { BaseLayout } from '@apeswapfinance/uikit'\n\nconst NftGrid = styled(BaseLayout)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  & > div {\n    grid-column: 2 / 6;\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      grid-column: span 4;\n    }\n  }\n`\n\nexport default NftGrid\n","import React from 'react'\nimport { Nft } from 'config/constants/types'\nimport NftCard from './NftCard'\nimport NftGrid from './NftGrid'\n\ninterface NftListProps {\n  nftSet: Nft[]\n}\n\nconst NftList: React.FC<NftListProps> = ({ nftSet }) => {\n  return (\n    <>\n      <NftGrid>\n        {nftSet.map((nft) => (\n          <div key={nft.index}>\n            <NftCard nft={nft} />\n          </div>\n        ))}\n      </NftGrid>\n    </>\n  )\n}\n\nexport default NftList\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Nft } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport NftList from './NftList'\n\ninterface NftSortProps {\n  nftSet: Nft[]\n}\n\nconst SortHolder = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-content: center;\n  background-color: transparent;\n  boxshadow: none;\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`\n\nconst DropDownContent = styled.div`\n  display: none;\n  position: absolute;\n  background-color: ${(props) => props.theme.colors};\n  color: ${(props) => props.theme.colors.gray};\n  min-width: 140px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  line-height: 50px;\n  font-size: 19px;\n  z-index: 1;\n  align-self: center;\n`\n\nconst DropDownItem = styled.p`\n  cursor: pointer;\n  opacity: 0.8;\n  font-weight: 800;\n\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst DropDown = styled.div`\n  &:hover ${DropDownContent} {\n    display: block;\n  }\n  background-color: ${(props) => props.theme.colors.primary};\n  border-radius: 10%;\n  width: 140px;\n  color: white;\n  height: 50px;\n  text-align: center;\n  line-height: 50px;\n  font-size: 22.5px;\n  cursor: pointer;\n  margin: 0 20px 25px 0px;\n  @media (max-width: 768px) {\n    margin: 0 20px 25px 20px;\n  }\n`\n\nconst ResetArrow = styled.svg`\n  cursor: pointer;\n  fill: ${(props) => props.theme.colors.primary};\n  width: 40px;\n  height: 50px;\n  @media (min-width: 768px) {\n    margin-right: 20px;\n  }\n`\n\nconst SearchBoxHolder = styled.div`\n  float: right;\n  height: 50px;\n  width: 280px;\n  font-size: 30px;\n  margin: 0 20px 25px 0px;\n  @media (max-width: 768px) {\n    margin: 0 20px 25px 20px;\n  }\n`\n\nconst SearchBox = styled.input`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  font-size: 20px;\n  display: flex;\n  border: none;\n  -webkit-box-shadow: 0px 0px 5px 0px ${(props) => props.theme.colors.gray};\n  box-shadow: 0px 0px 5px 0px ${(props) => props.theme.colors.gray};\n  background-color: ${(props) => props.theme.colors};\n  color: ${(props) => props.theme.colors.gray};\n  font-weight: 800;\n\n  &:focus {\n    outline: none !important;\n    border-color: ${(props) => props.theme.colors};\n  }\n  &::placeholder {\n    color: ${(props) => props.theme.colors.gray};\n    text-align: center;\n  }\n`\n\nconst BackToTop = styled.button`\n  position: sticky;\n  bottom: 10px;\n  left: 100%;\n  width: 50px;\n  cursor: pointer;\n  height: 50px;\n  fill: black;\n  align-text: center;\n  opacity: 0.8;\n  border: none;\n  color: white;\n  border-radius: 50%;\n  font-size: 30px;\n  background-color: ${(props) => props.theme.colors.primary};\n  &:focus {\n    outline: none !important;\n  }\n`\n\nconst SortTitle = styled.p`\n  font-weight: 800;\n  color: ${(props) => props.theme.colors.primaryBright};\n`\n\nconst SortNfts: React.FC<NftSortProps> = ({ nftSet }) => {\n  const [filterState, setFilterState] = useState(false)\n  const [filterNftSet, setFilterNftSet] = useState(nftSet)\n  const [endPagination, setEndPagination] = useState(50)\n  const [nftToDisplay, setNftToDisplay] = useState(nftSet.slice(0, endPagination))\n  const [currentFilterName, setCurrentFilterName] = useState('Filter')\n  const [currentSortName, setCurrentSortName] = useState('Sort')\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      const pageHeight = document.documentElement.offsetHeight\n      const cardHeight = 293.333 * 5\n      const scrollCheck = window.scrollY > pageHeight - cardHeight\n      if (scrollCheck) {\n        setEndPagination((pageNum) => pageNum + 50)\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    if (endPagination <= 1000) {\n      setNftToDisplay(filterNftSet.slice(0, endPagination))\n    }\n  }, [setNftToDisplay, filterNftSet, endPagination])\n\n  const sortBy = (sortType) => {\n    if (sortType === 'rarity') {\n      const tempRaritySort = orderBy(filterNftSet, ['attributes.rarityOverallRank'])\n      setFilterNftSet(tempRaritySort)\n      setEndPagination(50)\n      setCurrentSortName('Rarity')\n    } else if (sortType === 'index') {\n      const tempIndexSort = orderBy(filterNftSet, 'index')\n      setFilterNftSet(tempIndexSort)\n      setEndPagination(50)\n      setCurrentSortName('Ape #')\n    }\n  }\n\n  const filterBy = (tier) => {\n    const tempFilter = nftSet.filter((nft) => {\n      return nft.attributes.rarityTierNumber === tier\n    })\n    setFilterNftSet(tempFilter)\n    setFilterState(true)\n    setEndPagination(50)\n    setCurrentSortName(t('Sort'))\n    setCurrentFilterName(`Tier ${tier}`)\n  }\n\n  const nextSet = () => {\n    const tempFilter = nftSet.slice(851, 954)\n    setFilterNftSet(tempFilter)\n    setFilterState(true)\n    setCurrentFilterName(t('Next Sale'))\n  }\n\n  const resetFilter = () => {\n    setFilterState(false)\n    setFilterNftSet(nftSet)\n    setEndPagination(50)\n    setCurrentFilterName(t('Filter'))\n    setCurrentSortName('Sort')\n    setNftToDisplay(orderBy(nftSet, 'index').slice(0, 50))\n  }\n\n  const search = (e) => {\n    const tempFilter = nftSet.filter((nft) => {\n      return nft.name.toLowerCase().includes(e.target.value.toLowerCase())\n    })\n    setFilterNftSet(tempFilter)\n    setEndPagination(50)\n  }\n\n  const backToTop = () => {\n    setEndPagination(50)\n    document.documentElement.scrollTop = 0\n  }\n\n  return (\n    <>\n      <SortHolder>\n        <DropDown>\n          <SortTitle>{t(currentSortName)}</SortTitle>\n          <DropDownContent>\n            <DropDownItem onClick={() => sortBy('index')}>{t('Ape #')}</DropDownItem>\n            <DropDownItem onClick={() => sortBy('rarity')}>{t('Rarity')}</DropDownItem>\n          </DropDownContent>\n        </DropDown>\n        <DropDown>\n          <SortTitle>{t(currentFilterName)}</SortTitle>\n          <DropDownContent>\n            <DropDownItem onClick={() => nextSet()}>{t('Next Sale')}</DropDownItem>\n            <DropDownItem onClick={() => filterBy(1)}>{t('Tier 1')}</DropDownItem>\n            <DropDownItem onClick={() => filterBy(2)}>{t('Tier 2')}</DropDownItem>\n            <DropDownItem onClick={() => filterBy(3)}>{t('Tier 3')}</DropDownItem>\n            <DropDownItem onClick={() => filterBy(4)}>{t('Tier 4')}</DropDownItem>\n            <DropDownItem onClick={() => filterBy(5)}>{t('Tier 5')}</DropDownItem>\n          </DropDownContent>\n        </DropDown>\n        {filterState && (\n          <ResetArrow viewBox=\"0 0 15 15\" onClick={() => resetFilter()}>\n            <g>\n              <path\n                d=\"M12.083,1.887c-0.795-0.794-1.73-1.359-2.727-1.697v2.135c0.48,0.239,0.935,0.55,1.334,0.95\n                c1.993,1.994,1.993,5.236,0,7.229c-1.993,1.99-5.233,1.99-7.229,0c-1.991-1.995-1.991-5.235,0-7.229\n                C3.466,3.269,3.482,3.259,3.489,3.25h0.002l1.181,1.179L4.665,0.685L0.923,0.68l1.176,1.176C2.092,1.868,2.081,1.88,2.072,1.887\n                c-2.763,2.762-2.763,7.243,0,10.005c2.767,2.765,7.245,2.765,10.011,0C14.844,9.13,14.847,4.649,12.083,1.887z\"\n              />\n            </g>\n          </ResetArrow>\n        )}\n        <SearchBoxHolder onChange={(e) => search(e)}>\n          <SearchBox type=\"text\" placeholder={t('Search by ape name')} />\n        </SearchBoxHolder>\n      </SortHolder>\n      <NftList nftSet={nftToDisplay} />\n      {endPagination > 50 && <BackToTop onClick={() => backToTop()}>&#x2191;</BackToTop>}\n    </>\n  )\n}\n\nexport default SortNfts\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Input, Modal, Text } from '@apeswapfinance/uikit'\nimport { Nft } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useNonFungibleApes } from 'hooks/useContract'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenId: number\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 300;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenId, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const nonFungibleApesContract = useNonFungibleApes()\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(t('Please enter a valid wallet address'))\n      } else {\n        setIsLoading(true)\n        await nonFungibleApesContract['safeTransferFrom(address,address,uint256)'](account, value, tokenId).then(\n          (trx) => {\n            return trx.wait()\n          },\n        )\n        setIsLoading(false)\n        onDismiss()\n      }\n    } catch (err) {\n      console.warn('Unable to transfer NFT:', err)\n      setIsLoading(false)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={t('Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"error\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{t('Transferring')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{t('Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={t('Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","import React, { useContext } from 'react'\nimport { Nft } from 'config/constants/types'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Text, Button, useModal } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Image from './Image'\nimport TransferNftModal from './TransferNftModal'\nimport { NftProviderContext } from '../contexts/NftProvider'\n\ninterface NftCardProps {\n  nft: Nft\n}\n\nconst CardFlipInner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n`\n\nconst CardFlip = styled.div`\n  position: relative;\n  &:hover ${CardFlipInner} {\n    transform: rotateY(180deg);\n  }\n  width: 350px;\n  height: 425px;\n  perspective: 1000px;\n  align-self: center;\n  margin: 10px;\n`\n\nconst CardFlipFront = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  background-color: ${(props) => props.theme.colors};\n  border: 2.5px solid ${(props) => props.theme.colors.primary};\n  z-index: -1;\n`\n\nconst CardFlipBack = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  background-color: ${(props) => props.theme.colors};\n  border: 2.5px solid ${(props) => props.theme.colors.primary};\n  transform: rotateY(180deg);\n  z-index: -1;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 10px;\n  justify-content: space-between;\n  margin-top: 10px;\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 800;\n`\n\nconst WalletNft: React.FC<NftCardProps> = ({ nft }) => {\n  const { t } = useTranslation()\n  const { reInitialize } = useContext(NftProviderContext)\n  const nfaAttributes = [\n    'Face',\n    'Base',\n    'Frame',\n    'Mouth',\n    'Eyes',\n    'Hat',\n    'Rarity Score',\n    'Rarity Tier Number',\n    'Rarity Tier Name',\n    'Rarity Overall Rank',\n  ]\n\n  const handleSuccess = () => {\n    reInitialize()\n  }\n\n  const [onPresentTransferModal] = useModal(\n    <TransferNftModal nft={nft} tokenId={nft.index} onSuccess={handleSuccess} />,\n  )\n\n  const pad = (n, width) => {\n    return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n\n  }\n\n  return (\n    <CardFlip>\n      <CardFlipInner>\n        <Link to={`/nft/${nft.index}`}>\n          <CardFlipFront>\n            <Image src={nft.image} alt={nft.image} rarityTier={nft.attributes.rarityTierNumber} />\n            <StyledText fontSize=\"20px\" paddingTop=\"20px\" color=\"subtle\">\n              {nft.name} - #{pad(`${nft.index}`, '4')}\n            </StyledText>\n          </CardFlipFront>\n        </Link>\n        <CardFlipBack>\n          <Link to={`/nft/${nft.index}`}>\n            {Object.keys(nft.attributes).map((key, index) => (\n              <Row key={key}>\n                <StyledText as=\"p\" color=\"subtle\" style={{ paddingLeft: '10px', textAlign: 'left' }}>\n                  {nfaAttributes[index]}:\n                </StyledText>\n                <StyledText as=\"p\" color=\"subtle\" style={{ paddingRight: '10px', textAlign: 'right' }}>\n                  {nft.attributes[key]}\n                </StyledText>\n              </Row>\n            ))}\n          </Link>\n          <Button\n            variant=\"primary\"\n            style={{\n              position: 'absolute',\n              borderRadius: '0px',\n              width: '100%',\n              height: '50px',\n              left: '0',\n              bottom: '0',\n            }}\n            onClick={onPresentTransferModal}\n          >\n            {t('Transfer')}\n          </Button>\n        </CardFlipBack>\n      </CardFlipInner>\n    </CardFlip>\n  )\n}\n\nexport default WalletNft\n","import React from 'react'\nimport { Card, Text } from '@apeswapfinance/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletNft from './WalletNft'\n\nconst OwnedNfts = () => {\n  const { t } = useTranslation()\n  const { profile } = useProfile()\n  return (\n    <>\n      {profile?.ownedNfts && (\n        <>\n          <Text fontSize=\"25px\" style={{ color: 'subtle', paddingTop: '25px' }} fontWeight={800}>\n            {t('Your Apes')}\n          </Text>\n          <Card\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              alignContent: 'center',\n              justifyContent: 'center',\n              backgroundColor: 'transparent',\n              boxShadow: 'none',\n            }}\n            padding=\"25px\"\n            marginTop=\"10px\"\n            marginBottom=\"10px\"\n          >\n            {profile.ownedNfts.map((nft) => (\n              <div key={nft.name}>\n                <WalletNft key={nft.name} nft={nft} />\n              </div>\n            ))}\n          </Card>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default OwnedNfts\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Spinner, Flex } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Banner from 'components/Banner'\nimport Page from 'components/layout/Page'\nimport { useFetchNfas, useNfas } from 'state/hooks'\nimport SortNfts from './components/SortNfts'\nimport OwnedNfts from './components/OwnedNft'\n\nconst StyledHero = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.gray};\n  margin-bottom: 24px;\n  padding-bottom: 32px;\n`\n\nconst StyledAnchor = styled.a`\n  font-weight: 800;\n`\n\nconst Nft = () => {\n  useFetchNfas()\n  const { nfas, isInitialized } = useNfas()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Page>\n        <Banner\n          banner=\"nfa-collection\"\n          link=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/collect/non-fungible-apes-nfas\"\n          title={t('Nfa Collection')}\n          margin=\"0 0 20px 0\"\n        />\n        <StyledHero>\n          <Text style={{ color: 'subtle', paddingTop: '10px', textDecoration: 'underline' }}>\n            <StyledAnchor\n              href=\"https://github.com/ApeSwapFinance/non-fungible-apes\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t('GitHub Info')}\n            </StyledAnchor>\n          </Text>\n          <OwnedNfts />\n          <Text fontSize=\"25px\" style={{ textDecoration: 'underline', marginTop: '25px', color: 'subtle' }}>\n            <StyledAnchor\n              href=\"https://nftkey.app/collections/nfas/?nfasTab=forSale\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t('Check out the NFA aftermarket on NFTKEY!')}\n            </StyledAnchor>\n          </Text>\n        </StyledHero>\n        {isInitialized ? (\n          <SortNfts nftSet={nfas} />\n        ) : (\n          <Flex alignItems=\"center\" justifyContent=\"center\">\n            <Spinner />\n          </Flex>\n        )}\n      </Page>\n    </>\n  )\n}\n\nexport default Nft\n","import { useEffect, useState } from 'react'\n\nconst useProgressiveImage = (src: string) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null)\n  useEffect(() => {\n    const img = new Image()\n    img.src = src\n    img.onload = () => setSourceLoaded(src)\n  }, [src])\n\n  return sourceLoaded\n}\n\nexport default useProgressiveImage\n","import { ArrowDropDownIcon, Flex, Skeleton } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Style for the banner flex\n  flexPrimary: {\n    position: 'relative',\n    width: '100%',\n  },\n  // Style for title container\n  titleContainer: {\n    position: 'absolute',\n    flexDirection: 'column',\n    top: '20%',\n    left: '5%',\n    width: '45%',\n  },\n  // Style for the banner text\n  titleText: {\n    fontWeight: 700,\n    lineHeight: '4.5vw',\n    fontSize: '5vw',\n    '@media screen and (min-width: 1130px)': {\n      lineHeight: '50px',\n      fontSize: '55px',\n    },\n  },\n  // Style for learn more text\n  learnText: {\n    mt: '5%',\n    fontSize: 'calc(6px + 1.5vw)',\n    textTransform: 'capitalize',\n    padding: 0,\n    fontWeight: 600,\n    '@media screen and (min-width: 1130px)': {\n      fontSize: '22.5px',\n    },\n  },\n}\n\nexport const FlexImage = styled(Flex)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const FlexSkeleton = styled(Skeleton)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const LearnMoreArrow = styled(ArrowDropDownIcon)`\n  transform: rotate(270deg);\n  margin-left: 10px;\n  width: calc(4px + 0.9vw);\n  @media screen and (min-width: 1130px) {\n    width: 14px;\n  }\n`\n","/** @jsxImportSource theme-ui */\nimport { useHistory } from 'react-router-dom'\nimport { Flex, Button } from '@ape.swap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { Text } from 'theme-ui'\nimport useProgressiveImage from 'hooks/useProgressiveImage'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles, FlexImage, LearnMoreArrow, FlexSkeleton } from './styles'\nimport { BannerTypes, ColorProps } from './types'\n\nconst Banner: React.FC<{\n  banner: BannerTypes\n  link: string\n  title?: string\n  children?: React.FC\n  listViewBreak?: boolean\n  margin?: string\n  titleColor?: ColorProps\n  maxWidth?: number\n}> = ({ banner, children, title, listViewBreak, margin, titleColor, link, maxWidth = 1200 }) => {\n  const history = useHistory()\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n  const loaded = useProgressiveImage(`../images/new-banners/${banner}-${isDark ? 'night' : 'day'}.svg`)\n\n  const openBannerLink = (bannerLink: string) =>\n    bannerLink.includes('modal') ? history.push({ search: bannerLink }) : window.open(bannerLink, '_blank')\n\n  // Media breaks are used until tablet mode on list view is designed\n  return (\n    <Flex sx={{ ...styles.flexPrimary, margin }}>\n      {loaded ? (\n        <FlexImage sx={{ backgroundImage: `url(${loaded})` }} maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      ) : (\n        <FlexSkeleton maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      )}\n      <Flex sx={{ ...styles.titleContainer }}>\n        <Text\n          sx={{\n            ...styles.titleText,\n            color: titleColor || 'text',\n            '@media screen and (min-width: 500px) and (max-width: 851px)': {\n              fontSize: listViewBreak ? '25px' : '5vw',\n              lineHeight: listViewBreak ? '25px' : '5vw',\n            },\n          }}\n        >\n          {title.toUpperCase()}\n        </Text>\n        <Button\n          variant=\"text\"\n          onClick={() => openBannerLink(link)}\n          sx={{\n            ...styles.learnText,\n            color: titleColor || 'text',\n\n            '&&&:hover': {\n              textDecoration: 'none',\n              color: titleColor || 'text',\n            },\n          }}\n        >\n          {t('Learn More')} <LearnMoreArrow color={titleColor || 'text'} />\n        </Button>\n      </Flex>\n      {children}\n    </Flex>\n  )\n}\n\nexport default React.memo(Banner)\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\ninterface ImageProps {\n  src?: string\n  alt?: string\n  originalLink?: string\n  rarityTier: number\n  borderRadius?: string\n  hideTier?: boolean\n  imageBorderRadius?: boolean\n}\n\ninterface ContainerProps {\n  gradient: string\n  backgroundSize: string\n  borderRadius?: string\n}\n\nconst sway = keyframes`\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n`\n\nconst StyledImage = styled.img<{ imageBorderRadius: boolean }>`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${(props) => (props.imageBorderRadius ? '32px 32px 0 0' : 0)};\n`\n\nconst Container = styled.div<ContainerProps>`\n  background: ${(props) => props.gradient};\n  background-size: ${(props) => props.backgroundSize};\n  position: relative;\n  overflow: hidden;\n  padding-bottom: 100%;\n  animation: ${sway} 20s ease infinite;\n  border-radius: ${(props) => props.borderRadius};\n`\n\nconst TierSvg = styled.div`\n  position: absolute;\n  top: 2.5%;\n  right: 5%;\n  mix-blend-mode: screen;\n  font-size: 50px;\n  fill: rgba(255, 255, 255, 0.1);\n`\n\nconst TierNumber = styled.p`\n  font-weight: 800;\n`\n\nconst Image: React.FC<ImageProps> = ({ src, alt, rarityTier, borderRadius, hideTier, imageBorderRadius }) => {\n  let gradientStyle = ''\n  let backgroundSize = ''\n  if (rarityTier === 1) {\n    gradientStyle = 'linear-gradient(90deg, rgba(0,83,255,1) 0%, rgba(73,252,69,1) 100%);'\n    backgroundSize = '200% 200%'\n  } else if (rarityTier === 2) {\n    gradientStyle =\n      'radial-gradient(circle, rgba(255,0,0,0.6189426112241772) 10%, rgba(121, 7, 242, .75) 70%,rgba(255,162,0,.8) 100%);'\n    backgroundSize = '200% 200%'\n  } else if (rarityTier === 3) {\n    gradientStyle =\n      'linear-gradient( 293.5deg,  rgba(254,255,42,1) .2%, rgba(251,148,207,1) 9.9%, rgba(181,149,208,1) 22.9%, rgba(254,255,42,1) 36.4%, rgba(181,149,208,1) 50.1%, rgba(0,255,252,1) 61.1%, rgba(181,149,208,1) 71.2%, rgba(254,255,42,1) 84.2%, rgba(0,255,252,1) 92.2% );'\n    backgroundSize = '300% 300%'\n  } else if (rarityTier === 4) {\n    gradientStyle =\n      'radial-gradient(circle, rgba(255,255,255,.7) 0%, rgba(255,255,255,0) 70%), linear-gradient(-45deg, rgba(255, 255, 0, .1),rgba(255, 0, 0, .1) ,rgba(255, 255, 0, .1),rgba(0, 255, 255, .1), rgba(255, 255, 255, .1),rgba(255, 255, 0, .1), rgba(255, 0, 255, .1) ,rgba(0, 255, 0, .1), rgba(255, 255, 0, .1)), url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/13471/sparkles.gif)'\n    backgroundSize = '100% 100%'\n  } else if (rarityTier === 5) {\n    gradientStyle =\n      'radial-gradient(circle, rgba(243,255,35,1) 0%, rgba(148,187,233,0) 80%), url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/13471/sparkles.gif)'\n    backgroundSize = '100% 100%'\n  }\n\n  return (\n    <Container gradient={gradientStyle} backgroundSize={backgroundSize} borderRadius={borderRadius}>\n      {!hideTier && (\n        <TierSvg>\n          <TierNumber>{rarityTier}</TierNumber>\n        </TierSvg>\n      )}\n      {src && <StyledImage src={src} alt={alt} imageBorderRadius={imageBorderRadius} />}\n    </Container>\n  )\n}\n\nexport default React.memo(Image)\n"],"sourceRoot":""}
{"version":3,"sources":["state/bills/hooks.ts","views/Bills/components/styles.ts","views/Bills/components/Modals/styles.ts","views/Bills/hooks/useBillType.tsx","views/Bills/hooks/useBuyBill.tsx","views/Bills/components/Actions/styles.ts","views/Bills/components/Actions/Buy.tsx","views/Bills/hooks/useApproveBill.tsx","views/Bills/components/Actions/Approve.tsx","views/Bills/components/Actions/index.tsx","views/Bills/hooks/useClaimBill.tsx","views/Bills/components/Actions/Claim.tsx","views/Bills/components/VestedTimer.tsx","views/Bills/hooks/useTransferBill.tsx","views/Bills/components/Actions/Transfer.tsx","views/Bills/components/Modals/TransferBillModal.tsx","views/Bills/components/Modals/UserBillModalView.tsx","views/Bills/components/Modals/BuyBillModalView.tsx","views/Bills/components/UserBillViews/styles.ts","views/Bills/components/Modals/WarningModal.tsx","views/Bills/components/Modals/index.tsx","views/Bills/components/UserBillViews/ProjectLinks.tsx","views/Bills/components/BillsListView.tsx","views/Bills/components/UserBillViews/BillCard.tsx","views/Bills/components/UserBillViews/UserBillListView.tsx","views/Bills/components/UserBillViews/FirstTimeCard.tsx","views/Bills/components/UserBillViews/index.tsx","views/Bills/components/Menu/SearchInput.tsx","views/Bills/components/Menu/styles.ts","views/Bills/components/Menu/constants.ts","views/Bills/hooks/useClaimAll.tsx","views/Bills/components/Actions/ClaimAll.tsx","views/Bills/components/Menu/index.tsx","views/Bills/index.tsx","utils/getTimePeriods.ts","hooks/useTimer.ts"],"names":["useBills","bills","useSelector","state","data","StyledButton","styled","Button","buttonSize","theme","mediaQueries","md","Container","ArrowDropUpIcon","Flex","ModalBodyContainer","div","BillsImage","image","BillDescriptionContainer","Skeleton","minHeight","p","TopDescriptionText","Text","width","BillTitleContainer","GridTextValContainer","StyledExit","ActionButtonsContainer","UserActionButtonsContainer","StyledHeadingText","BillsFooterContainer","BillFooterContentContainer","colors","white3","BillValueContainer","TextWrapper","useBillType","billAddress","chainId","useActiveWeb3React","selectedBill","find","bill","contractAddress","toLowerCase","billType","useBuyBill","amount","lpPrice","price","slippage","account","billContract","useBillContract","usdAmount","parseFloat","maxPrice","BigNumber","times","handleBuyBill","useCallback","a","userBuyBill","toFixed","tx","track","event","chain","cat","address","onBuyBill","GetLPButton","yellow","BuyButton","StyledInput","Input","MaxButton","Buy","userLpValue","token","quoteToken","disabled","onValueChange","onBillId","onTransactionSubmited","value","formatUserLpValue","getFullDisplayBalance","dispatch","useAppDispatch","useState","pendingTrx","setPendingTrx","useToast","toastSuccess","toastError","t","useTranslation","handleInput","val","searchForBillId","resp","billId","events","args","toString","transactionHash","handleBuy","then","trxHash","text","url","getEtherscanLink","catch","e","console","error","message","fetchUserOwnedBillsDataAsync","fetchBillsUserDataAsync","useModal","closeModal","handleClose","onPresentAddLiquidityWidgetModal","variant","onClick","selectCurrency","field","Field","INPUT","currencyId","symbol","OUTPUT","style","position","fontSize","top","left","zIndex","bold","size","onChange","target","bottom","opacity","right","slice","endIcon","spin","color","React","memo","useApproveBill","tokenAddress","tokenContract","useERC20","onApprove","approve","ethers","constants","MaxUint256","trx","wait","Approve","lpToken","billIndex","handleApprove","updateUserAllowance","Actions","props","allowance","gt","useClaimBill","billIds","onClaimBill","userClaimBill","id","Claim","pendingRewards","handleClaim","VestedTimer","lastBlockTimestamp","vesting","userModalFlag","transferModalFlag","useMatchBreakpoints","isXl","isLg","isXxl","isMobile","currentTime","useCurrentTime","vestingTime","getTimePeriods","parseInt","days","hours","minutes","height","animation","ListViewContent","title","toolTip","toolTipPlacement","toolTipTransform","useTransferBill","billNftAddress","toAddress","billNftContract","useBillNftContract","onTransfer","userTransferBillNft","from","to","Transfer","handleTransfer","TransferBillModal","onDismiss","confirmSend","setConfirmSend","setToAddress","earnToken","userOwnedBillsData","userOwnedBill","b","pending","getBalanceNumber","payout","decimals","maxWidth","mt","flexDirection","alignItems","mr","textAlign","ml","ServiceTokenDisplay","token1","placeholder","border","prev","BILL_ATTRIBUTES","BuyBillModalView","index","userOwnedBillsNftData","userOwnedBillNftData","tokenId","pendingUsd","earnTokenPrice","claimable","attributes","filter","attrib","includes","trait_type","claimableUsd","onPresentTransferBillModal","justifyContent","playing","muted","loop","playsInline","token2","token3","billArrow","stakeLp","map","userData","discount","maxTotalPayOut","totalPayoutGiven","discountEarnTokenPrice","setValue","setBillId","loading","setLoading","bigValue","pow","billValue","available","minus","threshold","safeAvailable","onHandleReturnedBillId","UserBillModalView","seconds","textDecoration","getFirstNonZeroDigits","stakingTokenBalance","toNumber","gte","strSafeAvailable","trxSent","pr","fontWeight","styles","links","display","marginBottom","CardContainer","Card","BillCardsContainer","FirstTimeCardContainer","white2","BillGifContainer","DescriptionContainer","BillDiagramContainer","HeadingContainer","WarningModal","confirmBuy","setConfirmBuy","onPresentBuyBillsModal","mb","priceUsd","billToken","BillModal","buttonText","buyFlag","billCardImage","onPresentUserBillModal","onPresentBuyWarning","cursor","ProjectLinks","website","twitter","sx","href","BillsListView","billsListView","lte","tokens","infoContent","projectLink","ttWidth","toolTipIconWidth","toolTipStyle","marginTop","marginRight","infoContentPosition","cardContent","valueColor","UnlockButton","placement","transformTip","body","expandedContentSize","expandedContent","margin","ListView","listViews","BillCard","ownedBillsAmount","flatMap","length","billsCardView","ownedBills","ownedBill","i","ownedBillNftData","padding","initialSlide","spaceBetween","slidesPerView","loopedSlides","centeredSlides","resizeObserver","lazy","breakpoints","window","scrollBy","behavior","UserBillListView","showAll","reverse","FirstTimeCard","lineHeight","rel","BillsDiagram","UserBillViews","userOwnedBills","setShowAll","showExpired","setShowExpired","minWidth","gridArea","checked","SwiperProvider","SearchInput","toggled","setToggled","inputEl","useRef","ref","onBlur","icon","ControlContainer","sm","xl","LabelWrapper","StyledText","LearnMoreButton","ClaimAllWrapper","OPTIONS","label","billMap","library","billTypes","billAddresses","useBillTypes","handleClaimBill","billTrxs","bm","getContract","billAbi","Promise","all","ClaimAll","useClaimAll","BillMenu","onHandleQueryChange","onSetSortOption","query","activeOption","active","option","as","Link","Bills","useFetchTokenPrices","setInitialBillsDataAsync","useSetBills","tokenPrices","useTokenPrices","useEffect","fetchBillsPublicDataAsync","usePollBills","slowRefresh","useRefresh","billsLoaded","usePollUserBills","setQuery","sortOption","setSortOption","location","useLocation","renderBills","showNonPurchaseable","billsToReturn","forEach","inactive","search","unshift","push","toUpperCase","ListViewLayout","Banner","banner","link","listViewBreak","titleColor","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","delta","timeLeft","years","months","Math","floor","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval"],"mappings":"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","file":"static/js/35.d776a773.chunk.js","sourcesContent":["import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useFetchTokenPrices, useTokenPrices } from 'state/tokenPrices/hooks'\nimport { Bills, State } from 'state/types'\nimport {\n  fetchBillsPublicDataAsync,\n  fetchBillsUserDataAsync,\n  fetchUserOwnedBillsDataAsync,\n  setInitialBillsDataAsync,\n} from '.'\n\nexport const usePollBills = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const { tokenPrices } = useTokenPrices()\n  useEffect(() => {\n    dispatch(fetchBillsPublicDataAsync(chainId, tokenPrices))\n  }, [dispatch, tokenPrices, chainId])\n}\n\nexport const usePollUserBills = (): Bills[] => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const bills = useSelector((state: State) => state.bills.data)\n  const billsLoaded = bills.length > 0\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchBillsUserDataAsync(chainId, account))\n      dispatch(fetchUserOwnedBillsDataAsync(chainId, account))\n    }\n  }, [account, dispatch, slowRefresh, billsLoaded, chainId])\n  return bills\n}\n\nexport const useBills = (): Bills[] => {\n  const bills = useSelector((state: State) => state.bills.data)\n  return bills\n}\n\nexport const useSetBills = () => {\n  useFetchTokenPrices()\n  const dispatch = useAppDispatch()\n  const bills = useBills()\n  if (bills.length === 0) {\n    dispatch(setInitialBillsDataAsync())\n  }\n}\n","import styled from 'styled-components'\nimport { Button, ArrowDropUpIcon, Flex } from '@apeswapfinance/uikit'\n\nexport const StyledButton = styled(Button)<{ buttonSize?: number }>`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: ${({ buttonSize }) => buttonSize || 200}px;\n  height: 44px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: ${({ buttonSize }) => buttonSize || 190}px;\n  }\n`\n\nexport const NextArrow = styled(ArrowDropUpIcon)`\n  transform: rotate(90deg);\n`\n\nexport const Container = styled(Flex)`\n  position: relative;\n  flex-direction: column;\n  margin-top: 20px;\n`\n","import { Flex, Skeleton, Text } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nexport const ModalBodyContainer = styled(Flex)`\n  flex-direction: column;\n  @media screen and (min-width: 1180px) {\n    flex-direction: row;\n  }\n`\n\nexport const Container = styled.div`\n  max-height: 100vh;\n  overflow: scroll;\n  overflow-x: hidden;\n  -ms-overflow-style: none;  /* Internet Explorer 10+ */\n  scrollbar-width: none;  /* Firefox */\n}\n::-webkit-scrollbar {\n  width: 0; \n  background: transparent;  \n}\n`\n\nexport const BillsImage = styled.div<{ image?: string }>`\n  width: 250px;\n  align-self: center;\n  height: 141px;\n  background-image: ${({ image }) => `url(${image});`}\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  margin-top: 30px;\n  margin-bottom: 10px;\n  @media screen and (min-width: 1180px) {\n    min-width: 606px;\n    height: 341px;\n    align-self: auto;\n    margin-top: 0px;\n  }\n`\n\nexport const ImageSkeleton = styled(Skeleton)`\n  width: 250px;\n  height: 141px;\n  margin-top: 30px;\n  align-self: center;\n  @media screen and (min-width: 1180px) {\n    min-width: 606px;\n    height: 341px;\n    margin-top: 0px;\n  }\n`\n\nexport const BillDescriptionContainer = styled(Flex)<{ p?: string; minHeight?: number }>`\n  position: relative;\n  width: 310px;\n  min-height: ${({ minHeight }) => minHeight}px;\n  height: fit-content;\n  flex-direction: column;\n  justify-content: space-around;\n  @media screen and (min-width: 1180px) {\n    width: 540px;\n    height: auto;\n    justify-content: space-between;\n    padding: ${({ p }) => p || '20px 30px'};\n    margin-left: 20px;\n    min-height: auto;\n  }\n`\n\nexport const TopDescriptionText = styled(Text)<{ width?: string }>`\n  opacity: 0.6;\n  font-size: 12px;\n  margin-bottom: 5px;\n  width: ${({ width }) => width || '100%'};\n`\n\nexport const BillTitleContainer = styled(Flex)`\n  flex-direction: column;\n`\n\nexport const GridTextValContainer = styled(Flex)`\n  justify-content: space-between;\n  align-items: center;\n  height: 15px;\n  width: 100%;\n  margin: 5px 0px;\n  @media screen and (min-width: 1180px) {\n    margin: 8px 0px;\n  }\n`\n\nexport const StyledExit = styled(Text)`\n  position: absolute;\n  top: 15px;\n  right: 25px;\n  font-size: 20px;\n  cursor: pointer;\n  font-weight: 600;\n  z-index: 1;\n`\n\nexport const ActionButtonsContainer = styled(Flex)`\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n  height: 215px;\n  @media screen and (min-width: 1180px) {\n    flex-direction: row;\n    height: auto;\n  }\n`\n\nexport const UserActionButtonsContainer = styled(ActionButtonsContainer)`\n  height: 110px;\n  justify-content: space-between;\n`\n\nexport const StyledHeadingText = styled(Text)`\n  font-size: 16px;\n  @media screen and (min-width: 1180px) {\n    font-size: 22px;\n  }\n`\n\nexport const BillsFooterContainer = styled(Flex)`\n  width: 100%;\n  height: 276px;\n  margin-top: 20px;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  @media screen and (min-width: 1180px) {\n    flex-direction: row;\n    height: 100px;\n    margin-bottom: 0px;\n  }\n`\n\nexport const BillFooterContentContainer = styled(Flex)`\n  background: ${({ theme }) => theme.colors.white3};\n  width: 100%;\n  height: 82px;\n  border-radius: 10px;\n  align-items: center;\n  @media screen and (min-width: 1180px) {\n    width: 351px;\n    height: 82px;\n  }\n`\n\nexport const BillValueContainer = styled('div')`\n  display: flex;\n  width: 100%;\n  padding-top: 20px;\n  flex-wrap: wrap;\n  @media screen and (min-width: 1180px) {\n    padding-right: 40px;\n  }\n`\n\nexport const TextWrapper = styled('div')`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  @media screen and (min-width: 1180px) {\n    width: 50%;\n  }\n`\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBills } from 'state/bills/hooks'\n\nexport const useBillType = (billAddress: string) => {\n  const { chainId } = useActiveWeb3React()\n  const bills = useBills()\n  const selectedBill = bills.find((bill) => bill.contractAddress[chainId].toLowerCase() === billAddress.toLowerCase())\n  return selectedBill?.billType === 'BANANA Bill' ? 'bill' : selectedBill?.billType\n}\n\nexport const useBillTypes = (billAddresses: string[]) => {\n  const { chainId } = useActiveWeb3React()\n  const bills = useBills()\n  return billAddresses.map((billAddress) => {\n    const selectedBill = bills.find((bill) => bill.contractAddress[chainId].toLowerCase() === billAddress.toLowerCase())\n    return selectedBill?.billType === 'BANANA Bill' ? 'bill' : selectedBill?.billType\n  })\n}\n","import { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { userBuyBill } from 'utils/callHelpers'\nimport { useBillContract } from 'hooks/useContract'\nimport track from 'utils/track'\nimport BigNumber from 'bignumber.js'\nimport { useBillType } from './useBillType'\n\nconst DEFAULT_SLIPPAGE = 102 // Maximum of 2% slippage when buying Bill\n// Buy a Bill\nconst useBuyBill = (\n  billAddress: string,\n  amount: string,\n  lpPrice: number,\n  price: string,\n  slippage = DEFAULT_SLIPPAGE,\n) => {\n  const { chainId, account } = useActiveWeb3React()\n  const billContract = useBillContract(billAddress)\n  const billType: string = useBillType(billAddress)\n  const usdAmount: number = parseFloat(amount) * lpPrice\n  const maxPrice = new BigNumber(price).times(slippage).div(100)\n  const handleBuyBill = useCallback(async () => {\n    const tx = await userBuyBill(billContract, account, amount, maxPrice.toFixed(0))\n    track({\n      event: billType,\n      chain: chainId,\n      data: {\n        cat: 'buy',\n        address: billContract.address,\n        amount,\n        usdAmount,\n      },\n    })\n    return tx\n  }, [billContract, amount, account, chainId, billType, usdAmount, maxPrice])\n\n  return { onBuyBill: handleBuyBill }\n}\n\nexport default useBuyBill\n","import { Button, Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nexport const GetLPButton = styled(Button)`\n  height: 50px;\n  width: 100%;\n  border: 3px solid ${({ theme }) => theme.colors.yellow};\n  color: ${({ theme }) => theme.colors.yellow};\n  :hover {\n    border: 3px solid yellow;\n  }\n  @media screen and (min-width: 1180px) {\n    height: 69px;\n    width: auto;\n  }\n`\n\nexport const BuyButton = styled(Button)`\n  width: 100%;\n  height: 50px;\n  font-weight: 700;\n  @media screen and (min-width: 1180px) {\n    width: 170px;\n    height: 69px;\n  }\n`\n\nexport const StyledInput = styled(Input)`\n  height: 69px;\n  width: 100%;\n  border: none;\n  padding: 0px 80px 22.5px 67px;\n  font-size: 14px;\n  font-weight: 700;\n  @media screen and (min-width: 1180px) {\n    width: 230px;\n    height: 69px;\n    padding: 0px 71px 22.5px 67px;\n  }\n`\n\nexport const MaxButton = styled(Button)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding: 10px;\n  z-index: 1;\n  border-radius: 6px;\n`\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Flex, Text, useModal } from '@apeswapfinance/uikit'\nimport { LiquidityModal } from 'components/LiquidityWidget'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useBuyBill from 'views/Bills/hooks/useBuyBill'\nimport BigNumber from 'bignumber.js'\nimport { useToast } from 'state/hooks'\nimport { getEtherscanLink } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { fetchBillsUserDataAsync, fetchUserOwnedBillsDataAsync } from 'state/bills'\nimport { Field, selectCurrency } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { BuyProps } from './types'\nimport { BuyButton, GetLPButton, MaxButton, StyledInput } from './styles'\n\nconst Buy: React.FC<BuyProps> = ({\n  userLpValue,\n  token,\n  quoteToken,\n  billAddress,\n  disabled,\n  onValueChange,\n  onBillId,\n  onTransactionSubmited,\n  value,\n  price,\n  lpPrice,\n}) => {\n  const formatUserLpValue = getFullDisplayBalance(new BigNumber(userLpValue))\n  const { chainId, account } = useActiveWeb3React()\n  const { onBuyBill } = useBuyBill(billAddress, value, lpPrice, price)\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n\n  const handleInput = (val: string) => {\n    onValueChange(val)\n  }\n\n  const searchForBillId = (resp) => {\n    const billId = resp.events[6]?.args?.billId?.toString()\n    const { transactionHash } = resp\n    onBillId(billId, transactionHash)\n  }\n\n  const handleBuy = async () => {\n    setPendingTrx(true)\n    onTransactionSubmited(true)\n    await onBuyBill()\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        searchForBillId(resp)\n        toastSuccess(t('Buy Successful'), {\n          text: t('View Transaction'),\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        toastError(e?.data?.message || t('Error: Please try again.'))\n        setPendingTrx(false)\n        onTransactionSubmited(false)\n      })\n    dispatch(fetchUserOwnedBillsDataAsync(chainId, account))\n    dispatch(fetchBillsUserDataAsync(chainId, account))\n    setPendingTrx(false)\n  }\n\n  // TODO: clean up this code\n  // Hack to get the close modal function from the provider\n  // Need to export ModalContext from uikit to clean up the code\n  const [, closeModal] = useModal(<></>)\n  const [onPresentAddLiquidityWidgetModal] = useModal(\n    <LiquidityModal handleClose={closeModal} />,\n    true,\n    true,\n    'liquidityWidgetModal',\n  )\n\n  const showLiquidity = () => {\n    dispatch(\n      selectCurrency({\n        field: Field.INPUT,\n        currencyId: token.symbol === 'BNB' ? 'ETH' : token.address[chainId],\n      }),\n    )\n    dispatch(\n      selectCurrency({\n        field: Field.OUTPUT,\n        currencyId: quoteToken.symbol === 'BNB' ? 'ETH' : quoteToken.address[chainId],\n      }),\n    )\n    onPresentAddLiquidityWidgetModal()\n  }\n\n  return (\n    <>\n      <GetLPButton variant=\"secondary\" onClick={showLiquidity}>\n        {t('Get LP')}\n      </GetLPButton>\n      <Flex style={{ position: 'relative' }}>\n        <Text fontSize=\"12px\" style={{ position: 'absolute', top: 14, left: 10, zIndex: 1 }} bold>\n          {t('Amount')}:\n        </Text>\n        <MaxButton size=\"sm\" onClick={() => handleInput(formatUserLpValue)}>\n          {t('Max')}\n        </MaxButton>\n        <StyledInput onChange={(e) => handleInput(e.target.value)} value={value} />\n        <Text fontSize=\"12px\" style={{ position: 'absolute', bottom: 6, left: 10, zIndex: 1, opacity: 0.8 }}>\n          {t('Balance')}:\n        </Text>\n        <Text fontSize=\"12px\" style={{ position: 'absolute', bottom: 5, right: 10, zIndex: 1, opacity: 0.8 }}>\n          {formatUserLpValue?.slice(0, 15)} LP\n        </Text>\n      </Flex>\n      <BuyButton\n        onClick={handleBuy}\n        endIcon={pendingTrx && <AutoRenewIcon spin color=\"currentColor\" />}\n        disabled={disabled || parseFloat(formatUserLpValue) < parseFloat(value) || pendingTrx}\n      >\n        {t('Buy')}\n      </BuyButton>\n    </>\n  )\n}\n\nexport default React.memo(Buy)\n","import { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { useERC20 } from 'hooks/useContract'\n\n// Approve a bill\nconst useApproveBill = (tokenAddress: string, billAddress: string) => {\n  const tokenContract = useERC20(tokenAddress)\n  const handleApprove = useCallback(async () => {\n    const tx = await tokenContract.approve(billAddress, ethers.constants.MaxUint256).then((trx) => trx.wait())\n    return tx\n  }, [billAddress, tokenContract])\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveBill\n","import React, { useState } from 'react'\nimport { AutoRenewIcon } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useToast } from 'state/hooks'\nimport { updateUserAllowance } from 'state/bills'\nimport { getEtherscanLink } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveBill from '../../hooks/useApproveBill'\nimport { StyledButton } from '../styles'\nimport { ApproveProps } from './types'\n\nconst Approve: React.FC<ApproveProps> = ({ lpToken, billAddress, billIndex }) => {\n  const { chainId, account } = useActiveWeb3React()\n  const { onApprove } = useApproveBill(lpToken.address[chainId], billAddress)\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n\n  const handleApprove = async () => {\n    setPendingTrx(true)\n    await onApprove()\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        toastSuccess(t('Approve Successful'), {\n          text: t('View Transaction'),\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        toastError(e?.data?.message || t('Error: Please try again.'))\n        setPendingTrx(false)\n      })\n    dispatch(updateUserAllowance(chainId, billIndex, account))\n    setPendingTrx(false)\n  }\n\n  return (\n    <StyledButton\n      onClick={handleApprove}\n      endIcon={pendingTrx && <AutoRenewIcon spin color=\"currentColor\" />}\n      disabled={pendingTrx}\n    >\n      {t('Enable')}\n    </StyledButton>\n  )\n}\n\nexport default React.memo(Approve)\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport Buy from './Buy'\nimport { ActionProps } from './types'\nimport Approve from './Approve'\n\nconst Actions: React.FC<ActionProps> = (props) => {\n  const { allowance } = props\n  const showApprove = !new BigNumber(allowance).gt(0)\n  return showApprove ? <Approve {...props} /> : <Buy {...props} />\n}\n\nexport default React.memo(Actions)\n","import { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { userClaimBill } from 'utils/callHelpers'\nimport { useBillContract } from 'hooks/useContract'\nimport track from 'utils/track'\nimport { useBillType } from './useBillType'\n\n// Claim a Bill\nconst useClaimBill = (billAddress: string, billIds: string[]) => {\n  const { chainId } = useActiveWeb3React()\n  const billContract = useBillContract(billAddress)\n  const billType: string = useBillType(billAddress)\n  const handleClaimBill = useCallback(async () => {\n    const tx = await userClaimBill(billContract, billIds)\n    track({\n      event: billType,\n      chain: chainId,\n      data: {\n        cat: 'claim',\n        address: billContract.address,\n        id: billIds,\n      },\n    })\n    return tx\n  }, [billContract, billIds, chainId, billType])\n\n  return { onClaimBill: handleClaimBill }\n}\n\nexport default useClaimBill\n","import React, { useState } from 'react'\nimport useClaimBill from 'views/Bills/hooks/useClaimBill'\nimport { AutoRenewIcon } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useToast } from 'state/hooks'\nimport { getEtherscanLink } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { fetchBillsUserDataAsync, fetchUserOwnedBillsDataAsync } from 'state/bills'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClaimProps } from './types'\nimport { StyledButton } from '../styles'\n\nconst Claim: React.FC<ClaimProps> = ({ billAddress, billIds, buttonSize, pendingRewards }) => {\n  const { onClaimBill } = useClaimBill(billAddress, billIds)\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { toastSuccess } = useToast()\n  const { t } = useTranslation()\n\n  const handleClaim = async () => {\n    setPendingTrx(true)\n    await onClaimBill()\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        toastSuccess(t('Claim Successful'), {\n          text: t('View Transaction'),\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        setPendingTrx(false)\n      })\n    dispatch(fetchUserOwnedBillsDataAsync(chainId, account))\n    dispatch(fetchBillsUserDataAsync(chainId, account))\n    setPendingTrx(false)\n  }\n  return (\n    <StyledButton\n      onClick={handleClaim}\n      endIcon={pendingTrx && <AutoRenewIcon spin color=\"currentColor\" />}\n      disabled={pendingTrx || parseFloat(pendingRewards) === 0}\n      buttonSize={buttonSize}\n    >\n      {t('CLAIM')}\n    </StyledButton>\n  )\n}\n\nexport default React.memo(Claim)\n","import { Skeleton, Text, useMatchBreakpoints } from '@apeswapfinance/uikit'\nimport ListViewContent from 'components/ListViewContent'\nimport { useTranslation } from 'contexts/Localization'\nimport useCurrentTime from 'hooks/useTimer'\nimport React from 'react'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { StyledHeadingText } from './Modals/styles'\n\nconst VestedTimer: React.FC<{\n  lastBlockTimestamp: string\n  vesting: string\n  userModalFlag?: boolean\n  transferModalFlag?: boolean\n}> = ({ lastBlockTimestamp, vesting, userModalFlag, transferModalFlag }) => {\n  const { isXl, isLg, isXxl } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const isMobile = !isLg && !isXl && !isXxl\n  const currentTime = useCurrentTime() / 1000\n  const vestingTime = getTimePeriods(parseInt(lastBlockTimestamp) + parseInt(vesting) - currentTime, true)\n\n  return transferModalFlag ? (\n    <Text bold>\n      {vestingTime.days}d, {vestingTime.hours}h, {vestingTime.minutes}m\n    </Text>\n  ) : userModalFlag ? (\n    <StyledHeadingText bold>\n      {vestingTime ? (\n        `${vestingTime.days}d, ${vestingTime.hours}h, ${vestingTime.minutes}m`\n      ) : (\n        <Skeleton width=\"150px\" height=\"32.5px\" animation=\"waves\" />\n      )}\n    </StyledHeadingText>\n  ) : (\n    <ListViewContent\n      title={t('Fully Vested')}\n      value={`${vestingTime.days}d, ${vestingTime.hours}h, ${vestingTime.minutes}m`}\n      width={isMobile ? 200 : 180}\n      height={52.5}\n      toolTip={t('This is the time remaining until all tokens from the bill are available to claim.')}\n      toolTipPlacement={isMobile ? 'bottomRight' : 'bottomLeft'}\n      toolTipTransform={isMobile ? 'translate(-75%, 65%)' : 'translate(0%, 65%)'}\n    />\n  )\n}\n\nexport default React.memo(VestedTimer)\n","import { useCallback } from 'react'\nimport { useBillNftContract } from 'hooks/useContract'\nimport { userTransferBillNft } from 'utils/callHelpers'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport track from 'utils/track'\nimport { useBillType } from './useBillType'\n\n// Transfer a bill\nconst useTransferBill = (billNftAddress: string, billId: string, toAddress: string) => {\n  const { account, chainId } = useActiveWeb3React()\n  const billNftContract = useBillNftContract(billNftAddress)\n  const billType: string = useBillType(billNftAddress)\n  const handleTransfer = useCallback(async () => {\n    try {\n      const tx = await userTransferBillNft(billNftContract, billId, account, toAddress)\n      track({\n        event: billType,\n        chain: chainId,\n        data: {\n          cat: 'transfer',\n          id: billId,\n          from: account,\n          to: toAddress,\n        },\n      })\n      return tx\n    } catch (e) {\n      console.error(e)\n      return null\n    }\n  }, [billId, toAddress, chainId, billNftContract, account, billType])\n  return { onTransfer: handleTransfer }\n}\n\nexport default useTransferBill\n","import React, { useState } from 'react'\nimport { AutoRenewIcon } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTransferBill from 'views/Bills/hooks/useTransferBill'\nimport { useToast } from 'state/hooks'\nimport { getEtherscanLink } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { fetchBillsUserDataAsync, fetchUserOwnedBillsDataAsync } from 'state/bills'\nimport { useTranslation } from 'contexts/Localization'\nimport { StyledButton } from '../styles'\nimport { TransferProps } from './types'\n\nconst Transfer: React.FC<TransferProps> = ({ billNftAddress, billId, toAddress, disabled }) => {\n  const { onTransfer } = useTransferBill(billNftAddress, billId, toAddress)\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n\n  const handleTransfer = async () => {\n    setPendingTrx(true)\n    await onTransfer()\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        toastSuccess(t('Transfer Successful'), {\n          text: t('View Transaction'),\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        toastError(e?.data?.message || t('Error: Please try again.'))\n        setPendingTrx(false)\n      })\n    dispatch(fetchUserOwnedBillsDataAsync(chainId, account))\n    dispatch(fetchBillsUserDataAsync(chainId, account))\n    setPendingTrx(false)\n  }\n  return (\n    <StyledButton\n      onClick={handleTransfer}\n      endIcon={pendingTrx && <AutoRenewIcon spin color=\"currentColor\" />}\n      disabled={pendingTrx || disabled}\n    >\n      {t('CONFIRM')}\n    </StyledButton>\n  )\n}\n\nexport default React.memo(Transfer)\n","import { Checkbox, Flex, Input, Modal, ModalFooter, Text } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport ServiceTokenDisplay from 'components/ServiceTokenDisplay'\nimport React, { useState } from 'react'\nimport { Bills } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Transfer from '../Actions/Transfer'\nimport VestedTimer from '../VestedTimer'\nimport { TopDescriptionText } from './styles'\n\ninterface TransferBillModalProps {\n  onDismiss: () => void\n  bill?: Bills\n  billId?: string\n}\n\nconst TransferBillModal: React.FC<TransferBillModalProps> = ({ onDismiss, bill, billId }) => {\n  const { t } = useTranslation()\n  const [confirmSend, setConfirmSend] = useState(false)\n  const [toAddress, setToAddress] = useState('')\n  const { earnToken, lpToken, billNftAddress, userOwnedBillsData } = bill\n  const userOwnedBill = userOwnedBillsData?.find((b) => parseInt(b.id) === parseInt(billId))\n  const pending = getBalanceNumber(new BigNumber(userOwnedBill?.payout), bill?.earnToken?.decimals)?.toFixed(4)\n  return (\n    <Modal onDismiss={onDismiss} maxWidth=\"385px\" title=\"Transfer Bill\">\n      <Flex mt=\"30px\">\n        <Text bold> {t('Transfering')}: </Text>\n      </Flex>\n      <Flex mt=\"30px\" flexDirection=\"column\" alignItems=\"center\" mr=\"10px\">\n        <Text bold fontSize=\"25px\">\n          {lpToken.symbol} #{userOwnedBill?.id}\n        </Text>\n        <Flex mt=\"5px\">\n          <Flex mr=\"20px\" flexDirection=\"column\">\n            <TopDescriptionText textAlign=\"center\">{t('Vesting time')}</TopDescriptionText>\n            <VestedTimer\n              lastBlockTimestamp={userOwnedBill?.lastBlockTimestamp}\n              vesting={userOwnedBill?.vesting}\n              transferModalFlag\n            />\n          </Flex>\n          <Flex ml=\"20px\" flexDirection=\"column\">\n            <TopDescriptionText textAlign=\"center\">{t('Pending')}</TopDescriptionText>\n            <Flex>\n              <ServiceTokenDisplay token1={earnToken.symbol} size={20} />\n              <Text bold ml=\"5px\">\n                {pending}\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Flex mt=\"30px\" flexDirection=\"column\">\n        <Text bold>{t('Receiving Address')}:</Text>\n        <Input\n          mt=\"10px\"\n          size=\"lg\"\n          placeholder={t('Paste the address here')}\n          value={toAddress}\n          onChange={(e) => setToAddress(e.target.value)}\n          style={{ width: '345px', border: 'none' }}\n        />\n      </Flex>\n      <Text mt=\"30px\" fontSize=\"12px\" style={{ color: 'rgba(223, 65, 65, 1)' }}>\n        <Text bold style={{ color: 'rgba(223, 65, 65, 1)' }} fontSize=\"13px\">\n          {t('WARNING')}\n        </Text>\n        {t('When transfering the NFT all pending rewards will also be transfered to the receiver address.')}\n      </Text>\n      <Flex mt=\"20px\" alignItems=\"center\">\n        <Checkbox onClick={() => setConfirmSend((prev) => !prev)} />\n        <Text ml=\"10px\" fontSize=\"12px\">\n          {t('I understand the new wallet gains ownership of all unclaimed assets.')}\n        </Text>\n      </Flex>\n      <ModalFooter onDismiss={onDismiss}>\n        <Transfer billNftAddress={billNftAddress} billId={billId} toAddress={toAddress} disabled={!confirmSend} />\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default React.memo(TransferBillModal)\n","import React from 'react'\nimport { Flex, Modal, Skeleton, Text, useModal } from '@apeswapfinance/uikit'\nimport ServiceTokenDisplay from 'components/ServiceTokenDisplay'\nimport { Bills } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ReactPlayer from 'react-player'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  BillDescriptionContainer,\n  BillFooterContentContainer,\n  BillsFooterContainer,\n  BillsImage,\n  BillTitleContainer,\n  GridTextValContainer,\n  ModalBodyContainer,\n  StyledExit,\n  StyledHeadingText,\n  TopDescriptionText,\n  Container,\n  UserActionButtonsContainer,\n} from './styles'\nimport Claim from '../Actions/Claim'\nimport VestedTimer from '../VestedTimer'\nimport TransferBillModal from './TransferBillModal'\nimport { StyledButton } from '../styles'\n\ninterface BillModalProps {\n  onDismiss: () => void\n  bill: Bills\n  billId: string\n}\n\nconst BILL_ATTRIBUTES = ['The Legend', 'The Location', 'The Moment', 'The Trend', 'The Innovation']\n\nconst BuyBillModalView: React.FC<BillModalProps> = ({ onDismiss, bill, billId }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { token, quoteToken, earnToken, billType, lpToken, index, userOwnedBillsData, userOwnedBillsNftData } = bill\n  const userOwnedBill = userOwnedBillsData?.find((b) => parseInt(b.id) === parseInt(billId))\n  const userOwnedBillNftData = userOwnedBillsNftData?.find((b) => parseInt(b.tokenId) === parseInt(billId))\n  const pending = getBalanceNumber(new BigNumber(userOwnedBill?.payout), bill?.earnToken?.decimals)?.toFixed(4)\n  const pendingUsd = (parseFloat(pending) * bill?.earnTokenPrice)?.toFixed(2)\n  const claimable = getBalanceNumber(new BigNumber(userOwnedBill?.pendingRewards), bill?.earnToken?.decimals)?.toFixed(\n    4,\n  )\n  const attributes = userOwnedBillNftData?.attributes?.filter((attrib) => BILL_ATTRIBUTES.includes(attrib.trait_type))\n  const claimableUsd = (parseFloat(claimable) * bill?.earnTokenPrice)?.toFixed(2)\n  const [onPresentTransferBillModal] = useModal(\n    <TransferBillModal bill={bill} billId={billId} onDismiss={onDismiss} />,\n    true,\n    true,\n    `transferModal${billId}-${index}`,\n  )\n  return (\n    <Modal onDismiss={onDismiss} maxWidth=\"1200px\">\n      <Container>\n        <ModalBodyContainer>\n          <StyledExit onClick={onDismiss}>x</StyledExit>\n          {userOwnedBillNftData?.image ? (\n            <BillsImage image={userOwnedBillNftData?.image} />\n          ) : (\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <BillsImage>\n                <ReactPlayer playing muted loop url=\"videos/bills-video.mp4\" height=\"100%\" width=\"100%\" playsInline />\n              </BillsImage>\n            </Flex>\n          )}\n          <BillDescriptionContainer minHeight={360}>\n            <Flex flexDirection=\"column\">\n              <BillTitleContainer>\n                <TopDescriptionText>{billType}</TopDescriptionText>\n                <Flex alignItems=\"center\">\n                  <ServiceTokenDisplay\n                    token1={token.symbol}\n                    token2={quoteToken.symbol}\n                    token3={earnToken.symbol}\n                    billArrow\n                    stakeLp\n                  />\n                  <StyledHeadingText ml=\"10px\" bold>\n                    {lpToken.symbol}\n                  </StyledHeadingText>\n                  <Text ml={10}>#{userOwnedBill?.id}</Text>\n                </Flex>\n              </BillTitleContainer>\n            </Flex>\n            <Flex flexDirection=\"column\">\n              {attributes\n                ? attributes.map((attrib) => {\n                    return (\n                      <GridTextValContainer key={attrib.value}>\n                        <Text fontSize=\"12px\">{attrib?.trait_type}</Text>\n                        <Text fontSize=\"12px\" bold>\n                          {attrib?.value}\n                        </Text>\n                      </GridTextValContainer>\n                    )\n                  })\n                : BILL_ATTRIBUTES.map((attrib) => {\n                    return (\n                      <GridTextValContainer key={attrib}>\n                        <Text fontSize=\"12px\">{t(attrib)}</Text>\n                        <Skeleton width=\"150px\" />\n                      </GridTextValContainer>\n                    )\n                  })}\n            </Flex>\n            <UserActionButtonsContainer>\n              <Claim\n                billAddress={bill.contractAddress[chainId]}\n                billIds={[billId]}\n                buttonSize={218}\n                pendingRewards={userOwnedBill?.payout}\n              />\n              <StyledButton onClick={onPresentTransferBillModal} style={{ width: '218px' }}>\n                {t('Transfer')}\n              </StyledButton>\n            </UserActionButtonsContainer>\n          </BillDescriptionContainer>\n        </ModalBodyContainer>\n        <BillsFooterContainer>\n          <BillFooterContentContainer>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              style={{ width: '100%', height: '100%' }}\n            >\n              <TopDescriptionText width=\"auto\">{t('Fully Vested')}</TopDescriptionText>\n              <StyledHeadingText ml=\"10px\" bold>\n                <VestedTimer\n                  lastBlockTimestamp={userOwnedBill?.lastBlockTimestamp}\n                  vesting={userOwnedBill?.vesting}\n                  userModalFlag\n                />\n              </StyledHeadingText>\n            </Flex>\n          </BillFooterContentContainer>\n          <BillFooterContentContainer>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              style={{ width: '100%', height: '100%' }}\n            >\n              <TopDescriptionText width=\"auto\">{t('Claimable')}</TopDescriptionText>\n              <Flex>\n                <ServiceTokenDisplay token1={earnToken.symbol} size={25} />\n                <StyledHeadingText ml=\"10px\" bold>\n                  {claimable && claimable !== 'NaN' ? (\n                    `${claimable} ($${claimableUsd})`\n                  ) : (\n                    <Skeleton width=\"150px\" height=\"32.5px\" animation=\"waves\" />\n                  )}\n                </StyledHeadingText>\n              </Flex>\n            </Flex>\n          </BillFooterContentContainer>\n          <BillFooterContentContainer>\n            <Flex\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              style={{ width: '100%', height: '100%' }}\n            >\n              <TopDescriptionText width=\"auto\">{t('Pending')}</TopDescriptionText>\n              <Flex>\n                <ServiceTokenDisplay token1={earnToken.symbol} size={25} />\n                <StyledHeadingText ml=\"10px\" bold>\n                  {pending && pending !== 'NaN' ? (\n                    `${pending} ($${pendingUsd})`\n                  ) : (\n                    <Skeleton width=\"150px\" height=\"32.5px\" animation=\"waves\" />\n                  )}\n                </StyledHeadingText>\n              </Flex>\n            </Flex>\n          </BillFooterContentContainer>\n        </BillsFooterContainer>\n      </Container>\n    </Modal>\n  )\n}\n\nexport default React.memo(BuyBillModalView)\n","import React, { useState } from 'react'\nimport { Flex, Modal, Text } from '@apeswapfinance/uikit'\nimport ServiceTokenDisplay from 'components/ServiceTokenDisplay'\nimport { Bills } from 'state/types'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport ReactPlayer from 'react-player'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  ActionButtonsContainer,\n  BillDescriptionContainer,\n  BillsImage,\n  BillTitleContainer,\n  BillValueContainer,\n  ModalBodyContainer,\n  StyledExit,\n  StyledHeadingText,\n  TopDescriptionText,\n  TextWrapper,\n} from './styles'\nimport Actions from '../Actions'\nimport UserBillModalView from './UserBillModalView'\nimport { getFirstNonZeroDigits } from 'utils/roundNumber'\n\ninterface BillModalProps {\n  onDismiss: () => void\n  bill: Bills\n}\n\nconst BuyBillModalView: React.FC<BillModalProps> = ({ onDismiss, bill }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const {\n    token,\n    quoteToken,\n    earnToken,\n    billType,\n    lpToken,\n    price,\n    userData,\n    contractAddress,\n    index,\n    discount,\n    earnTokenPrice,\n    maxTotalPayOut,\n    totalPayoutGiven,\n    lpPrice,\n  } = bill\n  const discountEarnTokenPrice = earnTokenPrice - earnTokenPrice * (parseFloat(discount) / 100)\n  const [value, setValue] = useState('')\n  const [billId, setBillId] = useState('')\n  const [loading, setLoading] = useState(false)\n  const bigValue = new BigNumber(value).times(new BigNumber(10).pow(18))\n  const vestingTime = getTimePeriods(parseInt(bill.vestingTime), true)\n  const billValue = bigValue.div(new BigNumber(price))?.toString()\n\n  const available = new BigNumber(maxTotalPayOut)\n    ?.minus(new BigNumber(totalPayoutGiven))\n    ?.div(new BigNumber(10).pow(earnToken.decimals))\n  // threshold equals to 2 usd in earned tokens (banana or jungle token)\n  const threshold = new BigNumber(2).div(earnTokenPrice)\n  const safeAvailable = available.minus(threshold)\n\n  const onHandleValueChange = (val: string) => {\n    const bigVal = new BigNumber(val).times(new BigNumber(10).pow(18))\n    const billVal = bigVal.div(new BigNumber(price))\n    if (billVal.gte(safeAvailable)) {\n      const strSafeAvailable = safeAvailable.times(new BigNumber(price)).div(new BigNumber(10).pow(18)).toFixed(8, 1)\n      setValue(strSafeAvailable)\n    } else setValue(val)\n  }\n  const onHandleReturnedBillId = async (id: string) => {\n    setBillId(id)\n  }\n\n  return (\n    <Modal onDismiss={onDismiss} maxWidth=\"1200px\">\n      {billId ? (\n        <UserBillModalView bill={bill} billId={billId} onDismiss={onDismiss} />\n      ) : (\n        <ModalBodyContainer>\n          <StyledExit onClick={onDismiss}>x</StyledExit>\n          <Flex alignItems=\"center\" justifyContent=\"center\">\n            {loading && !billId ? (\n              <BillsImage>\n                <ReactPlayer playing muted loop url=\"videos/bills-video.mp4\" height=\"100%\" width=\"100%\" playsInline />\n              </BillsImage>\n            ) : (\n              <BillsImage image=\"images/hidden-bill.png\" />\n            )}\n          </Flex>\n          <BillDescriptionContainer p=\"20px 0px\" minHeight={450}>\n            <Flex flexDirection=\"column\">\n              <BillTitleContainer>\n                <TopDescriptionText>{billType}</TopDescriptionText>\n                <Flex alignItems=\"center\">\n                  <ServiceTokenDisplay\n                    token1={token.symbol}\n                    token2={quoteToken.symbol}\n                    token3={earnToken.symbol}\n                    billArrow\n                    stakeLp\n                  />\n                  <Flex flexDirection=\"column\">\n                    <StyledHeadingText ml=\"10px\" bold>\n                      {lpToken.symbol}\n                    </StyledHeadingText>\n                    <TopDescriptionText ml=\"12px\">\n                      {t('Vesting Term')}: {`${vestingTime.days}d, ${vestingTime.minutes}h, ${vestingTime.seconds}m`}\n                    </TopDescriptionText>\n                  </Flex>\n                </Flex>\n              </BillTitleContainer>\n              <Flex flexDirection=\"column\" mt={25}>\n                <Flex style={{ width: '250px' }}>\n                  <TopDescriptionText>\n                    {earnToken.symbol} {t('Market Price')}{' '}\n                    <span style={{ textDecoration: 'line-through' }}>${getFirstNonZeroDigits(earnTokenPrice)}</span>\n                  </TopDescriptionText>\n                </Flex>\n                <Flex alignItems=\"center\">\n                  <ServiceTokenDisplay token1={earnToken.symbol} />\n                  <StyledHeadingText ml=\"10px\" bold>\n                    ${getFirstNonZeroDigits(discountEarnTokenPrice)} ({discount}% Discount)\n                  </StyledHeadingText>\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex flexDirection=\"column\">\n              <ActionButtonsContainer>\n                <Actions\n                  price={price}\n                  token={token}\n                  quoteToken={quoteToken}\n                  lpToken={lpToken}\n                  userLpValue={userData?.stakingTokenBalance}\n                  allowance={userData?.allowance}\n                  billAddress={contractAddress[chainId]}\n                  billIndex={index}\n                  disabled={\n                    billValue === 'NaN' ||\n                    parseFloat(billValue) < 0.01 ||\n                    parseFloat(billValue) > safeAvailable.toNumber()\n                  }\n                  onValueChange={onHandleValueChange}\n                  value={value}\n                  onBillId={onHandleReturnedBillId}\n                  onTransactionSubmited={(trxSent) => setLoading(trxSent)}\n                  lpPrice={lpPrice}\n                />\n              </ActionButtonsContainer>\n              {new BigNumber(userData?.allowance).gt(0) && (\n                <BillValueContainer>\n                  <TextWrapper>\n                    <Text fontSize=\"14px\" pr={1}>\n                      {t('Bill Value')}:{' '}\n                      <span style={{ fontWeight: 700 }}>\n                        {billValue === 'NaN' ? '0' : parseFloat(billValue).toFixed(3)} {earnToken?.symbol}\n                      </span>\n                    </Text>\n                  </TextWrapper>\n                  <TextWrapper>\n                    <Text fontSize=\"14px\">\n                      {t('Available')}:{' '}\n                      <span style={{ fontWeight: 700 }}>\n                        {!available ? '0' : safeAvailable.toFixed(3)} {earnToken?.symbol}\n                      </span>\n                    </Text>\n                  </TextWrapper>\n                </BillValueContainer>\n              )}\n            </Flex>\n          </BillDescriptionContainer>\n        </ModalBodyContainer>\n      )}\n    </Modal>\n  )\n}\n\nexport default React.memo(BuyBillModalView)\n","import { Card, Flex } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  links: {\n    alignItems: 'center',\n    display: 'flex',\n    width: 'max-content',\n    justifyContent: 'space-between',\n    marginBottom: '0.3em',\n  },\n}\n\nexport const CardContainer = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  min-width: 270px;\n  max-height: 307px;\n  height: 307px;\n  align-items: center;\n  margin-left: 16px;\n`\n\nexport const BillsImage = styled.div<{ image?: string }>`\n  width: 270px;\n  height: 150px;\n  background-image: ${({ image }) => `url(${image});`}\n  overflow: hidden;\n  border-radius: 10px 10px 0px 0px;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  margin-bottom: 8px;\n`\n\nexport const BillCardsContainer = styled(Flex)`\n  width: 100%;\n  height: 307px;\n  flex-direction: row;\n  overflow: hidden;\n  margin-bottom: 20px;\n  & :nth-child(1) {\n    margin-left: 0px;\n  }\n`\n\nexport const FirstTimeCardContainer = styled(Flex)`\n  max-width: 500px;\n  height: auto;\n  background: ${({ theme }) => theme.colors.white2};\n  border-radius: 10px;\n  padding: 10px 20px;\n  flex-direction: column;\n  align-self: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    height: 410px;\n    max-width: 100%;\n    align-self: auto;\n  }\n`\n\nexport const BillGifContainer = styled(Flex)`\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 620px;\n    width: 100%;\n  }\n`\n\nexport const DescriptionContainer = styled(Flex)`\n  flex-direction: column;\n  padding-left: 20px;\n  padding: 21px 0px 20px 20px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 530px;\n  }\n`\n\nexport const BillGifImage = styled.div<{ image?: string }>`\n  width: 270px;\n  height: 150px;\n  background-image: url(/images/bills-gif.gif);\n  background-repeat: no-repeat;\n  background-size: contain;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-width: 606px;\n    max-height: 341px;\n    height: 100%;\n    width: 100%;\n  }\n`\n\nexport const BillDiagramContainer = styled(Flex)`\n  margin-top: 10px;\n`\n\nexport const HeadingContainer = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-template-rows: 2fr 1fr;\n  grid-template-areas: 'back expired' 'all-bills all-bills';\n  flex-wrap: wrap;\n  max-width: 500px;\n  order: 0;\n  width: 100%;\n  align-self: center;\n  justify-content: space-between;\n  margin: 15px 10px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: auto auto auto;\n    grid-template-rows: auto;\n    grid-template-areas: 'back all-bills expired';\n    align-self: auto;\n    max-width: 100%;\n    width: auto;\n  }\n`\n","import { WarningIcon } from '@ape.swap/uikit'\nimport { Checkbox, Flex, Modal, ModalFooter, Text, useModal } from '@apeswapfinance/uikit'\nimport React, { useState } from 'react'\nimport { Bills } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { StyledButton } from '../styles'\nimport BuyBillModalView from './BuyBillModalView'\n\ninterface TransferBillModalProps {\n  onDismiss: () => void\n  bill?: Bills\n}\n\nconst WarningModal: React.FC<TransferBillModalProps> = ({ onDismiss, bill }) => {\n  const [confirmBuy, setConfirmBuy] = useState(false)\n  const { t } = useTranslation()\n  const { index } = bill\n  const [onPresentBuyBillsModal] = useModal(\n    <BuyBillModalView bill={bill} onDismiss={null} />,\n    true,\n    true,\n    `billsModal${index}`,\n  )\n\n  return (\n    <Modal onDismiss={onDismiss} maxWidth=\"385px\">\n      <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"10px\">\n        <Text bold fontSize=\"35px\">\n          <WarningIcon width=\"25px\" mr=\"10px\" color=\"error\" />\n          {t('WARNING')}\n          <WarningIcon width=\"25px\" ml=\"10px\" color=\"error\" />\n        </Text>\n      </Flex>\n      <Flex mt=\"30px\" mb=\"30px\" flexDirection=\"column\" alignItems=\"center\" mr=\"10px\">\n        <Flex ml=\"30px\" flexDirection=\"column\">\n          <Flex>\n            <Text style={{ fontWeight: 600 }}>\n              The {bill.earnToken.symbol} you recieve from this {bill.token.symbol}-{bill.quoteToken.symbol} Treasury\n              Bill at a <span style={{ color: 'rgba(223, 65, 65, 1)' }}>{bill.discount}%</span> discount rate is priced\n              at <span style={{ textDecoration: 'underline' }}>${bill?.priceUsd}</span>, which is higher than the\n              current market rate of{' '}\n              <span style={{ textDecoration: 'underline' }}>${bill?.earnTokenPrice?.toFixed(3)} </span>\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Flex mt=\"20px\" alignItems=\"center\">\n        <Checkbox onClick={() => setConfirmBuy((prev) => !prev)} />\n        <Text ml=\"10px\" fontSize=\"12px\" bold>\n          {t(\n            'I understand that I am purchasing %billToken% at a price above the current market rate, and would like to continue.',\n            { billToken: bill.earnToken.symbol },\n          )}\n        </Text>\n      </Flex>\n      <ModalFooter onDismiss={onDismiss}>\n        <StyledButton onClick={onPresentBuyBillsModal} disabled={!confirmBuy}>\n          {t('Continue')}\n        </StyledButton>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default React.memo(WarningModal)\n","import React from 'react'\nimport { useModal } from '@apeswapfinance/uikit'\nimport { Bills } from 'state/types'\nimport BuyBillModalView from './BuyBillModalView'\nimport { StyledButton } from '../styles'\nimport UserBillModalView from './UserBillModalView'\nimport { BillsImage } from '../UserBillViews/styles'\nimport WarningModal from './WarningModal'\n\ninterface BillModalProps {\n  bill: Bills\n  buttonText?: string\n  id?: number\n  billId?: string\n  buttonSize?: number\n  buyFlag?: boolean\n  billCardImage?: string\n  disabled?: boolean\n}\n\nconst BillModal: React.FC<BillModalProps> = ({\n  buttonText,\n  bill,\n  id,\n  buttonSize,\n  buyFlag,\n  billId,\n  billCardImage,\n  disabled,\n}) => {\n  const [onPresentBuyBillsModal] = useModal(\n    <BuyBillModalView bill={bill} onDismiss={null} />,\n    true,\n    true,\n    `billsModal${id}`,\n  )\n  const [onPresentUserBillModal] = useModal(\n    <UserBillModalView bill={bill} billId={billId} onDismiss={null} />,\n    true,\n    true,\n    `billsModal${bill.billNftAddress}-${billId}`,\n  )\n  const [onPresentBuyWarning] = useModal(\n    <WarningModal bill={bill} onDismiss={null} />,\n    true,\n    true,\n    `billsWarningModal${id}`,\n  )\n  return !billCardImage ? (\n    <StyledButton\n      onClick={\n        buyFlag\n          ? parseFloat(bill?.discount) < 0\n            ? onPresentBuyWarning\n            : onPresentBuyBillsModal\n          : onPresentUserBillModal\n      }\n      buttonSize={buttonSize}\n      disabled={disabled}\n    >\n      {buttonText}\n    </StyledButton>\n  ) : (\n    <BillsImage image={billCardImage} onClick={onPresentUserBillModal} style={{ cursor: 'pointer' }} />\n  )\n}\n\nexport default React.memo(BillModal)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Flex, LinkExternal } from '@ape.swap/uikit'\nimport { PLProps } from './types'\nimport { styles } from './styles'\n\nconst ProjectLinks: React.FC<PLProps> = ({ website, twitter, isMobile, t }) => {\n  return (\n    <Flex>\n      {(website || twitter) && (\n        <Flex sx={styles.links}>\n          {website && (\n            <Flex sx={{ justifyContent: 'center', alignItems: 'center' }} mt=\"5px\">\n              <LinkExternal href={website} style={{ fontSize: (isMobile && '12px') || '14px' }}>\n                {t('Website')}\n              </LinkExternal>\n            </Flex>\n          )}\n          {twitter && (\n            <Flex sx={{ justifyContent: 'center', alignItems: 'center' }} mt=\"5px\" ml=\"20px\">\n              <LinkExternal href={twitter} style={{ fontSize: (isMobile && '12px') || '14px' }}>\n                {t('Twitter')}\n              </LinkExternal>\n            </Flex>\n          )}\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default ProjectLinks\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Flex, TooltipBubble, Text, InfoIcon, useMatchBreakpoints } from '@ape.swap/uikit'\nimport ListView from 'components/ListView'\nimport { Bills } from 'state/types'\nimport UnlockButton from 'components/UnlockButton'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ExtendedListViewProps } from 'components/ListView/types'\nimport ListViewContent from 'components/ListViewContent'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { Container } from './styles'\nimport BillModal from './Modals'\nimport ProjectLinks from './UserBillViews/ProjectLinks'\n\nconst BillsListView: React.FC<{ bills: Bills[] }> = ({ bills }) => {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { isXl, isXxl } = useMatchBreakpoints()\n  const isMobile = !isXl && !isXxl\n  const billsListView = bills.map((bill) => {\n    const { earnToken, token, quoteToken, maxTotalPayOut, totalPayoutGiven, earnTokenPrice } = bill\n    const vestingTime = getTimePeriods(parseInt(bill.vestingTime), true)\n    const available = new BigNumber(maxTotalPayOut)\n      ?.minus(new BigNumber(totalPayoutGiven))\n      ?.div(new BigNumber(10).pow(earnToken.decimals))\n\n    const threshold = new BigNumber(5).div(earnTokenPrice)\n    const disabled = available.lte(threshold)\n\n    return {\n      tokens: { token1: token.symbol, token2: quoteToken.symbol, token3: earnToken.symbol },\n      stakeLp: true,\n      id: bill.index,\n      billArrow: true,\n      title: (\n        <ListViewContent\n          title={t(bill.billType)}\n          value={bill.lpToken.symbol}\n          width={isMobile ? 120 : 150}\n          height={45}\n          ml={10}\n        />\n      ),\n      infoContent: isMobile && <ProjectLinks website={bill?.projectLink} twitter={bill?.twitter} t={t} isMobile />,\n      ttWidth: isMobile && '200px',\n      toolTipIconWidth: isMobile && '20px',\n      toolTipStyle: isMobile && { marginTop: '12px', marginRight: '10px' },\n      infoContentPosition: 'translate(10%, 0%)',\n      cardContent: (\n        <>\n          <ListViewContent\n            title={t('Price')}\n            value={disabled ? 'N/A' : `$${bill?.priceUsd}`}\n            width={isMobile ? 90 : 120}\n            ml={20}\n            height={52.5}\n            toolTip={t('This is the current discounted price of the tokens.')}\n            toolTipPlacement=\"bottomLeft\"\n            toolTipTransform=\"translate(13%, 0%)\"\n          />\n          <ListViewContent\n            title={t('Discount')}\n            valueColor={disabled ? null : parseFloat(bill?.discount) < 0 ? '#DF4141' : '#38A611'}\n            value={disabled ? 'N/A' : `${bill?.discount}%`}\n            width={isMobile ? 90 : 120}\n            height={52.5}\n            toolTip={\n              parseFloat(bill?.discount) < 0\n                ? t(\"This is the percentage discount relative to the token's current market price.\")\n                : t(\"This is the percentage discount relative to the token's current market price.\")\n            }\n            toolTipPlacement=\"bottomLeft\"\n            toolTipTransform={parseFloat(bill?.discount) < 0 ? 'translate(25, 0%)' : 'translate(23%, 0%)'}\n          />\n          <ListViewContent\n            title={t('Vesting Term')}\n            value={`${vestingTime.days}d, ${vestingTime.minutes}h, ${vestingTime.seconds}m`}\n            width={isMobile ? 120 : 120}\n            height={52.5}\n            toolTip={t('This is how long it will take for all tokens in the Bill to fully vest.')}\n            toolTipPlacement={isMobile ? 'bottomRight' : 'bottomLeft'}\n            toolTipTransform={isMobile ? 'translate(13%, 0%)' : 'translate(39%, 0%)'}\n          />\n          {!isMobile && (\n            <>\n              <Flex style={{ height: '100%', alignItems: 'center' }}>\n                {account ? (\n                  <BillModal\n                    bill={bill}\n                    buttonText={disabled ? t('SOLD OUT') : t('BUY')}\n                    id={bill.index}\n                    buyFlag\n                    disabled={!bill.discount || bill.discount.includes('NaN') || disabled}\n                  />\n                ) : (\n                  <UnlockButton />\n                )}\n              </Flex>\n              <Flex sx={{ alignItems: 'center', height: '100%' }}>\n                <Flex sx={{ alignItems: 'flex-start' }}>\n                  <div style={{ display: 'inline-block' }}>\n                    <TooltipBubble\n                      placement=\"bottomRight\"\n                      transformTip=\"translate(8%, -2%)\"\n                      body={<ProjectLinks website={bill?.projectLink} twitter={bill?.twitter} t={t} />}\n                    >\n                      <InfoIcon width=\"24px\" />\n                    </TooltipBubble>\n                  </div>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </>\n      ),\n      expandedContentSize: 100,\n      expandedContent: isMobile && (\n        <Flex sx={{ alignItems: 'center', justifyContent: 'center', height: '100%', width: '100%' }}>\n          {account ? (\n            <BillModal\n              bill={bill}\n              buttonText={disabled ? t('SOLD OUT') : t('BUY')}\n              id={bill.index}\n              buyFlag\n              disabled={!bill.discount || bill.discount.includes('NaN') || disabled}\n            />\n          ) : (\n            <UnlockButton />\n          )}\n        </Flex>\n      ),\n    } as ExtendedListViewProps\n  })\n\n  return (\n    <Container>\n      <Text margin=\"20px 10px\">{t('Available Treasury Bills')}</Text>\n      <ListView listViews={billsListView} />\n    </Container>\n  )\n}\n\nexport default React.memo(BillsListView)\n","import { Flex, Skeleton } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport ListViewContent from 'components/ListViewContent'\nimport ReactPlayer from 'react-player'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React from 'react'\nimport { Bills } from 'state/types'\nimport 'swiper/swiper.min.css'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Claim from '../Actions/Claim'\nimport { BillCardsContainer, BillsImage, CardContainer } from './styles'\nimport { StyledButton } from '../styles'\nimport BillModal from '../Modals'\n\nconst BillCard: React.FC<{ bills: Bills[]; ml?: string }> = ({ bills, ml }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const scrollDown = () => window.scrollBy({ top: 500, behavior: 'smooth' })\n  const ownedBillsAmount = bills?.flatMap((bill) => (bill?.userOwnedBillsData ? bill?.userOwnedBillsData : [])).length\n  const billsCardView = bills\n    .flatMap((bill) => {\n      const ownedBills = bill?.userOwnedBillsData\n      return ownedBills?.flatMap((ownedBill, i) => {\n        if (parseFloat(ownedBill.pendingRewards) === 0 && parseFloat(ownedBill.payout) === 0) {\n          return []\n        }\n        const pendingRewards = getBalanceNumber(\n          new BigNumber(ownedBill.pendingRewards),\n          bill?.earnToken?.decimals,\n        )?.toFixed(4)\n        const ownedBillNftData = bill?.userOwnedBillsNftData ? bill?.userOwnedBillsNftData[i] : null\n        return (\n          <SwiperSlide style={{ maxWidth: '270px', height: '307px' }} key={ownedBill.id}>\n            <CardContainer ml={ml} key={ownedBill.id}>\n              {ownedBillNftData?.image ? (\n                <BillModal bill={bill} billId={ownedBill.id} billCardImage={ownedBillNftData?.image} />\n              ) : (\n                <Skeleton width=\"270px\" height=\"159px\" />\n              )}\n              <Flex\n                padding=\"0px 15px\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                style={{ height: '75px', width: '100%' }}\n              >\n                <ListViewContent title={t('Banana Bill')} value={bill.lpToken.symbol} height={50} width={120} />\n                <ListViewContent\n                  title={t('Claimable')}\n                  value={pendingRewards}\n                  height={50}\n                  width={60}\n                  justifyContent=\"flex-end\"\n                />\n              </Flex>\n              <Claim\n                billAddress={bill.contractAddress[chainId]}\n                billIds={[ownedBill.id]}\n                pendingRewards={ownedBill?.pendingRewards}\n              />\n            </CardContainer>\n          </SwiperSlide>\n        )\n      })\n    })\n    ?.slice(0, 4)\n\n  return (\n    <BillCardsContainer>\n      <Swiper\n        id=\"serviceSwiper\"\n        initialSlide={0}\n        spaceBetween={15.5}\n        slidesPerView=\"auto\"\n        loopedSlides={4}\n        loop={false}\n        centeredSlides\n        resizeObserver\n        lazy\n        breakpoints={{\n          480: {\n            centeredSlides: false,\n          },\n        }}\n      >\n        {billsCardView}\n        {ownedBillsAmount < 4 && (\n          <SwiperSlide style={{ maxWidth: '270px', height: '307px' }}>\n            <CardContainer>\n              <BillsImage>\n                <ReactPlayer playing muted loop url=\"videos/bills-video.mp4\" height=\"100%\" width=\"100%\" playsInline />\n              </BillsImage>\n              <Flex\n                padding=\"0px 15px\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                style={{ height: '75px', width: '100%' }}\n              >\n                <ListViewContent\n                  title={t('Treasury Bill')}\n                  value=\"Want more?\"\n                  height={50}\n                  width={150}\n                  justifyContent=\"flex-start\"\n                />\n              </Flex>\n              <StyledButton onClick={scrollDown}>{t('BUY BELOW')}</StyledButton>\n            </CardContainer>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </BillCardsContainer>\n  )\n}\n\nexport default React.memo(BillCard)\n","import React from 'react'\nimport { Flex, useMatchBreakpoints } from '@apeswapfinance/uikit'\nimport ListView from 'components/ListView'\nimport { Bills } from 'state/types'\nimport { ExtendedListViewProps } from 'components/ListView/types'\nimport ListViewContent from 'components/ListViewContent'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport Claim from '../Actions/Claim'\nimport VestedTimer from '../VestedTimer'\nimport BillModal from '../Modals'\n\nconst UserBillListView: React.FC<{ bills: Bills[]; showAll?: boolean }> = ({ bills, showAll }) => {\n  const { isXl, isLg, isXxl } = useMatchBreakpoints()\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const isMobile = !isLg && !isXl && !isXxl\n  const billsListView = bills.flatMap((bill) => {\n    const ownedBills = bill?.userOwnedBillsData\n    const { token, quoteToken, earnToken } = bill\n    return ownedBills.flatMap((ownedBill) => {\n      if (!showAll && parseFloat(ownedBill.pendingRewards) === 0 && parseFloat(ownedBill.payout) === 0) {\n        return []\n      }\n      const pending = getBalanceNumber(new BigNumber(ownedBill.payout), bill?.earnToken?.decimals)?.toFixed(4)\n      const pendingRewards = getBalanceNumber(\n        new BigNumber(ownedBill.pendingRewards),\n        bill?.earnToken?.decimals,\n      )?.toFixed(4)\n      return {\n        tokens: { token1: token.symbol, token2: quoteToken.symbol, token3: earnToken.symbol },\n        id: ownedBill.id,\n        billArrow: true,\n        title: (\n          <ListViewContent\n            title={bill.billType}\n            value={bill.lpToken.symbol}\n            width={isMobile ? 150 : 150}\n            height={45}\n            ml={10}\n          />\n        ),\n        cardContent: (\n          <>\n            <ListViewContent\n              title={t('Claimable')}\n              value={pendingRewards}\n              width={isMobile ? 120 : 165}\n              ml={20}\n              height={52.5}\n              toolTip={t('This is the amount of tokens that have vested and available to claim.')}\n              toolTipPlacement=\"bottomLeft\"\n              toolTipTransform=\"translate(0, 65%)\"\n            />\n            <ListViewContent\n              title={t('Pending')}\n              value={pending}\n              width={isMobile ? 120 : 160}\n              height={52.5}\n              toolTip={t('This is the amount of unvested tokens that cannot be claimed yet.')}\n              toolTipPlacement=\"bottomLeft\"\n              toolTipTransform=\"translate(0, 65%)\"\n            />\n            <VestedTimer lastBlockTimestamp={ownedBill.lastBlockTimestamp} vesting={ownedBill.vesting} />\n            {!isMobile && (\n              <>\n                <Flex alignItems=\"center\" style={{ height: '100%' }}>\n                  <Claim\n                    billAddress={bill.contractAddress[chainId]}\n                    billIds={[ownedBill.id]}\n                    buttonSize={100}\n                    pendingRewards={ownedBill?.pendingRewards}\n                  />\n                </Flex>\n                <Flex alignItems=\"center\" style={{ height: '100%' }}>\n                  <BillModal buttonText={t('VIEW')} bill={bill} billId={ownedBill.id} buttonSize={100} />\n                </Flex>\n              </>\n            )}\n          </>\n        ),\n        expandedContentSize: 135,\n        expandedContent: isMobile && (\n          <Flex flexDirection=\"column\" alignItems=\"center\" style={{ height: '110px', width: '100%' }}>\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <Claim\n                billAddress={bill.contractAddress[chainId]}\n                billIds={[ownedBill.id]}\n                pendingRewards={ownedBill?.pendingRewards}\n              />\n            </Flex>\n            <Flex alignItems=\"center\" mt=\"20px\">\n              <BillModal buttonText={t('VIEW')} bill={bill} billId={ownedBill.id} buttonSize={200} />\n            </Flex>\n          </Flex>\n        ),\n      } as ExtendedListViewProps\n    })\n  })\n  return <ListView listViews={billsListView?.reverse()} />\n}\n\nexport default React.memo(UserBillListView)\n","import { Text } from '@apeswapfinance/uikit'\nimport BillsDiagram from 'components/MarketingModalContent/Bills/BillsDiagram'\nimport ReactPlayer from 'react-player'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { BillDiagramContainer, BillGifContainer, DescriptionContainer, FirstTimeCardContainer } from './styles'\n\nconst FirstTimeCard: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <FirstTimeCardContainer>\n      <BillGifContainer>\n        <ReactPlayer playing muted loop url=\"videos/bills-video.mp4\" height=\"100%\" width=\"100%\" playsInline />\n      </BillGifContainer>\n      <DescriptionContainer>\n        <Text bold mb=\"0px\" fontSize=\"22px\">\n          {t('Information')}\n        </Text>\n        <Text fontSize=\"12px\" style={{ lineHeight: '15px' }}>\n          {t(\n            'Treasury Bills allows users to access tokens at a discount in exchange for their liquidity provider (LP) tokens. Each Treasury Bill is a unique NFT that represents the contract and its respective reward tokens, which vest over a certain amount of time.',\n          )}\n          <br /> <br />\n          <a\n            href=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/raise/treasury-bills\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('For more info, visit the Treasury Bills page in our Documentation.')}\n          </a>\n          <br /> <br />\n          <Text fontSize=\"12px\" bold>\n            {t('HOW IT WORKS')}:\n          </Text>\n        </Text>\n        <BillDiagramContainer>\n          <BillsDiagram />\n        </BillDiagramContainer>\n      </DescriptionContainer>\n    </FirstTimeCardContainer>\n  )\n}\n\nexport default React.memo(FirstTimeCard)\n","import React, { useState } from 'react'\nimport { ArrowDropLeftIcon, ArrowDropRightIcon, Checkbox, Flex, Text } from '@apeswapfinance/uikit'\nimport SwiperProvider from 'contexts/SwiperProvider'\nimport { Bills } from 'state/types'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport BillCard from './BillCard'\nimport { Container } from '../styles'\nimport UserBillListView from './UserBillListView'\nimport FirstTimeCard from './FirstTimeCard'\nimport { HeadingContainer } from './styles'\n\nconst UserBillViews: React.FC<{ bills: Bills[] }> = ({ bills }) => {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const userOwnedBills = bills?.filter((bill) => bill?.userOwnedBillsData?.length > 0)\n  const ownedBillsAmount = bills?.flatMap((bill) => (bill?.userOwnedBillsData ? bill?.userOwnedBillsData : [])).length\n  const [showAll, setShowAll] = useState(false)\n  const [showExpired, setShowExpired] = useState(true)\n  return (\n    <Container>\n      {!account || ownedBillsAmount === 0 ? (\n        <FirstTimeCard />\n      ) : !showAll ? (\n        <>\n          <Flex justifyContent=\"space-between\" margin=\"15px 10px\">\n            <Text>\n              {t('Your Treasury Bills')} ({ownedBillsAmount})\n            </Text>\n          </Flex>\n          <SwiperProvider>\n            <BillCard bills={userOwnedBills} />\n          </SwiperProvider>\n          <Flex justifyContent=\"center\" margin=\"15px 10px\">\n            <Text onClick={() => setShowAll((prev) => !prev)} bold style={{ cursor: 'pointer' }}>\n              {t('List View')} <ArrowDropRightIcon width=\"8px\" ml=\"5px\" />\n            </Text>\n          </Flex>\n        </>\n      ) : (\n        <Flex flexDirection=\"column\" mb=\"50px\">\n          <HeadingContainer>\n            <Text\n              onClick={() => setShowAll((prev) => !prev)}\n              bold\n              style={{ cursor: 'pointer', minWidth: '70px', gridArea: 'back' }}\n            >\n              <ArrowDropLeftIcon width=\"8px\" mr=\"5px\" /> {t('Back')}\n            </Text>\n            <Text textAlign=\"center\" style={{ width: '100%', gridArea: 'all-bills' }}>\n              {t('All Your Treasury Bills')}\n            </Text>\n            <Flex style={{ minWidth: '140px', gridArea: 'expired' }}>\n              <Text mr=\"12.5px\">{t('Show expired')}</Text>\n              <Checkbox checked={showExpired} onClick={() => setShowExpired((prev) => !prev)} />\n            </Flex>\n          </HeadingContainer>\n          <UserBillListView bills={userOwnedBills} showAll={showExpired} />\n        </Flex>\n      )}\n    </Container>\n  )\n}\n\nexport default React.memo(UserBillViews)\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst StyledInput = styled(Input)`\n  border-radius: 10px;\n  background: ${({ theme }) => theme.colors.white3};\n  font-weight: 800;\n  border: none;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 180px;\n  }\n  @media screen and (min-width: 900px) {\n    width: 200px;\n  }\n  @media screen and (min-width: 1000px) {\n    width: 300px;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  width?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <StyledInput ref={inputEl} value={value} onChange={onChange} onBlur={() => setToggled(false)} icon=\"search\" />\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { Text, Flex } from '@apeswapfinance/uikit'\nimport { Button } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\n\nexport const ControlContainer = styled(Flex)`\n  align-items: center;\n  position: relative;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 15px;\n  z-index: 2;\n  background-color: ${({ theme }) => theme.colors.white2};\n  min-width: 300px;\n  max-width: 500px;\n  width: 100%;\n  align-self: center;\n  height: 225px;\n  margin-top: 20px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 180px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    min-height: 59px;\n    height: 100%;\n    padding: 0px 50px 0px 30px;\n    align-items: center;\n    max-width: 100%;\n    height: auto;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: 0px 50px 0px 30px;\n  }\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 16px !important;\n`\n\nexport const LearnMoreButton = styled(Button)`\n  height: 36px;\n  width: auto;\n  min-width: 192px;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.yellow};\n  border: 2px solid ${({ theme }) => theme.colors.yellow};\n`\n\nexport const ClaimAllWrapper = styled(Flex)`\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n","export const NUMBER_OF_FARMS_VISIBLE = 10\n\nexport const OPTIONS = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'BANANA',\n    value: 'bananaBill',\n  },\n  {\n    label: 'Jungle',\n    value: 'jungleBill',\n  },\n]\n","import { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport billAbi from 'config/abi/bill.json'\nimport { userClaimBill } from 'utils/callHelpers'\nimport { getContract } from 'utils'\nimport { Bill } from 'config/abi/types'\nimport track from 'utils/track'\nimport { useBillTypes } from './useBillType'\n\n// Claim a Bill\nconst useClaimBill = (billMap: { billAddress: string; billIds: string[] }[]) => {\n  const { account, library, chainId } = useActiveWeb3React()\n  const billAddresses = billMap.map((b) => {\n    return b.billAddress\n  })\n  const billTypes: string[] = useBillTypes(billAddresses)\n  const handleClaimBill = useCallback(async () => {\n    const billTrxs = billMap.map(async (bm, i) => {\n      const billContract = getContract(bm.billAddress, billAbi, library, account) as Bill\n      track({\n        event: billTypes[i],\n        chain: chainId,\n        data: {\n          cat: 'claimAll',\n          address: bm.billAddress,\n          billIds: bm.billIds,\n          bills: billMap,\n        },\n      })\n      return userClaimBill(billContract, bm.billIds)\n    })\n    return Promise.all(billTrxs)\n  }, [billMap, billTypes, library, chainId, account])\n\n  return { onClaimBill: handleClaimBill }\n}\n\nexport default useClaimBill\n","import React, { useState } from 'react'\nimport useClaimAll from 'views/Bills/hooks/useClaimAll'\nimport { AutoRenewIcon } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useToast } from 'state/hooks'\nimport { getEtherscanLink } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { fetchBillsUserDataAsync, fetchUserOwnedBillsDataAsync } from 'state/bills'\nimport { useTranslation } from 'contexts/Localization'\nimport { StyledButton } from '../styles'\n\nconst ClaimAll: React.FC<{\n  userOwnedBills: { billAddress: string; billIds: string[] }[]\n  ownedBillsAmount: number\n  buttonSize?: number\n}> = ({ userOwnedBills, ownedBillsAmount, buttonSize }) => {\n  const { onClaimBill } = useClaimAll(userOwnedBills)\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n\n  const handleClaim = async () => {\n    setPendingTrx(true)\n    await onClaimBill()\n      .then((resp) => {\n        resp.map((trx) =>\n          toastSuccess(t('Claim Successful'), {\n            text: t('View Transaction'),\n            url: getEtherscanLink(trx.transactionHash, 'transaction', chainId),\n          }),\n        )\n      })\n      .catch((e) => {\n        console.error(e)\n        toastError(e?.data?.message || t('Error: Please try again.'))\n        setPendingTrx(false)\n      })\n    dispatch(fetchUserOwnedBillsDataAsync(chainId, account))\n    dispatch(fetchBillsUserDataAsync(chainId, account))\n    setPendingTrx(false)\n  }\n  return (\n    <StyledButton\n      onClick={handleClaim}\n      endIcon={pendingTrx && <AutoRenewIcon spin color=\"currentColor\" />}\n      disabled={pendingTrx || ownedBillsAmount === 0}\n      buttonSize={buttonSize}\n      style={{ height: '36px' }}\n    >\n      {t('Claim All')} ({ownedBillsAmount})\n    </StyledButton>\n  )\n}\n\nexport default React.memo(ClaimAll)\n","import React from 'react'\nimport { Flex, Select, SelectItem, Text } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { ListViewProps } from './types'\nimport SearchInput from './SearchInput'\nimport { ClaimAllWrapper, ControlContainer, LabelWrapper, LearnMoreButton, StyledText } from './styles'\nimport { OPTIONS } from './constants'\nimport ClaimAll from '../Actions/ClaimAll'\n\nconst BillMenu: React.FC<ListViewProps> = ({ onHandleQueryChange, onSetSortOption, query, activeOption, bills }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const userOwnedBills = bills?.filter((bill) => bill?.userOwnedBillsData?.length > 0)\n  const ownedBillsAmount = bills\n    ?.flatMap((bill) => (bill?.userOwnedBillsData ? bill.userOwnedBillsData : []))\n    .filter((b) => parseFloat(b.pendingRewards) > 0).length\n  const ownedBills = userOwnedBills?.map((bill) => {\n    return (\n      bill?.userOwnedBillsData && {\n        billAddress: bill.contractAddress[chainId],\n        billIds: bill.userOwnedBillsData\n          .filter((b) => parseFloat(b.pendingRewards) > 0)\n          .map((b) => {\n            return b.id\n          }),\n      }\n    )\n  })\n  return (\n    <ControlContainer>\n      <LabelWrapper>\n        <StyledText bold mr=\"15px\">\n          {t('Search')}\n        </StyledText>\n        <SearchInput onChange={onHandleQueryChange} value={query} />\n      </LabelWrapper>\n      <Flex>\n        <Select size=\"sm\" width=\"126px\" onChange={(e) => onSetSortOption(e.target.value)} active={activeOption}>\n          {OPTIONS.map((option) => {\n            return (\n              <SelectItem size=\"sm\" value={option.value} key={option.label}>\n                <Text>{t(option.label)}</Text>\n              </SelectItem>\n            )\n          })}\n        </Select>\n      </Flex>\n      <LearnMoreButton variant=\"secondary\" as={Link} to=\"?modal=bills\">\n        {' '}\n        {t('Learn More')}{' '}\n      </LearnMoreButton>\n      <ClaimAllWrapper>\n        <ClaimAll userOwnedBills={ownedBills} ownedBillsAmount={ownedBillsAmount} />\n      </ClaimAllWrapper>\n    </ControlContainer>\n  )\n}\n\nexport default React.memo(BillMenu)\n","import { Flex } from '@apeswapfinance/uikit'\nimport { useLocation } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport { usePollBills, useBills, usePollUserBills, useSetBills } from 'state/bills/hooks'\nimport { Bills as BillType } from 'state/types'\nimport ListViewLayout from 'components/layout/ListViewLayout'\nimport Banner from 'components/Banner'\nimport { useTranslation } from 'contexts/Localization'\nimport BillsListView from './components/BillsListView'\nimport UserBillViews from './components/UserBillViews'\nimport BillMenu from './components/Menu'\n\nconst Bills: React.FC = () => {\n  useSetBills()\n  usePollBills()\n  usePollUserBills()\n  const bills = useBills()\n  const { t } = useTranslation()\n  const [query, setQuery] = useState('')\n  const [sortOption, setSortOption] = useState('all')\n  const location = useLocation()\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const renderBills = (showNonPurchaseable: boolean): BillType[] => {\n    let billsToReturn = []\n    bills?.forEach((bill) => {\n      if (bill.inactive && !showNonPurchaseable) return\n      if (location.search.includes(`id=${bill.index}`)) {\n        billsToReturn.unshift(bill)\n      } else {\n        billsToReturn.push(bill)\n      }\n    })\n\n    if (query) {\n      billsToReturn = billsToReturn?.filter((bill) => {\n        return bill.lpToken.symbol.toUpperCase().includes(query.toUpperCase())\n      })\n    }\n\n    if (sortOption === 'bananaBill') {\n      billsToReturn = billsToReturn?.filter((bill) => bill.billType === 'BANANA Bill')\n    }\n    if (sortOption === 'jungleBill') {\n      billsToReturn = billsToReturn?.filter((bill) => bill.billType === 'JUNGLE Bill')\n    }\n\n    return billsToReturn\n  }\n\n  return (\n    <>\n      <Flex\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        mb=\"80px\"\n        style={{ position: 'relative', top: '30px', width: '100%' }}\n      >\n        <ListViewLayout>\n          <Banner\n            banner=\"treasury-bills\"\n            title={t('Treasury Bills')}\n            link=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/raise/treasury-bills\"\n            listViewBreak\n            maxWidth={1130}\n            titleColor=\"primaryBright\"\n          />\n          <BillMenu\n            bills={bills}\n            onHandleQueryChange={handleChangeQuery}\n            onSetSortOption={setSortOption}\n            activeOption={sortOption}\n            query={query}\n          />\n          <UserBillViews bills={renderBills(true)} />\n          <BillsListView bills={renderBills(false)} />\n        </ListViewLayout>\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(Bills)\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number, days?: boolean) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS && !days) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS && !days) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n"],"sourceRoot":""}
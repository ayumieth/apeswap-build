{"version":3,"sources":["views/Pools/components/styles.ts","components/RoiCalculator/styles.ts","components/RoiCalculator/CurrencyInput.tsx","components/RoiCalculator/tokenInfo.ts","components/RoiCalculator/DetailsContent.tsx","components/RoiCalculator/RoiCalculatorModal.tsx","components/RoiCalculator/CalcButton.tsx","views/Pools/components/Menu/SearchInput.tsx","views/Pools/components/Menu/styles.ts","views/Pools/components/Menu/constants.ts","views/Pools/components/Actions/styles.ts","views/Pools/components/Actions/HarvestAll.tsx","views/Pools/components/Menu/index.tsx","views/Pools/components/Actions/ApprovalAction.tsx","views/Pools/components/Modals/DepositModal.tsx","views/Pools/components/Modals/WithdrawModal.tsx","views/Pools/components/Actions/StakeActions.tsx","views/Pools/components/Actions/index.tsx","views/Pools/components/Actions/HarvestAction.tsx","views/Pools/InfoContent.tsx","views/Pools/components/DisplayPools.tsx","views/Pools/Pools.tsx","utils/getTimePeriods.ts","components/ModalInput/ModalInput.tsx","views/Farms/components/styles.ts","components/ModalActions/ModalActions.tsx","components/ListViewMenu/MenuTabButtons/index.tsx","components/ListViewMenu/styles.ts","../node_modules/lodash/partition.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["poolStyles","styledBtn","borderRadius","fontSize","fontWeight","padding","minWidth","height","width","container","position","actionContainer","justifyContent","StyledTag","styled","ArrowDropUpIcon","Tag","styles","apyButton","svg","border","backgroundColor","fill","maxButton","margin","lineHeight","alignItems","rowGap","tabContainer","marginBottom","px","color","inputSection","flexDirection","zIndex","marginRight","text","marginLeft","title","buttonsContainer","flexWrap","balance","whiteSpace","overflow","textOverflow","roiContainer","columnGap","roiBanana","detailRow","paddingBottom","detailContainer","hide","marginTop","CurrencyInputPanelRoi","dollarValue","tokenValue","onUserInput","onMax","removeLiquidity","sx","onClick","variant","style","Row","NumericalInput","id","value","align","autoFocus","weight","React","memo","tokenInfo","tokenListInfo","lpPair","notLpPair","DetailsContent","apr","lpApr","isLp","label","tokenAddress","quoteTokenAddress","apy","liquidityUrl","rewardTokenName","useState","expanded","setExpanded","link","setLink","chainId","useActiveWeb3React","t","useTranslation","dispatch","useAppDispatch","banana","useBananaAddress","gnana","useGoldenBananaAddress","useModal","closeModal","handleClose","onPresentAddLiquidityWidgetModal","useEffect","toLowerCase","prev","cursor","open","toFixed","map","item","dangerouslySetInnerHTML","__html","token","quoteToken","selectCurrency","field","Field","INPUT","currencyId","OUTPUT","href","target","textDecoration","modalStyle","overflowY","maxHeight","amountButtons","intervals","compoundIntervals","RoiCalculatorModal","props","onDismiss","rewardTokenPrice","lpAddress","lpPrice","numberOfDays","setNumberOfDays","compoundFrequency","setCompoundFrequency","amountDollars","setAmountDollars","inputValue","setInputValue","account","isMobile","useIsMobile","tokenPrices","useTokenPrices","lpTokenPrices","useLpTokenPrices","keySuffix","setKeySuffix","tokenPrice","BigNumber","toNumber","tokensWorthForDollarSelected","parseFloat","onIntervalClick","type","index","currency","useCurrency","compoundROIRates","tokenEarnedPerThousandDollarsCompounding","farmApr","roundingDecimals","amountDollar","percentageCompound","apyModalRoi","amountEarned","amountInvested","compoundROIRatesValue","Number","isNaN","percentageCompoundValue","selectedCurrencyBalance","useCurrencyBalance","undefined","maxAmount","maxAmountSpend","rewardPrice","useMemo","find","tok","address","price","onTokenAmountChange","useCallback","fiatValue","isFinite","toString","onDollarAmountChange","expectedValue","maxWidth","onAnimationComplete","as","CurrencyInput","amount","size","activeTab","indexOf","interval","disabled","ServiceTokenDisplay","token1","CalcButton","onPresentCalcModal","ml","StyledInput","Input","theme","colors","white3","mediaQueries","md","Container","div","SearchInput","onChange","toggled","setToggled","inputEl","useRef","ref","onBlur","icon","ControlContainer","Flex","white2","sm","xl","LabelWrapper","StyledText","Text","ClaimAllWrapper","Button","yellow","TOKEN_OPTIONS","OPTIONS","StyledButtonSquare","SmallButtonSquare","ActionContainer","CenterContainer","HarvestAll","sousIds","pendingTrx","setPendingTrx","onHarvestAll","useSousHarvestAll","toastSuccess","useToast","handleHarvestAll","a","then","resp","trx","url","getEtherscanLink","transactionHash","catch","e","console","error","fetchPoolsUserDataAsync","length","load","PoolMenu","onHandleQueryChange","onSetSortOption","onSetTokenOption","query","activeTokenOption","activeOption","pools","onSetStake","stakedOnly","pool","sousId","bold","mr","active","option","MenuTabButtons","checked","ApprovalAction","stakingTokenContractAddress","isLoading","stakingTokenContract","useERC20","onApprove","useSousApprove","textAlign","className","trxHash","updateUserAllowance","DepositModal","max","onConfirm","tokenName","addLiquidityUrl","val","setVal","pendingTx","setPendingTx","fullBalance","getFullDisplayBalance","handleChange","currentTarget","handleSelectMax","ModalInput","onSelectMax","symbol","inputTitle","ModalActions","fullWidth","endIcon","spin","UnderlinedButton","handleClick","WithdrawModal","StakeAction","stakingTokenBalance","stakedTokenSymbol","stakedBalance","stakeTokenValueUsd","rawStakedBalance","getBalanceNumber","userStakedBalanceUsd","pendingDepositTrx","setPendingDepositTrx","pendingWithdrawTrx","setPendingWithdrawTrx","firstStake","gt","onStake","useSousStake","onUnstake","useSousUnstake","onPresentDeposit","onPresentWithdraw","ListViewContent","value2","value2Secondary","renderStakingButtons","Actions","allowance","stakeTokenAddress","UnlockButton","table","actionToRender","HarvestAction","earnTokenSymbol","userEarnings","pendingApeHarderTrx","setPendingApeHarderTrx","onHarvest","useSousHarvest","handleHarvest","updateUserPendingReward","handleApeHarder","InfoContent","currentBlock","useBlockNumber","timeUntilStart","getTimePeriods","Math","startBlock","BSC_BLOCK_TIME","timeUntilEnd","endBlock","explorerLink","BLOCK_EXPLORER","contractLink","contractAddress","tokenContractLink","rewardToken","days","hours","minutes","mt","projectLink","twitter","DisplayPools","openId","poolTags","pathname","useLocation","isActive","includes","history","useHistory","poolsListView","stakingToken","token2","totalDollarAmountStaked","round","totalStaked","lpStaking","BASE_ADD_LIQUIDITY_URL","lpTokens","userAllowance","userData","pendingReward","decimals","userEarningsUsd","userTokenBalance","userTokenBalanceUsd","pTag","tag","pid","tagColor","tokens","infoContent","infoContentPosition","ttWidth","toolTipIconWidth","toolTipStyle","cardContent","rel","toolTip","toolTipPlacement","toolTipTransform","aprCalculator","toLocaleString","expandedContent","push","search","window","ListView","listViews","Pools","useSetPools","usePollPools","setStakedOnly","tokenOption","setTokenOption","observerIsSet","setObserverIsSet","searchQuery","setSearchQuery","sortOption","setSortOption","numberOfPoolsVisible","setNumberOfPoolsVisible","useWeb3React","allPools","usePools","usePoolTags","poolOrderings","usePoolOrderings","location","params","URLSearchParams","urlSearchedPool","parseInt","get","loadMoreRef","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","current","curPools","filter","forAdmins","poolCategory","PoolCategory","JUNGLE","isFinished","partition","finishedPools","openPools","stakedOnlyPools","isGreaterThan","stakedInactivePools","mb","top","ListViewLayout","Banner","banner","listViewBreak","alignSelf","event","chosenPools","lowercaseQuery","toUpperCase","poolsToSort","orderBy","ordering","order","sortPools","slice","renderPools","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","floor","StyledTokenInput","xs","StyledButton","primaryBright","displayDecimals","isBalanceZero","displayBalance","isWarning","pl","placeholder","FarmButton","NextArrow","StyledModalActions","primaryDark","StyledModalAction","children","Children","child","Wrapper","lg","MenuTabButton","useRouteMatch","isExact","labels","MobilePadding","ToggleWrapper","isDark","StyledCheckbox","Checkbox","StyledImage","img","HarvestAllWrapper","Heading","require","createAggregator","result","key","module","exports","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","func","accumulator","array","baseEach"],"mappings":"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","file":"static/js/26.35dc5820.chunk.js","sourcesContent":["import { ArrowDropUpIcon } from '@apeswapfinance/uikit'\nimport { Tag } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const poolStyles: Record<string, ThemeUIStyleObject> = {\n  styledBtn: {\n    borderRadius: '10px',\n    fontSize: '16px',\n    fontWeight: 700,\n    padding: '10px 20px',\n    minWidth: '150px',\n    height: '44px',\n    '&&': {\n      width: '150px',\n    },\n  },\n  container: {\n    position: 'relative',\n  },\n  actionContainer: {\n    width: '100%',\n    justifyContent: 'space-between',\n    '@media screen and (min-width: 852px)': {\n      width: 'fit-content',\n    },\n  },\n}\n\nexport const NextArrow = styled(ArrowDropUpIcon)`\n  transform: rotate(90deg);\n`\n\nexport const StyledTag = styled(Tag)`\n  font-size: 10px;\n  padding: 0px 6px !important;\n  font-weight: 700;\n  border: none;\n  border-radius: 10px;\n  height: auto;\n  width: max-content;\n`\n","const styles = {\n  apyButton: {\n    svg: {\n      width: ['15px', '13px'],\n      height: ['15px', '13px'],\n    },\n    '&:disabled': {\n      border: 0,\n      backgroundColor: 'transparent',\n      svg: {\n        fill: 'primaryButtonDisable',\n      },\n    },\n  },\n  maxButton: {\n    margin: '0',\n    fontSize: '14px',\n    lineHeight: 0,\n    width: '62px',\n    height: '30px',\n  },\n  container: {\n    backgroundColor: 'white4',\n    borderRadius: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '15px',\n    rowGap: '10px',\n  },\n  tabContainer: {\n    marginBottom: '30px',\n    '&&& span': {\n      fontWeight: 700,\n      fontSize: '16px',\n    },\n    '& button': {\n      px: '20px',\n      fontSize: '16px',\n    },\n    '& *:not(button)': {\n      color: 'primaryButtonDisable',\n    },\n  },\n  inputSection: {\n    justifyContent: 'space-between',\n    alignItems: 'end',\n    flexDirection: 'column',\n    position: 'relative',\n    borderRadius: '10px',\n    zIndex: 1,\n    '& input': {\n      marginRight: 0,\n    },\n  },\n  text: {\n    fontSize: '12px',\n    lineHeight: '14px',\n    fontWeight: '500',\n    color: 'text',\n    marginLeft: '-5px',\n  },\n  title: {\n    fontSize: '16px',\n    margin: '25px 0px 8px 8px',\n  },\n  buttonsContainer: {\n    justifyContent: 'space-between',\n    margin: '10px 10px 10px 0',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    rowGap: '10px',\n  },\n  balance: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontSize: '14px',\n  },\n  roiContainer: {\n    backgroundColor: 'white4',\n    borderRadius: '20px',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '17px 0',\n    marginBottom: '25px',\n    columnGap: '20px',\n  },\n  roiBanana: {\n    '& span': {\n      fontSize: '12px',\n    },\n  },\n  detailRow: {\n    marginBottom: '5px',\n    fontSize: '16px',\n    fontWeight: '700',\n    justifyContent: 'space-between',\n    paddingBottom: '5px',\n  },\n  detailContainer: (hide) => ({\n    marginTop: hide ? 0 : '15px',\n    backgroundColor: 'white3',\n    padding: hide ? 0 : '25px 20px',\n    borderRadius: '10px',\n    overflow: hide ? 'hidden' : 'visible',\n    height: hide ? 0 : 'auto',\n    '& span': {\n      fontSize: '12px',\n    },\n  }),\n} as any\nexport default styles\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Button, Text } from '@ape.swap/uikit'\nimport { Flex } from 'theme-ui'\nimport { Input as NumericalInput } from 'components/CurrencyInputPanel/NumericalInput'\nimport { RowBetween } from '../layout/Row'\nimport styles from './styles'\n\ninterface CurrencyInputPanelProps {\n  dollarValue: string\n  tokenValue: string\n  onUserInput: (value: string) => void\n  onMax: () => void\n  removeLiquidity?: boolean\n}\n\nconst CurrencyInputPanelRoi = ({\n  dollarValue,\n  tokenValue,\n  onUserInput,\n  onMax,\n  removeLiquidity,\n}: CurrencyInputPanelProps) => {\n  return (\n    <Flex sx={styles.container}>\n      <Flex sx={{ position: 'relative' }}>\n        <Button onClick={onMax} variant=\"primary\" style={styles.maxButton}>\n          MAX\n        </Button>\n      </Flex>\n      <Flex sx={styles.inputSection as any}>\n        <RowBetween>\n          <NumericalInput\n            id=\"roi-token-amount-input\"\n            removeLiquidity={removeLiquidity}\n            value={tokenValue}\n            align=\"right\"\n            width=\"full\"\n            onUserInput={onUserInput}\n            autoFocus\n          />\n        </RowBetween>\n        <Text weight=\"light\" variant=\"sm\">\n          {dollarValue ? `~ $${dollarValue}` : ' -'}\n        </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(CurrencyInputPanelRoi)\n","export const tokenInfo = [\n  {\n    text: 'Base APR (BANANA yield only)',\n    value: 'apr',\n  },\n  {\n    text: 'APY (1x daily compound)',\n    value: 'apy',\n  },\n]\n\nexport const tokenListInfo = {\n  lpPair: [\n    'Calculated based on current rates.',\n    'LP Rewards: 0.15% of trading fees on BNB Chain, 0.05% on Polygon. Distributed proportionally among LP token holders.',\n    'Returns are calculated based on current rates. Estimated returns are not guaranteed and are provided for convenience only.',\n  ],\n  notLpPair: [\n    'Calculated based on current rates.',\n    'Estimated returns are not guaranteed and are provided for convenience only.',\n  ],\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useEffect, useState } from 'react'\nimport { Flex, Text, Box, Link } from 'theme-ui'\nimport { Button, useModal } from '@ape.swap/uikit'\nimport { DropDownIcon } from 'components/ListView/styles'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBananaAddress, useGoldenBananaAddress } from 'hooks/useAddress'\nimport { LiquidityModal } from 'components/LiquidityWidget'\nimport { Field, selectCurrency } from 'state/swap/actions'\nimport { useAppDispatch } from 'state'\nimport { FarmButton } from 'views/Farms/components/styles'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Farm } from 'state/types'\nimport { tokenInfo, tokenListInfo } from './tokenInfo'\nimport styles from './styles'\n\ninterface DetailsContentProps {\n  onDismiss?: () => void\n  label?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apr?: number\n  lpApr?: number\n  apy?: number\n  lpAddress?: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  isLp?: boolean\n  farm?: Farm\n  liquidityUrl?: string\n}\n\nconst DetailsContent: React.FC<DetailsContentProps> = ({\n  apr,\n  lpApr,\n  isLp,\n  label,\n  tokenAddress,\n  quoteTokenAddress,\n  apy,\n  liquidityUrl,\n  rewardTokenName,\n}) => {\n  const [expanded, setExpanded] = useState(false)\n  const [link, setLink] = useState('')\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const banana = useBananaAddress()\n  const gnana = useGoldenBananaAddress()\n\n  const [, closeModal] = useModal(<></>)\n  const [onPresentAddLiquidityWidgetModal] = useModal(\n    <LiquidityModal handleClose={closeModal} />,\n    true,\n    true,\n    'liquidityWidgetModal',\n  )\n\n  useEffect(() => {\n    if (!isLp) {\n      if (tokenAddress?.toLowerCase() === banana.toLowerCase()) {\n        setLink('swap')\n      }\n      if (tokenAddress?.toLowerCase() === gnana.toLowerCase()) {\n        setLink('gnana')\n      }\n    }\n  }, [chainId, tokenAddress, isLp, banana, gnana])\n\n  const showLiquidity = (token?, quoteToken?) => {\n    if (isLp) {\n      dispatch(\n        selectCurrency({\n          field: Field.INPUT,\n          currencyId: token,\n        }),\n      )\n      dispatch(\n        selectCurrency({\n          field: Field.OUTPUT,\n          currencyId: quoteToken,\n        }),\n      )\n      onPresentAddLiquidityWidgetModal()\n    }\n  }\n\n  return (\n    <>\n      <Flex\n        sx={{ justifyContent: 'center', alignItems: 'center', columnGap: '10px', marginBottom: '15px' }}\n        onClick={() => setExpanded((prev) => !prev)}\n      >\n        <Text\n          sx={{\n            fontWeight: 600,\n            fontSize: '14px',\n            '&:hover': {\n              cursor: 'pointer',\n            },\n          }}\n        >\n          {t('Details')}\n        </Text>\n        <DropDownIcon width=\"10px\" open={expanded} />\n      </Flex>\n      <Box sx={styles.detailContainer(!expanded)}>\n        <Flex sx={styles.detailRow}>\n          {isLp ? (\n            <Text>{t('APR (incl. LP rewards)')}</Text>\n          ) : (\n            <Text>\n              {t('APR')} - {rewardTokenName} {t('rewards')}\n            </Text>\n          )}\n          <Text>{(apr + (lpApr || 0)).toFixed(2)}%</Text>\n        </Flex>\n\n        {isLp &&\n          tokenInfo.map((item) => {\n            return (\n              <Flex key={item.value} sx={styles.detailRow}>\n                <Text>{t(`${item.text}`)}</Text>\n                <Text>{item.value === 'apr' ? apr.toFixed(2) : apy.toFixed(2)}%</Text>\n              </Flex>\n            )\n          })}\n\n        <ul>\n          {tokenListInfo[isLp ? 'lpPair' : 'notLpPair']?.map((item) => (\n            <li key={item}>\n              <Text sx={styles?.text} dangerouslySetInnerHTML={{ __html: t(item) }} />\n            </li>\n          ))}\n        </ul>\n\n        <Flex sx={{ marginTop: '25px', justifyContent: 'center' }}>\n          {isLp && !liquidityUrl && (\n            <FarmButton onClick={() => showLiquidity(tokenAddress, quoteTokenAddress)}>\n              {t('GET')} {label}\n            </FarmButton>\n          )}\n          {isLp && liquidityUrl && (\n            <Link\n              href={liquidityUrl}\n              target=\"_blank\"\n              sx={{\n                '&:hover': {\n                  textDecoration: 'none',\n                },\n              }}\n            >\n              <Button style={{ fontSize: '16px' }}>\n                {t('GET')} {label}\n              </Button>\n            </Link>\n          )}\n          {!isLp && (\n            <Link\n              href={link}\n              target=\"_blank\"\n              sx={{\n                '&:hover': {\n                  textDecoration: 'none',\n                },\n              }}\n            >\n              <Button style={{ fontSize: '16px' }}>\n                {t('GET')} {label}\n              </Button>\n            </Link>\n          )}\n        </Flex>\n      </Box>\n    </>\n  )\n}\nexport default React.memo(DetailsContent)\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { apyModalRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport { Modal, Button, Text, Tab, Tabs } from '@ape.swap/uikit'\nimport { Box, Flex, Heading } from 'theme-ui'\nimport { Farm } from 'state/types'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useTranslation } from 'contexts/Localization'\nimport maxAmountSpend from 'utils/maxAmountSpend'\nimport { useLpTokenPrices } from 'state/hooks'\nimport CurrencyInputPanel from './CurrencyInput'\nimport DetailsContent from './DetailsContent'\nimport styles from './styles'\nimport ServiceTokenDisplay from '../ServiceTokenDisplay'\nimport { useTokenPrices } from '../../state/tokenPrices/hooks'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  label?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apr?: number\n  lpApr?: number\n  apy?: number\n  lpAddress?: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  isLp?: boolean\n  farm?: Farm\n  liquidityUrl?: string\n  lpPrice?: number\n}\n\nconst modalStyle = {\n  style: {\n    overflowY: 'auto',\n    maxHeight: '85vh',\n  },\n}\n\nconst amountButtons = ['100', '1000']\nconst intervals = [1, 7, 30, 365]\nconst compoundIntervals = [1, 7, 14, 30]\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = (props) => {\n  const { onDismiss, label, rewardTokenName, rewardTokenPrice, apr, lpApr, lpAddress, tokenAddress, isLp, lpPrice } =\n    props\n  const [numberOfDays, setNumberOfDays] = useState(1)\n  const [compoundFrequency, setCompoundFrequency] = useState(1)\n  const [amountDollars, setAmountDollars] = useState('')\n  const [inputValue, setInputValue] = useState('0')\n  const { account, chainId } = useActiveWeb3React()\n  const isMobile = useIsMobile()\n  const { t } = useTranslation()\n  const { tokenPrices } = useTokenPrices()\n  const { lpTokenPrices } = useLpTokenPrices()\n  const [keySuffix, setKeySuffix] = useState(0)\n\n  useEffect(() => {\n    if (compoundFrequency > numberOfDays) {\n      setCompoundFrequency(intervals?.[0])\n    }\n  }, [compoundFrequency, numberOfDays])\n\n  const tokenPrice = new BigNumber(rewardTokenPrice).toNumber()\n  const tokensWorthForDollarSelected = parseFloat(amountDollars || inputValue) / tokenPrice\n\n  const onIntervalClick = (type: 'staked' | 'compound') => (index: number) => {\n    if (type === 'staked') {\n      setNumberOfDays(intervals[index])\n    } else {\n      setCompoundFrequency(compoundIntervals[index])\n    }\n  }\n\n  const currency = useCurrency(isLp ? lpAddress : tokenAddress)\n\n  const compoundROIRates = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays,\n    farmApr: apr + (lpApr || 0),\n    tokenPrice,\n    roundingDecimals: 8,\n    // Get the fraction of 1 day\n    compoundFrequency: 1 / compoundFrequency,\n    amountDollar: parseFloat(amountDollars || inputValue),\n  })\n\n  const percentageCompound = apyModalRoi({\n    amountEarned: compoundROIRates,\n    amountInvested: tokensWorthForDollarSelected,\n  })\n\n  const compoundROIRatesValue = Number.isNaN(compoundROIRates) ? 0 : compoundROIRates\n  const percentageCompoundValue = Number.isNaN(parseFloat(percentageCompound)) ? 0 : percentageCompound\n\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const maxAmount = maxAmountSpend(selectedCurrencyBalance)?.toFixed(6) || '0'\n\n  const rewardPrice = useMemo(() => {\n    if (!isLp) {\n      const { price } = tokenPrices.find((tok) => tok.address[chainId].toLowerCase() === tokenAddress.toLowerCase())\n      return price\n    }\n    if (isLp && !lpPrice) {\n      const { price } = lpTokenPrices.find((tok) => tok.address[chainId].toLowerCase() === lpAddress.toLowerCase())\n      return price\n    }\n    return lpPrice\n  }, [chainId, isLp, lpAddress, lpPrice, lpTokenPrices, tokenAddress, tokenPrices])\n\n  const onTokenAmountChange = useCallback(\n    (value: string) => {\n      setInputValue(value)\n      const fiatValue = parseFloat(!!currency && value ? (rewardPrice * parseFloat(value))?.toFixed(2) : '0')\n      setAmountDollars(Number.isFinite(fiatValue) ? fiatValue.toString() : '0')\n    },\n    [currency, rewardPrice],\n  )\n\n  const onDollarAmountChange = useCallback(\n    (value: string) => {\n      setAmountDollars(value)\n      const expectedValue = parseFloat(!!currency && value ? (parseFloat(value) / rewardPrice)?.toFixed(6) : '0')\n      setInputValue(Number.isFinite(expectedValue) ? expectedValue.toString() : '0')\n    },\n    [currency, rewardPrice],\n  )\n\n  return (\n    <Modal\n      onDismiss={onDismiss}\n      title={t('Return Calculator')}\n      minWidth={isMobile ? '320px' : '400px'}\n      maxWidth={isMobile ? '90vw' : '400px'}\n      onAnimationComplete={() => setKeySuffix(keySuffix + 1)}\n      {...modalStyle}\n    >\n      <Box>\n        <Heading as=\"h3\" style={styles.title}>\n          {label} {isLp && t('LP')}\n        </Heading>\n        <CurrencyInputPanel\n          dollarValue={amountDollars?.toString()}\n          tokenValue={inputValue}\n          onUserInput={onTokenAmountChange}\n          onMax={() => onTokenAmountChange(maxAmount)}\n        />\n        <Flex sx={styles.buttonsContainer}>\n          <Flex sx={{ columnGap: ['8px', '17px'] }}>\n            {amountButtons.map((amount) => (\n              <Button\n                key={`${amount}`}\n                size=\"sm\"\n                onClick={() => onDollarAmountChange(amount)}\n                style={{ lineHeight: '0.7' }}\n              >\n                ${amount}\n              </Button>\n            ))}\n          </Flex>\n          <Text style={styles.balance}>\n            {t('Balance')}: {maxAmount || 0}\n          </Text>\n        </Flex>\n        <Heading as=\"h3\" style={styles.title}>\n          {t('STAKING PERIOD')}\n        </Heading>\n        <Box sx={styles.tabContainer}>\n          <Tabs activeTab={intervals.indexOf(numberOfDays)} variant=\"fullWidth\">\n            {intervals.map((interval, index) => (\n              <Tab\n                key={`${interval}${keySuffix}D`}\n                index={index}\n                label={`${interval}D`}\n                onClick={onIntervalClick('staked')}\n                size=\"sm\"\n                variant=\"fullWidth\"\n                style={{ borderRadius: '0px', padding: '4px' }}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Heading as=\"h3\" style={styles.title}>\n          {t('COMPOUNDING FREQUENCY')}\n        </Heading>\n        <Box sx={styles.tabContainer}>\n          <Tabs activeTab={compoundIntervals.indexOf(compoundFrequency)} variant=\"fullWidth\">\n            {compoundIntervals.map((interval, index) => (\n              <Tab\n                key={`${interval}${keySuffix}D`}\n                index={index}\n                label={`${interval}${t('D')}`}\n                onClick={onIntervalClick('compound')}\n                size=\"sm\"\n                variant=\"fullWidth\"\n                disabled={interval > numberOfDays}\n                style={{ borderRadius: '0px', padding: '4px' }}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Heading as=\"h3\" style={styles.title}>\n          {t('RETURN AT CURRENT RATES')}\n        </Heading>\n        <Flex sx={styles.roiContainer}>\n          <ServiceTokenDisplay token1={rewardTokenName} size={46} />\n          <Box>\n            <Text sx={{ fontSize: '18px' }} as=\"p\" weight=\"bold\" variant=\"lg\">\n              ${(compoundROIRatesValue * tokenPrice).toFixed(2)}\n            </Text>\n            <Box sx={styles.roiBanana}>\n              <Text variant=\"sm\">\n                ~{compoundROIRatesValue.toFixed(2)} {rewardTokenName}\n              </Text>\n              <Text variant=\"sm\">({percentageCompoundValue}%)</Text>\n            </Box>\n          </Box>\n        </Flex>\n        <DetailsContent {...props} />\n      </Box>\n    </Modal>\n  )\n}\n\nexport default React.memo(RoiCalculatorModal)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Farm } from 'state/types'\nimport { CalculateIcon } from '@apeswapfinance/uikit'\nimport { IconButton, useModal } from '@ape.swap/uikit'\nimport RoiCalculatorModal from './RoiCalculatorModal'\nimport styles from './styles'\n\nexport interface CalcButtonProps {\n  label?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apr?: number\n  lpApr?: number\n  apy?: number\n  lpAddress?: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  isLp?: boolean\n  farm?: Farm\n  liquidityUrl?: string\n  lpPrice?: number\n}\n\nconst CalcButton: React.FC<CalcButtonProps> = (props) => {\n  const { apr } = props\n  const [onPresentCalcModal] = useModal(<RoiCalculatorModal {...props} />)\n\n  return (\n    <IconButton variant=\"transparent\" onClick={onPresentCalcModal} disabled={!apr} sx={styles.apyButton}>\n      <CalculateIcon color=\"yellow\" ml=\"3px\" />\n    </IconButton>\n  )\n}\n\nexport default React.memo(CalcButton)\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst StyledInput = styled(Input)`\n  border-radius: 10px;\n  background: ${({ theme }) => theme.colors.white3};\n  font-weight: 800;\n  border: none;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 180px;\n  }\n  @media screen and (min-width: 900px) {\n    width: 100px;\n  }\n  @media screen and (min-width: 1000px) {\n    width: 200px;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  width?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <StyledInput ref={inputEl} value={value} onChange={onChange} onBlur={() => setToggled(false)} icon=\"search\" />\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { Text, Flex } from '@apeswapfinance/uikit'\nimport { Button } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\n\nexport const ControlContainer = styled(Flex)`\n  align-items: center;\n  position: relative;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 15px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.white2};\n  min-width: 300px;\n  max-width: 500px;\n  width: 100%;\n  margin: 20px 0px;\n  align-self: center;\n  height: 250px;\n  padding: 10px 30px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 180px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    min-height: 59px;\n    height: 100%;\n    padding: 0px 50px 0px 30px;\n    align-items: center;\n    max-width: 100%;\n    height: auto;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: 0px 30px 0px 30px;\n  }\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nexport const StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 16px !important;\n`\n\nexport const LearnMoreButton = styled(Button)`\n  height: 36px;\n  width: 192px;\n  align-items: center;\n  padding-left: 40px;\n  color: ${({ theme }) => theme.colors.yellow};\n  border: 2px solid ${({ theme }) => theme.colors.yellow};\n`\n\nexport const ClaimAllWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nexport const ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  }\n`\n","export const NUMBER_OF_FARMS_VISIBLE = 10\n\nexport const TOKEN_OPTIONS = [\n  {\n    label: 'All Tokens',\n    value: 'allTokens',\n  },\n  {\n    label: 'GNANA',\n    value: 'gnana',\n  },\n  {\n    label: 'BANANA',\n    value: 'banana',\n  },\n]\n\nexport const OPTIONS = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'Hot',\n    value: 'hot',\n  },\n  {\n    label: 'New',\n    value: 'new',\n  },\n  {\n    label: 'APR',\n    value: 'apr',\n  },\n  {\n    label: 'Earned',\n    value: 'earned',\n  },\n  {\n    label: 'Total Staked',\n    value: 'totalStaked',\n  },\n]\n","import { Button, Flex } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\n\nexport const StyledButtonSquare = styled(Button)<{ height?: number; minWidth?: number }>`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: ${({ minWidth }) => minWidth || 227}px;\n  height: ${({ height }) => height || 44}px;\n`\n\nexport const SmallButtonSquare = styled(Button)`\n  max-width: 44px;\n  height: 44px;\n`\n\nexport const ActionContainer = styled(Flex)`\n  width: 100%;\n  justify-content: space-between;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: auto;\n    min-width: 225px;\n  }\n`\n\nexport const CenterContainer = styled(Flex)`\n  width: 100%;\n  justify-content: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: auto;\n    justify-content: auto;\n  }\n`\n","import React, { useState } from 'react'\nimport { useSousHarvestAll } from 'hooks/useHarvest'\nimport { useToast } from 'state/hooks'\nimport { fetchPoolsUserDataAsync } from 'state/pools'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { StyledButtonSquare } from './styles'\n\ninterface HarvestActionsProps {\n  sousIds: number[]\n  disabled?: boolean\n}\n\nconst HarvestAll: React.FC<HarvestActionsProps> = ({ sousIds, disabled }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const { onHarvestAll } = useSousHarvestAll(sousIds)\n  const { toastSuccess } = useToast()\n  const { t } = useTranslation()\n\n  const handleHarvestAll = async () => {\n    setPendingTrx(true)\n    await onHarvestAll()\n      .then((resp) => {\n        resp.map((trx) =>\n          toastSuccess(t('Harvest Successful'), {\n            text: t('View Transaction'),\n            url: getEtherscanLink(trx.transactionHash, 'transaction', chainId),\n          }),\n        )\n      })\n      .catch((e) => {\n        console.error(e)\n        setPendingTrx(false)\n      })\n    dispatch(fetchPoolsUserDataAsync(chainId, account))\n    setPendingTrx(false)\n  }\n\n  return (\n    <StyledButtonSquare\n      height={36}\n      minWidth={100}\n      disabled={disabled || pendingTrx || sousIds.length <= 0}\n      onClick={handleHarvestAll}\n      load={pendingTrx}\n    >\n      {t('HARVEST ALL')}\n    </StyledButtonSquare>\n  )\n}\n\nexport default React.memo(HarvestAll)\n","import React from 'react'\nimport { Flex, Select, SelectItem, Text } from '@apeswapfinance/uikit'\nimport { Checkbox } from '@ape.swap/uikit'\nimport { ToggleWrapper } from 'components/ListViewMenu/styles'\nimport MenuTabButtons from 'components/ListViewMenu/MenuTabButtons'\nimport { useTranslation } from 'contexts/Localization'\nimport { ListViewProps } from './types'\nimport SearchInput from './SearchInput'\nimport { ClaimAllWrapper, ControlContainer, LabelWrapper, StyledText } from './styles'\nimport { OPTIONS, TOKEN_OPTIONS } from './constants'\nimport HarvestAll from '../Actions/HarvestAll'\n\nconst PoolMenu: React.FC<ListViewProps> = ({\n  onHandleQueryChange,\n  onSetSortOption,\n  onSetTokenOption,\n  query,\n  activeTokenOption,\n  activeOption,\n  pools,\n  onSetStake,\n  stakedOnly,\n}) => {\n  const { t } = useTranslation()\n  const sousIds = pools.map((pool) => {\n    return pool.sousId\n  })\n  return (\n    <ControlContainer>\n      <LabelWrapper>\n        <StyledText bold mr=\"15px\">\n          {t('Search')}\n        </StyledText>\n        <SearchInput onChange={onHandleQueryChange} value={query} />\n      </LabelWrapper>\n      <Flex>\n        <Select size=\"sm\" width=\"140px\" onChange={(e) => onSetSortOption(e.target.value)} active={activeOption}>\n          {OPTIONS.map((option) => {\n            return (\n              <SelectItem size=\"sm\" value={option.value} key={option.label}>\n                <Text>{t(option.label)}</Text>\n              </SelectItem>\n            )\n          })}\n        </Select>\n      </Flex>\n      <Flex>\n        <Select size=\"sm\" width=\"126px\" onChange={(e) => onSetTokenOption(e.target.value)} active={activeTokenOption}>\n          {TOKEN_OPTIONS.map((option) => {\n            return (\n              <SelectItem size=\"sm\" value={option.value} key={option.label}>\n                <Text>{t(option.label)}</Text>\n              </SelectItem>\n            )\n          })}\n        </Select>\n      </Flex>\n      <MenuTabButtons />\n      <ToggleWrapper onClick={() => onSetStake(!stakedOnly)}>\n        <Checkbox checked={stakedOnly} onChange={() => onSetStake(!stakedOnly)} />\n        <StyledText> {t('Staked')} </StyledText>\n      </ToggleWrapper>\n      <ClaimAllWrapper>\n        <HarvestAll sousIds={sousIds} />\n      </ClaimAllWrapper>\n    </ControlContainer>\n  )\n}\n\nexport default React.memo(PoolMenu)\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport { Button } from '@ape.swap/uikit'\nimport { Skeleton } from '@apeswapfinance/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useERC20 } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/pools'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useToast } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { poolStyles } from '../styles'\n\ninterface ApprovalActionProps {\n  stakingTokenContractAddress: string\n  sousId: number\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ stakingTokenContractAddress, sousId, isLoading = false }) => {\n  const { chainId, account } = useActiveWeb3React()\n  const stakingTokenContract = useERC20(stakingTokenContractAddress)\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { toastSuccess } = useToast()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          sx={{ minWidth: '227px', width: '227px', textAlign: 'center', ...poolStyles.styledBtn }}\n          className=\"noClick\"\n          disabled={pendingTrx}\n          onClick={async () => {\n            setPendingTrx(true)\n            await onApprove()\n              .then((resp) => {\n                const trxHash = resp.transactionHash\n                toastSuccess(t('Approve Successful'), {\n                  text: t('View Transaction'),\n                  url: getEtherscanLink(trxHash, 'transaction', chainId),\n                })\n              })\n              .catch((e) => {\n                console.error(e)\n                setPendingTrx(false)\n              })\n            dispatch(updateUserAllowance(chainId, sousId, account))\n\n            setPendingTrx(false)\n          }}\n          load={pendingTrx}\n        >\n          {t('ENABLE')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(ApprovalAction)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon } from '@apeswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DepositModalProps {\n  max: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(new BigNumber(max))\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${t('Stake')} ${tokenName}`} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <ModalActions>\n        <Button\n          fullWidth\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              onDismiss()\n            } catch (e) {\n              console.error('Transaction Failed')\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default React.memo(DepositModal)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon } from '@apeswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WithdrawModalProps {\n  max: string\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(new BigNumber(max))\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Unstake ${tokenName}`} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              onDismiss()\n            } catch (e) {\n              console.error('Transaction Failed')\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          fullWidth\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default React.memo(WithdrawModal)\n","import React, { useState } from 'react'\nimport { Flex, AddIcon, MinusIcon, useModal } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousStake } from 'hooks/useStake'\nimport { fetchPoolsUserDataAsync } from 'state/pools'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useToast } from 'state/hooks'\nimport { useAppDispatch } from 'state'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ListViewContent from 'components/ListViewContent'\nimport { useTranslation } from 'contexts/Localization'\nimport DepositModal from '../Modals/DepositModal'\nimport WithdrawModal from '../Modals/WithdrawModal'\nimport { ActionContainer, CenterContainer, SmallButtonSquare, StyledButtonSquare } from './styles'\n\ninterface StakeActionsProps {\n  stakingTokenBalance: string\n  stakedTokenSymbol: string\n  stakedBalance: string\n  stakeTokenValueUsd: number\n  sousId: number\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  stakingTokenBalance,\n  stakedTokenSymbol,\n  stakedBalance,\n  stakeTokenValueUsd,\n  sousId,\n}) => {\n  const rawStakedBalance = getBalanceNumber(new BigNumber(stakedBalance))\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const userStakedBalanceUsd = `$${(\n    getBalanceNumber(new BigNumber(stakedBalance) || new BigNumber(0)) * stakeTokenValueUsd\n  ).toFixed(2)}`\n  const [pendingDepositTrx, setPendingDepositTrx] = useState(false)\n  const [pendingWithdrawTrx, setPendingWithdrawTrx] = useState(false)\n\n  const { toastSuccess } = useToast()\n  const isMobile = useIsMobile()\n  const firstStake = !new BigNumber(stakedBalance)?.gt(0)\n\n  const { onStake } = useSousStake(sousId)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { t } = useTranslation()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingTokenBalance}\n      tokenName={stakedTokenSymbol}\n      onConfirm={async (val) => {\n        setPendingDepositTrx(true)\n        await onStake(val)\n          .then((resp) => {\n            const trxHash = resp.transactionHash\n            toastSuccess(t('Deposit Successful'), {\n              text: t('View Transaction'),\n              url: getEtherscanLink(trxHash, 'transaction', chainId),\n            })\n          })\n          .catch((e) => {\n            console.error(e)\n            setPendingDepositTrx(false)\n          })\n        dispatch(fetchPoolsUserDataAsync(chainId, account))\n        setPendingDepositTrx(false)\n      }}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      tokenName={stakedTokenSymbol}\n      onConfirm={async (val) => {\n        setPendingWithdrawTrx(true)\n        await onUnstake(val)\n          .then((resp) => {\n            const trxHash = resp.transactionHash\n            toastSuccess(t('Withdraw Successful'), {\n              text: t('View Transaction'),\n              url: getEtherscanLink(trxHash, 'transaction', chainId),\n            })\n          })\n          .catch((e) => {\n            console.error(e)\n            setPendingWithdrawTrx(false)\n          })\n        dispatch(fetchPoolsUserDataAsync(chainId, account))\n        setPendingWithdrawTrx(false)\n      }}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    if (firstStake) {\n      return (\n        <CenterContainer>\n          <StyledButtonSquare onClick={onPresentDeposit} load={pendingDepositTrx} disabled={pendingDepositTrx}>\n            {t('DEPOSIT')}\n          </StyledButtonSquare>\n        </CenterContainer>\n      )\n    }\n    return (\n      <ActionContainer style={{ minWidth: 'auto' }}>\n        {isMobile && (\n          <ListViewContent\n            title={`${t('Staked')} ${stakedTokenSymbol}`}\n            value={rawStakedBalance.toFixed(2)}\n            value2={userStakedBalanceUsd}\n            value2Secondary\n            width={100}\n            height={50}\n            lineHeight={15}\n            ml={10}\n          />\n        )}\n        <Flex>\n          <SmallButtonSquare\n            onClick={onPresentWithdraw}\n            load={pendingWithdrawTrx}\n            disabled={pendingWithdrawTrx}\n            mr=\"6px\"\n            size=\"sm\"\n          >\n            <MinusIcon color=\"white\" width=\"20px\" height=\"20px\" fontWeight={700} />\n          </SmallButtonSquare>\n          <SmallButtonSquare\n            onClick={onPresentDeposit}\n            load={pendingDepositTrx}\n            disabled={pendingDepositTrx || !new BigNumber(stakingTokenBalance)?.gt(0)}\n            size=\"sm\"\n          >\n            <AddIcon color=\"white\" width=\"25px\" height=\"25px\" fontWeight={700} />\n          </SmallButtonSquare>\n        </Flex>\n        {!isMobile && (\n          <ListViewContent\n            title={`${t('Staked')} ${stakedTokenSymbol}`}\n            value={`${rawStakedBalance.toFixed(2)}`}\n            value2={userStakedBalanceUsd}\n            value2Secondary\n            width={100}\n            height={50}\n            lineHeight={15}\n            ml={10}\n          />\n        )}\n      </ActionContainer>\n    )\n  }\n\n  return renderStakingButtons()\n}\n\nexport default React.memo(StakeAction)\n","import React from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport BigNumber from 'bignumber.js'\nimport { CenterContainer } from './styles'\nimport ApprovalAction from './ApprovalAction'\nimport StakeAction from './StakeActions'\nimport UnlockButton from '../../../../components/UnlockButton'\n\n// Changed props to type string because BigNumbers cause re-renders\n\ninterface CardActionProps {\n  allowance: string\n  stakingTokenBalance: string\n  stakedTokenSymbol: string\n  stakedBalance: string\n  stakeTokenValueUsd: number\n  stakeTokenAddress: string\n  sousId: number\n}\n\nconst Actions: React.FC<CardActionProps> = ({\n  allowance,\n  stakingTokenBalance,\n  stakedTokenSymbol,\n  stakedBalance,\n  stakeTokenValueUsd,\n  stakeTokenAddress,\n  sousId,\n}) => {\n  const { account } = useActiveWeb3React()\n  const actionToRender = () => {\n    if (!account) {\n      return (\n        <CenterContainer>\n          <UnlockButton table />\n        </CenterContainer>\n      )\n    }\n    if (!new BigNumber(allowance)?.gt(0)) {\n      return (\n        <CenterContainer>\n          <ApprovalAction stakingTokenContractAddress={stakeTokenAddress} sousId={sousId} />\n        </CenterContainer>\n      )\n    }\n    return (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        stakedTokenSymbol={stakedTokenSymbol}\n        stakingTokenBalance={stakingTokenBalance}\n        stakeTokenValueUsd={stakeTokenValueUsd}\n        sousId={sousId}\n      />\n    )\n  }\n  return actionToRender()\n}\n\nexport default React.memo(Actions)\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport { Button } from '@ape.swap/uikit'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useToast } from 'state/hooks'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useSousStake } from 'hooks/useStake'\nimport { fetchPoolsUserDataAsync, updateUserPendingReward } from 'state/pools'\nimport ListViewContent from 'components/ListViewContent'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { ActionContainer } from './styles'\nimport { poolStyles } from '../styles'\n\ninterface HarvestActionsProps {\n  sousId: number\n  userEarnings: number\n  earnTokenSymbol: string\n  disabled: boolean\n}\n\nconst HarvestAction: React.FC<HarvestActionsProps> = ({ sousId, earnTokenSymbol, disabled, userEarnings }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const [pendingTrx, setPendingTrx] = useState(false)\n  const [pendingApeHarderTrx, setPendingApeHarderTrx] = useState(false)\n  const { onHarvest } = useSousHarvest(sousId)\n  const { onStake } = useSousStake(sousId)\n\n  const { toastSuccess } = useToast()\n  const isMobile = useIsMobile()\n  const { t } = useTranslation()\n\n  const handleHarvest = async () => {\n    setPendingTrx(true)\n    await onHarvest()\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        toastSuccess(t('Harvest Successful'), {\n          text: t('View Transaction'),\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        setPendingTrx(false)\n      })\n    dispatch(updateUserPendingReward(chainId, sousId, account))\n    setPendingTrx(false)\n  }\n\n  const handleApeHarder = async () => {\n    setPendingApeHarderTrx(true)\n    await onStake(userEarnings.toString())\n      .then((resp) => {\n        const trxHash = resp.transactionHash\n        toastSuccess(t('Ape Harder Successful'), {\n          text: t('View Transaction'),\n          url: getEtherscanLink(trxHash, 'transaction', chainId),\n        })\n      })\n      .catch((e) => {\n        console.error(e)\n        setPendingApeHarderTrx(false)\n      })\n    dispatch(fetchPoolsUserDataAsync(chainId, account))\n    setPendingApeHarderTrx(false)\n  }\n\n  return (\n    <ActionContainer>\n      {isMobile && (\n        <ListViewContent\n          title={`${t('Earned')} ${earnTokenSymbol}`}\n          value={userEarnings?.toFixed(4)}\n          width={100}\n          height={50}\n          ml={10}\n        />\n      )}\n      {sousId === 0 && (\n        <Button\n          disabled={disabled || pendingApeHarderTrx}\n          onClick={handleApeHarder}\n          load={pendingApeHarderTrx}\n          mr={isMobile ? '0px' : '10px'}\n          sx={{ minWidth: isMobile && '100px', width: isMobile && '115px', padding: '0px', ...poolStyles.styledBtn }}\n        >\n          {t('APE HARDER')}\n        </Button>\n      )}\n      <Button\n        disabled={disabled || pendingTrx}\n        onClick={handleHarvest}\n        load={pendingTrx}\n        sx={{\n          minWidth: isMobile && sousId === 0 && '100px',\n          width: isMobile && sousId === 0 && '100px',\n          ...poolStyles.styledBtn,\n        }}\n      >\n        {t('HARVEST')}\n      </Button>\n      {!isMobile && (\n        <ListViewContent\n          title={`${t('Earned')} ${earnTokenSymbol}`}\n          value={userEarnings?.toFixed(4)}\n          width={150}\n          height={50}\n          ml={10}\n        />\n      )}\n    </ActionContainer>\n  )\n}\n\nexport default React.memo(HarvestAction)\n","import React from 'react'\nimport { Flex, Text, LinkExternal } from '@apeswapfinance/uikit'\nimport { Pool } from 'state/types'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\n\nconst InfoContent: React.FC<{ pool: Pool }> = ({ pool }) => {\n  const { chainId } = useActiveWeb3React()\n  const currentBlock = useBlockNumber()\n  const { t } = useTranslation()\n  const timeUntilStart = getTimePeriods(Math.max(pool?.startBlock - currentBlock, 0) * BSC_BLOCK_TIME, true)\n  const timeUntilEnd = getTimePeriods(Math.max(pool?.endBlock - currentBlock, 0) * BSC_BLOCK_TIME, true)\n  const explorerLink = BLOCK_EXPLORER[chainId]\n  const contractLink = `${explorerLink}/address/${pool?.contractAddress[chainId]}`\n  const tokenContractLink = `${explorerLink}/address/${pool?.rewardToken?.address[chainId]}`\n  return (\n    <>\n      <Flex flexDirection=\"column\">\n        {pool?.endBlock > 0 && pool?.rewardToken?.symbol !== 'BANANA' && (\n          <Flex alignItems=\"space-between\" justifyContent=\"space-between\" style={{ width: '100%' }}>\n            <Text style={{ fontSize: '14px' }}>{pool?.startBlock > currentBlock ? t('Starts in') : t('Ends in')}</Text>\n            <Text style={{ fontSize: '16px' }} bold>\n              {pool?.startBlock > currentBlock\n                ? `${timeUntilStart.days}d, ${timeUntilStart.hours}h, ${timeUntilStart.minutes}m`\n                : `${timeUntilEnd.days}d, ${timeUntilEnd.hours}h, ${timeUntilEnd.minutes}m`}\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"10px\">\n          <LinkExternal href={pool?.projectLink} style={{ fontSize: '14px' }}>\n            {t('Website')}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"10px\">\n          <LinkExternal href={pool?.twitter} style={{ fontSize: '14px' }}>\n            {t('Twitter')}\n          </LinkExternal>\n        </Flex>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\">\n        <LinkExternal href={tokenContractLink} style={{ fontSize: '14px' }}>\n          {t('View Token Contract')}\n        </LinkExternal>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"15px\">\n        <LinkExternal href={contractLink} style={{ fontSize: '14px' }}>\n          {t('View Pool Contract')}\n        </LinkExternal>\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(InfoContent)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { IconButton, Text, Flex, TagVariants, Button } from '@ape.swap/uikit'\nimport { Box } from 'theme-ui'\nimport BigNumber from 'bignumber.js'\nimport ListView from 'components/ListView'\nimport { ExtendedListViewProps } from 'components/ListView/types'\nimport ListViewContent from 'components/ListViewContent'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport CalcButton from 'components/RoiCalculator/CalcButton'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { Pool, Tag } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { NextArrow } from 'views/Farms/components/styles'\nimport { useTranslation } from 'contexts/Localization'\nimport Actions from './Actions'\nimport HarvestAction from './Actions/HarvestAction'\nimport InfoContent from '../InfoContent'\nimport { StyledTag, poolStyles } from './styles'\n\nconst DisplayPools: React.FC<{ pools: Pool[]; openId?: number; poolTags: Tag[] }> = ({ pools, openId, poolTags }) => {\n  const { chainId } = useActiveWeb3React()\n  const isMobile = useIsMobile()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const isActive = !pathname.includes('history')\n  const history = useHistory()\n\n  const poolsListView = pools.map((pool) => {\n    const token1 = pool?.stakingToken?.symbol\n    const token2 = pool?.rewardToken?.symbol\n    const totalDollarAmountStaked = Math.round(getBalanceNumber(pool?.totalStaked) * pool?.stakingToken?.price)\n    const liquidityUrl = !pool?.lpStaking\n      ? pool?.stakingToken?.symbol === 'GNANA'\n        ? 'https://apeswap.finance/gnana'\n        : `https://apeswap.finance/swap?outputCurrency=${pool?.stakingToken?.address[chainId]}`\n      : `${BASE_ADD_LIQUIDITY_URL}/${pool?.lpTokens?.token?.address[chainId]}/${pool?.lpTokens?.quoteToken?.address[chainId]}`\n    const userAllowance = pool?.userData?.allowance\n    const userEarnings = getBalanceNumber(\n      pool?.userData?.pendingReward || new BigNumber(0),\n      pool?.rewardToken?.decimals,\n    )\n    const userEarningsUsd = `$${(userEarnings * pool.rewardToken?.price).toFixed(2)}`\n    const userTokenBalance = `${getBalanceNumber(pool?.userData?.stakingTokenBalance || new BigNumber(0))?.toFixed(6)}`\n    const userTokenBalanceUsd = `$${(\n      getBalanceNumber(pool?.userData?.stakingTokenBalance || new BigNumber(0)) * pool?.stakingToken?.price\n    ).toFixed(2)}`\n\n    const pTag = poolTags?.find((tag) => tag.pid === pool.sousId)\n    const tagColor = pTag?.color as TagVariants\n\n    const openLiquidityUrl = () =>\n      pool?.stakingToken?.symbol === 'GNANA'\n        ? history.push({ search: '?modal=gnana' })\n        : window.open(liquidityUrl, '_blank')\n\n    // Token symbol logic is here temporarily for nfty\n    return {\n      tag: (\n        <>\n          {pTag?.pid === pool.sousId && (\n            <Box sx={{ marginRight: '5px', mt: '1px' }}>\n              <StyledTag key={pTag?.pid} variant={tagColor}>\n                {pTag?.text}\n              </StyledTag>\n            </Box>\n          )}\n        </>\n      ),\n      tokens: { token1, token2: token2 === 'NFTY ' ? 'NFTY2' : token2 || pool?.tokenName },\n      title: <Text bold>{pool?.rewardToken?.symbol || pool?.tokenName}</Text>,\n      id: pool.sousId,\n      infoContent: <InfoContent pool={pool} />,\n      infoContentPosition: 'translate(8%, 0%)',\n      ttWidth: '250px',\n      toolTipIconWidth: isMobile && '20px',\n      toolTipStyle: isMobile && { marginTop: '5px', marginRight: '10px' },\n      open: openId === pool.sousId,\n      cardContent: (\n        <>\n          <Flex sx={{ width: '90px', height: '100%', alignItems: 'center', justifyContent: 'space-between' }}>\n            {!isMobile && (\n              <>\n                <a href={pool.projectLink} target=\"_blank\" rel=\"noreferrer\">\n                  <IconButton icon=\"website\" color=\"primaryBright\" width={20} style={{ padding: '8.5px 10px' }} />\n                </a>\n                <a href={pool?.twitter} target=\"_blank\" rel=\"noreferrer\">\n                  <IconButton icon=\"twitter\" color=\"primaryBright\" width={20} />\n                </a>\n              </>\n            )}\n          </Flex>\n          <ListViewContent\n            title={t('APR')}\n            value={`${isActive ? pool?.apr?.toFixed(2) : '0.00'}%`}\n            width={isMobile ? 95 : 80}\n            height={50}\n            toolTip={t('APRs are calculated based on current value of the token, reward rate, and share of pool.')}\n            toolTipPlacement=\"bottomLeft\"\n            toolTipTransform=\"translate(10%, 0%)\"\n            aprCalculator={\n              <CalcButton\n                label={pool?.stakingToken?.symbol}\n                rewardTokenName={pool?.rewardToken?.symbol}\n                rewardTokenPrice={pool?.rewardToken?.price}\n                apr={pool?.apr}\n                tokenAddress={pool.stakingToken.address[chainId]}\n              />\n            }\n          />\n          <ListViewContent\n            title={t('Total Staked')}\n            value={`$${totalDollarAmountStaked.toLocaleString(undefined)}`}\n            width={isMobile ? 160 : 110}\n            height={50}\n            toolTip={t('The total value of the tokens currently staked in this pool.')}\n            toolTipPlacement=\"bottomRight\"\n            toolTipTransform=\"translate(13%, 0%)\"\n          />\n          <ListViewContent title={t('Earned')} value={userEarningsUsd} height={50} width={isMobile ? 80 : 150} />\n        </>\n      ),\n      expandedContent: (\n        <>\n          <Flex sx={poolStyles.actionContainer}>\n            {isMobile && (\n              <ListViewContent\n                title={`${t('Available')} ${pool?.stakingToken?.symbol}`}\n                value={userTokenBalance}\n                value2={userTokenBalanceUsd}\n                value2Secondary\n                width={190}\n                height={50}\n                lineHeight={15}\n                ml={10}\n              />\n            )}\n            <Button variant=\"primary\" sx={poolStyles.styledBtn} onClick={openLiquidityUrl}>\n              {t('GET')} {pool?.stakingToken?.symbol}\n            </Button>\n            {!isMobile && (\n              <ListViewContent\n                title={`${t('Available')} ${pool?.stakingToken?.symbol}`}\n                value={userTokenBalance}\n                value2={userTokenBalanceUsd}\n                value2Secondary\n                width={190}\n                height={50}\n                lineHeight={15}\n                ml={10}\n              />\n            )}\n          </Flex>\n          {!isMobile && <NextArrow />}\n          <Actions\n            allowance={userAllowance?.toString()}\n            stakedBalance={pool?.userData?.stakedBalance?.toString()}\n            stakedTokenSymbol={pool?.stakingToken?.symbol}\n            stakingTokenBalance={pool?.userData?.stakingTokenBalance?.toString()}\n            stakeTokenAddress={pool?.stakingToken?.address[chainId]}\n            stakeTokenValueUsd={pool?.stakingToken?.price}\n            sousId={pool?.sousId}\n          />\n          {!isMobile && <NextArrow />}\n          <HarvestAction\n            sousId={pool?.sousId}\n            disabled={userEarnings <= 0}\n            userEarnings={userEarnings}\n            earnTokenSymbol={pool?.rewardToken?.symbol || pool?.tokenName}\n          />\n        </>\n      ),\n    } as ExtendedListViewProps\n  })\n  return (\n    <Flex sx={poolStyles.container}>\n      <ListView listViews={poolsListView} />\n    </Flex>\n  )\n}\n\nexport default React.memo(DisplayPools)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PoolCategory } from 'config/constants/types'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex } from '@apeswapfinance/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePollPools, usePoolOrderings, usePools, usePoolTags, useSetPools } from 'state/pools/hooks'\nimport ListViewLayout from 'components/layout/ListViewLayout'\nimport Banner from 'components/Banner'\nimport { Pool } from 'state/types'\nimport PoolMenu from './components/Menu'\nimport DisplayPools from './components/DisplayPools'\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  useSetPools()\n  usePollPools()\n  const { chainId } = useActiveWeb3React()\n  const [stakedOnly, setStakedOnly] = useState(false)\n  const [tokenOption, setTokenOption] = useState('allTokens')\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('all')\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const allPools = usePools(account)\n  const { poolTags } = usePoolTags(chainId)\n  const { poolOrderings } = usePoolOrderings(chainId)\n  const { t } = useTranslation()\n  const currentBlock = useBlockNumber()\n  const { search } = window.location\n  const params = new URLSearchParams(search)\n  const urlSearchedPool = parseInt(params.get('id'))\n  const isActive = !pathname.includes('history')\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const allNonAdminPools = allPools.filter((pool) => !pool.forAdmins && pool?.poolCategory !== PoolCategory.JUNGLE)\n  const curPools = allNonAdminPools.map((pool) => {\n    return { ...pool, isFinished: pool.sousId === 0 ? false : pool.isFinished || currentBlock > pool.endBlock }\n  })\n\n  const [finishedPools, openPools] = partition(curPools, (pool) => pool.isFinished)\n\n  const stakedOnlyPools = openPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n  const stakedInactivePools = finishedPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(poolsToSort, (pool: Pool) => pool.apr, 'desc')\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.rewardToken?.price) {\n              return 0\n            }\n            return getBalanceNumber(pool.userData.pendingReward) * pool.rewardToken?.price\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => getBalanceNumber(pool.totalStaked) * pool.stakingToken?.price,\n          'desc',\n        )\n      case 'hot':\n        return poolTags\n          ? orderBy(\n              poolsToSort,\n              (pool: Pool) => poolTags?.find((tag) => tag.pid === pool.sousId && tag.text.toLowerCase() === 'hot'),\n              'asc',\n            )\n          : poolsToSort\n      case 'new':\n        return poolTags\n          ? orderBy(\n              poolsToSort,\n              (pool: Pool) => poolTags?.find((tag) => tag.pid === pool.sousId && tag.text.toLowerCase() === 'new'),\n              'asc',\n            )\n          : poolsToSort\n      default:\n        return poolOrderings\n          ? orderBy(\n              poolsToSort,\n              (pool: Pool) => poolOrderings?.find((ordering) => ordering.pid === pool.sousId)?.order,\n              'asc',\n            )\n          : poolsToSort\n    }\n  }\n\n  const renderPools = () => {\n    let chosenPools = isActive ? openPools : finishedPools\n    if (urlSearchedPool) {\n      const poolCheck =\n        openPools?.find((pool) => {\n          return pool.sousId === urlSearchedPool\n        }) !== undefined\n      if (poolCheck) {\n        chosenPools = [\n          openPools?.find((pool) => {\n            return pool.sousId === urlSearchedPool\n          }),\n          ...openPools?.filter((pool) => {\n            return pool.sousId !== urlSearchedPool\n          }),\n        ]\n      }\n    }\n\n    if (stakedOnly) {\n      chosenPools = isActive ? stakedOnlyPools : stakedInactivePools\n    }\n    if (searchQuery) {\n      const lowercaseQuery = searchQuery.toLowerCase()\n      chosenPools = chosenPools.filter((pool) => pool.tokenName.toLowerCase().includes(lowercaseQuery))\n    }\n    if (tokenOption !== 'allTokens') {\n      chosenPools = chosenPools.filter((pool) => pool.stakingToken.symbol === tokenOption.toUpperCase())\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  return (\n    <>\n      <Flex\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        mb=\"100px\"\n        style={{ position: 'relative', top: '30px', width: '100%' }}\n      >\n        <ListViewLayout>\n          <Banner banner=\"pools\" link=\"?modal=2\" title={t('Staking Pools')} listViewBreak maxWidth={1130} />\n          <Flex flexDirection=\"column\" alignSelf=\"center\" style={{ maxWidth: '1130px', width: '100%' }}>\n            <PoolMenu\n              onHandleQueryChange={handleChangeQuery}\n              onSetSortOption={setSortOption}\n              onSetStake={setStakedOnly}\n              onSetTokenOption={setTokenOption}\n              pools={[...stakedOnlyPools, ...stakedInactivePools]}\n              activeOption={sortOption}\n              activeTokenOption={tokenOption}\n              stakedOnly={stakedOnly}\n              query={searchQuery}\n            />\n            <DisplayPools pools={renderPools()} openId={urlSearchedPool} poolTags={poolTags} />\n            <div ref={loadMoreRef} />\n          </Flex>\n        </ListViewLayout>\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(Pools)\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number, days?: boolean) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS && !days) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS && !days) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Text, Button, Input, InputProps, Flex } from '@apeswapfinance/uikit'\nimport { useTranslation } from '../../contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  displayDecimals?: number\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white3};\n  border-radius: 16px;\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  border: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  font-weight: 800;\n  background-color: ${({ theme }) => theme.colors.white3};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryBright};\n  font-weight: 500;\n  font-size: 16px;\n  padding: 3px 10px;\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  inputTitle,\n  displayDecimals,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(displayDecimals || 4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\" fontWeight={800}>\n            {inputTitle}\n          </Text>\n          <Text fontSize=\"16px\" fontWeight={500}>\n            {t('Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <StyledButton size=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </StyledButton>\n          <Text fontSize=\"16px\" fontWeight={600}>\n            {symbol}\n          </Text>\n        </Flex>\n      </StyledTokenInput>\n    </div>\n  )\n}\n\nexport default ModalInput\n","import styled from 'styled-components'\nimport { Button, ArrowDropUpIcon, Flex, Text } from '@apeswapfinance/uikit'\n\nexport const FarmButton = styled(Button)`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: 129px;\n  height: 44px;\n`\n\nexport const NextArrow = styled(ArrowDropUpIcon)`\n  transform: rotate(90deg);\n`\n\nexport const Container = styled(Flex)`\n  flex-direction: row;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n`\n\nexport const TitleText = styled(Text)`\n  font-size: 12px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\n// import Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  // const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {/* {i < l - 1 && <Spacer />} */}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Toggle } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst MenuTabButton: React.FC = () => {\n  const { url, isExact } = useRouteMatch()\n  const history = useHistory()\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (isExact) {\n      history.push(`${url}/history`)\n    } else {\n      history.push(url)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Toggle size=\"md\" labels={[t('ACTIVE'), t('INACTIVE')]} onClick={handleClick} checked={!isExact} />\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MenuTabButton)\n","import styled from 'styled-components'\nimport { Text, Checkbox, Heading, Flex } from '@apeswapfinance/uikit'\n\nexport const ControlContainer = styled(Flex)`\n  position: relative;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  align-items: space-around;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 15px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.white2};\n  min-width: 300px;\n  max-width: 500px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    min-height: 59px;\n    height: 100%;\n    padding: 20px 150px 20px 20px;\n    align-items: center;\n    max-width: 100%;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: 0px 130px 0px 30px;\n  }\n`\n\nexport const MobilePadding = styled(Flex)`\n  padding: 7.5px 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 0 0;\n  }\n`\n\nexport const ControlWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid red;\n`\n\nexport const ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  }\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: center;\n    align-items: center;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nexport const HeadingContainer = styled.div`\n  max-width: 1024px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const Header = styled.div`\n  padding-top: 36px;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-image: ${({ theme }) => (theme.isDark ? 'url(/images/farm-night.svg)' : 'url(/images/farm-day.svg)')};\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 250px;\n  background-position: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 24px;\n    padding-right: 24px;\n    height: 300px;\n  }\n`\n\nexport const StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 16px !important;\n  }\n`\nexport const StyledCheckbox = styled(Checkbox)<{ checked?: boolean }>`\n  height: 21px;\n  width: 21px;\n  margin-left: 20px;\n`\n\nexport const StyledImage = styled.img`\n  height: 187px;\n  width: 134px;\n  position: absolute;\n  right: 0px;\n  bottom: 51px;\n  display: none;\n\n  @media screen and (min-width: 340px) {\n    right: 20px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    bottom: 51px;\n    right: 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    bottom: 0px;\n    right: 0px;\n    display: block;\n  }\n`\n\nexport const StyledHeading = styled(Heading)`\n  font-size: 30px;\n  max-width: 176px !important;\n  color: ${({ theme }) => theme.colors.text};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 30px;\n    max-width: 240px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 44px;\n    max-width: 400px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    font-size: 60px;\n    max-width: 600px !important;\n  }\n`\n\nexport const SectionOneWrapper = styled(Flex)`\n  justify-content: space-between;\n  align-items: flex-end;\n  z-index: 1;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 410px;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 430px;\n    align-items: center;\n  }\n`\n\nexport const SectionTwoWrapper = styled(Flex)`\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n  margin-top: 15px;\n  align-self: flex-start;\n  z-index: 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 245px;\n    margin-top: 0px;\n    align-self: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 275px;\n  }\n`\n\nexport const HarvestAllWrapper = styled(Flex)`\n  justify-content: center;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 250px;\n    margin-top: 20px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 180px;\n    margin-top: 0px;\n  }\n`\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n"],"sourceRoot":""}
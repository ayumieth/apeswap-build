{"version":3,"sources":["hooks/useReward.ts","hooks/useDimensions.ts","views/PoolsLegacy/components/SearchInput.tsx","components/ApyCalculator/ApyCalculatorModal.tsx","components/ApyCalculator/ApyButton.tsx","views/PoolsLegacy/components/PoolTabButtons/index.tsx","views/PoolsLegacy/components/PoolCard/ExpandableSectionButton/ExpandableSectionButton.tsx","views/PoolsLegacy/components/PoolCard/CardActions/HarvestActions.tsx","views/PoolsLegacy/components/PoolCard/CardActions/ApprovalAction.tsx","views/PoolsLegacy/components/DepositModal.tsx","views/PoolsLegacy/components/WithdrawModal.tsx","views/PoolsLegacy/components/PoolCard/CardActions/StakeActions.tsx","views/PoolsLegacy/components/PoolCard/CardHeading.tsx","views/PoolsLegacy/components/Detail.tsx","views/PoolsLegacy/components/ContainerDetail.tsx","views/PoolsLegacy/components/PoolCard/PoolCard.tsx","views/AdminPools/AdminPools.tsx","utils/getTimePeriods.ts","utils/callHelpers.ts","components/ModalInput/ModalInput.tsx","components/ModalActions/ModalActions.tsx","../node_modules/lodash/partition.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["useReward","rewardRef","callback","handleReward","useCallback","a","current","rewardMe","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","StyledInput","styled","Input","theme","colors","white3","mediaQueries","sm","InputWrapper","div","md","Container","SearchInput","value","onChange","toggled","setToggled","inputEl","useRef","icon","ref","onBlur","Grid","GridItem","Description","Text","ApyCalculatorModal","onDismiss","lpLabel","rewardTokenName","rewardTokenPrice","apy","addLiquidityUrl","t","useTranslation","farmApy","BigNumber","times","toNumber","oneThousandDollarsWorthOfBanana","bananaEarnedPerThousand1D","calculateBananaEarnedPerThousandDollars","numberOfDays","bananaEarnedPerThousand7D","bananaEarnedPerThousand30D","bananaEarnedPerThousand365D","title","fontSize","color","textTransform","mb","apyModalRoi","amountEarned","amountInvested","justifyContent","href","StyledCalculateIcon","CalculateIcon","xs","ApyButton","useModal","onPresentApyModal","onClick","ml","style","cursor","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","size","variant","as","Link","to","lg","xl","primary","ExpandableSectionButton","expanded","role","defaultProps","StyledButton","Button","HarvestActions","earnings","tokenDecimals","sousId","compound","emergencyWithdraw","earningTokenBalance","getBalanceNumber","rewardRefApeHarder","pendingTx","setPendingTx","onHarvest","useSousHarvest","onApeHarder","useSousStake","onStake","onEmergencyWithdraw","useSousEmergencyWithdraw","className","disabled","catch","ApprovalAction","stakingTokenContractAddress","isLoading","stakingTokenContract","useERC20","requestedApproval","setRequestedApproval","rewardRefReward","onApprove","useSousApprove","handleApprove","console","warn","DepositModal","max","onConfirm","tokenName","val","setVal","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","ModalInput","onSelectMax","symbol","ModalActions","fullWidth","endIcon","spin","borderRadius","UnderlinedButton","text","handleClick","alignSelf","WithdrawModal","IconButtonWrapper","HarvestWrapper","StyledIconButton","IconButton","StyledHeadingGreen","Heading","StyledText","StyledFlex","Flex","StakeAction","pool","stakingTokenBalance","stakedBalance","isApproved","firstStake","stakingToken","stakingLimit","chainId","useActiveWeb3React","stakingTokenName","rawStakedBalance","displayBalance","toLocaleString","rewardRefStake","rewardRefUnstake","userData","pendingReward","onUnstake","useSousUnstake","lpStaking","BASE_ADD_LIQUIDITY_URL","lpTokens","token","address","quoteToken","convertedLimit","multipliedBy","pow","isGreaterThan","onPresentDeposit","onPresentWithdraw","alignItems","mt","flexDirection","marginRight","marginLeft","mr","StyledBackground","StyledHeading","StyledText1","StyledText2","StyledText3","StyledText4","StyledFlexContainer","StyledFlexEarned","StyledFlexEarnedSmall","LabelContainer","LabelContainer2","FlexSwitch","StyledAPRText","ButtonContainer","IconImage","Image","IconArrow","IconQuoteToken","CardHeading","apr","stakeToken","earnToken","poolAPR","removed","earnTokenImage","showExpandableSection","splitStakeToken","split","splitEarnToken","isEarnTokenLp","useNetworkChainId","isDesktop","useMatchBreakpoints","isXl","accountHasStakedBalance","allowance","rawEarningsBalance","needsApproval","gt","isCompound","account","useWeb3React","src","alt","marginTop","forAdmins","display","pr","isStaked","UnlockButton","sx","fontWeight","StyledLinkExternal","LinkExternal","StyledTextGreen","StyledLink","Detail","blocksUntilStart","timeUntilStart","blocksRemaining","timeUntilEnd","totalStakedFormated","totalUserStaked","bscScanAddress","projectLink","type","rewardToken","imageToken","totalStakedTitle","URLactual","location","days","hours","minutes","months","toFixed","external","bold","registerToken","process","decimals","origin","WrapperCard","WrapperTable","InfoContainer","ContainerDetail","personalValueStaked","totalStaked","stakedTokenPrice","Number","maximumFractionDigits","getTimePeriods","BSC_BLOCK_TIME","ExpandingWrapper","props","PCard","navbar","PoolCard","image","startBlock","endBlock","isFinished","contractAddress","currentBlock","useBlockNumber","setShowExpandableSection","Math","target","classList","contains","stakingTokenAddress","price","React","memo","float","keyframes","floatSM","ControlContainer","Card","ToggleWrapper","ToggleContainer","LabelWrapper","ViewControls","HeadingContainer","Header","isDark","PoolMonkey","MonkeyWrapper","StyledCheckbox","Checkbox","ContainerLabels","StyledLabelContainerHot","StyledLabelContainerLP","StyledLabelContainerAPR","StyledLabelContainerLiquidity","StyledLabelContainerEarned","CardContainer","ButtonCheckWrapper","StyledPage","Page","StyledLabel","active","StyledArrowDropDownIcon","ArrowDropDownIcon","down","FlexLayout","AdminText","AdminPools","useSetPools","stakedOnly","setStakedOnly","observerIsSet","setObserverIsSet","searchQuery","setSearchQuery","sortOption","setSortOption","numberOfPoolsVisible","setNumberOfPoolsVisible","pathname","useLocation","allPools","usePools","isActive","includes","sortDirection","setSortDirection","loadMoreRef","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","curPools","filter","map","partition","finishedPools","openPools","stakedOnlyPools","stakedInactivePools","handleSortOptionChange","option","cardLayout","chosenPools","lowercaseQuery","toLowerCase","poolsToSort","orderBy","sortOrder","sortPools","slice","poolsToShow","event","checked","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","floor","approve","lpContract","masterChefContract","ethers","constants","MaxUint256","then","trx","wait","stake","pid","amount","enterStaking","toString","deposit","sousStake","sousChefContract","jungleStake","jungleChefContract","unstake","leaveStaking","withdraw","sousUnstake","jungleUnstake","sousEmegencyWithdraw","harvest","soushHarvest","jungleHarvest","bid","auctionContract","id","nextAuction","endAuction","listNfa","auctionLength","timeToExtend","minimumExtendTime","minimumBid","pushToAuction","removeAuction","nfaStake","nfaStakingChefContract","ids","nfaStakeHarvest","nfaUnstake","harvestMaximizer","vaultApeContract","harvestAll","stakeVaultV1","vaultUnstakeV1","stakeVaultV2","vaultUnstakeV2","vaultUnstakeAll","withdrawAll","miniChefStake","miniChefContract","miniChefHarvest","miniChefUnstake","withdrawAndHarvest","createNewIazo","iazoFactoryContract","iazoOwner","iazoToken","baseToken","burnRemains","unitParams","creationFee","createIAZO","userDeposit","iazoContract","userDepositNative","userWithdraw","withdrawOfferTokensOnFailure","userBuyBill","billContract","user","lpAmount","maxPrice","userClaimBill","billIds","batchRedeem","userTransferBillNft","billNft","billId","fromAddress","toAddress","StyledTokenInput","primaryBright","inputTitle","displayDecimals","isBalanceZero","parseFloat","position","isWarning","pl","placeholder","StyledModalActions","primaryDark","StyledModalAction","children","Children","child","require","createAggregator","result","key","push","module","exports","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","func","accumulator","array","index","length","baseEach"],"mappings":"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","file":"static/js/25.d1a55489.chunk.js","sourcesContent":["import { useCallback } from 'react'\n\nconst useReward = (rewardRef, callback) => {\n  const handleReward = useCallback(\n    async (...args) => {\n      await callback(...args)\n      // TODO error visual effect\n      // .catch(() => rewardRef.current?.punishMe())\n      rewardRef.current?.rewardMe()\n    },\n    [callback, rewardRef],\n  )\n\n  return handleReward\n}\n\nexport default useReward\n","import { useState, useEffect } from 'react'\n\nexport interface Size {\n  width: number | undefined\n  height: number | undefined\n}\n\n// Hook\nexport default function useWindowSize(): Size {\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  })\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    handleResize()\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n  return windowSize\n}\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst StyledInput = styled(Input)`\n  border-radius: 20px;\n  background: ${({ theme }) => theme.colors.white3};\n  margin-left: auto;\n  height: 28px;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 32px;\n  }\n\n  :focus {\n    box-shadow: 0px 0px 0px 1px #ffb300, 0px 0px 0px 4px rgb(255 179 0 / 40%) !important;\n  }\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  width: 140px;\n\n  @media screen and (min-width: 340px) {\n    width: 160px;\n  }\n\n  @media screen and (min-width: 360px) {\n    width: 180px;\n  }\n\n  @media screen and (min-width: 390px) {\n    width: 200px;\n  }\n\n  @media screen and (min-width: 460px) {\n    width: 220px;\n  }\n\n  @media screen and (min-width: 500px) {\n    width: 240px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 244px;\n    display: block;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 220px;\n    display: block;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 244px;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput icon=\"search\" ref={inputEl} value={value} onChange={onChange} onBlur={() => setToggled(false)} />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@apeswapfinance/uikit'\n\nimport { calculateBananaEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: 10px;\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  rewardTokenName,\n  rewardTokenPrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const farmApy = new BigNumber(apy).times(new BigNumber(100)).toNumber()\n  const tokenPrice =\n    typeof rewardTokenPrice === 'number' ? rewardTokenPrice : new BigNumber(rewardTokenPrice).toNumber()\n  const oneThousandDollarsWorthOfBanana = 1000 / tokenPrice\n\n  const bananaEarnedPerThousand1D = calculateBananaEarnedPerThousandDollars({\n    numberOfDays: 1,\n    farmApy,\n    rewardTokenPrice,\n  })\n  const bananaEarnedPerThousand7D = calculateBananaEarnedPerThousandDollars({\n    numberOfDays: 7,\n    farmApy,\n    rewardTokenPrice,\n  })\n  const bananaEarnedPerThousand30D = calculateBananaEarnedPerThousandDollars({\n    numberOfDays: 30,\n    farmApy,\n    rewardTokenPrice,\n  })\n  const bananaEarnedPerThousand365D = calculateBananaEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy,\n    rewardTokenPrice,\n  })\n\n  return (\n    <Modal onDismiss={onDismiss} title={t('CURRENT RATES')}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" color=\"gray\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" color=\"gray\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Return')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" color=\"gray\" textTransform=\"uppercase\" mb=\"20px\">\n            {rewardTokenName}\n            {t(' per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('1d')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: bananaEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfBanana })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{bananaEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('7d')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: bananaEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfBanana })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{bananaEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('30d')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: bananaEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfBanana })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{bananaEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>{`${t('365d')}${t('')}`}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({\n              amountEarned: bananaEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfBanana,\n            })}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{bananaEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"gray\">\n        {t(\n          'Returns are calculated based on current rates, assuming daily compounding. Estimated returns are not guaranteed and are provided for convenience only.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {t('Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CalculateIcon, useModal } from '@apeswapfinance/uikit'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst StyledCalculateIcon = styled(CalculateIcon)`\n  width: 13px;\n  height: 13px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 15px;\n    height: 15px;\n  }\n`\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, rewardTokenPrice, apy, addLiquidityUrl, rewardTokenName }) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      lpLabel={lpLabel}\n      rewardTokenName={rewardTokenName}\n      rewardTokenPrice={rewardTokenPrice}\n      apy={apy}\n      addLiquidityUrl={addLiquidityUrl}\n    />,\n  )\n\n  return (\n    <>\n      <StyledCalculateIcon onClick={onPresentApyModal} color=\"yellow\" ml=\"3px\" style={{ cursor: 'pointer' }} />\n    </>\n  )\n}\n\nexport default ApyButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"yellow\">\n        <ButtonMenuItem as={Link} to={`${url}`} fontSize=\"12px\">\n          {t('Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`} fontSize=\"12px\">\n          {t('Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  margin-right: 10px;\n  margin-left: 20px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 44px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 34px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 55px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from '@apeswapfinance/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-left: 5px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 10px;\n  }\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\">\n      {expanded ? <ArrowDropUpIcon width=\"10px\" /> : <ArrowDropDownIcon width=\"10px\" />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport useReward from 'hooks/useReward'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousEmergencyWithdraw } from 'hooks/useUnstake'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst StyledButton = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  padding: 0px 10px;\n`\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  sousId: number\n  earningTokenPrice?: number\n  isBnbPool?: boolean\n  isLoading?: boolean\n  compound?: boolean\n  emergencyWithdraw?: boolean\n  tokenDecimals: number\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  tokenDecimals,\n  sousId,\n  compound,\n  emergencyWithdraw,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, tokenDecimals)\n  const rewardRef = useRef(null)\n  const rewardRefApeHarder = useRef(null)\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onHarvest } = useSousHarvest(sousId)\n  const onApeHarder = useReward(rewardRefApeHarder, useSousStake(sousId).onStake)\n  const onEmergencyWithdraw = useReward(rewardRef, useSousEmergencyWithdraw(sousId).onEmergencyWithdraw)\n\n  const renderButton = () => {\n    if (emergencyWithdraw) {\n      return (\n        <StyledButton\n          className=\"noClick\"\n          disabled={earningTokenBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onEmergencyWithdraw().catch(() => {\n              rewardRefApeHarder.current?.rewardMe()\n            })\n            setPendingTx(false)\n          }}\n        >\n          {t('WITHDRAW')}\n        </StyledButton>\n      )\n    }\n    if (compound) {\n      return (\n        <StyledButton\n          className=\"noClick\"\n          disabled={earningTokenBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onApeHarder(earningTokenBalance).catch(() => {\n              rewardRefApeHarder.current?.rewardMe()\n            })\n            setPendingTx(false)\n          }}\n        >\n          {t('APE HARDER')}\n        </StyledButton>\n      )\n    }\n    return (\n      <StyledButton\n        className=\"noClick\"\n        disabled={earningTokenBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onHarvest().catch(() => {\n            rewardRef.current?.rewardMe()\n          })\n          setPendingTx(false)\n        }}\n      >\n        {t('HARVEST')}\n      </StyledButton>\n    )\n  }\n\n  return renderButton()\n}\n\nexport default HarvestActions\n","import React, { useCallback, useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Button } from '@apeswapfinance/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useERC20 } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledButton = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  padding: 0px 10px;\n`\n\ninterface ApprovalActionProps {\n  stakingTokenContractAddress: string\n  sousId: number\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ stakingTokenContractAddress, sousId, isLoading = false }) => {\n  const stakingTokenContract = useERC20(stakingTokenContractAddress)\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const rewardRefReward = useRef(null)\n  const { t } = useTranslation()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      } else {\n        rewardRefReward.current?.rewardMe()\n      }\n    } catch (e) {\n      rewardRefReward.current?.rewardMe()\n      console.warn(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <StyledButton size=\"md\" className=\"noClick\" disabled={requestedApproval} onClick={handleApprove}>\n          {t('ENABLE')}\n        </StyledButton>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon, LinkExternal } from '@apeswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\nimport { useTranslation } from '../../../contexts/Localization'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${t('Deposit')} ${tokenName} ${t('Tokens')}`} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n      <ModalActions>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, AutoRenewIcon } from '@apeswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${t('Withdraw')} ${tokenName}`} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useRef } from 'react'\nimport useReward from 'hooks/useReward'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text, Button } from '@apeswapfinance/uikit'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { Pool } from 'state/types'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport HarvestActions from './HarvestActions'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool?: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n  isApproved?: boolean\n  firstStake?: boolean\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst HarvestWrapper = styled.div`\n  margin-right: 6px;\n`\n\nconst StyledIconButton = styled(IconButton)`\n  width: 34px;\n  height: 34px;\n`\n\nconst StyledHeadingGreen = styled(Heading)`\n  font-size: 14px;\n  color: #38a611;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 20px;\n    color: #38a611;\n  }\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nconst StyledFlex = styled(Flex)`\n  width: 100%;\n  margin-left: 117px;\n  margin-right: 35px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 217px;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  padding: 0px 10px;\n`\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isApproved,\n  firstStake,\n}) => {\n  const { t } = useTranslation()\n\n  const { stakingToken, tokenDecimals, stakingLimit, sousId } = pool\n  const { chainId } = useActiveWeb3React()\n\n  const { symbol: stakingTokenName } = stakingToken\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const rewardRefStake = useRef(null)\n  const rewardRefUnstake = useRef(null)\n  const earnings = new BigNumber(pool.userData?.pendingReward || 0)\n  const isLoading = !pool.userData\n\n  const onStake = useReward(rewardRefStake, useSousStake(sousId).onStake)\n  const onUnstake = useReward(rewardRefUnstake, useSousUnstake(sousId).onUnstake)\n\n  const addLiquidityUrl = !pool?.lpStaking\n    ? pool.stakingToken.symbol === 'GNANA'\n      ? 'https://apeswap.finance/gnana'\n      : `https://apeswap.finance/swap?outputCurrency=${pool?.stakingToken.address[chainId]}`\n    : `${BASE_ADD_LIQUIDITY_URL}/${pool?.lpTokens?.token?.address[chainId]}/${pool?.lpTokens?.quoteToken?.address[chainId]}`\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={async (val) => {\n        await onStake(val).catch(() => {\n          rewardRefStake.current?.rewardMe()\n        })\n      }}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n      addLiquidityUrl={addLiquidityUrl}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={async (val) => {\n        await onUnstake(val).catch(() => {\n          rewardRefUnstake.current?.rewardMe()\n        })\n      }}\n      tokenName={stakingTokenName}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    return (\n      rawStakedBalance !== 0 && (\n        <IconButtonWrapper>\n          {sousId === 0 && (\n            <HarvestWrapper className=\"noClick\">\n              <HarvestActions\n                earnings={earnings}\n                sousId={sousId}\n                isLoading={isLoading}\n                tokenDecimals={pool.tokenDecimals}\n              />\n            </HarvestWrapper>\n          )}\n          <>\n            <StyledIconButton className=\"noClick\" onClick={onPresentWithdraw} mr=\"6px\">\n              <MinusIcon className=\"noClick\" color=\"white\" width=\"12px\" height=\"12px\" />\n            </StyledIconButton>\n            <StyledIconButton className=\"noClick\" onClick={onPresentDeposit}>\n              <AddIcon className=\"noClick\" color=\"white\" width=\"16px\" height=\"16px\" />\n            </StyledIconButton>\n          </>\n        </IconButtonWrapper>\n      )\n    )\n  }\n\n  if (firstStake) {\n    return (\n      <StyledButton size=\"md\" className=\"noClick\" onClick={onPresentDeposit}>\n        {`${t('STAKE')} ${stakingTokenName}`}\n      </StyledButton>\n    )\n  }\n\n  return (\n    <StyledFlex justifyContent=\"space-between\" alignItems=\"center\" mt=\"5px\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" marginRight=\"6px\" marginLeft=\"-70px\">\n        <StyledText>{t('Staked')}</StyledText>\n        <StyledHeadingGreen color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>\n          {rawStakedBalance > 0 && displayBalance === '0' ? <>&gt;{displayBalance}</> : displayBalance}\n        </StyledHeadingGreen>\n      </Flex>\n      {isApproved && renderStakingButtons()}\n    </StyledFlex>\n  )\n}\n\nexport default StakeAction\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from '@emotion/styled'\nimport { Flex, Skeleton, Text, Image, useMatchBreakpoints } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { Pool } from 'state/types'\nimport UnlockButton from 'components/UnlockButton'\nimport { useNetworkChainId } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport ApyButton from '../../../../components/ApyCalculator/ApyButton'\nimport ExpandableSectionButton from './ExpandableSectionButton'\nimport HarvestActions from './CardActions/HarvestActions'\nimport ApprovalAction from './CardActions/ApprovalAction'\nimport StakeAction from './CardActions/StakeActions'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  apr?: BigNumber\n  pool?: Pool\n  stakeToken?: string\n  earnToken?: string\n  tokenSymbol?: string\n  addLiquidityUrl?: string\n  bananaPrice?: BigNumber\n  poolAPR?: string\n  removed?: boolean\n  sousId?: number\n  lpSymbol?: string\n  earnTokenImage?: string\n  showExpandableSection?: boolean\n  stakingTokenAddress?: string\n  rewardTokenPrice?: number\n}\n\nconst StyledBackground = styled.div`\n  width: 120px;\n  height: 80px;\n  background: rgb(255, 179, 0, 0.4);\n  border-radius: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 5px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 120px;\n    width: 200px;\n  }\n`\n\nconst StyledHeading = styled(Text)`\n  font-size: 12px;\n  font-weight: 800;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    text-align: start;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 22px;\n  }\n`\n\nconst StyledText1 = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 15px;\n  }\n`\n\nconst StyledText2 = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n  margin-top: 1px;\n`\n\nconst StyledText3 = styled(Text)`\n  font-size: 12px;\n  color: #38a611;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 25px;\n    line-height: 29px;\n  }\n`\n\nconst StyledText4 = styled(Text)`\n  font-size: 12px;\n  font-weight: 600;\n  margin-top: 1px;\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n  }\n`\n\nconst StyledFlexContainer = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-left: 6px;\n  margin-right: 8px;\n  align-items: center;\n  flex: 1;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-right: 5px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`\n\nconst StyledFlexEarned = styled(Flex)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    margin-right: 0px;\n    flex-direction: column;\n  }\n`\n\nconst StyledFlexEarnedSmall = styled(Flex)`\n  margin-right: 10px;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: 10px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst LabelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-top: 10px;\n  width: 110px;\n  margin-right: 5px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n  }\n`\n\nconst LabelContainer2 = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n  }\n`\n\nconst FlexSwitch = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: center;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row-reverse;\n  }\n`\n\nconst StyledAPRText = styled.div`\n  font-size: 12px;\n  line-height: 11px;\n  letter-spacing: 1px;\n  margin-left: 5px;\n  margin-bottom: 2px;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 20px;\n    line-height: 23px;\n  }\n`\n\nconst ButtonContainer = styled.div`\n  width: 100px;\n  display: flex;\n  justify-content: flex-end;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 150px;\n  }\n`\n\nconst IconImage = styled(Image)`\n  align: center;\n  width: 40px;\n  height: 40px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 70px;\n    height: 70px;\n  }\n`\n\nconst IconArrow = styled(Image)`\n  align: center;\n  width: 5px;\n  height: 5px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 10px;\n    height: 10px;\n  }\n`\nconst IconQuoteToken = styled(Image)`\n  align: center;\n  width: 20px;\n  height: 20px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 35px;\n    height: 35px;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  pool,\n  apr,\n  stakeToken,\n  earnToken,\n  poolAPR,\n  removed,\n  sousId,\n  earnTokenImage,\n  showExpandableSection,\n  rewardTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { userData, tokenDecimals, stakingToken } = pool\n  const splitStakeToken = pool?.lpStaking && stakeToken.split('-')\n  const splitEarnToken = pool?.isEarnTokenLp && earnToken.split('-')\n  const chainId = useNetworkChainId()\n  const { isXl: isDesktop } = useMatchBreakpoints()\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const earnings = new BigNumber(pool.userData?.pendingReward || 0)\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const rawEarningsBalance = getBalanceNumber(earnings, tokenDecimals)\n  const displayBalance = rawEarningsBalance ? rawEarningsBalance.toLocaleString() : '?'\n  const isLoading = !pool.userData\n  const needsApproval = !allowance.gt(0)\n  const isCompound = sousId === 0\n  const { account } = useWeb3React()\n\n  const cardHeaderButton = () => {\n    if (!account) {\n      return <UnlockButton sx={{ fontWeight: 600, fontSize: '11.5px', height: '44px' }} />\n    }\n    if (needsApproval) {\n      return (\n        <ApprovalAction\n          stakingTokenContractAddress={stakingToken.address[chainId]}\n          sousId={sousId}\n          isLoading={isLoading}\n        />\n      )\n    }\n    if (!needsApproval && !accountHasStakedBalance && !pool.emergencyWithdraw) {\n      return (\n        <StakeAction\n          pool={pool}\n          stakingTokenBalance={stakingTokenBalance}\n          stakedBalance={stakedBalance}\n          isStaked={accountHasStakedBalance}\n          firstStake={!accountHasStakedBalance}\n        />\n      )\n    }\n    return (\n      <HarvestActions\n        earnings={earnings}\n        sousId={sousId}\n        isLoading={isLoading}\n        tokenDecimals={pool.tokenDecimals}\n        compound={isCompound}\n        emergencyWithdraw={pool.emergencyWithdraw}\n      />\n    )\n  }\n\n  return (\n    <Container>\n      <StyledBackground>\n        {!pool?.lpStaking ? (\n          <IconImage\n            src={`/images/tokens/${stakeToken}.svg`}\n            alt={stakeToken}\n            width={70}\n            height={70}\n            marginLeft=\"7.5px\"\n          />\n        ) : (\n          <>\n            <IconImage\n              src={`/images/tokens/${splitStakeToken[0]}.svg`}\n              alt={splitStakeToken[0]}\n              width={60}\n              height={60}\n              marginLeft=\"7.5px\"\n            />\n            <IconQuoteToken\n              src={`/images/tokens/${splitStakeToken[1]}.svg`}\n              alt={splitStakeToken[1]}\n              width={35}\n              height={35}\n              marginLeft={isDesktop ? '-20px' : '-13px'}\n              marginTop={isDesktop ? '45px' : '30px'}\n            />\n          </>\n        )}\n        <IconArrow src=\"/images/arrow.svg\" alt=\"arrow\" width={10} height={10} />\n        {!pool?.isEarnTokenLp ? (\n          <IconImage\n            src={`/images/tokens/${earnTokenImage || `${earnToken}.svg`}`}\n            alt={earnToken}\n            width={70}\n            height={70}\n            marginRight=\"7.5px\"\n          />\n        ) : (\n          <>\n            <IconImage\n              src={`/images/tokens/${splitStakeToken[0]}.svg`}\n              alt={splitEarnToken[0]}\n              width={60}\n              height={60}\n              marginLeft=\"7.5px\"\n            />\n            <IconQuoteToken\n              src={`/images/tokens/${splitStakeToken[1]}.svg`}\n              alt={splitEarnToken[1]}\n              width={35}\n              height={35}\n              marginLeft={isDesktop ? '-20px' : '-13px'}\n              marginTop={isDesktop ? '45px' : '30px'}\n            />\n          </>\n        )}\n      </StyledBackground>\n      <StyledFlexContainer>\n        <LabelContainer>\n          <StyledHeading>{earnToken}</StyledHeading>\n          {!removed && !pool?.forAdmins && (\n            <Text style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n              <StyledText1>APR:</StyledText1>\n              {apr ? (\n                <FlexSwitch className=\"noClick\">\n                  <ApyButton\n                    lpLabel={stakeToken}\n                    rewardTokenName={earnToken}\n                    addLiquidityUrl=\"https://apeswap.finance/swap\"\n                    rewardTokenPrice={rewardTokenPrice}\n                    apy={apr.div(100)?.toNumber()}\n                  />\n                  <StyledAPRText>{poolAPR}%</StyledAPRText>\n                </FlexSwitch>\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          )}\n          <StyledFlexEarnedSmall>\n            <StyledText4 color=\"primary\" pr=\"3px\">\n              {earnToken}\n            </StyledText4>\n            <StyledText2 color=\"primary\" pr=\"3px\">\n              {t('Earned')}\n            </StyledText2>\n            <StyledText3>{displayBalance}</StyledText3>\n          </StyledFlexEarnedSmall>\n        </LabelContainer>\n        <LabelContainer2>\n          <StyledFlexEarned>\n            <Flex>\n              <StyledText4 color=\"primary\" pr=\"3px\">\n                {earnToken}\n              </StyledText4>\n              <StyledText2 color=\"primary\" pr=\"3px\">\n                {t('Earned')}\n              </StyledText2>\n            </Flex>\n            <StyledText3>{displayBalance}</StyledText3>\n          </StyledFlexEarned>\n          <ButtonContainer>\n            {cardHeaderButton()}\n            <ExpandableSectionButton expanded={showExpandableSection} />\n          </ButtonContainer>\n        </LabelContainer2>\n      </StyledFlexContainer>\n    </Container>\n  )\n}\n\nexport default CardHeading\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@apeswapfinance/uikit'\nimport { registerToken } from 'utils/wallet'\n\ninterface RewardToken {\n  address?: any\n  decimals?: number\n  symbol?: string\n}\ninterface Time {\n  days?: number\n  months?: number\n  hours?: number\n  minutes?: number\n}\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  blocksUntilStart?: number\n  timeUntilStart?: Time\n  timeUntilEnd?: Time\n  blocksRemaining?: number\n  totalStakedFormated?: string\n  addLiquidityUrl?: string\n  lpLabel?: string\n  totalUserStaked?: number\n  rawEarningsBalance?: number\n  rewardTokenPrice?: number\n  projectLink?: string\n  type?: string\n  rewardToken?: RewardToken\n  imageToken?: string\n}\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst StyledTextGreen = styled(Text)`\n  font-weight: 600;\n  color: #38a611;\n`\n\nconst StyledLink = styled(Link)`\n  font-size: 12px;\n  text-decoration-line: underline;\n  margin-bottom: 14px;\n  font-weight: 800;\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 600;\n`\n\nconst Detail: React.FC<ExpandableSectionProps> = ({\n  blocksUntilStart,\n  timeUntilStart,\n  blocksRemaining,\n  timeUntilEnd,\n  totalStakedFormated,\n  addLiquidityUrl,\n  lpLabel,\n  totalUserStaked,\n  rawEarningsBalance,\n  rewardTokenPrice,\n  bscScanAddress,\n  projectLink,\n  type,\n  rewardToken,\n  imageToken,\n}) => {\n  const { t } = useTranslation()\n  const totalStakedTitle = type === 'card' ? t('Total Staked Value') : t('Total Staked')\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const URLactual = window.location\n\n  return (\n    <>\n      {blocksUntilStart > 0 && (\n        <>\n          <StyledText fontSize=\"12px\">{t('Start')}</StyledText>\n          <StyledText fontSize=\"12px\">{`${timeUntilStart.days}d, ${timeUntilStart.hours}h, ${timeUntilStart.minutes}m`}</StyledText>\n        </>\n      )}\n      {blocksUntilStart === 0 && blocksRemaining > 0 && (\n        <>\n          <Flex justifyContent=\"space-between\">\n            <StyledText fontSize=\"12px\">{t('End')}</StyledText>\n            <StyledText fontSize=\"12px\">\n              {rewardToken.symbol === 'BANANA'\n                ? t('Never')\n                : `${timeUntilEnd.days + timeUntilEnd.months * 30}d, ${timeUntilEnd.hours}h, ${timeUntilEnd.minutes}m`}\n            </StyledText>\n          </Flex>\n        </>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{totalStakedTitle}:</StyledText>\n        <StyledText fontSize=\"12px\">{totalStakedFormated}</StyledText>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{t('Stake')}:</StyledText>\n        <StyledLinkExternal href={addLiquidityUrl} className=\"noClick\">\n          {lpLabel}\n        </StyledLinkExternal>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{t('Staked Value')}:</StyledText>\n        <StyledTextGreen fontSize=\"12px\">${totalUserStaked}</StyledTextGreen>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{t('Earned Value')}:</StyledText>\n        <StyledTextGreen fontSize=\"12px\">${(rawEarningsBalance * rewardTokenPrice).toFixed(2)}</StyledTextGreen>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <StyledLink external href={bscScanAddress} bold={false} className=\"noClick\">\n          {t('View on BscScan')}\n        </StyledLink>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <StyledLink external href={projectLink} bold={false} className=\"noClick\">\n          {t('View Project Site')}\n        </StyledLink>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <StyledLink\n          bold={false}\n          className=\"noClick\"\n          onClick={() =>\n            registerToken(\n              rewardToken?.address[chainId],\n              rewardToken?.symbol,\n              rewardToken?.decimals,\n              `${URLactual.origin}/images/tokens/${imageToken || `${rewardToken?.symbol}.svg`}`,\n            )\n          }\n        >\n          {t('Add to Metamask')}\n        </StyledLink>\n      </Flex>\n    </>\n  )\n}\n\nexport default Detail\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Flex } from '@apeswapfinance/uikit'\nimport { FarmPool } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { BSC_BLOCK_TIME } from 'config'\nimport Detail from './Detail'\n\ninterface RewardToken {\n  address?: any\n  decimals?: number\n  symbol?: string\n}\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n  farmStats?: FarmPool\n  multiplier?: string\n  totalStaked?: number\n  personalValueStaked?: number\n  pid?: number\n  blocksRemaining?: number\n  isFinished?: boolean\n  blocksUntilStart?: number\n  stakedTokenPrice?: number\n  rewardTokenPrice?: number\n  pendingReward?: BigNumber\n  projectLink?: string\n  tokenDecimals?: number\n  type?: string\n  rewardToken?: RewardToken\n  imageToken?: string\n}\n\nconst WrapperCard = styled.div`\n  padding-top: 24px;\n  padding-left: 24px;\n  padding-right: 24px;\n  background-color: ${({ theme }) => theme.colors.white3};\n`\nconst WrapperTable = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: 12px;\n  background-color: ${({ theme }) => theme.colors.white3};\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 340px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-left: 401px;\n  }\n`\n\nconst InfoContainer = styled.div`\n  width: 285px;\n`\n\nconst ContainerDetail: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  lpLabel,\n  addLiquidityUrl,\n  personalValueStaked,\n  totalStaked,\n  blocksRemaining,\n  blocksUntilStart,\n  stakedTokenPrice,\n  rewardTokenPrice,\n  pendingReward,\n  projectLink,\n  tokenDecimals,\n  type,\n  rewardToken,\n  imageToken,\n}) => {\n  const totalStakedFormated = totalStaked\n    ? `${Number(totalStaked).toLocaleString(undefined, { maximumFractionDigits: 3 })}`\n    : '-'\n\n  const earnings = new BigNumber(pendingReward || 0)\n  const rawEarningsBalance = getBalanceNumber(earnings, tokenDecimals)\n  const totalUserStaked = personalValueStaked > 0 ? Number((personalValueStaked * stakedTokenPrice).toFixed(2)) : 0\n\n  const timeUntilStart = getTimePeriods(blocksUntilStart * BSC_BLOCK_TIME)\n  const timeUntilEnd = getTimePeriods(blocksRemaining * BSC_BLOCK_TIME)\n\n  return (\n    <>\n      {type === 'card' && (\n        <WrapperCard>\n          <Detail\n            blocksUntilStart={blocksUntilStart}\n            timeUntilStart={timeUntilStart}\n            blocksRemaining={blocksRemaining}\n            timeUntilEnd={timeUntilEnd}\n            totalStakedFormated={totalStakedFormated}\n            addLiquidityUrl={addLiquidityUrl}\n            lpLabel={lpLabel}\n            totalUserStaked={totalUserStaked}\n            rawEarningsBalance={rawEarningsBalance}\n            rewardTokenPrice={rewardTokenPrice}\n            bscScanAddress={bscScanAddress}\n            projectLink={projectLink}\n            type={type}\n            rewardToken={rewardToken}\n            imageToken={imageToken}\n          />\n        </WrapperCard>\n      )}\n      {type === 'table' && (\n        <WrapperTable>\n          <Flex>\n            <InfoContainer>\n              <Detail\n                blocksUntilStart={blocksUntilStart}\n                timeUntilStart={timeUntilStart}\n                blocksRemaining={blocksRemaining}\n                timeUntilEnd={timeUntilEnd}\n                totalStakedFormated={totalStakedFormated}\n                addLiquidityUrl={addLiquidityUrl}\n                lpLabel={lpLabel}\n                totalUserStaked={totalUserStaked}\n                rawEarningsBalance={rawEarningsBalance}\n                rewardTokenPrice={rewardTokenPrice}\n                bscScanAddress={bscScanAddress}\n                projectLink={projectLink}\n                type={type}\n                rewardToken={rewardToken}\n                imageToken={imageToken}\n              />\n            </InfoContainer>\n          </Flex>\n        </WrapperTable>\n      )}\n    </>\n  )\n}\n\nexport default ContainerDetail\n","import BigNumber from 'bignumber.js'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@apeswapfinance/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport CardHeading from './CardHeading'\nimport StakeAction from './CardActions/StakeActions'\nimport ContainerDetail from '../ContainerDetail'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\ninterface HarvestProps {\n  pool: Pool\n  removed: boolean\n}\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\nconst PCard = styled.div`\n  align-self: baseline;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  text-align: center;\n  max-width: 530px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.navbar};\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 1024px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 530px;\n  }\n`\n\nconst StyledFlex = styled(Flex)`\n  background-color: ${({ theme }) => theme.colors.white3};\n`\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool, removed }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingToken,\n    apr,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    rewardToken,\n    projectLink,\n    contractAddress,\n    tokenDecimals,\n  } = pool\n  const { account } = useWeb3React()\n  const currentBlock = useBlockNumber()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const pendingReward = userData?.pendingReward\n  const toggleExpand = (e) => {\n    if (e.target?.classList.contains('noClick')) return\n    setShowExpandableSection(!showExpandableSection)\n  }\n\n  return (\n    <PCard onClick={toggleExpand}>\n      <CardHeading\n        pool={pool}\n        stakeToken={stakingToken?.symbol}\n        earnToken={tokenName}\n        earnTokenImage={image}\n        stakingTokenAddress={stakingToken?.address[CHAIN_ID]}\n        sousId={sousId}\n        apr={new BigNumber(apr)}\n        poolAPR={apr?.toFixed(2)}\n        showExpandableSection={showExpandableSection}\n        removed={removed}\n        rewardTokenPrice={rewardToken?.price}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <StyledFlex>\n          <StakeAction\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isApproved={isApproved}\n            isStaked={accountHasStakedBalance}\n          />\n        </StyledFlex>\n        <ContainerDetail\n          totalStaked={getBalanceNumber(totalStaked)}\n          personalValueStaked={getBalanceNumber(stakedBalance)}\n          blocksRemaining={blocksRemaining}\n          isFinished={isFinished}\n          blocksUntilStart={blocksUntilStart}\n          rewardTokenPrice={rewardToken?.price}\n          lpLabel={stakingToken.symbol}\n          addLiquidityUrl={\n            stakingToken.symbol === `GNANA` ? `https://apeswap.finance/gnana` : `https://apeswap.finance/swap`\n          }\n          stakedTokenPrice={stakingToken?.price}\n          pendingReward={pendingReward}\n          projectLink={projectLink}\n          bscScanAddress={`https://bscscan.com/address/${contractAddress[CHAIN_ID]}`}\n          tokenDecimals={tokenDecimals}\n          type=\"card\"\n          rewardToken={rewardToken}\n          imageToken={image}\n        />\n      </ExpandingWrapper>\n    </PCard>\n  )\n}\n\nexport default React.memo(PoolCard)\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Text, Card, Checkbox, ArrowDropDownIcon } from '@apeswapfinance/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\n\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport useWindowSize, { Size } from 'hooks/useDimensions'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePools, useSetPools } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Page from 'components/layout/Page'\nimport { useTranslation } from 'contexts/Localization'\nimport SearchInput from '../PoolsLegacy/components/SearchInput'\nimport PoolTabButtons from '../PoolsLegacy/components/PoolTabButtons'\nimport PoolCard from '../PoolsLegacy/components/PoolCard/PoolCard'\n\ninterface LabelProps {\n  active?: boolean\n}\n\nconst float = keyframes`\n  0% {transform: translate3d(0px, 0px, 0px);}\n  50% {transform: translate3d(50px, 0px, 0px);}\n  100% {transform: translate3d(0px, 0px, 0px);}\n`\nconst floatSM = keyframes`\n  0% {transform: translate3d(0px, 0px, 0px);}\n  50% {transform: translate3d(10px, 0px, 0px);}\n  100% {transform: translate3d(0px, 0px, 0px);}\n`\n\nconst ControlContainer = styled(Card)`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n  justify-content: center;\n  flex-direction: column;\n  overflow: visible;\n  padding-bottom: 10px;\n  transform: translateY(-85px);\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    height: 59px;\n    padding: 0px;\n    justify-content: flex-start;\n    padding-left: 50px;\n    transform: translateY(-60px);\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 0px;\n  cursor: pointer;\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  } ;\n`\n\nconst ToggleContainer = styled.div`\n  position: absolute;\n  right: 5%;\n  display: flex;\n  flex-direction: column;\n  height: 75px;\n  margin-left: 15px;\n  justify-content: space-between;\n  transform: translateY(-25px);\n  ${({ theme }) => theme.mediaQueries.md} {\n    position: relative;\n    height: auto;\n    margin-left: 0px;\n    align-items: center;\n    justify-content: space-between;\n    width: 180px;\n    transform: translateY(0px);\n    flex-direction: row;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 200px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 225px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  > ${Text} {\n    font-size: 12px;\n  }\n\n  margin-left: 30px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    margin-left: 0px;\n    align-items: center;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: center;\n    align-items: center;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst HeadingContainer = styled.div`\n  max-width: 1024px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Header = styled.div`\n  position: relative;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  padding-top: 36px;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-image: ${({ theme }) =>\n    theme.isDark ? 'url(/images/pool-background-night.svg)' : 'url(/images/pool-background-day.svg)'};\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 250px;\n  background-position: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 300px;\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 10px;\n    padding-right: 10px;\n    height: 400px;\n  }\n`\n\nconst PoolMonkey = styled.div`\n  background-image: ${({ theme }) => (theme.isDark ? 'url(/images/pool-ape-night.svg)' : 'url(/images/pool-ape.svg)')};\n  width: 100%;\n  height: 100%;\n  background-size: contain;\n  background-repeat: no-repeat;\n`\n\nconst MonkeyWrapper = styled.div`\n  position: absolute;\n  width: 225px;\n  height: 275px;\n  margin-left: auto;\n  margin-right: auto;\n  bottom: 0px;\n  right: 0px;\n  animation: 5s ${floatSM} linear infinite;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 24px;\n    padding-right: 24px;\n    animation: 10s ${float} linear infinite;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 700px;\n    height: 1000px;\n    top: ${({ theme }) => (theme.isDark ? '-145px' : '-90px')};\n    right: 0;\n    animation: 10s ${float} linear infinite;\n  }\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 15px !important;\n  }\n`\n\ninterface CheckboxProps {\n  checked?: boolean\n}\n\nconst StyledCheckbox = styled(Checkbox)<CheckboxProps>`\n  height: 21px;\n  width: 21px;\n`\n\nconst ContainerLabels = styled.div`\n  background: ${({ theme }) => theme.colors.white3};\n  border-radius: 16px;\n  margin-top: 24px;\n  height: 32px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transform: translateY(-85px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-top: 34px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    transform: translateY(-60px);\n  }\n`\n\nconst StyledLabelContainerHot = styled.div`\n  cursor: pointer;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    position: absolute;\n    top: 6px;\n    left: 38px;\n    margin: 0px;\n  }\n`\n\nconst StyledLabelContainerLP = styled.div`\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    position: absolute;\n    top: 6px;\n    left: 169px;\n    margin: 0px;\n  }\n`\n\nconst StyledLabelContainerAPR = styled.div`\n  cursor: pointer;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    position: absolute;\n    top: 6px;\n    left: 365px;\n    margin: 0px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    left: 409px;\n  }\n`\n\nconst StyledLabelContainerLiquidity = styled.div`\n  cursor: pointer;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    position: absolute;\n    top: 6px;\n    left: 500px;\n    margin: 0px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    left: 621px;\n  }\n`\n\nconst StyledLabelContainerEarned = styled.div`\n  cursor: pointer;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 35px;\n    margin-right: 35px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0px;\n    position: absolute;\n    top: 6px;\n    left: 651px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    left: 801px;\n  }\n`\n\nconst CardContainer = styled.div`\n  margin-top: 17px;\n\n  transform: translateY(-85px);\n  ${({ theme }) => theme.mediaQueries.md} {\n    transform: translateY(-60px);\n  }\n`\n\nconst ButtonCheckWrapper = styled.div`\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 100%;\n  margin-right: 30px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: fit-content;\n  }\n`\n\nconst StyledHeading = styled(Heading)`\n  font-size: 32px;\n  max-width: 176px !important;\n  margin-bottom: 8px;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 36px;\n    max-width: 240px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 44px;\n    max-width: 400px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    font-size: 60px;\n    max-width: 600px !important;\n  }\n`\n\nconst StyledPage = styled(Page)`\n  padding-left: 5px;\n  padding-right: 5px;\n  width: 100vw;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`\n\nconst StyledLabel = styled.div<LabelProps>`\n  display: flex;\n  color: ${({ theme, active }) => (active ? '#FFFFFF' : theme.colors.primary)};\n\n  padding: 4px 12px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 12px;\n  border-radius: ${({ active }) => active && '50px'};\n  background-color: ${({ active }) => active && '#FFB300'};\n`\n\ninterface DropdownProps {\n  down?: boolean\n}\n\nconst StyledArrowDropDownIcon = styled(ArrowDropDownIcon)<DropdownProps>`\n  color: white;\n  transform: ${({ down }) => (!down ? 'rotate(180deg)' : 'rotate(0)')};\n  margin-left: 7px;\n  margin-top: 2px;\n  /* 'rotate(180deg)' : 'rotate(0)' */\n`\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  & > * {\n    width: 100%;\n    margin-bottom: 32px;\n  }\n`\n\nconst AdminText = styled(Text)`\n  font-size: 18px;\n  font-weight: 500;\n  color: white;\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst AdminPools: React.FC = () => {\n  useSetPools()\n  const [stakedOnly, setStakedOnly] = useState(false)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const size: Size = useWindowSize()\n  const allPools = usePools(account)\n  const { t } = useTranslation()\n  const currentBlock = useBlockNumber()\n  const isActive = !pathname.includes('history')\n  const [sortDirection, setSortDirection] = useState<boolean | 'desc' | 'asc'>('desc')\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const adminPools = allPools.filter((pool) => pool.forAdmins)\n\n  const curPools = adminPools.map((pool) => {\n    return { ...pool, isFinished: pool.sousId === 0 ? false : pool.isFinished || currentBlock > pool.endBlock }\n  })\n\n  const [finishedPools, openPools] = partition(curPools, (pool) => pool.isFinished)\n\n  const stakedOnlyPools = openPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n  const stakedInactivePools = finishedPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const handleSortOptionChange = (option): void => {\n    if (option !== sortOption) {\n      setSortDirection('desc')\n    } else if (sortDirection === 'desc') {\n      setSortDirection('asc')\n    } else {\n      setSortDirection('desc')\n    }\n    setSortOption(option)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(poolsToSort, (pool: Pool) => pool.apr, sortDirection)\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.rewardToken?.price) {\n              return 0\n            }\n            return getBalanceNumber(pool.userData.pendingReward) * pool.rewardToken?.price\n          },\n          sortDirection,\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => getBalanceNumber(pool.totalStaked) * pool.stakingToken?.price,\n          sortDirection,\n        )\n      default:\n        return orderBy(poolsToSort, (pool: Pool) => pool.sortOrder, 'asc')\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (stakedOnly) {\n      chosenPools = isActive ? stakedOnlyPools : stakedInactivePools\n    } else {\n      chosenPools = isActive ? openPools : finishedPools\n    }\n    if (searchQuery) {\n      const lowercaseQuery = searchQuery.toLowerCase()\n      chosenPools = chosenPools.filter((pool) => pool.tokenName.toLowerCase().includes(lowercaseQuery))\n    }\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardContainer>\n      <FlexLayout>\n        {poolsToShow().map((pool) => (\n          <PoolCard key={pool.sousId} pool={pool} removed={!isActive} />\n        ))}\n      </FlexLayout>\n    </CardContainer>\n  )\n\n  return (\n    <>\n      <Header>\n        <HeadingContainer>\n          <StyledHeading as=\"h1\">{t('Admin Pools')}</StyledHeading>\n          {size.width > 968 && (\n            <AdminText>\n              {t('Stake OBIE to earn new tokens.')} <br />{' '}\n              {t('Admins will be allocated OBIE tokens from grandpa Obie Dobo.')} <br />{' '}\n              {t('Your own personal pools page to reward your hard work')} ❤️\n            </AdminText>\n          )}\n        </HeadingContainer>\n        <MonkeyWrapper>\n          <PoolMonkey />\n        </MonkeyWrapper>\n      </Header>\n      <StyledPage width=\"1130px\">\n        <ControlContainer>\n          <ViewControls>\n            <LabelWrapper>\n              <StyledText mr=\"15px\">Search</StyledText>\n              <SearchInput onChange={handleChangeQuery} value={searchQuery} />\n            </LabelWrapper>\n            <ButtonCheckWrapper>\n              <PoolTabButtons />\n              <ToggleContainer>\n                <ToggleWrapper onClick={() => setStakedOnly(!stakedOnly)}>\n                  <StyledCheckbox checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\n                  <StyledText>{t('Staked')}</StyledText>\n                </ToggleWrapper>\n              </ToggleContainer>\n            </ButtonCheckWrapper>\n          </ViewControls>\n        </ControlContainer>\n        <ContainerLabels>\n          <StyledLabelContainerHot>\n            <StyledLabel active={sortOption === 'hot'} onClick={() => handleSortOptionChange('hot')}>\n              {t('Hot')}\n            </StyledLabel>\n          </StyledLabelContainerHot>\n          <StyledLabelContainerAPR>\n            <StyledLabel active={sortOption === 'apr'} onClick={() => handleSortOptionChange('apr')}>\n              {t('Very Nice')}\n              {sortOption === 'apr' ? (\n                <StyledArrowDropDownIcon width=\"7px\" height=\"8px\" color=\"white\" down={sortDirection === 'desc'} />\n              ) : null}\n            </StyledLabel>\n          </StyledLabelContainerAPR>\n          <StyledLabelContainerLiquidity>\n            <StyledLabel active={sortOption === 'totalStaked'} onClick={() => handleSortOptionChange('totalStaked')}>\n              {t('Good Project')}\n              {sortOption === 'totalStaked' ? (\n                <StyledArrowDropDownIcon width=\"7px\" height=\"8px\" color=\"white\" down={sortDirection === 'desc'} />\n              ) : null}\n            </StyledLabel>\n          </StyledLabelContainerLiquidity>\n          <StyledLabelContainerLP>\n            <StyledLabel>{t('Token')}</StyledLabel>\n          </StyledLabelContainerLP>\n          <StyledLabelContainerEarned>\n            <StyledLabel active={sortOption === 'earned'} onClick={() => handleSortOptionChange('earned')}>\n              {t('Earned')}\n              {sortOption === 'earned' ? (\n                <StyledArrowDropDownIcon width=\"7px\" height=\"8px\" color=\"white\" down={sortDirection === 'desc'} />\n              ) : null}\n            </StyledLabel>\n          </StyledLabelContainerEarned>\n        </ContainerLabels>\n        {cardLayout}\n        <div ref={loadMoreRef} />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default AdminPools\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number, days?: boolean) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS && !days) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS && !days) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { Contract, ethers } from 'ethers'\nimport {\n  VaultApeV1,\n  Iazo,\n  SousChef,\n  Masterchef,\n  Erc20,\n  MiniApeV2,\n  Auction,\n  NfaStaking,\n  IazoFactory,\n  Bill,\n  BillNft,\n  VaultApeV2,\n  JungleChef,\n} from 'config/abi/types'\n\nexport const approve = async (lpContract: Erc20, masterChefContract: Contract) => {\n  return lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stake = async (masterChefContract: Masterchef, pid, amount) => {\n  if (pid === 0) {\n    return masterChefContract\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .then((trx) => {\n        return trx.wait()\n      })\n  }\n\n  return masterChefContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const sousStake = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const sousStakeBnb = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleStake = async (jungleChefContract: JungleChef, amount) => {\n  return jungleChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const unstake = async (masterChefContract: Masterchef, pid, amount) => {\n  if (pid === 0) {\n    return masterChefContract\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .then((trx) => {\n        return trx.wait()\n      })\n  }\n  return masterChefContract\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const sousUnstake = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleUnstake = async (jungleChefContract: JungleChef, amount) => {\n  return jungleChefContract.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const sousEmegencyWithdraw = async (sousChefContract: SousChef) => {\n  return sousChefContract.emergencyWithdraw().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const harvest = async (masterChefContract: Masterchef, pid) => {\n  if (pid === 0) {\n    return masterChefContract.leaveStaking('0').then((trx) => {\n      return trx.wait()\n    })\n  }\n  return masterChefContract.deposit(pid, '0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const soushHarvest = async (sousChefContract: SousChef) => {\n  return sousChefContract.deposit('0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleHarvest = async (jungleChefContract: JungleChef) => {\n  return jungleChefContract.deposit('0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const bid = async (auctionContract: Auction, amount, id) => {\n  return auctionContract\n    .bid(id, { value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const nextAuction = async (auctionContract: Auction, id) => {\n  return auctionContract.endAuction(id).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const listNfa = async (\n  auctionContract: Auction,\n  id,\n  auctionLength,\n  timeToExtend,\n  minimumExtendTime,\n  minimumBid,\n) => {\n  return auctionContract\n    .pushToAuction(\n      id,\n      auctionLength,\n      timeToExtend,\n      minimumExtendTime,\n      new BigNumber(minimumBid).times(new BigNumber(10).pow(18)).toString(),\n    )\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const removeAuction = async (auctionContract: Auction, id) => {\n  return auctionContract.removeAuction(id).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaStake = async (nfaStakingChefContract: NfaStaking, ids) => {\n  return nfaStakingChefContract.deposit(ids).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaStakeHarvest = async (nfaStakingChefContract: NfaStaking) => {\n  return nfaStakingChefContract.deposit([]).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaUnstake = async (nfaStakingChefContract: NfaStaking, ids) => {\n  return nfaStakingChefContract.withdraw(ids).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const harvestMaximizer = async (vaultApeContract: VaultApeV2, pid) => {\n  return vaultApeContract.harvestAll(pid).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stakeVaultV1 = async (vaultApeContract: VaultApeV1, pid, amount) => {\n  return vaultApeContract['deposit(uint256,uint256)'](\n    pid,\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n  ).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const vaultUnstakeV1 = async (vaultApeContract: VaultApeV1, pid, amount) => {\n  return vaultApeContract['withdraw(uint256,uint256)'](\n    pid,\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n  ).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stakeVaultV2 = async (vaultApeContract: VaultApeV2, pid, amount) => {\n  return vaultApeContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const vaultUnstakeV2 = async (vaultApeContract: VaultApeV2, pid, amount) => {\n  return vaultApeContract\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const vaultUnstakeAll = async (vaultApeContract: VaultApeV1 | VaultApeV2, pid) => {\n  return vaultApeContract.withdrawAll(pid).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const miniChefStake = async (miniChefContract: MiniApeV2, pid, amount, account) => {\n  return miniChefContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const miniChefHarvest = async (miniChefContract: MiniApeV2, pid, account) => {\n  return miniChefContract.harvest(pid, account).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const miniChefUnstake = async (miniChefContract: MiniApeV2, pid, amount, account) => {\n  return miniChefContract\n    .withdrawAndHarvest(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\n/* \nunitParams[9]\n0: tokenPrice - string\n1: amount - string (hardcap)\n2: softCap - string\n3: startTime - string (unix timstamp)\n4: activeTime - number (seconds)\n5: lockPeriod - number (seconds)\n6: maxSpendPerBuyer - string\n7: liquidityPercent - number\n8: listingPrice - number (if 0 same as tokenPrice)\n*/\nexport const createNewIazo = async (\n  iazoFactoryContract: IazoFactory, // Contract\n  iazoOwner, // Address\n  iazoToken, // Address\n  baseToken, // Address\n  burnRemains, // Bool\n  unitParams, // uint256[9]\n  creationFee, // string\n) => {\n  return iazoFactoryContract\n    .createIAZO(iazoOwner, iazoToken, baseToken, burnRemains, unitParams, {\n      value: creationFee,\n    })\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const userDeposit = async (iazoContract: Iazo, amount) => {\n  return iazoContract.userDeposit(amount).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userDepositNative = async (iazoContract: Iazo, amount) => {\n  return iazoContract.userDepositNative({ value: amount }).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userWithdraw = async (iazoContract: Iazo) => {\n  return iazoContract.userWithdraw().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const withdrawOfferTokensOnFailure = async (iazoContract: Iazo) => {\n  return iazoContract.withdrawOfferTokensOnFailure().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userBuyBill = async (billContract: Bill, user: string, lpAmount: string, maxPrice: string) => {\n  return billContract\n    .deposit(new BigNumber(lpAmount).times(new BigNumber(10).pow(18)).toString(), maxPrice, user)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const userClaimBill = async (billContract: Bill, billIds: string[]) => {\n  return billContract.batchRedeem(billIds).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userTransferBillNft = async (billNft: BillNft, billId: string, fromAddress: string, toAddress: string) => {\n  return billNft['safeTransferFrom(address,address,uint256)'](fromAddress, toAddress, billId).then((trx) => {\n    return trx.wait()\n  })\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Text, Button, Input, InputProps, Flex } from '@apeswapfinance/uikit'\nimport { useTranslation } from '../../contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  displayDecimals?: number\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white3};\n  border-radius: 16px;\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  border: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  font-weight: 800;\n  background-color: ${({ theme }) => theme.colors.white3};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryBright};\n  font-weight: 500;\n  font-size: 16px;\n  padding: 3px 10px;\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  inputTitle,\n  displayDecimals,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(displayDecimals || 4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\" fontWeight={800}>\n            {inputTitle}\n          </Text>\n          <Text fontSize=\"16px\" fontWeight={500}>\n            {t('Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <StyledButton size=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </StyledButton>\n          <Text fontSize=\"16px\" fontWeight={600}>\n            {symbol}\n          </Text>\n        </Flex>\n      </StyledTokenInput>\n    </div>\n  )\n}\n\nexport default ModalInput\n","import React from 'react'\nimport styled from 'styled-components'\n\n// import Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  // const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {/* {i < l - 1 && <Spacer />} */}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n"],"sourceRoot":""}
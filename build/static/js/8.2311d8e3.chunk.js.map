{"version":3,"sources":["state/lpPrices/hooks.ts","components/RoiCalculator/styles.ts","components/RoiCalculator/CurrencyInput.tsx","components/RoiCalculator/tokenInfo.ts","components/RoiCalculator/DetailsContent.tsx","components/RoiCalculator/RoiCalculatorModal.tsx","components/RoiCalculator/CalcButton.tsx","components/ListViewMenu/SearchInput.tsx","components/ListViewMenu/constants.ts","components/ListViewMenu/index.tsx","state/farms/hooks.ts","views/Farms/constants.ts","components/ModalInput/ModalInput.tsx","views/Farms/components/styles.ts","components/ListViewMenu/MenuTabButtons/index.tsx","components/ListViewMenu/styles.ts"],"names":["useFetchLpTokenPrices","dispatch","useAppDispatch","slowRefresh","useRefresh","chainId","useActiveWeb3React","farms","useSelector","state","data","useEffect","fetchLpTokenPrices","styles","apyButton","svg","width","height","border","backgroundColor","fill","maxButton","margin","fontSize","lineHeight","container","borderRadius","justifyContent","alignItems","padding","rowGap","tabContainer","marginBottom","fontWeight","px","color","inputSection","flexDirection","position","zIndex","marginRight","text","marginLeft","title","buttonsContainer","flexWrap","balance","whiteSpace","overflow","textOverflow","roiContainer","columnGap","roiBanana","detailRow","paddingBottom","detailContainer","hide","marginTop","CurrencyInputPanelRoi","dollarValue","tokenValue","onUserInput","onMax","removeLiquidity","sx","onClick","variant","style","Row","NumericalInput","id","value","align","autoFocus","weight","React","memo","tokenInfo","tokenListInfo","lpPair","notLpPair","DetailsContent","apr","lpApr","isLp","label","tokenAddress","quoteTokenAddress","apy","liquidityUrl","rewardTokenName","useState","expanded","setExpanded","link","setLink","t","useTranslation","banana","useBananaAddress","gnana","useGoldenBananaAddress","useModal","closeModal","handleClose","onPresentAddLiquidityWidgetModal","toLowerCase","prev","cursor","open","toFixed","map","item","dangerouslySetInnerHTML","__html","token","quoteToken","selectCurrency","field","Field","INPUT","currencyId","OUTPUT","href","target","textDecoration","modalStyle","overflowY","maxHeight","amountButtons","intervals","compoundIntervals","RoiCalculatorModal","props","onDismiss","rewardTokenPrice","lpAddress","lpPrice","numberOfDays","setNumberOfDays","compoundFrequency","setCompoundFrequency","amountDollars","setAmountDollars","inputValue","setInputValue","account","isMobile","useIsMobile","tokenPrices","useTokenPrices","lpTokenPrices","useLpTokenPrices","keySuffix","setKeySuffix","tokenPrice","BigNumber","toNumber","tokensWorthForDollarSelected","parseFloat","onIntervalClick","type","index","currency","useCurrency","compoundROIRates","tokenEarnedPerThousandDollarsCompounding","farmApr","roundingDecimals","amountDollar","percentageCompound","apyModalRoi","amountEarned","amountInvested","compoundROIRatesValue","Number","isNaN","percentageCompoundValue","selectedCurrencyBalance","useCurrencyBalance","undefined","maxAmount","maxAmountSpend","rewardPrice","useMemo","find","tok","address","price","onTokenAmountChange","useCallback","fiatValue","isFinite","toString","onDollarAmountChange","expectedValue","minWidth","maxWidth","onAnimationComplete","as","CurrencyInput","amount","size","activeTab","indexOf","interval","disabled","ServiceTokenDisplay","token1","CalcButton","onPresentCalcModal","ml","StyledInput","styled","Input","theme","colors","white3","InputWrapper","div","mediaQueries","sm","md","Container","SearchInput","onChange","toggled","setToggled","inputEl","useRef","ref","onBlur","icon","OPTIONS","JUNGLE_OPTIONS","ListViewMenu","onHandleQueryChange","onSetSortOption","onSetStake","harvestAll","stakedOnly","query","showMonkeyImage","activeOption","displayOptions","isJungle","isDark","useTheme","bold","mr","e","active","option","MenuTabButtons","checked","src","alt","usePollFarms","bananaPrice","useBananaPrice","farmLpAprs","useFarmLpAprs","ChainId","BSC","fetchFarmsPublicDataAsync","length","lpAprs","useFarms","farmsLoaded","BSC_TESTNET","fetchFarmUserDataAsync","useFarmTags","Tags","stats","farmTags","useSetFarms","setInitialFarmDataAsync","useFarmOrderings","Ordering","farmOrderings","NUMBER_OF_FARMS_VISIBLE","STABLES","BLUE_CHIPS","StyledTokenInput","xs","StyledButton","Button","primaryBright","ModalInput","max","symbol","onSelectMax","inputTitle","displayDecimals","isBalanceZero","displayBalance","isWarning","pl","toLocaleString","placeholder","FarmButton","NextArrow","ArrowDropUpIcon","Flex","Text","Wrapper","lg","xl","MenuTabButton","useRouteMatch","url","isExact","history","useHistory","labels","push","ControlContainer","white2","MobilePadding","ToggleWrapper","LabelWrapper","StyledText","StyledCheckbox","Checkbox","StyledImage","img","HarvestAllWrapper","Heading"],"mappings":"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","file":"static/js/8.2311d8e3.chunk.js","sourcesContent":["import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State } from 'state/types'\nimport { fetchLpTokenPrices } from '.'\n\nexport const useFetchLpTokenPrices = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { chainId } = useActiveWeb3React()\n  const farms = useSelector((state: State) => state.farms.data)\n  useEffect(() => {\n    dispatch(fetchLpTokenPrices(chainId, farms))\n  }, [dispatch, farms, slowRefresh, chainId])\n}\n","const styles = {\n  apyButton: {\n    svg: {\n      width: ['15px', '13px'],\n      height: ['15px', '13px'],\n    },\n    '&:disabled': {\n      border: 0,\n      backgroundColor: 'transparent',\n      svg: {\n        fill: 'primaryButtonDisable',\n      },\n    },\n  },\n  maxButton: {\n    margin: '0',\n    fontSize: '14px',\n    lineHeight: 0,\n    width: '62px',\n    height: '30px',\n  },\n  container: {\n    backgroundColor: 'white4',\n    borderRadius: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '15px',\n    rowGap: '10px',\n  },\n  tabContainer: {\n    marginBottom: '30px',\n    '&&& span': {\n      fontWeight: 700,\n      fontSize: '16px',\n    },\n    '& button': {\n      px: '20px',\n      fontSize: '16px',\n    },\n    '& *:not(button)': {\n      color: 'primaryButtonDisable',\n    },\n  },\n  inputSection: {\n    justifyContent: 'space-between',\n    alignItems: 'end',\n    flexDirection: 'column',\n    position: 'relative',\n    borderRadius: '10px',\n    zIndex: 1,\n    '& input': {\n      marginRight: 0,\n    },\n  },\n  text: {\n    fontSize: '12px',\n    lineHeight: '14px',\n    fontWeight: '500',\n    color: 'text',\n    marginLeft: '-5px',\n  },\n  title: {\n    fontSize: '16px',\n    margin: '25px 0px 8px 8px',\n  },\n  buttonsContainer: {\n    justifyContent: 'space-between',\n    margin: '10px 10px 10px 0',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    rowGap: '10px',\n  },\n  balance: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontSize: '14px',\n  },\n  roiContainer: {\n    backgroundColor: 'white4',\n    borderRadius: '20px',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '17px 0',\n    marginBottom: '25px',\n    columnGap: '20px',\n  },\n  roiBanana: {\n    '& span': {\n      fontSize: '12px',\n    },\n  },\n  detailRow: {\n    marginBottom: '5px',\n    fontSize: '16px',\n    fontWeight: '700',\n    justifyContent: 'space-between',\n    paddingBottom: '5px',\n  },\n  detailContainer: (hide) => ({\n    marginTop: hide ? 0 : '15px',\n    backgroundColor: 'white3',\n    padding: hide ? 0 : '25px 20px',\n    borderRadius: '10px',\n    overflow: hide ? 'hidden' : 'visible',\n    height: hide ? 0 : 'auto',\n    '& span': {\n      fontSize: '12px',\n    },\n  }),\n} as any\nexport default styles\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Button, Text } from '@ape.swap/uikit'\nimport { Flex } from 'theme-ui'\nimport { Input as NumericalInput } from 'components/CurrencyInputPanel/NumericalInput'\nimport { RowBetween } from '../layout/Row'\nimport styles from './styles'\n\ninterface CurrencyInputPanelProps {\n  dollarValue: string\n  tokenValue: string\n  onUserInput: (value: string) => void\n  onMax: () => void\n  removeLiquidity?: boolean\n}\n\nconst CurrencyInputPanelRoi = ({\n  dollarValue,\n  tokenValue,\n  onUserInput,\n  onMax,\n  removeLiquidity,\n}: CurrencyInputPanelProps) => {\n  return (\n    <Flex sx={styles.container}>\n      <Flex sx={{ position: 'relative' }}>\n        <Button onClick={onMax} variant=\"primary\" style={styles.maxButton}>\n          MAX\n        </Button>\n      </Flex>\n      <Flex sx={styles.inputSection as any}>\n        <RowBetween>\n          <NumericalInput\n            id=\"roi-token-amount-input\"\n            removeLiquidity={removeLiquidity}\n            value={tokenValue}\n            align=\"right\"\n            width=\"full\"\n            onUserInput={onUserInput}\n            autoFocus\n          />\n        </RowBetween>\n        <Text weight=\"light\" variant=\"sm\">\n          {dollarValue ? `~ $${dollarValue}` : ' -'}\n        </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(CurrencyInputPanelRoi)\n","export const tokenInfo = [\n  {\n    text: 'Base APR (BANANA yield only)',\n    value: 'apr',\n  },\n  {\n    text: 'APY (1x daily compound)',\n    value: 'apy',\n  },\n]\n\nexport const tokenListInfo = {\n  lpPair: [\n    'Calculated based on current rates.',\n    'LP Rewards: 0.15% of trading fees on BNB Chain, 0.05% on Polygon. Distributed proportionally among LP token holders.',\n    'Returns are calculated based on current rates. Estimated returns are not guaranteed and are provided for convenience only.',\n  ],\n  notLpPair: [\n    'Calculated based on current rates.',\n    'Estimated returns are not guaranteed and are provided for convenience only.',\n  ],\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useEffect, useState } from 'react'\nimport { Flex, Text, Box, Link } from 'theme-ui'\nimport { Button, useModal } from '@ape.swap/uikit'\nimport { DropDownIcon } from 'components/ListView/styles'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBananaAddress, useGoldenBananaAddress } from 'hooks/useAddress'\nimport { LiquidityModal } from 'components/LiquidityWidget'\nimport { Field, selectCurrency } from 'state/swap/actions'\nimport { useAppDispatch } from 'state'\nimport { FarmButton } from 'views/Farms/components/styles'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Farm } from 'state/types'\nimport { tokenInfo, tokenListInfo } from './tokenInfo'\nimport styles from './styles'\n\ninterface DetailsContentProps {\n  onDismiss?: () => void\n  label?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apr?: number\n  lpApr?: number\n  apy?: number\n  lpAddress?: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  isLp?: boolean\n  farm?: Farm\n  liquidityUrl?: string\n}\n\nconst DetailsContent: React.FC<DetailsContentProps> = ({\n  apr,\n  lpApr,\n  isLp,\n  label,\n  tokenAddress,\n  quoteTokenAddress,\n  apy,\n  liquidityUrl,\n  rewardTokenName,\n}) => {\n  const [expanded, setExpanded] = useState(false)\n  const [link, setLink] = useState('')\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const banana = useBananaAddress()\n  const gnana = useGoldenBananaAddress()\n\n  const [, closeModal] = useModal(<></>)\n  const [onPresentAddLiquidityWidgetModal] = useModal(\n    <LiquidityModal handleClose={closeModal} />,\n    true,\n    true,\n    'liquidityWidgetModal',\n  )\n\n  useEffect(() => {\n    if (!isLp) {\n      if (tokenAddress?.toLowerCase() === banana.toLowerCase()) {\n        setLink('swap')\n      }\n      if (tokenAddress?.toLowerCase() === gnana.toLowerCase()) {\n        setLink('gnana')\n      }\n    }\n  }, [chainId, tokenAddress, isLp, banana, gnana])\n\n  const showLiquidity = (token?, quoteToken?) => {\n    if (isLp) {\n      dispatch(\n        selectCurrency({\n          field: Field.INPUT,\n          currencyId: token,\n        }),\n      )\n      dispatch(\n        selectCurrency({\n          field: Field.OUTPUT,\n          currencyId: quoteToken,\n        }),\n      )\n      onPresentAddLiquidityWidgetModal()\n    }\n  }\n\n  return (\n    <>\n      <Flex\n        sx={{ justifyContent: 'center', alignItems: 'center', columnGap: '10px', marginBottom: '15px' }}\n        onClick={() => setExpanded((prev) => !prev)}\n      >\n        <Text\n          sx={{\n            fontWeight: 600,\n            fontSize: '14px',\n            '&:hover': {\n              cursor: 'pointer',\n            },\n          }}\n        >\n          {t('Details')}\n        </Text>\n        <DropDownIcon width=\"10px\" open={expanded} />\n      </Flex>\n      <Box sx={styles.detailContainer(!expanded)}>\n        <Flex sx={styles.detailRow}>\n          {isLp ? (\n            <Text>{t('APR (incl. LP rewards)')}</Text>\n          ) : (\n            <Text>\n              {t('APR')} - {rewardTokenName} {t('rewards')}\n            </Text>\n          )}\n          <Text>{(apr + (lpApr || 0)).toFixed(2)}%</Text>\n        </Flex>\n\n        {isLp &&\n          tokenInfo.map((item) => {\n            return (\n              <Flex key={item.value} sx={styles.detailRow}>\n                <Text>{t(`${item.text}`)}</Text>\n                <Text>{item.value === 'apr' ? apr.toFixed(2) : apy.toFixed(2)}%</Text>\n              </Flex>\n            )\n          })}\n\n        <ul>\n          {tokenListInfo[isLp ? 'lpPair' : 'notLpPair']?.map((item) => (\n            <li key={item}>\n              <Text sx={styles?.text} dangerouslySetInnerHTML={{ __html: t(item) }} />\n            </li>\n          ))}\n        </ul>\n\n        <Flex sx={{ marginTop: '25px', justifyContent: 'center' }}>\n          {isLp && !liquidityUrl && (\n            <FarmButton onClick={() => showLiquidity(tokenAddress, quoteTokenAddress)}>\n              {t('GET')} {label}\n            </FarmButton>\n          )}\n          {isLp && liquidityUrl && (\n            <Link\n              href={liquidityUrl}\n              target=\"_blank\"\n              sx={{\n                '&:hover': {\n                  textDecoration: 'none',\n                },\n              }}\n            >\n              <Button style={{ fontSize: '16px' }}>\n                {t('GET')} {label}\n              </Button>\n            </Link>\n          )}\n          {!isLp && (\n            <Link\n              href={link}\n              target=\"_blank\"\n              sx={{\n                '&:hover': {\n                  textDecoration: 'none',\n                },\n              }}\n            >\n              <Button style={{ fontSize: '16px' }}>\n                {t('GET')} {label}\n              </Button>\n            </Link>\n          )}\n        </Flex>\n      </Box>\n    </>\n  )\n}\nexport default React.memo(DetailsContent)\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { apyModalRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport { Modal, Button, Text, Tab, Tabs } from '@ape.swap/uikit'\nimport { Box, Flex, Heading } from 'theme-ui'\nimport { Farm } from 'state/types'\nimport useIsMobile from 'hooks/useIsMobile'\nimport { useTranslation } from 'contexts/Localization'\nimport maxAmountSpend from 'utils/maxAmountSpend'\nimport { useLpTokenPrices } from 'state/hooks'\nimport CurrencyInputPanel from './CurrencyInput'\nimport DetailsContent from './DetailsContent'\nimport styles from './styles'\nimport ServiceTokenDisplay from '../ServiceTokenDisplay'\nimport { useTokenPrices } from '../../state/tokenPrices/hooks'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  label?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apr?: number\n  lpApr?: number\n  apy?: number\n  lpAddress?: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  isLp?: boolean\n  farm?: Farm\n  liquidityUrl?: string\n  lpPrice?: number\n}\n\nconst modalStyle = {\n  style: {\n    overflowY: 'auto',\n    maxHeight: '85vh',\n  },\n}\n\nconst amountButtons = ['100', '1000']\nconst intervals = [1, 7, 30, 365]\nconst compoundIntervals = [1, 7, 14, 30]\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = (props) => {\n  const { onDismiss, label, rewardTokenName, rewardTokenPrice, apr, lpApr, lpAddress, tokenAddress, isLp, lpPrice } =\n    props\n  const [numberOfDays, setNumberOfDays] = useState(1)\n  const [compoundFrequency, setCompoundFrequency] = useState(1)\n  const [amountDollars, setAmountDollars] = useState('')\n  const [inputValue, setInputValue] = useState('0')\n  const { account, chainId } = useActiveWeb3React()\n  const isMobile = useIsMobile()\n  const { t } = useTranslation()\n  const { tokenPrices } = useTokenPrices()\n  const { lpTokenPrices } = useLpTokenPrices()\n  const [keySuffix, setKeySuffix] = useState(0)\n\n  useEffect(() => {\n    if (compoundFrequency > numberOfDays) {\n      setCompoundFrequency(intervals?.[0])\n    }\n  }, [compoundFrequency, numberOfDays])\n\n  const tokenPrice = new BigNumber(rewardTokenPrice).toNumber()\n  const tokensWorthForDollarSelected = parseFloat(amountDollars || inputValue) / tokenPrice\n\n  const onIntervalClick = (type: 'staked' | 'compound') => (index: number) => {\n    if (type === 'staked') {\n      setNumberOfDays(intervals[index])\n    } else {\n      setCompoundFrequency(compoundIntervals[index])\n    }\n  }\n\n  const currency = useCurrency(isLp ? lpAddress : tokenAddress)\n\n  const compoundROIRates = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays,\n    farmApr: apr + (lpApr || 0),\n    tokenPrice,\n    roundingDecimals: 8,\n    // Get the fraction of 1 day\n    compoundFrequency: 1 / compoundFrequency,\n    amountDollar: parseFloat(amountDollars || inputValue),\n  })\n\n  const percentageCompound = apyModalRoi({\n    amountEarned: compoundROIRates,\n    amountInvested: tokensWorthForDollarSelected,\n  })\n\n  const compoundROIRatesValue = Number.isNaN(compoundROIRates) ? 0 : compoundROIRates\n  const percentageCompoundValue = Number.isNaN(parseFloat(percentageCompound)) ? 0 : percentageCompound\n\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const maxAmount = maxAmountSpend(selectedCurrencyBalance)?.toFixed(6) || '0'\n\n  const rewardPrice = useMemo(() => {\n    if (!isLp) {\n      const { price } = tokenPrices.find((tok) => tok.address[chainId].toLowerCase() === tokenAddress.toLowerCase())\n      return price\n    }\n    if (isLp && !lpPrice) {\n      const { price } = lpTokenPrices.find((tok) => tok.address[chainId].toLowerCase() === lpAddress.toLowerCase())\n      return price\n    }\n    return lpPrice\n  }, [chainId, isLp, lpAddress, lpPrice, lpTokenPrices, tokenAddress, tokenPrices])\n\n  const onTokenAmountChange = useCallback(\n    (value: string) => {\n      setInputValue(value)\n      const fiatValue = parseFloat(!!currency && value ? (rewardPrice * parseFloat(value))?.toFixed(2) : '0')\n      setAmountDollars(Number.isFinite(fiatValue) ? fiatValue.toString() : '0')\n    },\n    [currency, rewardPrice],\n  )\n\n  const onDollarAmountChange = useCallback(\n    (value: string) => {\n      setAmountDollars(value)\n      const expectedValue = parseFloat(!!currency && value ? (parseFloat(value) / rewardPrice)?.toFixed(6) : '0')\n      setInputValue(Number.isFinite(expectedValue) ? expectedValue.toString() : '0')\n    },\n    [currency, rewardPrice],\n  )\n\n  return (\n    <Modal\n      onDismiss={onDismiss}\n      title={t('Return Calculator')}\n      minWidth={isMobile ? '320px' : '400px'}\n      maxWidth={isMobile ? '90vw' : '400px'}\n      onAnimationComplete={() => setKeySuffix(keySuffix + 1)}\n      {...modalStyle}\n    >\n      <Box>\n        <Heading as=\"h3\" style={styles.title}>\n          {label} {isLp && t('LP')}\n        </Heading>\n        <CurrencyInputPanel\n          dollarValue={amountDollars?.toString()}\n          tokenValue={inputValue}\n          onUserInput={onTokenAmountChange}\n          onMax={() => onTokenAmountChange(maxAmount)}\n        />\n        <Flex sx={styles.buttonsContainer}>\n          <Flex sx={{ columnGap: ['8px', '17px'] }}>\n            {amountButtons.map((amount) => (\n              <Button\n                key={`${amount}`}\n                size=\"sm\"\n                onClick={() => onDollarAmountChange(amount)}\n                style={{ lineHeight: '0.7' }}\n              >\n                ${amount}\n              </Button>\n            ))}\n          </Flex>\n          <Text style={styles.balance}>\n            {t('Balance')}: {maxAmount || 0}\n          </Text>\n        </Flex>\n        <Heading as=\"h3\" style={styles.title}>\n          {t('STAKING PERIOD')}\n        </Heading>\n        <Box sx={styles.tabContainer}>\n          <Tabs activeTab={intervals.indexOf(numberOfDays)} variant=\"fullWidth\">\n            {intervals.map((interval, index) => (\n              <Tab\n                key={`${interval}${keySuffix}D`}\n                index={index}\n                label={`${interval}D`}\n                onClick={onIntervalClick('staked')}\n                size=\"sm\"\n                variant=\"fullWidth\"\n                style={{ borderRadius: '0px', padding: '4px' }}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Heading as=\"h3\" style={styles.title}>\n          {t('COMPOUNDING FREQUENCY')}\n        </Heading>\n        <Box sx={styles.tabContainer}>\n          <Tabs activeTab={compoundIntervals.indexOf(compoundFrequency)} variant=\"fullWidth\">\n            {compoundIntervals.map((interval, index) => (\n              <Tab\n                key={`${interval}${keySuffix}D`}\n                index={index}\n                label={`${interval}${t('D')}`}\n                onClick={onIntervalClick('compound')}\n                size=\"sm\"\n                variant=\"fullWidth\"\n                disabled={interval > numberOfDays}\n                style={{ borderRadius: '0px', padding: '4px' }}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Heading as=\"h3\" style={styles.title}>\n          {t('RETURN AT CURRENT RATES')}\n        </Heading>\n        <Flex sx={styles.roiContainer}>\n          <ServiceTokenDisplay token1={rewardTokenName} size={46} />\n          <Box>\n            <Text sx={{ fontSize: '18px' }} as=\"p\" weight=\"bold\" variant=\"lg\">\n              ${(compoundROIRatesValue * tokenPrice).toFixed(2)}\n            </Text>\n            <Box sx={styles.roiBanana}>\n              <Text variant=\"sm\">\n                ~{compoundROIRatesValue.toFixed(2)} {rewardTokenName}\n              </Text>\n              <Text variant=\"sm\">({percentageCompoundValue}%)</Text>\n            </Box>\n          </Box>\n        </Flex>\n        <DetailsContent {...props} />\n      </Box>\n    </Modal>\n  )\n}\n\nexport default React.memo(RoiCalculatorModal)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Farm } from 'state/types'\nimport { CalculateIcon } from '@apeswapfinance/uikit'\nimport { IconButton, useModal } from '@ape.swap/uikit'\nimport RoiCalculatorModal from './RoiCalculatorModal'\nimport styles from './styles'\n\nexport interface CalcButtonProps {\n  label?: string\n  rewardTokenName?: string\n  rewardTokenPrice?: number\n  apr?: number\n  lpApr?: number\n  apy?: number\n  lpAddress?: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  isLp?: boolean\n  farm?: Farm\n  liquidityUrl?: string\n  lpPrice?: number\n}\n\nconst CalcButton: React.FC<CalcButtonProps> = (props) => {\n  const { apr } = props\n  const [onPresentCalcModal] = useModal(<RoiCalculatorModal {...props} />)\n\n  return (\n    <IconButton variant=\"transparent\" onClick={onPresentCalcModal} disabled={!apr} sx={styles.apyButton}>\n      <CalculateIcon color=\"yellow\" ml=\"3px\" />\n    </IconButton>\n  )\n}\n\nexport default React.memo(CalcButton)\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst StyledInput = styled(Input)`\n  border-radius: 10px;\n  background: ${({ theme }) => theme.colors.white3};\n  height: 36px;\n  width: 100%;\n  font-weight: 800;\n  border: none;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  width: 140px;\n\n  @media screen and (min-width: 340px) {\n    width: 160px;\n  }\n\n  @media screen and (min-width: 360px) {\n    width: 180px;\n  }\n\n  @media screen and (min-width: 390px) {\n    width: 200px;\n  }\n\n  @media screen and (min-width: 460px) {\n    width: 220px;\n  }\n\n  @media screen and (min-width: 500px) {\n    width: 240px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 244px;\n    display: block;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 220px;\n    display: block;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 200px;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput ref={inputEl} value={value} onChange={onChange} onBlur={() => setToggled(false)} icon=\"search\" />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","export const NUMBER_OF_FARMS_VISIBLE = 10\n\nexport const OPTIONS = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'Blue Chips',\n    value: 'blueChips',\n  },\n  {\n    label: 'Stables',\n    value: 'stables',\n  },\n  {\n    label: 'APY',\n    value: 'apr',\n  },\n  {\n    label: 'Liquidity',\n    value: 'liquidity',\n  },\n  {\n    label: 'Hot',\n    value: 'hot',\n  },\n  {\n    label: 'New',\n    value: 'new',\n  },\n]\n\nexport const JUNGLE_OPTIONS = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'APR',\n    value: 'apr',\n  },\n  {\n    label: 'Liquidity',\n    value: 'liquidity',\n  },\n  {\n    label: 'Earned',\n    value: 'earned',\n  },\n  {\n    label: 'Hot',\n    value: 'hot',\n  },\n  {\n    label: 'New',\n    value: 'new',\n  },\n]\n\nexport const STABLES = ['DAI', 'USDT', 'BUSD', 'USDC', 'MOR', 'FRAX']\n\nexport const BLUE_CHIPS = [\n  'BTC',\n  'ETH',\n  'USDT',\n  'USDC',\n  'XRP',\n  'LUNA',\n  'SOL',\n  'ADA',\n  'AVAX',\n  'DOT',\n  'BUSD',\n  'DOGE',\n  'SHIB',\n  'MATIC',\n  'CRO',\n  'DAI',\n  'ATOM',\n  'LTC',\n  'LINK',\n  'TRX',\n  'BCH',\n  'BANANA',\n]\n","import React from 'react'\nimport { useTheme } from 'styled-components'\nimport { Flex, Select, SelectItem, Text } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ListViewProps } from './types'\nimport MenuTabButtons from './MenuTabButtons'\nimport SearchInput from './SearchInput'\nimport {\n  ControlContainer,\n  HarvestAllWrapper,\n  LabelWrapper,\n  MobilePadding,\n  StyledCheckbox,\n  StyledImage,\n  StyledText,\n  ToggleWrapper,\n} from './styles'\nimport { OPTIONS, JUNGLE_OPTIONS } from './constants'\n\nconst ListViewMenu: React.FC<ListViewProps> = ({\n  onHandleQueryChange,\n  onSetSortOption,\n  onSetStake,\n  harvestAll,\n  stakedOnly,\n  query,\n  showMonkeyImage,\n  activeOption,\n  isJungle,\n}) => {\n  const displayOptions = isJungle === true ? JUNGLE_OPTIONS : OPTIONS\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n  return (\n    <ControlContainer>\n      <MobilePadding>\n        <LabelWrapper>\n          <StyledText bold mr=\"15px\">\n            {t('Search')}\n          </StyledText>\n          <SearchInput onChange={onHandleQueryChange} value={query} />\n        </LabelWrapper>\n      </MobilePadding>\n      <MobilePadding>\n        <Flex style={{ height: '40px' }}>\n          <Select size=\"sm\" width=\"126px\" onChange={(e) => onSetSortOption(e.target.value)} active={activeOption}>\n            {displayOptions.map((option) => {\n              return (\n                <SelectItem size=\"sm\" value={option.value} key={option?.label}>\n                  <Text>{t(option.label)}</Text>\n                </SelectItem>\n              )\n            })}\n          </Select>\n        </Flex>\n      </MobilePadding>\n      <MobilePadding>\n        <MenuTabButtons />\n      </MobilePadding>\n      <MobilePadding>\n        <ToggleWrapper onClick={() => onSetStake(!stakedOnly)}>\n          <StyledCheckbox checked={stakedOnly} onChange={() => onSetStake(!stakedOnly)} />\n          <StyledText> {t('Staked')} </StyledText>\n        </ToggleWrapper>\n      </MobilePadding>\n      <MobilePadding>{harvestAll && <HarvestAllWrapper> {harvestAll} </HarvestAllWrapper>}</MobilePadding>\n      {showMonkeyImage && isDark ? (\n        <StyledImage src=\"/images/farm-night-farmer.svg\" alt=\"night-monkey\" />\n      ) : (\n        <StyledImage src=\"/images/farm-day-farmer.svg\" alt=\"day-monkey\" />\n      )}\n    </ControlContainer>\n  )\n}\n\nexport default React.memo(ListViewMenu)\n","import { ChainId } from '@apeswapfinance/sdk'\nimport BigNumber from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useFarmLpAprs, useLpTokenPrices } from 'state/hooks'\nimport { useFetchLpTokenPrices } from 'state/lpPrices/hooks'\nimport { useBananaPrice } from 'state/tokenPrices/hooks'\nimport { Farm, State, StatsState } from 'state/types'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, setInitialFarmDataAsync } from '.'\n\nexport const usePollFarms = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const { lpTokenPrices } = useLpTokenPrices()\n  const { slowRefresh } = useRefresh()\n  // Made a string because hooks will refresh bignumbers\n  const bananaPrice = useBananaPrice()\n  const farmLpAprs = useFarmLpAprs()\n\n  useEffect(() => {\n    if (chainId === ChainId.BSC) {\n      dispatch(fetchFarmsPublicDataAsync(chainId, lpTokenPrices, new BigNumber(bananaPrice), farmLpAprs))\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [dispatch, chainId, lpTokenPrices?.length, farmLpAprs?.lpAprs?.length, slowRefresh])\n}\nexport const useFarms = (account): Farm[] => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const { chainId } = useActiveWeb3React()\n  const farms = useSelector((state: State) => state.farms.data)\n  const farmsLoaded = farms.length > 0\n  useEffect(() => {\n    if (account && (chainId === ChainId.BSC || chainId === ChainId.BSC_TESTNET)) {\n      dispatch(fetchFarmUserDataAsync(chainId, account))\n    }\n  }, [account, dispatch, slowRefresh, chainId, farmsLoaded])\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm?.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm?.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm?.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm?.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\nexport const useFarmTags = (chainId: number) => {\n  const { Tags }: StatsState = useSelector((state: State) => state.stats)\n  const farmTags = Tags?.[`${chainId}`].farms\n  return { farmTags }\n}\n\nexport const useSetFarms = () => {\n  useFetchLpTokenPrices()\n  const dispatch = useAppDispatch()\n  const farms = useFarms(null)\n  if (farms.length === 0) {\n    dispatch(setInitialFarmDataAsync())\n  }\n}\n\nexport const useFarmOrderings = (chainId: number) => {\n  const { Ordering }: StatsState = useSelector((state: State) => state.stats)\n  const farmOrderings = Ordering?.[`${chainId}`]?.farms\n\n  return { farmOrderings }\n}\n","export const NUMBER_OF_FARMS_VISIBLE = 10\n\nexport const OPTIONS = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  // {\n  //   label: 'New',\n  //   value: 'new',\n  // },\n  {\n    label: 'Blue Chips',\n    value: 'blueChips',\n  },\n  {\n    label: 'Stables',\n    value: 'stables',\n  },\n  {\n    label: 'APR',\n    value: 'apr',\n  },\n  {\n    label: 'Liquidity',\n    value: 'liquidity',\n  },\n]\n\nexport const STABLES = ['DAI', 'USDT', 'BUSD', 'USDC', 'MOR', 'FRAX', 'TOR']\n\nexport const BLUE_CHIPS = [\n  'AAVE',\n  'ADA',\n  'AVAX',\n  'AXS',\n  'BANANA',\n  'BAT',\n  'BTC',\n  'CAKE',\n  'COMP',\n  'COTI',\n  'DAI',\n  'DOGE',\n  'DOT',\n  'ETH',\n  'FIL',\n  'FTM',\n  'IOTA',\n  'LINK',\n  'LTC',\n  'MATIC',\n  'NEAR',\n  'SFP',\n  'SHIB',\n  'SNX',\n  'SUSHI',\n  'SXP',\n  'TWT',\n  'USDC',\n  'USDT',\n  'XRP',\n  'XVS',\n  'YFI',\n  'ZEC',\n]\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Text, Button, Input, InputProps, Flex } from '@apeswapfinance/uikit'\nimport { useTranslation } from '../../contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  displayDecimals?: number\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.white3};\n  border-radius: 16px;\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  border: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  font-weight: 800;\n  background-color: ${({ theme }) => theme.colors.white3};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryBright};\n  font-weight: 500;\n  font-size: 16px;\n  padding: 3px 10px;\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  inputTitle,\n  displayDecimals,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(displayDecimals || 4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\" fontWeight={800}>\n            {inputTitle}\n          </Text>\n          <Text fontSize=\"16px\" fontWeight={500}>\n            {t('Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <StyledButton size=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </StyledButton>\n          <Text fontSize=\"16px\" fontWeight={600}>\n            {symbol}\n          </Text>\n        </Flex>\n      </StyledTokenInput>\n    </div>\n  )\n}\n\nexport default ModalInput\n","import styled from 'styled-components'\nimport { Button, ArrowDropUpIcon, Flex, Text } from '@apeswapfinance/uikit'\n\nexport const FarmButton = styled(Button)`\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 10px 20px;\n  min-width: 129px;\n  height: 44px;\n`\n\nexport const NextArrow = styled(ArrowDropUpIcon)`\n  transform: rotate(90deg);\n`\n\nexport const Container = styled(Flex)`\n  flex-direction: row;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n`\n\nexport const TitleText = styled(Text)`\n  font-size: 12px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Toggle } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst MenuTabButton: React.FC = () => {\n  const { url, isExact } = useRouteMatch()\n  const history = useHistory()\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (isExact) {\n      history.push(`${url}/history`)\n    } else {\n      history.push(url)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Toggle size=\"md\" labels={[t('ACTIVE'), t('INACTIVE')]} onClick={handleClick} checked={!isExact} />\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MenuTabButton)\n","import styled from 'styled-components'\nimport { Text, Checkbox, Heading, Flex } from '@apeswapfinance/uikit'\n\nexport const ControlContainer = styled(Flex)`\n  position: relative;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  align-items: space-around;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 15px;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.colors.white2};\n  min-width: 300px;\n  max-width: 500px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    min-height: 59px;\n    height: 100%;\n    padding: 20px 150px 20px 20px;\n    align-items: center;\n    max-width: 100%;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding: 0px 130px 0px 30px;\n  }\n`\n\nexport const MobilePadding = styled(Flex)`\n  padding: 7.5px 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 0 0;\n  }\n`\n\nexport const ControlWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid red;\n`\n\nexport const ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  }\n`\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: center;\n    align-items: center;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nexport const HeadingContainer = styled.div`\n  max-width: 1024px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const Header = styled.div`\n  padding-top: 36px;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-image: ${({ theme }) => (theme.isDark ? 'url(/images/farm-night.svg)' : 'url(/images/farm-day.svg)')};\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 250px;\n  background-position: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 24px;\n    padding-right: 24px;\n    height: 300px;\n  }\n`\n\nexport const StyledText = styled(Text)`\n  font-weight: 700;\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 16px !important;\n  }\n`\nexport const StyledCheckbox = styled(Checkbox)<{ checked?: boolean }>`\n  height: 21px;\n  width: 21px;\n  margin-left: 20px;\n`\n\nexport const StyledImage = styled.img`\n  height: 187px;\n  width: 134px;\n  position: absolute;\n  right: 0px;\n  bottom: 51px;\n  display: none;\n\n  @media screen and (min-width: 340px) {\n    right: 20px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    bottom: 51px;\n    right: 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    bottom: 0px;\n    right: 0px;\n    display: block;\n  }\n`\n\nexport const StyledHeading = styled(Heading)`\n  font-size: 30px;\n  max-width: 176px !important;\n  color: ${({ theme }) => theme.colors.text};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 30px;\n    max-width: 240px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 44px;\n    max-width: 400px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    font-size: 60px;\n    max-width: 600px !important;\n  }\n`\n\nexport const SectionOneWrapper = styled(Flex)`\n  justify-content: space-between;\n  align-items: flex-end;\n  z-index: 1;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 410px;\n    align-items: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 430px;\n    align-items: center;\n  }\n`\n\nexport const SectionTwoWrapper = styled(Flex)`\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n  margin-top: 15px;\n  align-self: flex-start;\n  z-index: 0;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 245px;\n    margin-top: 0px;\n    align-self: center;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 275px;\n  }\n`\n\nexport const HarvestAllWrapper = styled(Flex)`\n  justify-content: center;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 250px;\n    margin-top: 20px;\n  }\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 180px;\n    margin-top: 0px;\n  }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["components/layout/Column.tsx","state/orders/actions.ts","components/MarketingModalContent/Bills/styles.ts","config/abi/erc20.ts","state/wallet/hooks.ts","state/lists/actions.ts","hooks/useRefresh.ts","utils/prices.ts","state/stats/getFarmLpAprs.ts","state/stats/getHomepageLaunchCalendar.ts","state/stats/getHomepageNews.ts","state/stats/getHomepageService.ts","state/stats/getHomepageStats.ts","state/stats/getHomepageTokenStats.ts","state/stats/getStats.ts","state/stats/fetchIfoStatus.ts","state/stats/fetchTagsFromApi.ts","state/stats/fetchOrderingFromApi.ts","state/stats/index.tsx","state/hooks.ts","hooks/usePairs.ts","hooks/useFindBestRoute.ts","utils/wallchainService.ts","state/swap/hooks.ts","state/transactions/hooks.tsx","utils/track.ts","utils/compoundApyHelpers.ts","utils/apr.ts","config/localization/languages.ts","state/transactions/actions.ts","utils/currencyId.ts","views/Dex/components/TokenSelector/index.tsx","views/Dex/components/DexPanel/styles.ts","views/Dex/components/DexPanel/index.tsx","components/UnlockButton.tsx","state/nfaStakingPools/fetchNfaStakingPools.ts","state/nfaStakingPools/fetchNfaStakingPoolsUser.ts","state/nfaStakingPools/api.ts","state/nfaStakingPools/index.ts","hooks/useAuth.ts","state/profile/getProfile.ts","state/profile/index.tsx","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/styles.ts","components/Menu/GlobalSettings/SettingsModal.tsx","views/Dex/components/DexNav/styles.ts","views/Dex/components/DexNav/index.tsx","state/tokenPrices/fetchPrices.ts","state/tokenPrices/api.ts","state/tokenPrices/index.ts","state/iazos/fetchIazosFromApi.ts","state/iazos/fetchIazoWeb3.ts","state/iazos/index.ts","views/Dex/components/RecentTransactions/index.tsx","components/Logo/CurrencyLogo.tsx","config/constants/maticTokenMapping.ts","state/user/hooks/helpers.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchPoolCalls.ts","state/pools/cleanPoolData.ts","state/pools/fetchPools.ts","state/pools/api.ts","state/pools/index.ts","state/jungleFarms/fetchJungleFarmUser.ts","state/jungleFarms/fetchJungleFarmCalls.ts","state/jungleFarms/cleanJungleFarmData.ts","state/jungleFarms/fetchJungleFarms.ts","state/jungleFarms/api.ts","state/jungleFarms/index.ts","components/TransactionConfirmationModal/index.tsx","hooks/useTotalSupply.ts","lib/state/multicall.tsx","utils/web3React.ts","state/network/fetchNetwork.ts","state/network/index.ts","config/index.ts","state/tokenPrices/hooks.ts","lib/hooks/useBlockNumber.tsx","utils/getContract.ts","components/Loader/Dots.tsx","utils/getProvider.ts","contexts/ThemeContext.tsx","state/vaults/fetchVaultsUser.ts","state/vaults/fetchVaultCalls.ts","state/vaults/cleanVaultData.ts","state/vaults/fetchVaults.ts","state/vaults/api.ts","state/vaults/index.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","hooks/Trades.ts","hooks/useActiveWeb3React.ts","utils/uriToHttp.ts","utils/isZero.ts","views/Dex/components/TokenSelector/styles.ts","utils/trades.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useTheme.ts","state/lpPrices/fetchLpPrices.ts","state/lpPrices/index.ts","state/toasts/index.ts","state/statsOverall/index.tsx","utils/wallet.ts","utils/truncateHash.ts","views/Topup/MoonFrame.tsx","views/Topup/MoonpayModal.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","hooks/useIsWindowVisible.ts","utils/getTokenUsdPrice.ts","hooks/useDebounce.ts","state/swap/actions.ts","views/Dex/components/MyPositions.tsx","utils/contenthashToUri.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","components/SearchModal/filtering.ts","components/PageLoader.tsx","state/farms/fetchFarmUser.ts","state/farms/fetchFarmCalls.ts","state/farms/cleanFarmData.ts","state/farms/fetchFarms.ts","state/farms/api.ts","state/farms/index.ts","hooks/useWrapCallback.ts","state/mint/actions.ts","utils/getRpcUrl.ts","state/user/hooks/useUserAddedTokens.ts","views/Dex/AddLiquidity/styles.ts","views/Dex/AddLiquidity/components/styles.ts","views/Dex/AddLiquidity/components/AddLiquiditySign.tsx","views/Dex/AddLiquidity/components/PoolInfo/styles.ts","views/Dex/AddLiquidity/components/PoolInfo/index.tsx","views/Dex/AddLiquidity/components/AddLiquidityModal/styles.ts","views/Dex/AddLiquidity/components/AddLiquidityModal/index.tsx","views/Dex/AddLiquidity/components/Actions/styles.ts","views/Dex/AddLiquidity/components/Actions/index.tsx","views/Dex/AddLiquidity/index.tsx","config/constants/index.ts","config/constants/meta.ts","components/layout/Page.tsx","state/actions.ts","contexts/SwiperProvider.tsx","utils/maxAmountSpend.ts","components/Menu/constants.ts","state/block/hooks.ts","hooks/useInterval.ts","components/Logo/Logo.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","contexts/RefreshContext.tsx","state/block/index.ts","hooks/useSelectNetwork.ts","hooks/useHttpLocations.ts","components/SearchModal/ImportToken.tsx","state/burn/actions.ts","hooks/useSwapCallback.ts","hooks/useCallWithGasPrice.ts","state/mint/hooks.ts","state/auction/fetchAllAuctions.ts","state/auction/index.ts","state/nfas/fetchNfas.ts","state/nfas/index.ts","utils/multicall.ts","views/Dex/styles.ts","utils/index.ts","config/constants/types.ts","hooks/useIsMobile.ts","components/UnderlinedButton/UnderlinedButton.tsx","state/dualFarms/fetchDualFarmCalls.ts","state/dualFarms/cleanDualFarmData.ts","state/dualFarms/fetchDualFarms.ts","state/dualFarms/fetchDualFarmUser.ts","state/dualFarms/api.ts","state/dualFarms/index.ts","hooks/useSwiper.ts","state/bills/getBillNftData.ts","state/bills/fetchBillsUser.ts","state/bills/fetchBillsCalls.ts","state/bills/cleanBillsData.ts","state/bills/fetchBills.ts","state/bills/api.ts","state/bills/index.ts","config/constants/ifo.ts","hooks/useGoldenBanana.ts","state/user/actions.ts","hooks/useApproveTransaction.ts","components/CurrencyInputPanel/NumericalInput.tsx","components/Logo/DoubleLogo.tsx","views/Dex/Orders/components/styles.ts","hooks/api.ts","utils/roundNumber.ts","components/MarketingModalContent/Bills/BillsDiagram.tsx","state/user/hooks/index.tsx","components/layout/Container.tsx","hooks/useParsedQueryString.ts","config/constants/chains.ts","views/Dex/Swap/components/ImportTokenWarningModal.tsx","hooks/useGetWalletNfts.ts","views/Nft/contexts/NftProvider.tsx","state/protocolDashboard/api.ts","state/protocolDashboard/index.ts","config/constants/contracts.ts","utils/addressHelper.ts","hooks/Tokens.ts","components/Logo/ListLogo.tsx","config/constants/lists.ts","hooks/useAddress.ts","state/swap/reducer.ts","state/orders/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/lists/reducer.ts","state/transactions/reducer.ts","state/burn/reducer.ts","state/mint/reducer.ts","state/reducer.ts","state/index.ts","utils/wrappedCurrency.ts","hooks/useContract.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/lists/hooks.ts","lib/hooks/multicall.ts","utils/formatBalance.ts","components/layout/Row.tsx","hooks/useEagerConnect.ts","components/MarketingModalContent/styles.ts","components/MarketingModalContent/MarketingModalContent.tsx","components/MarketingModalContent/Lending/index.ts","components/MarketingModalContent/Lending/LendingBody1.tsx","components/MarketingModalContent/Lending/LendingBody2.tsx","components/MarketingModalContent/Lending/LendingBody3.tsx","components/MarketingModalContent/Lending/LendingBody4.tsx","components/MarketingModalContent/Lending/LendingBody5.tsx","components/MarketingModalContent/Farms/index.ts","components/MarketingModalContent/Farms/FarmsBody1.tsx","components/MarketingModalContent/Farms/FarmsBody2.tsx","components/MarketingModalContent/Farms/FarmsBody3.tsx","components/MarketingModalContent/Farms/FarmsBody4.tsx","components/MarketingModalContent/Pools/index.ts","components/MarketingModalContent/Pools/PoolsBody1.tsx","components/MarketingModalContent/Pools/PoolsBody2.tsx","components/MarketingModalContent/Pools/PoolsBody3.tsx","components/MarketingModalContent/Pools/PoolsBody4.tsx","components/MarketingModalContent/Bills/index.ts","components/MarketingModalContent/Bills/BillsBody1.tsx","components/MarketingModalContent/Quests/styles.ts","components/MarketingModalContent/Quests/slides/QuestSlide1.tsx","components/MarketingModalContent/Quests/slides/QuestSlide2.tsx","components/MarketingModalContent/Quests/slides/QuestSlide3.tsx","components/MarketingModalContent/Quests/slides/QuestSlide4.tsx","components/MarketingModalContent/Quests/slides/index.tsx","components/MarketingModalContent/Quests/MarketingSwipper.tsx","components/MarketingModalContent/Quests/CardView.tsx","components/MarketingModalContent/Quests/QuestModal.tsx","components/GnanaModal/styles.ts","components/GnanaModal/Gnana.tsx","components/GnanaModal/index.tsx","components/MarketingModalCheck/MarketingModalCheck.tsx","style/Global.tsx","components/Menu/chains/bscConfig.ts","components/Menu/chains/flareConfig.ts","components/Menu/chains/costonConfig.ts","components/Menu/chains/songbirdConfig.ts","components/Menu/chains/maticConfig.ts","components/Menu/chains/ethConfig.ts","components/Menu/chains/iframeConfig.ts","components/Menu/index.tsx","components/ToastListener/index.tsx","components/PositionCard/styles.ts","components/PositionCard/index.tsx","views/Dex/Pool/styles.ts","views/Dex/Pool/index.tsx","views/Dex/Swap/components/styles.ts","views/Dex/Swap/components/SwapModalHeader.tsx","views/Dex/components/FormattedPriceImpact.tsx","views/Dex/Swap/components/DexTradeInfo/styles.ts","views/Dex/Swap/components/DexTradeInfo/TradePrice.tsx","views/Dex/Swap/components/DexTradeInfo/index.tsx","views/Dex/Swap/components/SwapModalFooter.tsx","views/Dex/Swap/components/ConfirmSwapModal.tsx","views/Dex/Swap/components/SwapSwitchButton.tsx","views/Dex/Swap/components/DexActions/styles.ts","views/Dex/Swap/components/DexActions/index.tsx","views/Dex/Swap/components/LoadingBestRoute.tsx","views/Dex/Swap/components/AddressInputPanel.tsx","views/Dex/Swap/components/ExpertModeRecipient.tsx","views/Dex/Swap/index.tsx","views/Dex/Swap/components/confirmPriceImpactWithoutFee.ts","state/burn/hooks.ts","views/Dex/RemoveLiquidity/components/PoolInfo/styles.ts","views/Dex/RemoveLiquidity/components/PoolInfo/index.tsx","views/Dex/RemoveLiquidity/components/RemoveLiquidityModal/styles.ts","views/Dex/RemoveLiquidity/components/RemoveLiquidityModal/index.tsx","views/Dex/RemoveLiquidity/components/Actions/styles.ts","views/Dex/RemoveLiquidity/components/Actions/index.tsx","views/Dex/RemoveLiquidity/index.tsx","views/Dex/PoolFinder/index.tsx","components/Links/index.tsx","views/Dex/PoolFinder/styles.ts","utils/resetScroll.ts","App.tsx","components/Blocklist/index.tsx","Providers.tsx","state/lists/updater.ts","state/transactions/updater.tsx","index.tsx"],"names":["Column","styled","div","ColumnCenter","AutoColumn","gap","justify","Field","selectCurrency","createAction","switchCurrencies","typeInput","replaceSwapState","setRecipient","MainBody","Description","theme","mediaQueries","sm","md","StyledText","Text","StyledAnchor","a","TextButton","colors","yellow","Hiw","text","MainContentBody","xl","Surround","isDark","Content","RightContent","RightHeader","RightText","InnerTextButton","ERC20_INTERFACE","Interface","ERC20_ABI","ERC20_BYTES32_ABI","useTokenBalancesWithLoadingIndicator","address","tokens","validatedTokens","useMemo","filter","t","isAddress","validatedTokenAddresses","map","vt","balances","useMultipleContractSingleData","anyLoading","some","callState","loading","length","reduce","memo","token","i","value","result","amount","JSBI","BigInt","toString","undefined","TokenAmount","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","currency","Token","containsBNB","ETHER","ethBalance","uncheckedAddresses","multicallContract","useInterfaceMulticall","addresses","orderBy","results","useSingleContractMultipleData","CurrencyAmount","ether","useETHBalances","useCurrencyBalance","useAllTokenBalances","useWeb3React","allTokens","useAllTokens","Object","values","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","ONE_HUNDRED_PERCENT","Percent","computeTradePriceBreakdown","chainId","smartRouter","trade","realizedLPFee","subtract","route","pairs","currentFee","multiply","baseFee","SMART_LP_FEES","getInputFractionAfterFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","raw","quotient","computeLegacyPriceBreakdown","inputFractionAfterFee","computeSlippageAdjustedAmounts","allowedSlippage","pct","basisPointsToPercent","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","getFarmLpAprs","fetch","apiBaseUrl","response","json","farmLpAprs","statusCode","getHomepageLaunchCalendar","baseUrlStrapi","launchRes","getHomepageNews","newsRes","getHomepageServiceStats","serviceResp","getHomepageStats","statRes","getHomepageTokenStats","category","tokenRes","getStats","fetchIfoStatusFromApi","axios","get","liveIfoResult","res","data","settings","console","error","fetchTagsFromApi","tagResult","tags","fetchOrderingFromApi","orderResult","ordering","statsSlice","createSlice","name","initialState","isInitialized","isLoading","HomepageData","HomepageTokenStats","HomepageNews","HomepageLaunchCalendar","HomepageServiceStats","FarmLpAprs","Tags","Ordering","LiveIfo","reducers","statsFetchStart","state","statsFetchSucceeded","action","payload","statsFetchFailed","setHomepageStats","setHomepageTokenStats","setHomepageNews","setHomepageLaunchCalendar","setHomepageServiceStats","setFarmLpAprs","fetchLiveIfoStart","fetchLiveIfoSuccess","fetchLiveIfoFailure","fetchTags","fetchOrdering","actions","fetchHomepageData","dispatch","homepageStats","fetchHomepageTokenData","homepageTokenStats","fetchHomepageNews","homepageNews","fetchHomepageLaunchCalendar","homepageLaunchCalendar","fetchHomepageService","homepageServiceStats","fetchFarmLpAprs","fetchLiveIfoStatus","fetchIfoStatus","liveStatus","fetchLiveTags","fetchLiveOrdering","useNetworkChainId","useSelector","network","useUpdateNetwork","useAppDispatch","useActiveWeb3React","appChainId","chainIdFromUrl","switchNetwork","useSwitchNetwork","useEffect","fetchUserNetwork","setVaultsLoad","useToast","push","toast","pushToast","toastError","description","id","title","type","toastTypes","ERROR","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","DANGER","remove","removeToast","clear","clearToast","useFetchProfile","useFetchNfas","ChainId","BSC","nfas","useNfas","fetchProfile","useProfile","profile","hasProfile","useFetchHomepageStats","isFetching","useHomepageStats","stats","useFetchHomepageServiceStats","useHomepageServiceStats","useFetchHomepageTokenStats","useHomepageTokenStats","useFetchFarmLpAprs","useFarmLpAprs","useFetchHomepageNews","useHomepageLaunchCalendar","useFetchHomepageLaunchCalendar","useHomepageNews","useFetchAuctions","BSC_TESTNET","fetchAuctions","useAuctions","auctions","useFetchIazoSettings","useFetchTokenPrices","fetchSettings","useFetchIazos","fetchIazos","useFetchIazo","fetchIazo","useIazos","iazos","iazoData","useIazoSettings","iazoDefaultSettings","nafFlag","fetchAllNfas","useLpTokenPrices","lpTokenPrices","useTokenPriceFromSymbol","symbol","tokenPrices","find","price","useFetchLiveIfoStatus","useLiveIfoStatus","liveIfos","useFetchLiveTagsAndOrdering","PairState","PAIR_INTERFACE","IUniswapV2PairABI","usePairs","currencyA","currencyB","wrappedCurrency","pairAddresses","tokenA","tokenB","equals","Pair","getAddress","SmartRouter","APE","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","useAllSmartPairs","PRIORITY_SMART_ROUTERS","flatMap","chunkedResults","chunk","chunkedResult","j","usePair","useFindBestRoute","useSwapActionHandlers","onSetSwapDelay","onBestRoute","useSwapState","recipient","swapDelay","independentField","typedValue","bestRoute","inputCurrencyId","currencyId","outputCurrencyId","useUserSlippageTolerance","inputCurrency","useCurrency","outputCurrency","isExactIn","parsedAmount","tryParseAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currentSmartRouter","router","currentRouterType","RouterTypes","SMART","routerType","swapCalls","useSwapCallArguments","SwapDelay","SWAP_COMPLETE","contract","parameters","methodName","args","FETCHING_BONUS","encodedData","interface","encodeFunctionData","activeAccount","WALLCHAIN_PARAMS","apiUrl","apiKey","method","headers","body","JSON","stringify","sender","destination","then","ok","status","statusText","SWAP_REFRESH","responseJson","dataResonse","contractAddress","pathFound","transactionArgs","toLowerCase","wallchainResponseIsValid","BONUS","bonusRouter","catch","callWallchainAPI","swap","timer","useRef","useCallback","setSwapDelay","onSwitchTokens","USER_INPUT_COMPLETE","onUserInput","field","USER_INPUT","clearTimeout","current","setTimeout","INIT","onCurrencySelection","onChangeRecipient","setBestRoute","typedValueParsed","parseUnits","decimals","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","pair","liquidityToken","useDerivedSwapInfo","useTranslation","useAllCommonPairs","inputError","recipientLookup","useENS","to","relevantTokenBalances","currencyBalances","formattedTo","indexOf","slippageAdjustedAmounts","balanceIn","amountIn","getSymbol","v1Trade","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","chainAddress","contracts","banana","test","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useDispatch","useParsedQueryString","parsed","useTransactionAdder","summary","approval","claim","hash","Error","addTransaction","from","useAllTransactions","s","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","allTransactions","keys","receipt","track","event","chain","dataLayer","calculateBananaEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","rewardTokenPrice","finalAmount","Math","round","apyModalRoi","amountEarned","amountInvested","toFixed","tokenEarnedPerThousandDollarsCompounding","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","amountDollar","timesCompounded","aprAsDecimal","tokenEarnedPerThousandDollarsCompoundingMax","bananaPoolApr","bananaAprAsDecimal","finalValue","getRoi","getPoolApr","stakingTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","BigNumber","times","BLOCKS_PER_YEAR","totalStakingTokenInPool","apr","isFinite","toNumber","getDualFarmApr","poolLiquidityUsd","miniChefRewardTokenPrice","miniChefTokensPerSecond","rewarerdTokenPrice","rewarderTokensPerSecond","totalRewarderRewardPricePerYear","SECONDS_PER_YEAR","plus","getFarmApr","poolWeight","bananaPriceUsd","BANANA_PER_YEAR","EN","locale","language","code","languages","languageList","clearAllTransactions","finalizeTransaction","checkedTransaction","TokenSelector","onCurrencySelect","otherCurrency","isRemoveLiquidity","disableTokenSelect","showCommonBases","handleDynamicCurrencySelect","selectedCurrency","useModal","CurrencySearchModal","otherSelectedCurrency","onPresentCurrencyModal","sx","styles","primaryFlex","cursor","transform","background","size","width","height","animation","variant","tokenText","currency0","currency1","onClick","icon","React","dexPanelContainer","position","padding","borderRadius","justifyContent","flexDirection","panelTopContainer","panelBottomContainer","panelBottomText","opacity","swapDirectionText","left","top","maxButton","alignItems","fontSize","fontWeight","ml","transition","buttonHover","DexPanel","handleMaxInput","setTradeValueUsd","fieldType","panelText","lpPair","disabled","ordersDisabled","useState","usdVal","setUsdVal","selectedCurrencyBalance","currencyBalance","toSignificant","getCurrencyUsdPrice","NumericalInput","val","removeLiquidity","align","disabledText","balance","Dots","MintField","CURRENCY_A","CURRENCY_B","color","lineHeight","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","large","table","marginTop","minWidth","fetchPoolsBlockLimits","nfaStakingPoolsConfig","nfaStakingPool","sousId","startBlock","fetchPoolsTotalStatking","nfaAddress","getNonFungibleApesAddress","calls","poolConfig","params","CHAIN_ID","multicall","nonFungibleApesAbi","nfaStakingPoolTotalStaked","p","index","toJSON","fetchPoolTokenStatsAndApr","totalStakingList","mappedValues","pool","curPool","rewardToken","totalStake","getBalanceNumber","fetchPoolsAllowance","nfaStakingPools","nfaAbi","allowances","acc","fetchUserBalances","tokenBalancesRaw","fetchUserStakeBalances","nfaStakingPoolsAbi","userInfo","stakedBalances","_hex","fetchUserPendingRewards","pendingRewards","fetchUserStakedNfas","stakedNfas","item","tries","cacheNfaStakingPools","fetchNfaStakingConfig","axiosRetry","retries","retryCondition","apeswapListUrl","nfaStakingPoolsConfigResp","NfaStakingPoolsSlice","setInitialNfaStakingData","setNfaStakingPoolsPublicData","liveNfaStakingPoolsData","liveNfaStakingPoolData","entry","setNfaStakingPoolsUserData","userData","userPoolData","updateNfaStakingPoolsUserData","findIndex","setInitialNfaStakingDataAsync","initialNfaStakingState","fetchNfaStakingPoolsPublicDataAsync","getState","blockLimits","totalStakings","tokenStatsAndAprs","Promise","all","blockLimit","totalStaking","tokenStatsAndApr","liveData","fetchNfaStakingPoolsUserDataAsync","stakingTokenBalances","allowance","stakingTokenBalance","stakedBalance","pendingReward","updateNfaStakingUserAllowance","updateNfaStakingUserBalance","updateUserNfaStakingStakedBalance","updateUserNfaStakingPendingReward","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","localStorageKey","NoEthereumProviderError","NoBscProviderError","url","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","info","profileClear","getItem","walletconnect","close","getProfile","nfaContract","getContract","nfaABI","nfbAddress","getNonFungibleBananasAddress","nfbContract","nfbABI","balanceOf","nfasOwned","nfbsOwned","ownedNfts","rarestNft","eq","promises","tokenOfOwnerByIndex","Number","nfaReturn","setItem","avatar","image","nfbReturn","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","SlippageError","DeadlineError","inputRegex","RegExp","StyledInput","Input","SelectButton","Flex","SlippageTabs","slippageError","deadlineError","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","ttl","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","escapeRegExp","valueAsIntFromRoundedFloat","parseInt","parseCustomDeadline","valueAsInt","mb","weight","flexWrap","inputMode","pattern","placeholder","onBlur","onChange","currentTarget","validity","target","replace","isWarning","style","right","mt","margin","borderColor","textAlign","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","useExpertModeManager","toggleExpertMode","isRememberChecked","setIsRememberChecked","zIndex","maxWidth","onDismiss","checked","scale","userSelect","fullWidth","prompt","UnderlinedButton","handleClick","switch","backgroundColor","ScrollableContainer","SettingsModal","showConfirmExpertModal","useUserExpertModeAcknowledgementShow","showExpertModeAcknowledgement","expertMode","useUserSingleHopOnly","singleHopOnly","setSingleHopOnly","useUserRecentTransactions","recentTransactions","setRecentTransactions","useUserAutonomyPrepay","autonomyPrepay","setAutonomyPrepay","as","Link","href","TransactionSettings","dexNavContainer","navLinkContainer","paddingRight","navIconContainer","underline","display","navLink","textUnderlineHover","DexNav","pathname","useHistory","location","onLiquidity","includes","onPresentSettingsModal","onPresentModal","mr","className","marginRight","mini","runFiat","fetchPrices","apePriceGetterAddress","getApePriceGetterAddress","tokensToCall","fromEntries","entries","erc20Calls","erc20ABI","tokenDecimals","lpToken","apePriceGetterABI","mappedTokenPrices","cacheTokens","fetchTokenPriceConfig","tokenPriceConfigResp","tokenPricesSlice","isTokensInitialized","bananaPrice","tokenPricesFetchStart","setBananaPrice","setIntialTokens","tokenPricesFetchSucceeded","tokenPricesFetchFailed","setInitialTokensDataAsync","initialTokensState","fetchTokenPrices","fetchBananaPrice","getTokenUsdPrice","getBananaAddress","getIazosFromApi","getIazoFromApi","formatIazoData","iazo","iazoSocialInfo","twitter","telegram","medium","whitepaper","website","tokenImage","pathImage","timeInfo","startTime","startDate","activeTime","duration","lockPeriod","lockTime","baseToken","token2","iazoToken","totalSupply","iazoContractAddress","iazoAddress","iazoOwnerAddress","owner","pricePresale","totalPresale","hardcap","softcap","maxSpendPerBuyer","limitDefault","liquidityPercent","percentageLock","listingPrice","priceListing","burnRemain","burnRemaining","iazoTags","iazoState","feeInfo","feeAddress","iazoTokenFee","lpGenerationComplete","forceFailed","totalBaseCollected","totalTokensSold","totalTokensWithdraw","totalBaseWithdraw","numBuyers","socialInfo","fetchIazosFromApi","formattedIazos","fetchIazoFromApi","fetchIazoDefaultSettings","iazoSettingsAddress","getIazoSettingsAddress","iazoSettingsAbi","fetchIazoDefaultSetting","fetchIazoDelaySetting","iazoDelaySettings","iazoDefaultSettingsData","adminAddress","burnAddress","maxBaseFee","maxIazoTokenFee","nativeCreationFee","minIazoLength","maxIazoLength","minLockPeriod","fetchIazoTokenDetails","iazoTokenAddress","baseTokenAddress","erc20Abi","baseTokenName","baseTokenSymbol","baseTokenDecimals","iazoTokenName","iazoTokenSymbol","iazoTokenDecimals","iazoTokenTotalSupply","baseTokenData","iazoTokenData","fetchIazoStatusInfo","iazoStates","iazoAbi","iazoInfo","feeInfoData","iazoStatusData","isRegisteredIazoCheck","iazoExposerAddress","getIazoExposerAddress","iazoExposerABI","resp","isRegistered","iazosSlice","iazosFetchStart","iazosFetchSucceeded","liveIazosData","singleFlag","liveIazoData","iazosFetchFailed","updateIazoWeb3Data","isRegestered","iazoTokenDetails","iazoStatusInfo","renderIcon","spin","RecentTransactions","sortedTransactions","dexStyles","dexContainer","columns","getEtherscanLink","rel","getTokenLogoURL","MATIC","uri","getMaticTokenLogoURL","StyledLogo","Logo","StyledNativeCurrencyLogo","img","CurrencyLogo","uriLocations","useHttpLocations","WrappedTokenInfo","logoURI","srcs","MATIC_TESTNET","src","MAINNET","alt","GAS_PRICE","serializeToken","deserializeToken","serializedToken","GAS_PRICE_GWEI","default","instant","testnet","poolsConfig","nonBnbPools","stakingToken","QuoteToken","BNB","nonMasterPools","masterChefAddress","getMasterChefAddress","masterChefContract","masterChefABI","sousChefABI","masterPoolAmount","pendingCake","fetchPoolCalls","standardCalls","bananaCall","gnanaCall","reflect","cleanPoolData","poolIds","chunkedPools","endBlock","totalStakedFormatted","bonusEndBlock","fetchPools","poolCalls","bananaABI","vals","formattedVals","chunkSize","cachePools","fetchPoolConfig","poolConfigResp","PoolsSlice","setInitialPoolData","setPoolsPublicData","livePoolsData","livePoolData","setPoolsUserData","updatePoolsUserData","setInitialPoolDataAsync","initialPoolState","fetchPoolsPublicDataAsync","pools","warn","fetchPoolsUserDataAsync","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchJungleFarmsAllowance","jungleFarmsConfig","f","farm","jungleId","jungleChefABI","fetchJungleFarmCalls","fetchJungleFarmTokenStatsAndApr","curFarm","cleanJungleFarmData","farmIds","chunkedFarms","farmConfig","fetchJungleFarms","farmCalls","cacheJungleFarms","fetchJungleFarmConfig","jungleFarmConfigResp","JungleFarmsSlice","setInitialJungleFarmData","setJungleFarmsPublicData","liveJungleFarmsData","liveFarmData","setJungleFarmsUserData","userFarmData","updateJungleFarmsUserData","setInitialJungleFarmDataAsync","initialJungleFarmState","fetchJungleFarmsPublicDataAsync","jungleFarms","farms","fetchJungleFarmsUserDataAsync","updateJungleFarmsUserAllowance","updateJungleFarmsUserPendingReward","Wrapper","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","library","strokeWidth","external","small","provider","isMetaMask","registerToken","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","useTotalSupply","useTokenContract","useSingleCallResult","createMulticall","reducer","combineReducers","reducerPath","createStore","MulticallUpdater","currentBlock","useBlockNumber","listenerOptions","blocksPerFetch","Updater","latestBlockNumber","injected","InjectedConnector","supportedChainIds","FLARE","COSTON","SONGBIRD","rpc","getRpcUrl","bridge","qrcode","pollingInterval","bscConnector","BscConnector","torus","TorusConnector","initOptions","host","walletlink","WalletLinkConnector","appName","darkMode","appLogoUrl","uauth","UAuthConnector","UAuth","clientID","process","redirectUri","scope","connectors","ConnectorNames","Injected","WalletConnect","Walletlink","Torus","Unstoppable","getLibrary","Web3Provider","fetchAndUpdateNetwork","web3ChainId","search","chainStr","URLSearchParams","removeChainParamUrl","split","history","pushState","document","localStorageChain","NETWORK_LABEL","chainIdSafeCheck","networkSlice","networkFetchStart","networkFetchSucceeded","networkFetchFailed","setNetwork","setChainIdFromUrl","fetchChainIdFromUrl","updatedChainIdFromUrl","config","EXPONENTIAL_AT","DECIMAL_PLACES","BANANA_PER_BLOCK","BSC_BLOCK_TIME","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","ZERO_ADDRESS","ZERO","useTokenPrices","useFetchBananaPrice","useBananaPrice","usePriceBananaBusd","usePriceBnbBusd","usePriceGnanaBusd","MISSING_PROVIDER","Symbol","BlockNumberContext","createContext","useBlockNumberContext","blockNumber","BlockNumberProvider","children","activeChainId","block","setChainBlock","onBlock","chainBlock","windowVisible","useIsWindowVisible","getBlockNumber","on","removeListener","fastForward","Provider","abi","signer","getProvider","signerOrProvider","ethers","Contract","span","activeWeb3Instance","RPC_URL","providers","JsonRpcProvider","CACHE_KEY","ThemeContext","toggleTheme","ThemeContextProvider","isDarkUserSetting","parse","setIsDark","prevState","dark","light","Apeswap","fetchVaultUserAllowances","vaultsConfig","vaultApeAddressV1","getVaultApeAddressV1","vaultApeAddressV2","getVaultApeAddressV2","filteredVaults","vault","availableChains","stakeToken","version","rawStakeAllowances","parsedStakeAllowances","stakeBalance","fetchVaultUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchVaultUserStakedAndPendingBalances","pid","vaultApeV1ABI","vaultApeV2ABI","rawStakedBalances","parsedStakedBalances","parsePendingBalances","fetchVaultCalls","stratAddress","masterchef","masterchefCalls","bananaPoolCalls","cleanVaultData","vaultIds","chunkedVaults","vaultSettings","keeperFee","withdrawFee","vaultConfig","totalAllocPoint","poolInfo","stakeTokenMCBalance","bananaPoolInfo","bananaPoolTotalStaked","rewardTokenPriceUsd","stakeTokenPriceUsd","allocPoint","strategyPairBalance","totalTokensStaked","totalValueStakedInMCUsd","bananaPoolAllocPoint","bananaPoolWeight","totalBananaValueStakedInMCUsd","lpApr","lpAprs","lp","oneThousandDollarsWorthOfToken","yearlyApy","dailyApy","amountEarnedYealry","amountEarnedDaily","fee","strategyPairBalanceFixed","stakeTokenPrice","masterChefPairBalance","apy","daily","yearly","fetchVaults","masterVaultApev2","vaultCalls","masterchefABI","erc20","getSettings","cacheVaults","fetchVaultConfig","vaultConfigResp","vaultSlice","loadVaultData","userDataLoaded","setInitialVaultData","setLoadVaultData","liveVaultsData","liveVaultData","setVaultUserData","userVaultData","updateVaultsUserData","v","setInitialVaultDataAsync","initialVaultState","fetchVaultsPublicDataAsync","vaults","fetchVaultUserDataAsync","userVaultAllowances","userVaultTokenBalances","userVaultBalances","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","useENSRegistrarContract","resolverAddress","resolverAddressResult","resolverContract","useENSResolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","base","otherBase","allPairCombinations","Boolean","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","currPair","curr","currencyAmountIn","currencyOut","allowedPairs","bestTradeSoFar","bestApeTradeSoFar","currentSingleHopTrade","Trade","maxHops","maxNumResults","isTradeBetter","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","APE_PRICE_IMPACT","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","web3React","appProvider","currChainId","refChainId","refEth","setProvider","uriToHttp","match","hexNumberString","textTransform","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","outputAmount","equalTo","executionPrice","add","LS_KEY","fetchLocale","getLanguageCodeFromLS","currentLanguage","languageMap","Map","set","translations","LanguageContext","LanguageProvider","codeFromStorage","setState","fetchInitialLocales","enLocale","currentLocale","setLanguage","has","translate","key","translatedText","interpolatedText","forEach","dataKey","templateKey","languageContext","useTheme","useColorMode","setColorMode","StyledThemeCopntext","fetchLpPrices","farmsConfig","lpAddresses","lpSymbol","lpTokenPricesSlice","lpTokenPricesFetchStart","lpTokenPricesFetchSucceeded","lpTokenPricesFetchFailed","fetchLpTokenPrices","toastsSlice","toastIndex","splice","unshift","statsOverallSlice","statsOverallFetchStart","statsOverallFetchSucceeded","statsOverallFetchFailed","ethereum","request","CHAIN_PARAMS","tokenSymbol","options","tokenAdded","truncateHash","startLength","endLength","substring","StyledIframe","Iframe","lg","MoonPayIframe","useMoonPayUrl","scrolling","allow","MoonPayModal","overflowY","maxHeight","useTransactionDeadline","user","userDeadline","blockTimestamp","useContract","multi","mulltiCallV3","useCurrentBlockTimestamp","isVisibilityStateSupported","isWindowVisible","visibilityState","focused","setFocused","listener","addEventListener","removeEventListener","tokenDecimal","isNative","priceGetterAddress","nativeTokenAddress","getNativeWrappedAddress","call","filterPrice","store","getSmartPriceGetter","delay","debouncedValue","setDebouncedValue","handler","MyPositions","direction","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","startsWith","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","urls","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","useFetchListCallback","ensResolver","sendDispatch","requestId","nanoid","tokenList","errorMessage","filterTokens","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","every","sp","endsWith","createFilterToken","useSortedTokensByQuery","searchQuery","symbolMatch","bananaToken","exactMatches","symbolSubstrings","rest","Page","PageLoader","fetchFarmUserAllowances","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","fetchFarmUserStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","fetchFarmCalls","lpAdress","tokenAddresses","quoteTokenAdresses","cleanFarmData","lpPrices","alloc","multiplier","filteredLpPrice","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","quoteTokenDecimals","lpTokenRatio","totalLpStaked","pow","lpTotalInQuoteToken","totalInQuoteToken","tokenAmount","quoteTokenAmount","totalLpStakedUsd","tokenPriceVsQuote","lpValueUsd","fetchFarms","cacheFarms","fetchFarmConfig","farmConfigResp","farmsSlice","setInitialFarmData","setFarmsPublicData","liveFarmsData","setFarmUserData","arrayOfUserDataObjects","userDataEl","updateFarmUserData","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","_","setInitialFarmDataAsync","initialFarmState","updateFarmUserAllowances","updateFarmUserEarnings","WrapType","NOT_APPLICABLE","wrapType","useWrapCallback","callWithGasPrice","useCallWithGasPrice","wethContract","useWETHContract","sufficientBalance","WETH","WRAP","execute","txReceipt","UNWRAP","resetMintState","getNodeUrl","randomIndex","random","NETWORK_RPC","useUserAddedTokens","serializedTokensMap","marginBottom","AddLiquiditySign","PoolInfo","noLiquidity","poolTokenPercentage","liquidityMinted","textWrap","ONE_BIPS","invert","modalWrapper","swapSwitchButton","confirmDisabledInputContainer","outerLogoCircle","innerLogoCircle","AddLiquidityModal","parsedAmounts","txHash","onAdd","AddLiquidityActions","tradeValueUsd","setAttemptingTxn","setTxHash","addIsUnsupported","deadline","useIsExpertMode","useApproveCallback","parseAddress","ROUTER_ADDRESS","approvalA","approveACallback","approvalB","approveBCallback","getRouterContract","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","tokenBIsETH","estimate","estimateGas","addLiquidityETH","toHexString","addLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","token1Amount","token2Amount","cat","err","handleDismissConfirmation","onPresentAddLiquidityModal","ApprovalState","NOT_APPROVED","PENDING","APPROVED","load","renderAction","AddLiquidity","currencyIdA","currencyIdB","useMintState","otherTypedValue","useDerivedMintInfo","dependentField","useMintActionHandlers","handleCurrencySelect","newCurrencyId","formattedAmounts","maxAmounts","accumulator","maxAmountSpend","toExact","pageContainer","NetworkContextName","BIG_INT_ZERO","WRAPPED_NATIVE_ONLY","MIN_BNB","exponentiate","DAI","USDC","USDT","AMPL","WBTC","USD","BTCB","BANANA","FRM","FRMX","TEL","SUSHI","AAVE","FRAX","FXS","BIPS_BASE","PINNED_PAIRS","BASES_TO_TRACK_LIQUIDITY_FOR","BTC","SUGGESTED_BASES","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","SHOW_DEFAULT_MODAL_KEY","SET_DEFAULT_MODAL_KEY","DEFAULT_META","customMeta","StyledPage","Container","PageMeta","useLocation","pageMeta","property","SwiperContext","SwiperProvider","swiper","setSwiper","destroySwiper","destroy","currencyAmount","greaterThan","usePollBlockNumber","refreshTime","useInterval","fetchBlock","setBlock","useBlock","callback","leading","savedCallback","tick","setInterval","clearInterval","BAD_SRCS","refresh","onError","wrapper","CommonBases","onSelect","disable","Currency","getNativeCurrencySymbol","selected","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","success","NameOverflow","ImportRow","showImportView","setImportToken","inactiveTokenList","useCombinedInactiveList","list","extendedLogo","EXTENDED_LIST_DETAILS","logo","extendedName","isAdded","useIsUserAddedToken","isActive","useIsTokenActive","currencyKey","StyledBalanceText","FixedContentRow","CustomFixedList","FixedSizeList","Balance","CurrencyRow","isSelected","otherSelected","selectedTokenList","useCombinedActiveList","isOnSelectedList","isTokenOnList","customAdded","addToMetaMask","tokenInfo","getName","justifySelf","CurrencyList","inactiveCurrencies","fixedListRef","showETH","breakIndex","itemData","formatted","slice","Row","showImport","itemKey","ref","itemCount","itemSize","useTokenComparator","inverted","comparator","balanceA","balanceB","balanceComp","getTokenComparator","CurrencyModalView","white3","gray","CurrencySearch","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","useToken","searchTokenIsAdded","filteredTokens","filterToken","filteredQueryTokens","tokenComparator","filteredSortedTokens","sort","handleInput","input","checksummedInput","scrollTo","handleEnter","e","filteredInactiveTokens","minResults","lists","useAllLists","inactiveUrls","useInactiveListUrls","activeTokens","addressSet","trimmedSearchQuery","tagId","x","wrapped","useSearchInactiveTokenLists","hasFilteredInactiveTokens","getCurrencyListRows","autoComplete","onKeyDown","autoFocus","RowWrapper","active","white2","listUrlRowHTMLId","ListRow","setListUrl","setModalView","setImportList","listsByUrl","byUrl","extendedWarning","warning","extendedChainId","useIsListActive","handleEnableList","handleDisableList","flex","bold","importList","ListContainer","ManageLists","listUrlInput","setListUrlInput","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","UNSUPPORTED_LIST_URLS","u1","u2","l1","l2","keyword","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","textOverflow","overflow","paddingTop","marginLeft","Footer","ManageTokens","inputRef","userAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","isAddressValid","importToken","Manage","showLists","setShowLists","labels","prev","TextDot","ImportList","listURL","onImport","confirmed","setConfirmed","adding","loadingRequestId","handleAddList","textDecoration","modalProps","modalView","alignSelf","ImportToken","manage","RefreshContextProvider","setSlow","setFast","interval","blockSlice","initialBlock","userChainId","formattedChainId","hexStripZeros","addToken","useAddUserToken","outline","startIcon","SwapCallbackState","SwapDelayState","recipientAddressOrName","executedSwap","recipientAddress","swapMethods","BonusRouter","swapCallParameters","parseSmartAddress","SMART_ROUTER_ADDRESS","masterInput","TradeType","EXACT_INPUT","Router","feeOnTransfer","useSwapCallback","VALID","gasEstimate","mul","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","el","ix","errorCalls","inputSymbol","outputSymbol","withRecipient","methodArgs","overrides","contractMethod","gasPrice","mint","onFieldAInput","onFieldBInput","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","wrappedCurrencyAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","tokenAmountA","tokenAmountB","getLiquidityMinted","fetchAuctionDetails","auctionContractAddress","auctionAbi","auctionDetails","fetchAllAuctions","getAuctionAddress","activeAuctionId","minIncrementAmount","minIncrementPercentage","auctionFeePercent","pushedAuctions","getAuctionCalls","Array","allAuctions","auctionData","auctionsRemovedCount","auction","seller","auctionId","nfa","nft","node","highestBidder","highestBid","timeExtension","timeLength","minToExtend","endTime","auctionsSlice","auctionsFetchStart","auctionsFetchSucceeded","auctionsFetchFailed","fetchNfas","nfaResp","nfaImageReplace","nfasFetchStart","nfasFetchSucceeded","nfasFetchFailed","multicallAddress","getMulticallAddress","multicallABI","itf","calldata","aggregate","returnData","decodeFunctionResult","bottom","transformOrigin","backfaceVisibility","minHeight","wordBreak","BLOCK_EXPLORER","num","slippage","divide","ABI","AddressZero","getSigner","connectUnchecked","getProviderOrSigner","BONUS_ROUTER_ADDRESS","apeRouterManagerABI","IUniswapV2Router02ABI","string","defaultTokens","PoolCategory","useIsMobile","useMatchBreakpoints","isXl","isLg","isXxl","StyledButton","Button","fetchDualFarmCalls","miniChefAddress","getMiniChefAddress","lpAddress","stakeTokenAddress","stakeTokens","quoteTokenAddress","rewarderAddress","cleanDualFarmData","dualFarms","miniChefPoolRewardPerSecond","dualFarmConfig","quoteToken","miniChefRewarderToken","rewardTokens","rewarderToken","quoteTokenBalanceLP","miniChefRewardsPerSecond","rewarderInfo","rewardsPerSecond","rewarderTotalAlloc","rewarderAllocPoint","rewarderPoolWeight","rewarderPoolRewardPerSecond","rewardToken0Price","rewardToken1Price","fetchDualFarms","miniApeV2","fetchDualFarmUserAllowances","fetchDualFarmUserTokenBalances","fetchDualFarmUserStakedBalances","miniChefABI","fetchDualMiniChefEarnings","fetchDualFarmRewarderEarnings","rewarderABI","cacheDualFarms","fetchDualFarmConfig","dualFarmConfigResp","dualFarmsSlice","setInitialDualFarmData","setDualFarmsPublicData","setDualFarmUserData","dualFarm","userDualFarmData","updateDualFarmUserData","setInitialDualFarmDataAsync","initialDualFarmState","fetchDualFarmsPublicDataAsync","fetchDualFarmUserDataAsync","miniChefEarnings","rewarderEarnings","updateDualFarmUserAllowances","pidIndex","updateDualFarmUserTokenBalances","updateDualFarmUserStakedBalances","updateDualFarmUserEarnings","updateDualFarmRewarderEarnings","useSwiper","swiperContext","getBillNftData","billNftId","billNftAddress","billNftDataResp","fetchBillsAllowance","bills","b","bill","fetchUserOwnedBillNftData","ownedBillsData","billNftData","fetchUserOwnedBills","billIdCalls","billAbi","billIds","billsPendingRewardCall","billDataCalls","idArray","gt","billData","pendingRewardsCall","billDataPos","payout","vesting","lastBlockTimestamp","truePricePaid","fetchBillsCalls","cleanBillsData","chunkedBills","billConfig","lpPrice","earnTokenPrice","earnToken","trueBillPrice","currentDebt","debtDecay","debtRatio","totalDebt","totalPayoutGiven","totalPrincipalBilled","billNft","terms","maxTotalPayout","controlVariable","vestingTerm","minimumPrice","maxPayout","maxDebt","priceUsd","discount","formatedPrice","getFirstNonZeroDigits","vestingTime","maxTotalPayOut","fetchBills","billCalls","billsABI","cacheBills","fetchBillsConfig","billConfigResp","billsSlice","setInitialBillsData","setBillsPublicData","liveBillsData","liveBillData","setBillsUserData","userBillData","setUserOwnedBillsData","userOwnedBillsData","userOwnedBills","setUserOwnedBillsNftData","userOwnedBillsNftData","userOwnedBillsNfts","updateBillsUserData","updateBillsUserNftData","setInitialBillsDataAsync","initialBillState","fetchBillsPublicDataAsync","returnedBills","fetchBillsUserDataAsync","fetchUserOwnedBillsDataAsync","mapUserOwnedBills","bs","userBillNftData","ownedBillsWithNftData","nftB","ifos","isLinear","subTitle","launchDate","launchTime","saleAmount","raiseAmount","projectSiteUrl","currencyAddress","offeringCurrency","releaseBlockNumber","totalAmountRaised","bananaToBurn","burnedTxUrl","pastIfos","ifo","buy","sell","useSellGoldenBanana","treasuryContract","useTreasury","handleSell","useBuyGoldenBanana","handleBuy","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserAutonomyPrepay","updateUserRecentTransactions","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","hidePhishingWarningBanner","setIsExchangeChartDisplayed","setUnlimitedGnana","approvalState","approvalReceipt","approvalError","useApproveTransaction","onApprove","onRequiresApproval","onSuccess","noop","useReducer","handlePreApprove","isApproving","isApproved","handleApprove","enforcer","nextUserInput","autoCorrect","minLength","maxLength","spellCheck","DoubleCurrencyLogo","swapSwitchContainer","SwapConfirmDisabledInputContainer","ErrorText","severity","moonPayBaseUrl","REACT_APP_MOONPAY_BASE_URL","REACT_APP_LISTS_CONFIG_URL","useGetNfaSales","sale","setSale","fetchData","responsedata","useGetNfaAuctionHistory","setHistory","defaultCurrencies","defaultCurrency","baseMoonPayUrl","setUrl","fetchUrl","getBurningGames","n","precision","floor","log","BillsDiagram","bgColor","white4","userExpertMode","toggleSetExpertMode","userSingleHopOnly","newSingleHopOnly","userAutonomyPrepay","newAutonomyPrepay","userRecentTransactions","newResentTransactions","userExpertModeAcknowledgementShow","showAcknowledgement","serializePair","usePairAdder","serializedPair","toV2LiquidityToken","useTrackedTokenPairs","pinnedPairs","generatedPairs","savedSerializedPairs","userPairs","forChain","pairId","combinedList","concat","keyed","sorted","useUserUnlimitedGnana","unlimitedGnana","allowUnlimitedGnana","parseArrays","ignoreQueryPrefix","NETWORK_INFO_LINK","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","SUSHISWAP","UNISWAP","PANCAKE","BISWAP","QUICKSWAP","SMART_PRICE_GETTERS","ImportTokenWarningModal","onCancel","nfts","useGetWalletNfts","nonFungibleApesContract","useNonFungibleApes","fetchNfts","tokenIdPromises","tokenIdsOwnedByWallet","accum","association","bunnyId","tokenId","tokenUri","tokenIds","NftProviderContext","NftProvider","isMounted","hasClaimed","startBlockNumber","endBlockNumber","nftList","useMulticallAddress","fetchContractData","canBurnNft","getTokenIds","reInitialize","getTreasuryBreakdown","getTreasuryAssetOverview","getTreasuryHistory","getOverviewTvl","getOverviewVolume","getOverviewProtocolMetrics","getOverviewMcapTvlRatio","getOverviewBananaDistribution","overviewTvl","overviewVolume","overviewProtocolMetrics","overviewBananaDistribution","overviewMcapTvlRatio","treasuryAssetOverview","treasuryHistory","treasuryBreakdown","setOverviewTvl","setOverviewVolume","setOverviewProtocolMetrics","setOverviewBananaDistribution","setOverviewMcapTvlRatio","setTreasuryAssetOverview","setTreasuryHistory","setTreasuryBreakdown","fetchOverviewTvl","fetchOverviewVolume","fetchOverviewProtocolMetrics","fetchOverviewBananaDistribution","fetchOverviewMcapTvlRatio","fetchTreasuryAssetOverview","fetchTreasuryHistory","fetchTreasuryBreakdown","syrup","masterChef","sousChef","nativeWrapped","lottery","lotteryNFT","mulltiCall","busd","wbnb","ust","usdt","bananaProfile","nonFungibleApes","nonFungibleBananas","rabbitMintingFarm","eth","claimRefund","goldenBanana","treasury","vaultApeV1","vaultApeV2","apePriceGetter","iazoFactoryProxy","iazoExposer","iazoSettings","useTokensFromMap","tokenMap","includeUserAdded","mapWithoutUrls","newMap","tokenMap_","useUnsupportedTokenList","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","tokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","isETH","StyledListLogo","ListLogo","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","currAddress","useAddress","curAddresses","setAddress","useBananaAddress","useGoldenBananaAddress","useTreasuryAddress","useMasterChefAddress","useMulticallV3Address","useNativeWrapCurrencyAddress","useBananaProfileAddress","useNonFungibleApesAddress","useAuctionAddress","useApePriceGetterAddress","useVaultApeAddressV1","useVaultApeAddressV2","useMiniChefAddress","useIazoExposerAddress","useIazoSettingsAddress","useIazoFactoryAddress","createReducer","builder","addCase","otherField","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","timestamp","audioPlay","isExchangeChartDisplayed","userFarmStakedOnly","ON_FINISHED","userPoolStakedOnly","userPoolsViewMode","TABLE","userFarmsViewMode","userPredictionAcceptedRisk","userPredictionChartDisclaimerShow","userUsernameVisibility","watchlistTokens","watchlistPools","showPhishingWarningBanner","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","poolsWatchlist","newPools","NEW_LIST_STATE","pendingUpdate","lastInitializedDefaultListOfLists","getVersionUpgrade","VersionUpgrade","NONE","u","lastInitializedSet","l","Set","newListOfListsSet","now","txs","lastCheckedBlockNumber","max","confirmedTime","LIQUIDITY_PERCENT","farmsReducer","blockReducer","toasts","toastsReducer","poolsReducer","profileReducer","statsReducer","statsOverall","statsOverallReducer","auctionReducer","vaultReducer","tokenPricesReducer","lpPricesReducer","iazosReducer","networkReducer","nfaStakingPoolsReducer","dualFarmsReducer","jungleFarmsReducer","billsReducer","nfasReducer","protocolDashboard","protocolDashboardReducer","burn","orders","PERSISTED_KEYS","configureStore","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","setupListeners","unwrappedToken","withSignerIfPossible","useSafeIfoContract","ifoLinear","useERC20","useBanana","useGoldenBanana","treasuryAbi","useMasterchef","useSousChef","useJungleChef","jungleChef","useNfaStakingChef","nfaStakingAbi","useAuction","useVaultApeV1","useVaultApeV2","useMiniChefContract","miniChef","useIazoFactoryContract","iazoFactoryAbi","useIazoContract","useBillContract","useBillNftContract","billNftAbi","ens","ensPublicResolver","erc20Bytes","weth","usePairContract","pairAddress","multicallV3","useTokenAllowance","amountToApprove","currentAllowance","pendingApproval","UNKNOWN","approve","useExact","MaxUint256","estimatedGas","useApproveCallbackFromTrade","useAutonomy","AUTONOMY_MIDROUTER_ADDRESS","sortByListPriority","urlA","urlB","first","MAX_SAFE_INTEGER","second","selectorActiveUrls","selectorByUrls","activeListUrlsSelector","createSelector","this","EMPTY_LIST","listCache","WeakMap","combineTokenMaps","currentUrl","combineMaps","assign","listToTokenMap","combinedTokenMapFromUnsupportedUrlsSelector","UNSUPPORTED_TOKEN_LIST","combinedTokenMapFromActiveUrlsSelector","defaultTokenMap","DEFAULT_TOKEN_LIST","combineTokenMapsWithDefault","inactiveUrlSelector","combinedTokenMapFromInActiveUrlsSelector","inactiveUrl","obj","uniqBy","groupedTokenMap","groupBy","tokenAddressMap","fromPairs","tokenInfoList","k","defineProperty","map1","map2","allActiveListUrls","useDefaultTokenList","useCallContext","hooks","displayBalance","dividedBy","getFullDisplayBalance","border","RowBetween","AutoRow","RowFixed","_binanceChainListener","resolve","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","ModalBody","MiddleHeaderText","MiddleText","MiddleButton","button","MiniHeaderText","MainHeaderText","MiniButton","StyledLendingM1Icon","LendingM1Icon","StyledLendingM2Icon","LendingM2Icon","StyledLendingM3Icon","LendingM3Icon","StyledLendingM4Icon","LendingM4Icon","StyledLendingM5Icon","LendingM5Icon","StyledFarmsM1Icon","FarmsM1Icon","StyledFarmsM2Icon","FarmsM2Icon","StyledFarmsM3Icon","FarmsM3Icon","StyledFarmsM4Icon","FarmsM4Icon","StyledPoolsM1Icon","PoolsM1Icon","StyledPoolsM2Icon","PoolsM2Icon","StyledPoolsM3Icon","PoolsM3Icon","StyledPoolsM4Icon","PoolsM4Icon","ModalContent","Icon","LendingBodies","LendingBody1","LendingBody2","LendingBody3","LendingBody4","LendingBody5","open","FarmsBodies","FarmsBody1","FarmsBody2","FarmsBody3","FarmsBody4","PoolsBodies","PoolsBody1","PoolsBody2","PoolsBody3","PoolsBody4","BillsBodies","BillsBody1","Bubble","showApe","slide","backgroundRepeat","backgroundPosition","backgroundSize","subtitle","letterSpacing","container","imagesWrapper","textWrapper","bubbleWrapper","third","fontStyle","order","flexGrow","thirdWrapper","paddingBottom","defaultNoShow","checkboxCon","paddingLeft","checkboxText","QuestSlide1","QuestSlide2","QuestSlide3","QuestSlide4","QuestSlides","MarketingSwipper","setDefaultNoShow","hideDefault","alreadySet","activeSlide","setActiveSlide","slideNav","slideTo","onSwiper","spaceBetween","centeredSlides","resizeObserver","lazy","preloadImages","onSlideChange","activeIndex","CardView","QuestModal","isMobile","setHideDefault","sdmk","gnanaStyles","gnanaContainer","headsUp","warningHeader","headsUpHeader","headsUpDescription","learnMoreBtn","textDecorationLine","displayMax","arrowDownContainer","arrowDown","checkboxContainer","renderActions","Gnana","MAX_BUY","gnanaToken","setUnlimitedGnanaMinting","unlimited","setUnlimited","processing","setProcessing","triedMore","setTriedMore","setVal","gnanaVal","bananaContract","accountBananaBalance","fullBananaBalance","handleSelectMax","handleChange","loadedAccount","constants","trx","wait","isApprovingBanana","isApprovedBanana","handleApproveBanana","buyGnana","handleCheckBox","GnanaModal","MarketingModalCheck","onHomepage","isdm","isDefaultModalSet","isShowDefaultModal","showDefaultModalFlag","farmsRoute","poolsRoute","lendingRoute","billsRoute","questRoute","moonpayRoute","getGnanaRoute","lending","startEarning","startEarningText","GlobalStyle","createGlobalStyle","bscConfig","label","lightIcon","darkIcon","items","isNew","flareConfig","costonConfig","songbirdConfig","maticConfig","iframeConfig","Menu","isIframe","self","useSelectNetwork","uDName","setUDName","sub","langs","setLang","currentLang","links","ethConfig","noProfileLink","profileLink","liveResult","iframe","ToastListener","onRemove","FixedHeightRow","MinimalPositionCard","showUnwrapped","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","currencyPrice","setCurrencyPrice","fetchCurrencyTokenPrice","tokenPriceReturned","AnimatePresence","motion","initial","animate","exit","Pool","trackedTokenPairs","tokenPairsWithLiquidityTokens","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","v2Pairs","v2IsLoading","V2Pair","allV2PairsWithLiquidity","v2Pair","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","FormattedPriceImpact","dexTradeInfoContainer","normalRouterContainer","bottomRouterContainer","TradePrice","showInverted","setShowInverted","formattedPrice","show","baseCurrency","quoteCurrency","DexTradeInfo","isBonusRouter","isSmartRouter","expectedOutput","placement","transformTip","searchSummary","expectedKickbackProfit","expectedUsdProfit","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","estimatedText","transactionRevertText","ConfirmSwapModal","originalTrade","modalHeader","modalBottom","confirmationContent","SwapSwitchButton","DexActions","swapInputError","isExpertMode","showWrap","swapCallbackError","userHasSpecifiedInputOutput","wrapInputError","onWrap","handleSwap","onPresentConfirmModal","setSwapState","approveCallback","showApproveFlow","tradeToConfirm","LoadingBestRoute","SInput","AddressInputPanel","withoutSpaces","autoCapitalize","ExpertModeRecipient","Swap","loadedUrlParams","swapCallback","maxAmountInput","fetchingBestRoute","FETCHING_SWAP","handleAcceptChanges","handleConfirmDismiss","showConfirm","confirmWord","percent","confirm","confirmPriceImpactWithoutFee","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","c","importTokensNotInDefault","onPresentImportTokenWarningModal","useBurnState","lpAmount","LIQUIDITY","RemoveLiquidityModal","RemoveLiquidityActions","signatureData","pairContract","onAttemptToApprove","currencyAmountA","currencyAmountB","liquidityAmount","currencyBIsETH","oneCurrencyIsETH","methodNames","r","safeGasEstimates","indexOfSuccessfulEstimation","safeGasEstimate","isBigNumber","RemoveLiquidity","userLiquidity","liquidityValueA","liquidityValueB","liquidityValues","percentToRemove","liquidityValue","useDerivedBurnInfo","useBurnActionHandlers","_onUserInput","setSignatureData","Fields","StyledInternalLink","PoolFinder","TOKEN1","activeField","setActiveField","setCurrency0","setCurrency1","addPair","validPairNoLiquidity","hasPosition","TOKEN0","prerequisiteMessage","justifyItems","ResetScroll","behavior","Sentry","dsn","REACT_APP_SENTRY_DSN","integrations","BrowserTracing","tracesSampleRate","Home","Farms","Pools","JungleFarms","Ifos","NotFound","DualFarms","Nft","Nfa","ApeZone","Stats","Auction","BurningGames","Iazos","CreateIazo","IazoPage","AdminPools","Vaults","NfaStaking","Bills","Orders","TermsOfUse","PrivacyPolicy","ProtocolDashboard","redirectSwap","RedirectPathToSwapOnly","RedirectToSwap","redirectAddLiquidity","RedirectDuplicateTokenIds","RedirectOldAddLiquidityPathStructure","RedirectToAddLiquidity","App","showScrollIcon","setShowScrollIcon","showScroll","user_id","fallback","exact","component","strict","Global","BLOCKED_ADDRESSES","Blocklist","isRestrictedRegion","countryCode","geoLocation","setGeoLocation","fetchLocation","fontFamily","Web3ProviderNetwork","createWeb3ReactRoot","queryClient","QueryClient","Providers","client","fetchAllListsCallback","bump","PATCH","MINOR","minVersionBump","MAJOR","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","Updaters","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7495e55.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('orders/selectCurrency')\nexport const switchCurrencies = createAction<void>('orders/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('orders/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('orders/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('orders/setRecipient')\n","import styled from 'styled-components'\nimport { Text } from '@apeswapfinance/uikit'\n\nexport const MainBody = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`\nexport const Description = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  margin: 0em 1.5em;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 5em;\n    margin-right: 5em;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 12em;\n    margin-right: 12em;\n  } ;\n`\nexport const StyledText = styled(Text)`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  margin: 0.5em 0;\n`\nexport const StyledAnchor = styled.a`\n  text-align: center;\n`\nexport const TextButton = styled.a`\n  border: none;\n  background: none;\n  color: ${({ theme }) => theme.colors.yellow};\n  text-decoration: underline;\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  margin: 0.5em 0;\n  text-align: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\nexport const Hiw = styled(StyledText)`\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.text};\n  text-transform: uppercase;\n  margin-top: 1em;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-bottom: 0;\n  } ;\n`\nexport const MainContentBody = styled.div`\n  display: flex;\n  padding-left: 2em;\n  padding-right: 2em;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 10em;\n    padding-right: 10em;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-left: 13em;\n    padding-right: 13em;\n  } ;\n`\nexport const Surround = styled.div`\n  @media screen and (max-width: 280px) {\n    background-position: 10%;\n  }\n\n  display: flex;\n  align-self: center;\n  flex-direction: column;\n  background-image: ${({ theme }) =>\n    theme.isDark ? 'url(/images/banners/line-bg-white.svg)' : 'url(/images/banners/line-bg.svg)'};\n  background-repeat: no-repeat;\n  background-position: 7%;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-position: 5%;\n  }\n`\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 0;\n  margin-top: 1em;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\nexport const RightContent = styled.div`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0;\n    width: 80%;\n  } ;\n`\nexport const RightHeader = styled(StyledText)`\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.text};\n  text-align: left;\n  margin: 0;\n`\nexport const RightText = styled(StyledText)`\n  margin: 0;\n  text-align: left;\n`\nexport const InnerTextButton = styled(TextButton)`\n  margin: 0;\n  padding: 0;\n  text-align: left;\n`\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useInterfaceMulticall } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport orderBy from 'lodash/orderBy'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from 'lib/hooks/multicall'\n\n/**\n * Returns a map of the given addresses to their eventually consistent ETH balances.\n */\nexport function useETHBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useInterfaceMulticall()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses ? orderBy(uncheckedAddresses.map(isAddress).filter((a): a is string => a !== false)) : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    useMemo(() => addresses.map((address) => [address]), [addresses]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(\n    validatedTokenAddresses,\n    ERC20_INTERFACE,\n    'balanceOf',\n    useMemo(() => [address], [address]),\n  )\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const uncheckedAddresses = useMemo(() => (containsBNB ? [account] : []), [containsBNB, account])\n  const ethBalance = useETHBalances(uncheckedAddresses)\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, SmartRouter, TokenAmount, Trade } from '@apeswapfinance/sdk'\nimport { SMART_LP_FEES } from 'config/constants/chains'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\n\nconst getInputFractionAfterFee = (chainId: number, smartRouter: SmartRouter) => {\n  const baseFee = new Percent(JSBI.BigInt(SMART_LP_FEES[chainId][smartRouter]), JSBI.BigInt(10000))\n  return ONE_HUNDRED_PERCENT.subtract(baseFee)\n}\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(\n  chainId?: number,\n  smartRouter?: SmartRouter,\n  trade?: Trade | null,\n): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(getInputFractionAfterFee(chainId, smartRouter)),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes price breakdown for the trade\nexport function computeLegacyPriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  const baseFee = new Percent(JSBI.BigInt(20), JSBI.BigInt(10000))\n  const inputFractionAfterFee = ONE_HUNDRED_PERCENT.subtract(baseFee)\n\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(inputFractionAfterFee),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(chainId: number, trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.getSymbol(\n        chainId,\n      )} / ${trade.outputAmount.currency.getSymbol(chainId)}`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.getSymbol(\n        chainId,\n      )} / ${trade.inputAmount.currency.getSymbol(chainId)}`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { apiBaseUrl } from 'hooks/api'\n\nconst getFarmLpAprs = async (chainId: number) => {\n  try {\n    const response = await fetch(`${apiBaseUrl}/stats/network/lpAprs/${chainId}`)\n    const farmLpAprs = await response.json()\n    if (farmLpAprs.statusCode === 500) {\n      return null\n    }\n    return farmLpAprs\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getFarmLpAprs\n","import { baseUrlStrapi } from 'hooks/api'\nimport { LaunchCalendarCard } from 'state/types'\n\nconst getHomepageLaunchCalendar = async (): Promise<LaunchCalendarCard[]> => {\n  try {\n    const response = await fetch(`${baseUrlStrapi}/home-v-2-launch-calendars?_sort=launchTime:asc`)\n    const launchRes = await response.json()\n    if (launchRes.statusCode === 500) {\n      return null\n    }\n    return launchRes\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getHomepageLaunchCalendar\n","import { baseUrlStrapi } from 'hooks/api'\nimport { NewsCardType } from 'state/types'\n\nconst getHomepageNews = async (): Promise<NewsCardType[]> => {\n  try {\n    const response = await fetch(`${baseUrlStrapi}/home-v-2-marketing-cards`)\n    const newsRes = await response.json()\n    if (newsRes.statusCode === 500) {\n      return null\n    }\n    return newsRes\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getHomepageNews\n","import { apiBaseUrl } from 'hooks/api'\nimport { ServiceData } from 'state/types'\n\nconst getHomepageServiceStats = async (): Promise<ServiceData[]> => {\n  try {\n    const response = await fetch(`${apiBaseUrl}/stats/features`)\n    const serviceResp = await response.json()\n    if (serviceResp.statusCode === 500) {\n      return null\n    }\n    return serviceResp\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getHomepageServiceStats\n","import { apiBaseUrl } from 'hooks/api'\nimport { HomepageData } from 'state/types'\n\nconst getHomepageStats = async (): Promise<HomepageData> => {\n  try {\n    const response = await fetch(`${apiBaseUrl}/stats/tvl`)\n    const statRes = await response.json()\n    if (statRes.statusCode === 500) {\n      return null\n    }\n    return statRes\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getHomepageStats\n","import { apiBaseUrl } from 'hooks/api'\nimport { HomepageTokenStats } from 'state/types'\n\nconst getHomepageTokenStats = async (category: string): Promise<HomepageTokenStats[]> => {\n  try {\n    const response = await fetch(`${apiBaseUrl}/tokens/${category}`)\n    const tokenRes = await response.json()\n    if (tokenRes.statusCode === 500) {\n      return null\n    }\n    return tokenRes\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getHomepageTokenStats\n","import { apiBaseUrl } from 'hooks/api'\nimport { Stats, Pool } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst getStats = async (address: string): Promise<Stats> => {\n  try {\n    const response = await fetch(`${apiBaseUrl}/stats/${address}`)\n    const statRes = await response.json()\n    if (statRes.statusCode === 500) {\n      return null\n    }\n    return statRes\n  } catch (error) {\n    return null\n  }\n}\n\nexport const fetchPoolStats = (pools: Pool[], curBlock): any[] => {\n  const stakedPools = pools.filter((pool) => parseInt(pool?.userData?.stakedBalance?.toString()) > 0)\n  const mappedPoolStats = stakedPools.map((pool) => {\n    const stakedTvl =\n      getBalanceNumber(pool.userData?.stakedBalance, pool.stakingToken.decimals) * pool.stakingToken?.price\n    const pendingReward = pool.rewardToken\n      ? getBalanceNumber(pool.userData?.pendingReward, pool?.rewardToken.decimals)\n      : getBalanceNumber(pool.userData?.pendingReward, pool.tokenDecimals)\n    const pendingRewardUsd = pool.rewardToken ? pendingReward * pool?.rewardToken?.price : 0\n    const dollarsEarnedPerDay = (stakedTvl * (pool?.apr / 100)) / 365\n    const tokensEarnedPerDay = pool.rewardToken ? dollarsEarnedPerDay / pool?.rewardToken?.price : 0\n    const finished = curBlock > pool?.endBlock\n    return {\n      id: pool.sousId,\n      address: pool.contractAddress[56],\n      name: pool.stakingToken.symbol,\n      rewardTokenSymbol: pool.rewardToken ? pool?.rewardToken.symbol : pool.tokenName,\n      stakedTvl,\n      pendingReward,\n      pendingRewardUsd,\n      apr: finished ? 0 : pool?.apr / 100,\n      dollarsEarnedPerDay,\n      dollarsEarnedPerWeek: dollarsEarnedPerDay * 7,\n      dollarsEarnedPerMonth: dollarsEarnedPerDay * 30,\n      dollarsEarnedPerYear: dollarsEarnedPerDay * 365,\n      tokensEarnedPerDay,\n      tokensEarnedPerWeek: tokensEarnedPerDay * 7,\n      tokensEarnedPerMonth: tokensEarnedPerDay * 30,\n      tokensEarnedPerYear: tokensEarnedPerDay * 365,\n    }\n  })\n  return mappedPoolStats\n}\n\nexport function computeStats(pools, farms, statsOverall, bananasInWallet, curBlock): Stats {\n  const farmStats = getStatsForFarms(farms, statsOverall.farms)\n  const fetchedPoolStats = fetchPoolStats(pools, curBlock)\n  const poolStats = fetchedPoolStats.filter((pool) => pool.id === 0)\n  const incentivizedPools = fetchedPoolStats.filter((pool) => pool.id !== 0)\n  const stats = {\n    tvl: 0,\n    bananaPrice: 0,\n    aggregateApr: 0,\n    aggregateAprPerDay: 0,\n    aggregateAprPerWeek: 0,\n    aggregateAprPerMonth: 0,\n    dollarsEarnedPerDay: 0,\n    dollarsEarnedPerWeek: 0,\n    dollarsEarnedPerMonth: 0,\n    dollarsEarnedPerYear: 0,\n    bananasEarnedPerDay: 0,\n    bananasEarnedPerWeek: 0,\n    bananasEarnedPerMonth: 0,\n    bananasEarnedPerYear: 0,\n    bananasInWallet: bananasInWallet.toString(),\n    pendingRewardUsd: 0,\n    pendingRewardBanana: 0,\n    pools: poolStats,\n    farms: farmStats,\n    incentivizedPools,\n  }\n  let totalApr = 0\n  stats.pools.forEach((pool) => {\n    stats.pendingRewardUsd += pool.pendingRewardUsd\n    stats.pendingRewardBanana += pool.pendingReward\n    stats.dollarsEarnedPerDay += pool.dollarsEarnedPerDay\n    stats.bananasEarnedPerDay += pool.tokensEarnedPerDay\n    stats.tvl += pool.stakedTvl\n    totalApr += pool.stakedTvl * pool.apr\n  })\n\n  stats.farms.forEach((farm) => {\n    stats.pendingRewardUsd += farm.pendingRewardUsd\n    stats.pendingRewardBanana += farm.pendingReward\n    stats.dollarsEarnedPerDay += farm.dollarsEarnedPerDay\n    stats.bananasEarnedPerDay += farm.tokensEarnedPerDay\n    stats.tvl += farm.stakedTvl\n    totalApr += farm.stakedTvl * farm.apr\n  })\n\n  stats.incentivizedPools.forEach((incentivizedPool) => {\n    stats.pendingRewardUsd += incentivizedPool.pendingRewardUsd\n    stats.dollarsEarnedPerDay += incentivizedPool.dollarsEarnedPerDay\n    stats.tvl += incentivizedPool.stakedTvl\n    totalApr += incentivizedPool.stakedTvl * incentivizedPool.apr\n  })\n\n  stats.aggregateApr = stats.tvl ? totalApr / stats.tvl : 0\n  stats.aggregateAprPerDay = stats.aggregateApr / 365\n  stats.aggregateAprPerWeek = (stats.aggregateApr * 7) / 365\n  stats.aggregateAprPerMonth = (stats.aggregateApr * 30) / 365\n\n  stats.dollarsEarnedPerWeek = stats.dollarsEarnedPerDay * 7\n  stats.dollarsEarnedPerMonth = stats.dollarsEarnedPerDay * 30\n  stats.dollarsEarnedPerYear = stats.dollarsEarnedPerDay * 365\n\n  stats.bananasEarnedPerWeek = stats.bananasEarnedPerDay * 7\n  stats.bananasEarnedPerMonth = stats.bananasEarnedPerDay * 30\n  stats.bananasEarnedPerYear = stats.bananasEarnedPerDay * 365\n  return stats\n}\n\n// Get TVL info for Farms only given a wallet\nexport function getStatsForFarms(farms, farmsInfo) {\n  const allFarms = []\n  farms.map(async (farm) => {\n    if (!farm.userData) return\n    const userInfo = { ...farm.userData, amount: parseInt(farm.userData.stakedBalance, 10) }\n    const pendingReward = parseInt(userInfo.earnings, 10) / 10 ** 18\n    const farmInfo = farmsInfo.find((v) => v.poolIndex === farm.pid)\n\n    if (farmInfo && (userInfo.amount !== 0 || pendingReward !== 0)) {\n      const stakedTvl = (userInfo.amount * farmInfo.price) / 10 ** 18\n      const dollarsEarnedPerDay = (stakedTvl * farmInfo.apr) / 365\n      const tokensEarnedPerDay = dollarsEarnedPerDay / farmInfo.rewardTokenPrice\n      const currFarm = {\n        pid: farm.pid,\n        address: farmInfo.address,\n        name: farmInfo.name,\n        stakedTvl,\n        pendingReward,\n        pendingRewardUsd: pendingReward * farmInfo.rewardTokenPrice,\n        apr: farmInfo.apr,\n        dollarsEarnedPerDay,\n        dollarsEarnedPerWeek: dollarsEarnedPerDay * 7,\n        dollarsEarnedPerMonth: dollarsEarnedPerDay * 30,\n        dollarsEarnedPerYear: dollarsEarnedPerDay * 365,\n        tokensEarnedPerDay,\n        tokensEarnedPerWeek: tokensEarnedPerDay * 7,\n        tokensEarnedPerMonth: tokensEarnedPerDay * 30,\n        tokensEarnedPerYear: tokensEarnedPerDay * 365,\n      }\n\n      allFarms.push(currFarm)\n    }\n  })\n  return allFarms\n}\n\nexport default getStats\n","import axios from 'axios'\nimport { LiveIfo } from 'config/constants/types'\nimport { baseUrlStrapi } from 'hooks/api'\n\nconst fetchIfoStatusFromApi = async (): Promise<LiveIfo[]> => {\n  try {\n    const liveIfoResult = await axios.get(`${baseUrlStrapi}/navbar-settings`)\n    const res = liveIfoResult.data[0].settings\n\n    return res\n  } catch (error) {\n    console.error('fetchIfoStatusFromApiError::', error)\n    return null\n  }\n}\n\nexport default fetchIfoStatusFromApi\n","import axios from 'axios'\nimport { baseUrlStrapi } from 'hooks/api'\n\nconst fetchTagsFromApi = async () => {\n  try {\n    const res = await axios.get(`${baseUrlStrapi}/tags`)\n    const tagResult = res.data[0].tags\n\n    return tagResult\n  } catch (error) {\n    console.error('fetchTagsFromApiError::', error)\n    return null\n  }\n}\n\nexport default fetchTagsFromApi\n","import axios from 'axios'\nimport { baseUrlStrapi } from 'hooks/api'\n\nconst fetchOrderingFromApi = async () => {\n  try {\n    const res = await axios.get(`${baseUrlStrapi}/orderings`)\n    const orderResult = res.data[0].ordering\n\n    return orderResult\n  } catch (error) {\n    console.error('fetchOrderingFromApiError::', error)\n    return null\n  }\n}\n\nexport default fetchOrderingFromApi\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Stats, StatsState } from 'state/types'\nimport getFarmLpAprs from './getFarmLpAprs'\nimport getHomepageLaunchCalendar from './getHomepageLaunchCalendar'\nimport getHomepageNews from './getHomepageNews'\nimport getHomepageServiceStats from './getHomepageService'\nimport getHomepageStats from './getHomepageStats'\nimport getHomepageTokenStats from './getHomepageTokenStats'\nimport { computeStats } from './getStats'\nimport fetchIfoStatus from './fetchIfoStatus'\nimport fetchTagsFromApi from './fetchTagsFromApi'\nimport fetchOrderingFromApi from './fetchOrderingFromApi'\n\nconst initialState: StatsState = {\n  isInitialized: false,\n  isLoading: true,\n  HomepageData: null,\n  HomepageTokenStats: null,\n  HomepageNews: null,\n  HomepageLaunchCalendar: null,\n  HomepageServiceStats: null,\n  FarmLpAprs: null,\n  Tags: null,\n  Ordering: null,\n  LiveIfo: null,\n  data: null,\n}\n\nexport const statsSlice = createSlice({\n  name: 'stats',\n  initialState,\n  reducers: {\n    statsFetchStart: (state) => {\n      state.isLoading = true\n    },\n    statsFetchSucceeded: (state, action: PayloadAction<Stats>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    statsFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    setHomepageStats: (state, action) => {\n      state.HomepageData = action.payload\n    },\n    setHomepageTokenStats: (state, action) => {\n      state.HomepageTokenStats = action.payload\n    },\n    setHomepageNews: (state, action) => {\n      state.HomepageNews = action.payload\n    },\n    setHomepageLaunchCalendar: (state, action) => {\n      state.HomepageLaunchCalendar = action.payload\n    },\n    setHomepageServiceStats: (state, action) => {\n      state.HomepageServiceStats = action.payload\n    },\n    setFarmLpAprs: (state, action) => {\n      state.FarmLpAprs = action.payload\n    },\n    fetchLiveIfoStart: (state) => {\n      state.isLoading = true\n    },\n    fetchLiveIfoSuccess: (state, action) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.LiveIfo = action.payload\n    },\n    fetchLiveIfoFailure: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    fetchTags: (state, action) => {\n      state.Tags = action.payload\n    },\n    fetchOrdering: (state, action) => {\n      state.Ordering = action.payload\n    },\n  },\n})\n\n// Actions\nexport const {\n  statsFetchStart,\n  statsFetchSucceeded,\n  statsFetchFailed,\n  setHomepageStats,\n  setHomepageTokenStats,\n  setHomepageNews,\n  setHomepageLaunchCalendar,\n  setHomepageServiceStats,\n  setFarmLpAprs,\n  fetchLiveIfoFailure,\n  fetchLiveIfoStart,\n  fetchLiveIfoSuccess,\n  fetchTags,\n  fetchOrdering,\n} = statsSlice.actions\n\n// Thunks\nexport const fetchStats = (pools, farms, statsOverall, bananaBalance, curBlock) => (dispatch) => {\n  try {\n    dispatch(statsFetchStart())\n    const stats = computeStats(pools, farms, statsOverall, bananaBalance, curBlock)\n\n    dispatch(statsFetchSucceeded(stats))\n  } catch (error) {\n    dispatch(statsFetchFailed())\n  }\n}\n\nexport const fetchHomepageData = () => async (dispatch) => {\n  const homepageStats = await getHomepageStats()\n  dispatch(setHomepageStats(homepageStats))\n}\n\nexport const fetchHomepageTokenData = (category: string) => async (dispatch) => {\n  const homepageTokenStats = await getHomepageTokenStats(category)\n  dispatch(setHomepageTokenStats(homepageTokenStats))\n}\n\nexport const fetchHomepageNews = () => async (dispatch) => {\n  const homepageNews = await getHomepageNews()\n  dispatch(setHomepageNews(homepageNews))\n}\n\nexport const fetchHomepageLaunchCalendar = () => async (dispatch) => {\n  const homepageLaunchCalendar = await getHomepageLaunchCalendar()\n  dispatch(setHomepageLaunchCalendar(homepageLaunchCalendar))\n}\n\nexport const fetchHomepageService = () => async (dispatch) => {\n  const homepageServiceStats = await getHomepageServiceStats()\n  dispatch(setHomepageServiceStats(homepageServiceStats))\n}\n\nexport const fetchFarmLpAprs = (chainId) => async (dispatch) => {\n  const farmLpAprs = await getFarmLpAprs(chainId)\n  dispatch(setFarmLpAprs(farmLpAprs))\n}\n\nexport const fetchLiveIfoStatus = () => async (dispatch) => {\n  try {\n    dispatch(fetchLiveIfoStart())\n    const liveStatus = await fetchIfoStatus()\n    dispatch(fetchLiveIfoSuccess(liveStatus))\n  } catch (error) {\n    dispatch(fetchLiveIfoFailure())\n  }\n}\n\nexport const fetchLiveTags = () => async (dispatch) => {\n  const tags = await fetchTagsFromApi()\n  dispatch(fetchTags(tags))\n}\n\nexport const fetchLiveOrdering = () => async (dispatch) => {\n  const ordering = await fetchOrderingFromApi()\n  dispatch(fetchOrdering(ordering))\n}\n\nexport default statsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Toast, toastTypes } from '@apeswapfinance/uikit'\nimport { useSelector } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { useAppDispatch } from 'state'\nimport useSwitchNetwork from 'hooks/useSelectNetwork'\nimport { push as pushToast, remove as removeToast, clear as clearToast } from './actions'\nimport {\n  State,\n  ProfileState,\n  StatsState,\n  StatsOverallState,\n  FarmOverall,\n  AuctionsState,\n  IazosState,\n  Iazo,\n  HomepageData,\n  LpTokenPricesState,\n  NfaState,\n  HomepageTokenStats,\n  NewsCardType,\n  LaunchCalendarCard,\n  ServiceData,\n  FarmLpAprsType,\n} from './types'\nimport { fetchProfile } from './profile'\nimport {\n  fetchFarmLpAprs,\n  fetchHomepageData,\n  fetchHomepageLaunchCalendar,\n  fetchHomepageNews,\n  fetchHomepageService,\n  fetchHomepageTokenData,\n  fetchLiveIfoStatus,\n  fetchLiveTags,\n  fetchLiveOrdering,\n} from './stats'\nimport { fetchAuctions } from './auction'\nimport { setVaultsLoad } from './vaults'\nimport { fetchIazo, fetchIazos, fetchSettings } from './iazos'\nimport { fetchUserNetwork } from './network'\nimport { fetchAllNfas } from './nfas'\nimport { useFetchTokenPrices } from './tokenPrices/hooks'\n\n// Network\n\nexport const useNetworkChainId = (): number => {\n  const chainId = useSelector((state: State) => state.network.data.chainId)\n  return chainId\n}\n\nexport const useNetworkChainIdFromUrl = (): boolean => {\n  const chainIdFromUrl = useSelector((state: State) => state.network.data.chainIdFromUrl)\n  return chainIdFromUrl\n}\n\nexport const useUpdateNetwork = () => {\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const appChainId = useNetworkChainId()\n  const chainIdFromUrl = useNetworkChainIdFromUrl()\n  const { switchNetwork } = useSwitchNetwork()\n  useEffect(() => {\n    if (chainIdFromUrl) {\n      switchNetwork(appChainId)\n    } else {\n      dispatch(fetchUserNetwork(chainId, account, appChainId))\n    }\n    // Load initial vault state in update netowrk to stop mount re-render\n    dispatch(setVaultsLoad(false))\n  }, [chainId, account, appChainId, chainIdFromUrl, switchNetwork, dispatch])\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useAppDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (description: string, action?: any) => {\n        return push({\n          id: description,\n          title: description,\n          description,\n          action,\n          type: toastTypes.ERROR,\n        })\n      },\n      toastInfo: (description: string, action?: any) => {\n        return push({\n          id: description,\n          title: description,\n          description,\n          action,\n          type: toastTypes.INFO,\n        })\n      },\n      toastSuccess: (description: string, action?: any) => {\n        return push({\n          id: description,\n          title: description,\n          description,\n          action,\n          type: toastTypes.SUCCESS,\n        })\n      },\n      toastWarning: (description: string, action?: any) => {\n        return push({\n          id: description,\n          title: description,\n          description,\n          action,\n          type: toastTypes.DANGER,\n        })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useActiveWeb3React()\n  const getNfas = !!account\n  useFetchNfas(getNfas)\n  const dispatch = useAppDispatch()\n  const chainId = ChainId.BSC\n  const { slowRefresh } = useRefresh()\n  const { nfas } = useNfas()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(nfas, chainId, account))\n    }\n  }, [account, dispatch, nfas, slowRefresh, chainId])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && data !== null, isInitialized, isLoading }\n}\n\nexport const useFetchHomepageStats = (isFetching: boolean) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    if (isFetching) {\n      dispatch(fetchHomepageData())\n    }\n  }, [slowRefresh, isFetching, dispatch])\n}\n\nexport const useHomepageStats = (): HomepageData => {\n  const homepageStats = useSelector((state: State) => state.stats.HomepageData)\n  return homepageStats\n}\n\nexport const useFetchHomepageServiceStats = (isFetching: boolean) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    if (isFetching) {\n      dispatch(fetchHomepageService())\n    }\n  }, [slowRefresh, isFetching, dispatch])\n}\n\nexport const useHomepageServiceStats = (): ServiceData[] => {\n  const homepageServiceStats = useSelector((state: State) => state.stats.HomepageServiceStats)\n  return homepageServiceStats\n}\n\nexport const useFetchHomepageTokenStats = (isFetching: boolean, category: string) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    if (isFetching) {\n      dispatch(fetchHomepageTokenData(category))\n    }\n  }, [slowRefresh, isFetching, category, dispatch])\n}\n\nexport const useHomepageTokenStats = (): HomepageTokenStats[] => {\n  const homepageTokenStats = useSelector((state: State) => state.stats.HomepageTokenStats)\n  return homepageTokenStats\n}\n\nexport const useFetchFarmLpAprs = (chainId) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmLpAprs(chainId))\n  }, [slowRefresh, chainId, dispatch])\n}\n\nexport const useFarmLpAprs = (): FarmLpAprsType => {\n  const farmLpAprs = useSelector((state: State) => state.stats.FarmLpAprs)\n  return farmLpAprs\n}\n\nexport const useFetchHomepageNews = (isFetching: boolean) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    if (isFetching) {\n      dispatch(fetchHomepageNews())\n    }\n  }, [slowRefresh, isFetching, dispatch])\n}\n\nexport const useHomepageLaunchCalendar = (): LaunchCalendarCard[] => {\n  const homepageLaunchCalendar = useSelector((state: State) => state.stats.HomepageLaunchCalendar)\n  return homepageLaunchCalendar\n}\n\nexport const useFetchHomepageLaunchCalendar = (isFetching: boolean) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    if (isFetching) {\n      dispatch(fetchHomepageLaunchCalendar())\n    }\n  }, [slowRefresh, isFetching, dispatch])\n}\n\nexport const useHomepageNews = (): NewsCardType[] => {\n  const homepageNews = useSelector((state: State) => state.stats.HomepageNews)\n  return homepageNews\n}\n\nexport const useFetchAuctions = () => {\n  useFetchNfas()\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const chainId = useNetworkChainId()\n  const { nfas } = useNfas()\n\n  useEffect(() => {\n    if (chainId === ChainId.BSC || chainId === ChainId.BSC_TESTNET) {\n      dispatch(fetchAuctions(nfas, chainId))\n    }\n  }, [dispatch, fastRefresh, nfas, chainId])\n}\n\nexport const useAuctions = () => {\n  const { isInitialized, isLoading, data }: AuctionsState = useSelector((state: State) => state.auctions)\n  return { auctions: data, isInitialized, isLoading }\n}\n\nexport const useFetchIazoSettings = () => {\n  useFetchTokenPrices()\n  const dispatch = useAppDispatch()\n  const chainId = useNetworkChainId()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchSettings(chainId))\n  }, [dispatch, slowRefresh, chainId])\n}\n\nexport const useFetchIazos = () => {\n  useFetchTokenPrices()\n  const dispatch = useAppDispatch()\n  const chainId = useNetworkChainId()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchIazos(chainId))\n  }, [dispatch, slowRefresh, chainId])\n}\n\nexport const useFetchIazo = (address: string) => {\n  useFetchTokenPrices()\n  const dispatch = useAppDispatch()\n  const chainId = useNetworkChainId()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchIazo(chainId, address))\n  }, [dispatch, fastRefresh, chainId, address])\n}\n\nexport const useIazos = () => {\n  const { isInitialized, isLoading, iazoData }: IazosState = useSelector((state: State) => state.iazos)\n  return { iazos: iazoData, isInitialized, isLoading }\n}\n\nexport const useIazoSettings = () => {\n  const { iazoDefaultSettings }: IazosState = useSelector((state: State) => state.iazos)\n  return iazoDefaultSettings\n}\n\nexport const useIazoFromAddress = (address): Iazo => {\n  const iazo: Iazo = useSelector((state: State) => state.iazos.iazoData.find((i) => i.iazoContractAddress === address))\n  return iazo\n}\n\nexport const useFetchNfas = (nafFlag = true) => {\n  const dispatch = useAppDispatch()\n  const chainId = useNetworkChainId()\n  useEffect(() => {\n    if (nafFlag) {\n      dispatch(fetchAllNfas())\n    }\n  }, [dispatch, nafFlag, chainId])\n}\n\nexport const useNfas = () => {\n  const { isInitialized, isLoading, data }: NfaState = useSelector((state: State) => state.nfas)\n  return { nfas: data, isInitialized, isLoading }\n}\n\nexport const useLpTokenPrices = () => {\n  const { isInitialized, isLoading, data }: LpTokenPricesState = useSelector((state: State) => state.lpTokenPrices)\n  return { lpTokenPrices: data, isInitialized, isLoading }\n}\n\nexport const useTokenPriceFromSymbol = (symbol: string) => {\n  const tokenPrice = useSelector((state: State) =>\n    state.tokenPrices.data?.find((token) => token.symbol === symbol),\n  )?.price\n  return tokenPrice\n}\n\nexport const useTokenPriceFromAddress = (address: string) => {\n  const chainId = useNetworkChainId()\n  const tokenPrice = useSelector((state: State) =>\n    state?.tokenPrices?.data?.find((token) => token.address[chainId].toLowerCase() === address.toLowerCase()),\n  )?.price\n  return tokenPrice\n}\n\nexport const usePendingUsd = () => {\n  const { isInitialized, isLoading, data }: StatsState = useSelector((state: State) => state.stats)\n  return { pending: data?.pendingRewardUsd || 0, hasStats: isInitialized && data !== null, isInitialized, isLoading }\n}\n\nexport const usePersonalTvl = () => {\n  const { isInitialized, isLoading, data }: StatsState = useSelector((state: State) => state.stats)\n  return { tvl: data?.tvl || 0, hasStats: isInitialized && data !== null, isInitialized, isLoading }\n}\n\nexport const useGetPoolStats = (pid) => {\n  let poolStats = {} as FarmOverall\n  const { isInitialized, isLoading, data }: StatsOverallState = useSelector((state: State) => state.statsOverall)\n  if (isInitialized) {\n    if (pid === 0) poolStats = data?.pools[0]\n    else poolStats = data?.incentivizedPools.find((pool) => pool.id === pid)\n  }\n  return { poolStats, hasStats: isInitialized && data !== null, isInitialized, isLoading }\n}\n\nexport const useFetchLiveIfoStatus = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchLiveIfoStatus())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useLiveIfoStatus = () => {\n  const { LiveIfo }: StatsState = useSelector((state: State) => state.stats)\n\n  return { liveIfos: LiveIfo }\n}\n\nexport const useFetchLiveTagsAndOrdering = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchLiveOrdering())\n    dispatch(fetchLiveTags())\n  }, [dispatch, slowRefresh])\n}\n\n// TAGS\nexport const usePoolTags = (chainId: number) => {\n  const { Tags }: StatsState = useSelector((state: State) => state.stats)\n  const poolTags = Tags?.[`${chainId}`]?.pools\n\n  return { poolTags }\n}\n","import { TokenAmount, Currency, Pair, SmartRouter } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PRIORITY_SMART_ROUTERS } from 'config/constants/chains'\nimport { chunk } from 'lodash'\n\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(\n  currencies: [Currency | undefined, Currency | undefined][],\n  smartRouter?: SmartRouter,\n): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB)\n          ? Pair.getAddress(tokenA, tokenB, smartRouter || SmartRouter.APE)\n          : undefined\n      }),\n    [tokens, smartRouter],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          new TokenAmount(token0, reserve0.toString()),\n          new TokenAmount(token1, reserve1.toString()),\n          smartRouter || SmartRouter.APE,\n        ),\n      ]\n    })\n  }, [results, tokens, smartRouter])\n}\n\nexport function useAllSmartPairs(currencies: [Currency | undefined, Currency | undefined][]) {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      PRIORITY_SMART_ROUTERS[chainId].flatMap((smartRouter: SmartRouter) => {\n        return tokens.map(([tokenA, tokenB]) => {\n          return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB, smartRouter) : undefined\n        })\n      }),\n    [tokens, chainId],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n  const chunkedResults = chunk(results, tokens.length)\n\n  const pairResults = useMemo(() => {\n    return chunkedResults.map((chunkedResult, i) => {\n      return chunkedResult.map((result, j) => {\n        const { result: reserves, loading } = result\n        const tokenA = tokens[j][0]\n        const tokenB = tokens[j][1]\n        if (loading) return [PairState.LOADING, null]\n        if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n        if (!reserves) return [PairState.NOT_EXISTS, null]\n        const { reserve0, reserve1 } = reserves\n        const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n        return [\n          PairState.EXISTS,\n          new Pair(\n            new TokenAmount(token0, reserve0.toString()),\n            new TokenAmount(token1, reserve1.toString()),\n            PRIORITY_SMART_ROUTERS[chainId][i],\n          ),\n        ]\n      })\n    })\n  }, [tokens, chunkedResults, chainId])\n\n  return pairResults\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency, smartRouter?: SmartRouter): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]], smartRouter || SmartRouter.APE)[0]\n}\n","import { SmartRouter } from '@apeswapfinance/sdk'\nimport { RouterTypes } from 'config/constants'\nimport { SwapDelay, Field } from 'state/swap/actions'\nimport { tryParseAmount, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport callWallchainAPI from 'utils/wallchainService'\nimport { useCurrency } from './Tokens'\nimport { useTradeExactIn, useTradeExactOut } from './Trades'\nimport useActiveWeb3React from './useActiveWeb3React'\nimport { useSwapCallArguments } from './useSwapCallback'\n\nconst useFindBestRoute = () => {\n  const { onSetSwapDelay, onBestRoute } = useSwapActionHandlers()\n  const {\n    recipient,\n    swapDelay,\n    independentField,\n    typedValue,\n    bestRoute,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n  const [allowedSlippage] = useUserSlippageTolerance()\n  const { chainId, account } = useActiveWeb3React()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n  const bestTradeExactIn = useTradeExactIn(\n    isExactIn ? parsedAmount : undefined,\n    outputCurrency ?? undefined,\n    swapDelay,\n    onSetSwapDelay,\n  )\n  const bestTradeExactOut = useTradeExactOut(\n    inputCurrency ?? undefined,\n    !isExactIn ? parsedAmount : undefined,\n    swapDelay,\n    onSetSwapDelay,\n  )\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  // Get the current router the trade will be going through\n  const currentSmartRouter: SmartRouter = v2Trade?.route?.pairs?.[0]?.router || bestRoute.smartRouter\n  // Get the current router type based on the router\n  const currentRouterType: RouterTypes =\n    (currentSmartRouter !== SmartRouter.APE ? RouterTypes.SMART : RouterTypes.APE) || bestRoute.routerType\n\n  // This is to get the correct swap arguments for a bonus trade\n  const swapCalls = useSwapCallArguments(\n    v2Trade,\n    allowedSlippage,\n    recipient,\n    { routerType: currentRouterType, smartRouter: currentSmartRouter },\n    false,\n  )\n\n  // To not cause a call on every user input the code will be executed when the delay is complete\n  if (swapDelay !== SwapDelay.SWAP_COMPLETE) {\n    return { v2Trade, bestTradeExactIn, bestTradeExactOut }\n  }\n  if (swapCalls[0]) {\n    const {\n      contract,\n      parameters: { methodName, args, value },\n    } = swapCalls[0]\n    callWallchainAPI(\n      methodName,\n      args,\n      value,\n      chainId,\n      account,\n      contract,\n      currentSmartRouter,\n      currentRouterType,\n      onBestRoute,\n      onSetSwapDelay,\n    )\n  }\n  return { v2Trade, bestTradeExactIn, bestTradeExactOut }\n}\n\nexport default useFindBestRoute\n","import { SmartRouter } from '@apeswapfinance/sdk'\nimport { RouterTypes } from 'config/constants'\nimport { WALLCHAIN_PARAMS } from 'config/constants/chains'\nimport { Contract } from 'ethers'\nimport { SwapDelay, RouterTypeParams, DataResponse } from 'state/swap/actions'\n\nconst wallchainResponseIsValid = (\n  dataResonse: DataResponse,\n  value: string,\n  account: string,\n  contractAddress: string,\n) => {\n  if (!dataResonse.pathFound) {\n    // Opportunity was not found -> response should be ignored -> valid.\n    return false\n  }\n  return (\n    dataResonse.transactionArgs.destination.toLowerCase() === contractAddress.toLowerCase() &&\n    dataResonse.transactionArgs.value.toLowerCase() === value.toLowerCase() &&\n    dataResonse.transactionArgs.sender.toLowerCase() === account.toLowerCase()\n  )\n}\n\n/**\n * Call Wallchain API to analyze the expected opportunity.\n * @param methodName function to execute in transaction\n * @param args arguments for the function\n * @param value value parameter for the transaction\n * @param chainId chainId of the blockchain\n * @param account account address from sender\n * @param contract ApeSwap Router contract\n * @param smartRouter The type of router the trade will go through\n * @param routerType The router that the trade will go through\n * @param onBestRoute Callback function to set the best route\n * @param onSetSwapDelay Callback function to set the swap delay state\n */\nexport default function callWallchainAPI(\n  methodName: string,\n  args: (string | string[])[],\n  value: string,\n  chainId: number,\n  account: string,\n  contract: Contract,\n  smartRouter: SmartRouter,\n  routerType: RouterTypes,\n  onBestRoute: (bestRoute: RouterTypeParams) => void,\n  onSetSwapDelay: (swapDelay: SwapDelay) => void,\n): Promise<any> {\n  onSetSwapDelay(SwapDelay.FETCHING_BONUS)\n  const encodedData = contract.interface.encodeFunctionData(methodName, args)\n  // Allowing transactions to be checked even if no user is connected\n  const activeAccount = account || '0x0000000000000000000000000000000000000000'\n\n  // If the intiial call fails APE router will be the default router\n  return fetch(\n    `${WALLCHAIN_PARAMS[chainId][smartRouter].apiUrl}?key=${WALLCHAIN_PARAMS[chainId][smartRouter].apiKey}`,\n    {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        value,\n        sender: activeAccount,\n        data: encodedData,\n        destination: contract.address,\n      }),\n    },\n  )\n    .then((response) => {\n      if (response.ok) {\n        return response.json()\n      }\n      console.error('Wallchain Error', response.status, response.statusText)\n      onBestRoute({ routerType, smartRouter })\n      onSetSwapDelay(SwapDelay.SWAP_REFRESH)\n      return null\n    })\n    .then((responseJson) => {\n      if (responseJson) {\n        const dataResonse: DataResponse = responseJson\n        if (wallchainResponseIsValid(dataResonse, value, activeAccount, contract.address)) {\n          onBestRoute({ routerType: RouterTypes.BONUS, smartRouter, bonusRouter: dataResonse })\n          onSetSwapDelay(SwapDelay.SWAP_REFRESH)\n        } else {\n          onBestRoute({ routerType, smartRouter })\n          onSetSwapDelay(SwapDelay.SWAP_REFRESH)\n        }\n      }\n      onSetSwapDelay(SwapDelay.SWAP_REFRESH)\n      return null\n    })\n    .catch((error) => {\n      onBestRoute({ routerType, smartRouter })\n      onSetSwapDelay(SwapDelay.SWAP_REFRESH)\n      console.error('Wallchain Error', error)\n    })\n}\n","import { parseUnits } from '@ethersproject/units'\nimport {\n  Currency,\n  CurrencyAmount,\n  ETHER,\n  JSBI,\n  Token,\n  TokenAmount,\n  Trade,\n  ChainId,\n  SmartRouter,\n} from '@apeswapfinance/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useENS from 'hooks/ENS/useENS'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useAllCommonPairs } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport contracts from 'config/constants/contracts'\nimport useFindBestRoute from 'hooks/useFindBestRoute'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport { RouterTypes } from 'config/constants'\nimport { AppDispatch, AppState, useAppDispatch } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport {\n  Field,\n  replaceSwapState,\n  selectCurrency,\n  setRecipient,\n  switchCurrencies,\n  typeInput,\n  setSwapDelay,\n  SwapDelay,\n  RouterTypeParams,\n  setBestRoute,\n} from './actions'\n\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency, typedValue?: string) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n  onSetSwapDelay: (swapDelay: SwapDelay) => void\n  onBestRoute: (bestRoute: RouterTypeParams) => void\n} {\n  const dispatch = useAppDispatch()\n  const timer = useRef(null)\n\n  const onSetSwapDelay = useCallback(\n    (swapDelay: SwapDelay) => {\n      dispatch(setSwapDelay({ swapDelay }))\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n    // Set input to complete to recalculate the best path\n    onSetSwapDelay(SwapDelay.USER_INPUT_COMPLETE)\n  }, [dispatch, onSetSwapDelay])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n      if (!typedValue) {\n        onSetSwapDelay(SwapDelay.INIT)\n        return\n      }\n      // Set state as user input delay\n      onSetSwapDelay(SwapDelay.USER_INPUT)\n      // Reset previous timer on user input\n      clearTimeout(timer.current)\n      // Set new timer to check wallchain router\n      timer.current = setTimeout(() => {\n        // Set state that user has finished inputing\n        onSetSwapDelay(SwapDelay.USER_INPUT_COMPLETE)\n      }, 300)\n    },\n    [dispatch, onSetSwapDelay, timer],\n  )\n\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency, typedValue?: string) => {\n      // We dont need to timeout if their is no typed value\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ETH' : '',\n        }),\n      )\n      // Set input to complete to recalculate the best path\n      if (!typedValue) {\n        onSetSwapDelay(SwapDelay.USER_INPUT_COMPLETE)\n      } else {\n        onSetSwapDelay(SwapDelay.USER_INPUT)\n        timer.current = setTimeout(() => {\n          // Set state that user has finished inputing\n          onSetSwapDelay(SwapDelay.USER_INPUT_COMPLETE)\n        }, 1000)\n      }\n    },\n    [dispatch, onSetSwapDelay],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  const onBestRoute = useCallback(\n    (bestRoute: RouterTypeParams) => {\n      dispatch(setBestRoute({ bestRoute }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n    onSetSwapDelay,\n    onBestRoute,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0xBCfCcbde45cE874adCB698cC183deBcF17952812', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n  v1Trade: Trade | undefined\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  useAllCommonPairs(inputCurrency, outputCurrency)\n  const { v2Trade, bestTradeExactIn, bestTradeExactOut } = useFindBestRoute()\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const currencyBalances = useMemo(\n    () => ({\n      [Field.INPUT]: relevantTokenBalances[0],\n      [Field.OUTPUT]: relevantTokenBalances[1],\n    }),\n    [relevantTokenBalances],\n  )\n\n  const currencies: { [field in Field]?: Currency | null } = useMemo(\n    () => ({\n      [Field.INPUT]: inputCurrency ?? undefined,\n      [Field.OUTPUT]: outputCurrency ?? undefined,\n    }),\n    [inputCurrency, outputCurrency],\n  )\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n  // const swapCalls = useSwapCallArguments(v2Trade, allowedSlippage, recipient)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `${t('Insufficient')} ${amountIn.currency.getSymbol(chainId)} ${t('balance')}`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n    v1Trade: undefined,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'ETH') return 'ETH'\n    if (valid === false) return 'ETH'\n  }\n  return 'ETH' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs, chainId: ChainId): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n\n  const chainAddress = contracts.banana[chainId]\n\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = chainAddress\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n  const swapDelay = SwapDelay.INIT\n  const bestRoute = { routerType: RouterTypes.APE, smartRouter: SmartRouter.APE }\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n    swapDelay,\n    bestRoute,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const parsed = useMemo(() => {\n    return queryParametersToSwapState(parsedQs, chainId)\n  }, [parsedQs, chainId])\n  const swapDelay = SwapDelay.INIT\n  const bestRoute = { routerType: RouterTypes.APE, smartRouter: SmartRouter.APE }\n  useEffect(() => {\n    if (!chainId) return\n    const inputCurrencyId = parsed[Field.INPUT].currencyId ?? undefined\n    const outputCurrencyId = parsed[Field.OUTPUT].currencyId ?? undefined\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId,\n        outputCurrencyId,\n        recipient: parsed.recipient,\n        swapDelay,\n        bestRoute,\n      }),\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return { inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId }\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","function track({\n  event,\n  chain,\n  data,\n  value,\n}: {\n  event: string\n  chain: number | undefined | string\n  data: any\n  value?: number | string\n}): void {\n  dataLayer?.push({ event, value, chain, ...data })\n}\n\nexport default track\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateBananaEarnedPerThousandDollars = ({ numberOfDays, farmApy, rewardTokenPrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n\n  //   Calculate the starting BANANA balance with a dollar balance of $1000.\n  const principal = 1000 / rewardTokenPrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the banana earned, deduct the amount after compounding (finalAmount) from the starting BANANA balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n\nexport const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  amountDollar = 1000,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000 or the provided value.\n  const principal = amountDollar / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const tokenEarnedPerThousandDollarsCompoundingMax = ({\n  numberOfDays,\n  farmApr,\n  bananaPoolApr,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n  let bananaAprAsDecimal = bananaPoolApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n    const bananaFeeRelativeToApr = (bananaPoolApr / 100) * performanceFee\n    const bananaAprAfterFee = bananaPoolApr - bananaFeeRelativeToApr\n    bananaAprAsDecimal = bananaAprAfterFee / 100\n  }\n\n  let finalValue = 0\n\n  for (let i = 0; i < numberOfDays; i++) {\n    finalValue = finalValue * (1 + bananaAprAsDecimal / timesCompounded) + aprAsDecimal / timesCompounded\n  }\n  return finalValue * 100\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, BANANA_PER_YEAR, SECONDS_PER_YEAR } from 'config'\n\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: string,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport const getDualFarmApr = (\n  poolLiquidityUsd: number,\n  miniChefRewardTokenPrice: number,\n  miniChefTokensPerSecond: string,\n  rewarerdTokenPrice: number,\n  rewarderTokensPerSecond: string,\n): number => {\n  const totalRewarderRewardPricePerYear = new BigNumber(rewarerdTokenPrice)\n    .times(rewarderTokensPerSecond)\n    .times(SECONDS_PER_YEAR)\n  const totalMiniChefRewardPricePerYear = new BigNumber(miniChefRewardTokenPrice)\n    .times(miniChefTokensPerSecond)\n    .times(SECONDS_PER_YEAR)\n  const totalRewardsPerYear = totalMiniChefRewardPricePerYear.plus(totalRewarderRewardPricePerYear)\n  const apr = totalRewardsPerYear.div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport const getFarmApr = (poolWeight: BigNumber, bananaPriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyBananaRewardAllocation = BANANA_PER_YEAR.times(poolWeight).times(bananaPriceUsd)\n  const apr = yearlyBananaRewardAllocation.div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n","import { Language } from '../../contexts/Localization/types'\n\n// export const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\n// export const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\n// export const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\n// export const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\n// export const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\n// export const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\n// export const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\n// export const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\n// export const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\n// export const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\n// export const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\n// export const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\n// export const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\n// export const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\n// export const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\n// export const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\n// export const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\n// export const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\n// export const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\n// export const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  // 'ar-SA': AR,\n  // 'bn-BD': BN,\n  'en-US': EN,\n  // 'de-DE': DE,\n  // 'el-GR': EL,\n  'es-ES': ESES,\n  // 'fi-FI': FI,\n  // 'fil-PH': FIL,\n  // 'fr-FR': FR,\n  // 'hi-IN': HI,\n  // 'hu-HU': HU,\n  // 'id-ID': ID,\n  // 'it-IT': IT,\n  'ja-JP': JA,\n  // 'ko-KR': KO,\n  // 'nl-NL': NL,\n  // 'pl-PL': PL,\n  'pt-BR': PTBR,\n  // 'pt-PT': PTPT,\n  // 'ro-RO': RO,\n  'ru-RU': RU,\n  // 'sv-SE': SVSE,\n  // 'ta-IN': TA,\n  'tr-TR': TR,\n  // 'uk-UA': UK,\n  // 'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@apeswapfinance/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Currency, ETHER, Token } from '@apeswapfinance/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'ETH'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, Text, useModal } from '@ape.swap/uikit'\nimport { Currency } from '@apeswapfinance/sdk'\nimport { Skeleton } from '@apeswapfinance/uikit'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components/Logo'\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React, { useCallback } from 'react'\nimport { styles } from './styles'\n\nconst TokenSelector: React.FC<{\n  currency: Currency\n  otherCurrency: Currency\n  onCurrencySelect: (field: any, currency: Currency, typedValue?: string) => void\n  field: any\n  typedValue?: string\n  showCommonBases?: boolean\n  disableTokenSelect?: boolean\n  isRemoveLiquidity?: boolean\n}> = ({\n  currency,\n  onCurrencySelect,\n  otherCurrency,\n  isRemoveLiquidity,\n  disableTokenSelect,\n  typedValue,\n  field,\n  showCommonBases = false,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDynamicCurrencySelect = useCallback(\n    (selectedCurrency: Currency) => {\n      onCurrencySelect(field, selectedCurrency, typedValue)\n    },\n    [field, typedValue, onCurrencySelect],\n  )\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={handleDynamicCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n\n  return disableTokenSelect ? (\n    <Flex\n      sx={{\n        ...styles.primaryFlex,\n        cursor: 'default',\n        '&:active': { transform: 'none' },\n        ':hover': { background: 'white4' },\n      }}\n    >\n      {currency ? (\n        <CurrencyLogo currency={currency} size=\"30px\" />\n      ) : (\n        <Skeleton width=\"30px\" height=\"30px\" animation=\"waves\" variant=\"circle\" />\n      )}\n      <Text sx={{ ...styles.tokenText }}>{currency?.getSymbol(chainId)}</Text>\n    </Flex>\n  ) : isRemoveLiquidity ? (\n    <Flex\n      sx={{\n        ...styles.primaryFlex,\n        cursor: 'default',\n        '&:active': { transform: 'none' },\n        ':hover': { background: 'white4' },\n      }}\n    >\n      <DoubleCurrencyLogo currency0={currency} currency1={otherCurrency} size={30} />\n      <Text sx={styles.tokenText}>\n        {currency?.getSymbol(chainId)} - {otherCurrency?.getSymbol(chainId)}\n      </Text>\n    </Flex>\n  ) : (\n    <Flex sx={{ ...styles.primaryFlex }} onClick={onPresentCurrencyModal}>\n      {currency ? (\n        <CurrencyLogo currency={currency} size=\"30px\" />\n      ) : (\n        <Skeleton width=\"30px\" height=\"30px\" animation=\"waves\" variant=\"circle\" />\n      )}\n      <Text sx={{ ...styles.tokenText }}>{currency?.getSymbol(chainId)}</Text>\n      <Svg icon=\"caret\" />\n    </Flex>\n  )\n}\n\nexport default React.memo(TokenSelector)\n","import { ThemeUIStyleObject } from 'theme-ui'\nimport { buttonHover } from 'views/Dex/styles'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  dexPanelContainer: {\n    position: 'relative',\n    width: '100%',\n    height: '94px',\n    background: 'white3',\n    padding: '10px',\n    borderRadius: '10px',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n  },\n\n  panelTopContainer: {\n    width: '100%',\n    height: 'auto',\n    justifyContent: 'space-between',\n  },\n\n  panelBottomContainer: {\n    width: '100%',\n    justifyContent: 'space-between',\n  },\n\n  panelBottomText: {\n    opacity: 0.8,\n  },\n\n  swapDirectionText: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    transform: 'translate(0px, -30px)',\n  },\n\n  maxButton: {\n    background: 'yellow',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '6px',\n    height: '22px',\n    padding: '0px 8px',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: '600',\n    ml: '10px',\n    transition: 'all .3s linear',\n    '&:active': {\n      transform: 'scale(0.9)',\n    },\n    ':hover': buttonHover,\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { Input as NumericalInput } from 'components/CurrencyInputPanel/NumericalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Spinner } from 'theme-ui'\nimport React, { useState, useMemo, useEffect } from 'react'\nimport { Field } from 'state/swap/actions'\nimport { Field as MintField } from 'state/mint/actions'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport { getCurrencyUsdPrice } from 'utils/getTokenUsdPrice'\nimport TokenSelector from '../TokenSelector'\nimport { styles } from './styles'\nimport { DexPanelProps } from './types'\nimport Dots from 'components/Loader/Dots'\n\nconst DexPanel: React.FC<DexPanelProps> = ({\n  value,\n  currency,\n  onCurrencySelect,\n  onUserInput,\n  handleMaxInput,\n  setTradeValueUsd,\n  otherCurrency,\n  fieldType,\n  panelText,\n  lpPair,\n  disabled,\n  smartRouter,\n  independentField,\n  ordersDisabled,\n  disableTokenSelect,\n  showCommonBases = false,\n}) => {\n  const [usdVal, setUsdVal] = useState(null)\n  const { chainId, account } = useActiveWeb3React()\n  const isRemoveLiquidity = !!lpPair\n  const selectedCurrencyBalance = useCurrencyBalance(\n    account ?? undefined,\n    isRemoveLiquidity ? lpPair?.liquidityToken ?? undefined : currency ?? undefined,\n  )\n  const currencyBalance = selectedCurrencyBalance?.toSignificant(6)\n  const { t } = useTranslation()\n\n  useMemo(async () => {\n    setUsdVal(null)\n    setUsdVal(await getCurrencyUsdPrice(chainId, lpPair?.liquidityToken || currency, isRemoveLiquidity, smartRouter))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chainId, currency, isRemoveLiquidity, smartRouter])\n\n  useEffect(() => {\n    if (setTradeValueUsd) {\n      setTradeValueUsd(\n        isRemoveLiquidity\n          ? usdVal * parseFloat(currencyBalance) * (parseFloat(value) / 100)\n          : usdVal * parseFloat(value),\n      )\n    }\n  }, [usdVal, value, currencyBalance, isRemoveLiquidity, setTradeValueUsd])\n\n  return (\n    <Flex sx={styles.dexPanelContainer}>\n      <Flex sx={styles.panelTopContainer}>\n        <Text sx={styles.swapDirectionText}>{panelText}</Text>\n        <NumericalInput\n          value={isRemoveLiquidity ? `${value}%` : value}\n          onUserInput={(val) => onUserInput(fieldType, val)}\n          removeLiquidity={isRemoveLiquidity}\n          align=\"left\"\n          id=\"token-amount-input\"\n          disabled={(independentField && independentField !== fieldType && disabled) || ordersDisabled}\n          disabledText={independentField && independentField !== fieldType && disabled}\n        />\n        <TokenSelector\n          currency={currency}\n          otherCurrency={otherCurrency}\n          onCurrencySelect={onCurrencySelect}\n          showCommonBases={showCommonBases}\n          disableTokenSelect={disableTokenSelect}\n          isRemoveLiquidity={isRemoveLiquidity}\n          field={fieldType}\n          typedValue={value}\n        />\n      </Flex>\n      <Flex sx={styles.panelBottomContainer}>\n        <Flex\n          sx={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            opacity: independentField && independentField !== fieldType && disabled && 0.4,\n          }}\n        >\n          {!usdVal && (value || value === '.') && <Spinner width=\"15px\" height=\"15px\" />}\n          <Text size=\"12px\" sx={styles.panelBottomText}>\n            {usdVal !== null &&\n              value !== '.' &&\n              usdVal !== 0 &&\n              value &&\n              `$${(lpPair\n                ? usdVal * parseFloat(currencyBalance) * (parseFloat(value) / 100)\n                : usdVal * parseFloat(value)\n              ).toFixed(2)}`}\n          </Text>\n        </Flex>\n        {account && (\n          <Flex sx={{ alignItems: 'center' }}>\n            <Text size=\"12px\" sx={styles.panelBottomText}>\n              {t('Balance: %balance%', { balance: currencyBalance || 'loading' })}\n              {!currencyBalance && <Dots />}\n            </Text>\n            {(fieldType === Field.INPUT ||\n              fieldType === MintField.CURRENCY_A ||\n              fieldType === MintField.CURRENCY_B ||\n              isRemoveLiquidity) &&\n              parseFloat(currencyBalance) > 0 && (\n                <Flex sx={styles.maxButton} size=\"sm\" onClick={() => handleMaxInput(fieldType)}>\n                  <Text color=\"primaryBright\" sx={{ lineHeight: '0px' }}>\n                    {t('MAX')}\n                  </Text>\n                </Flex>\n              )}\n          </Flex>\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(DexPanel)\n","/** @jsxImportSource theme-ui */\n/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { Button, useWalletModal } from '@ape.swap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n  const { large, table } = props\n\n  const LargeButton = () => {\n    return (\n      <Button\n        onClick={onPresentConnectModal}\n        sx={{\n          fontWeight: 700,\n          fontSize: '20px',\n          width: '100%',\n          height: '60px',\n          borderRadius: '20px !important',\n          marginTop: '10px',\n        }}\n        {...props}\n      >\n        {t('Connect Wallet')}\n      </Button>\n    )\n  }\n\n  const TableButton = () => {\n    return (\n      <Button\n        onClick={onPresentConnectModal}\n        sx={{\n          fontSize: '16px',\n          fontWeight: 700,\n          padding: '10px 20px',\n          minWidth: '227px',\n          height: '44px',\n        }}\n        {...props}\n      >\n        {t('Connect Wallet')}\n      </Button>\n    )\n  }\n\n  return large ? (\n    <LargeButton />\n  ) : table ? (\n    <TableButton />\n  ) : (\n    <Button\n      onClick={onPresentConnectModal}\n      sx={{ fontSize: '16px', padding: '0 24px', height: '44px', fontWeight: 600 }}\n      {...props}\n    >\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import nonFungibleApesAbi from 'config/abi/nonFungibleApes.json'\nimport { getPoolApr } from 'utils/apr'\nimport { getNonFungibleApesAddress } from 'utils/addressHelper'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { TokenPrices } from 'state/types'\nimport { NfaStakingPoolConfig } from 'config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async (nfaStakingPoolsConfig: NfaStakingPoolConfig[]) => {\n  return nfaStakingPoolsConfig.map((nfaStakingPool) => {\n    return {\n      sousId: nfaStakingPool.sousId,\n      startBlock: 0,\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async (chainId, nfaStakingPoolsConfig: NfaStakingPoolConfig[]) => {\n  const nfaAddress = getNonFungibleApesAddress(chainId)\n  const calls = nfaStakingPoolsConfig.map((poolConfig) => {\n    return {\n      address: nfaAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nfaStakingPoolTotalStaked = await multicall(chainId, nonFungibleApesAbi, calls)\n\n  return [\n    ...nfaStakingPoolsConfig.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nfaStakingPoolTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolTokenStatsAndApr = async (\n  tokenPrices: TokenPrices[],\n  totalStakingList,\n  nfaStakingPoolsConfig: NfaStakingPoolConfig[],\n) => {\n  const mappedValues = nfaStakingPoolsConfig.map((pool) => {\n    // Get values needed to calculate apr\n    const curPool = pool\n    const rewardToken = tokenPrices\n      ? tokenPrices.find(\n          (token) => pool?.rewardToken && token?.address[CHAIN_ID] === pool?.rewardToken.address[CHAIN_ID],\n        )\n      : pool.rewardToken\n    const totalStaked = totalStakingList.find((totalStake) => totalStake.sousId === pool.sousId)?.totalStaked\n    // Calculate apr\n    const apr = getPoolApr(1, rewardToken?.price, getBalanceNumber(totalStaked), curPool?.tokenPerBlock)\n    return {\n      sousId: curPool.sousId,\n      rewardToken,\n      apr,\n    }\n  })\n  return mappedValues\n}\n","import nfaStakingPoolsAbi from 'config/abi/nfaStaking.json'\nimport nfaAbi from 'config/abi/nonFungibleApes.json'\nimport { getNonFungibleApesAddress } from 'utils/addressHelper'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { NfaStakingPoolConfig } from 'config/constants/types'\n\nexport const fetchPoolsAllowance = async (chainId, account, nfaStakingPools: NfaStakingPoolConfig[]) => {\n  const nfaAddress = getNonFungibleApesAddress(chainId)\n  const calls = nfaStakingPools.map((p) => ({\n    address: nfaAddress,\n    name: 'isApprovedForAll',\n    params: [account, p.contractAddress[chainId]],\n  }))\n\n  const allowances = await multicall(chainId, nfaAbi, calls)\n  return nfaStakingPools.reduce((acc, pool, index) => ({ ...acc, [pool.sousId]: allowances[index][0] }), {})\n}\n\nexport const fetchUserBalances = async (chainId, account, nfaStakingPools: NfaStakingPoolConfig[]) => {\n  const nfaAddress = getNonFungibleApesAddress(chainId)\n  const calls = nfaStakingPools.map(() => ({\n    address: nfaAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(chainId, nfaAbi, calls)\n  const tokenBalances = nfaStakingPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n  return { ...tokenBalances }\n}\n\nexport const fetchUserStakeBalances = async (chainId, account, nfaStakingPools: NfaStakingPoolConfig[]) => {\n  const calls = nfaStakingPools.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(chainId, nfaStakingPoolsAbi, calls)\n  const stakedBalances = nfaStakingPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...stakedBalances }\n}\n\nexport const fetchUserPendingRewards = async (chainId, account, nfaStakingPools: NfaStakingPoolConfig[]) => {\n  const calls = nfaStakingPools.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(chainId, nfaStakingPoolsAbi, calls)\n  const pendingRewards = nfaStakingPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...pendingRewards }\n}\n\nexport const fetchUserStakedNfas = async (chainId, account, nfaStakingPools: NfaStakingPoolConfig[]) => {\n  const calls = nfaStakingPools.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'stakedNfts',\n    params: [account],\n  }))\n  const res = await multicall(chainId, nfaStakingPoolsAbi, calls)\n  const stakedNfas = nfaStakingPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: res[index][0]?.map((item) => {\n        return item.toNumber()\n      }),\n    }),\n    {},\n  )\n\n  return { ...stakedNfas }\n}\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheNfaStakingPools = []\n\nconst fetchNfaStakingConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      tries++\n      const response = await axios.get(`${apeswapListUrl}/nfaStakingPools.json`)\n      const nfaStakingPoolsConfigResp = await response.data\n      if (nfaStakingPoolsConfigResp.statusCode === 500) {\n        return null\n      }\n      cacheNfaStakingPools = nfaStakingPoolsConfigResp\n      return nfaStakingPoolsConfigResp\n    }\n    return cacheNfaStakingPools\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchNfaStakingConfig\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking, fetchPoolTokenStatsAndApr } from './fetchNfaStakingPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n  fetchUserStakedNfas,\n} from './fetchNfaStakingPoolsUser'\nimport { NfaStakingPool, TokenPrices, NfaStakingPoolsState, AppThunk } from '../types'\nimport fetchNfaStakingConfig from './api'\n\nconst initialState: NfaStakingPoolsState = { data: [] }\n\nexport const NfaStakingPoolsSlice = createSlice({\n  name: 'NfaStakingPools',\n  initialState,\n  reducers: {\n    setInitialNfaStakingData: (state, action) => {\n      state.data = action.payload\n    },\n    setNfaStakingPoolsPublicData: (state, action) => {\n      const liveNfaStakingPoolsData: NfaStakingPool[] = action.payload\n      state.data = state.data.map((nfaStakingPool) => {\n        const liveNfaStakingPoolData = liveNfaStakingPoolsData.find((entry) => entry.sousId === nfaStakingPool.sousId)\n        return { ...nfaStakingPool, ...liveNfaStakingPoolData }\n      })\n    },\n    setNfaStakingPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((nfaStakingPool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === nfaStakingPool.sousId)\n        return { ...nfaStakingPool, userData: userPoolData }\n      })\n    },\n    updateNfaStakingPoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const {\n  setInitialNfaStakingData,\n  setNfaStakingPoolsPublicData,\n  setNfaStakingPoolsUserData,\n  updateNfaStakingPoolsUserData,\n} = NfaStakingPoolsSlice.actions\n\n// Thunks\n\nexport const setInitialNfaStakingDataAsync = () => async (dispatch) => {\n  try {\n    const initialNfaStakingState: NfaStakingPool[] = await fetchNfaStakingConfig()\n    dispatch(setInitialNfaStakingData(initialNfaStakingState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchNfaStakingPoolsPublicDataAsync =\n  (chainId: number, tokenPrices: TokenPrices[]): AppThunk =>\n  async (dispatch, getState) => {\n    const nfaStakingPools = getState().nfaStakingPools.data\n    const blockLimits = await fetchPoolsBlockLimits(nfaStakingPools)\n    const totalStakings = await fetchPoolsTotalStatking(chainId, nfaStakingPools)\n    const tokenStatsAndAprs = await fetchPoolTokenStatsAndApr(tokenPrices, totalStakings, nfaStakingPools)\n    const liveData = await Promise.all(\n      nfaStakingPools.map(async (nfaStakingPool) => {\n        const blockLimit = blockLimits.find((entry) => entry.sousId === nfaStakingPool.sousId)\n        const totalStaking = totalStakings.find((entry) => entry.sousId === nfaStakingPool.sousId)\n        const tokenStatsAndApr = tokenStatsAndAprs.find((entry) => entry.sousId === nfaStakingPool.sousId)\n        return {\n          ...blockLimit,\n          ...totalStaking,\n          ...tokenStatsAndApr,\n        }\n      }),\n    )\n    dispatch(setNfaStakingPoolsPublicData(liveData))\n  }\n\nexport const fetchNfaStakingPoolsUserDataAsync =\n  (chainId, account): AppThunk =>\n  async (dispatch, getState) => {\n    const nfaStakingPools = getState().nfaStakingPools.data\n    const allowances = await fetchPoolsAllowance(chainId, account, nfaStakingPools)\n    const stakingTokenBalances = await fetchUserBalances(chainId, account, nfaStakingPools)\n    const stakedBalances = await fetchUserStakeBalances(chainId, account, nfaStakingPools)\n    const pendingRewards = await fetchUserPendingRewards(chainId, account, nfaStakingPools)\n    const stakedNfas = await fetchUserStakedNfas(chainId, account, nfaStakingPools)\n\n    const userData = nfaStakingPools.map((nfaStakingPool) => ({\n      sousId: nfaStakingPool.sousId,\n      allowance: allowances[nfaStakingPool.sousId],\n      stakingTokenBalance: stakingTokenBalances[nfaStakingPool.sousId],\n      stakedBalance: stakedBalances[nfaStakingPool.sousId],\n      pendingReward: pendingRewards[nfaStakingPool.sousId],\n      stakedNfas: stakedNfas[nfaStakingPool.sousId],\n    }))\n    dispatch(setNfaStakingPoolsUserData(userData))\n  }\n\nexport const updateNfaStakingUserAllowance =\n  (chainId: number, sousId: string, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const nfaStakingPools = getState().nfaStakingPools.data\n    const allowances = await fetchPoolsAllowance(chainId, account, nfaStakingPools)\n    dispatch(updateNfaStakingPoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateNfaStakingUserBalance =\n  (chainId: number, sousId: string, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const nfaStakingPools = getState().nfaStakingPools.data\n    const tokenBalances = await fetchUserBalances(chainId, account, nfaStakingPools)\n    dispatch(updateNfaStakingPoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserNfaStakingStakedBalance =\n  (chainId: number, sousId: string, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const nfaStakingPools = getState().nfaStakingPools.data\n    const stakedBalances = await fetchUserStakeBalances(chainId, account, nfaStakingPools)\n    dispatch(updateNfaStakingPoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserNfaStakingPendingReward =\n  (chainId: number, sousId: string, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const nfaStakingPools = getState().nfaStakingPools.data\n    const pendingRewards = await await fetchUserStakedNfas(chainId, account, nfaStakingPools)\n    dispatch(updateNfaStakingPoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport default NfaStakingPoolsSlice.reducer\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, localStorageKey } from '@ape.swap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport { useNetworkChainId, useToast } from 'state/hooks'\nimport { profileClear } from 'state/profile'\n\nimport { useDispatch } from 'react-redux'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const chainId = useNetworkChainId()\n  const { toastError } = useToast()\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork(chainId)\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(localStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError(t(\"Browser Error: Please use a crypto wallet app's built-in browser to connect to ApeSwap.\"), {\n              text: 'Learn More',\n              url: 'https://apeswap.gitbook.io/apeswap-finance/product-and-features/wallets/how-to-use-apeswap-on-mobile-devices',\n            })\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError(t('Wallet Connection Error: Please complete the authorization using your wallet.'))\n          } else {\n            toastError(`${error.name}, ${error.message}`)\n          }\n        }\n      })\n    } else {\n      console.info('Unable to find connector', 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { Nfa, Profile } from 'state/types'\nimport nfaABI from 'config/abi/nonFungibleApes.json'\nimport nfbABI from 'config/abi/nonFungibleBananas.json'\nimport { getNonFungibleApesAddress, getNonFungibleBananasAddress } from 'utils/addressHelper'\nimport { getContract } from 'utils/getContract'\nimport orderBy from 'lodash/orderBy'\n\nconst getProfile = async (nfas: Nfa[], chainId: number, address: string): Promise<Profile> => {\n  const nfaAddress = getNonFungibleApesAddress(chainId)\n  const nfaContract = getContract(nfaABI, nfaAddress, chainId)\n\n  const nfbAddress = getNonFungibleBananasAddress(chainId)\n  const nfbContract = getContract(nfbABI, nfbAddress, chainId)\n  try {\n    const nfasOwned = address ? await nfaContract.balanceOf(address) : '0'\n    const nfbsOwned = address ? await nfbContract.balanceOf(address) : '0'\n    if (nfasOwned === '0' && nfbsOwned === '0') {\n      return null\n    }\n    let ownedNfts = null\n    let rarestNft = null\n    if (nfasOwned !== '0' && !nfasOwned.eq(0)) {\n      const promises = []\n      for (let i = 0; i < nfasOwned; i++) {\n        promises.push(nfaContract.tokenOfOwnerByIndex(address, i))\n      }\n      const nfaReturn = await (await Promise.all(promises)).map(Number)\n      ownedNfts = nfaReturn.map((index) => nfas[index])\n      rarestNft = ownedNfts ? orderBy(ownedNfts, ['attributes.rarityOverallRank'])[0] : null\n      // Save the preview image to local storage for the exchange\n      localStorage.setItem(\n        `profile_${address}`,\n        JSON.stringify({\n          avatar: rarestNft.image,\n        }),\n      )\n    } else if (nfbsOwned !== '0' && !nfbsOwned.eq(0)) {\n      const promises = []\n      for (let i = 0; i < nfbsOwned; i++) {\n        promises.push(nfbContract.tokenOfOwnerByIndex(address, i))\n      }\n      const nfbReturn = await (await Promise.all(promises)).map(Number)\n      rarestNft = {\n        image: `https://ipfs.io/ipfs/QmYhuJnr3GGUnDGtg6rmSXTgo7FzaWgrriqikfgn5SkXhZ/${nfbReturn[0]}.png`,\n      }\n\n      ownedNfts = null\n      // Save the preview image to local storage for the exchange\n      localStorage.setItem(\n        `profile_${address}`,\n        JSON.stringify({\n          avatar: rarestNft.image,\n        }),\n      )\n    }\n    return ownedNfts || rarestNft\n      ? ({\n          ownedNfts,\n          rarestNft,\n        } as Profile)\n      : null\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AppThunk, Nfa, Profile, ProfileState } from 'state/types'\nimport getProfile from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<Profile>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile =\n  (nfas: Nfa[], chainId: number, address: string): AppThunk =>\n  async (dispatch) => {\n    try {\n      dispatch(profileFetchStart())\n      const profile = await getProfile(nfas, chainId, address)\n      dispatch(profileFetchSucceeded(profile))\n    } catch (error) {\n      dispatch(profileFetchFailed())\n    }\n  }\n\nexport default profileSlice.reducer\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport { escapeRegExp } from 'utils'\nimport { Text, Flex, Input as NewInput } from '@ape.swap/uikit'\nimport { Input } from '@apeswapfinance/uikit'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from '@emotion/styled'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    if (value === '' || inputRegex.test(escapeRegExp(value))) {\n      setSlippageInput(value)\n\n      try {\n        const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n        if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n          setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex sx={{ flexDirection: 'column' }}>\n      <Flex sx={{ flexDirection: 'column', mb: '5px' }}>\n        <Flex mb=\"12px\">\n          <Text weight={500}>{t('Slippage Tolerance')}</Text>\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <SelectButton\n            sx={{ background: userSlippageTolerance === 10 ? 'yellow' : 'white3' }}\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n          >\n            <Text weight={700} sx={{ lineHeight: '0px' }}>\n              0.1%\n            </Text>\n          </SelectButton>\n          <SelectButton\n            sx={{ background: userSlippageTolerance === 50 ? 'yellow' : 'white3' }}\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n          >\n            <Text weight={700} sx={{ lineHeight: '0px' }}>\n              0.5%\n            </Text>\n          </SelectButton>\n          <SelectButton\n            sx={{ background: userSlippageTolerance === 100 ? 'yellow' : 'white3' }}\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n          >\n            <Text weight={700} sx={{ lineHeight: '0px' }}>\n              1.0%\n            </Text>\n          </SelectButton>\n          <Flex sx={{ alignItems: 'center' }}>\n            <Flex sx={{ alignItems: 'center', position: 'relative' }}>\n              <StyledInput\n                inputMode=\"decimal\"\n                pattern=\"^[0-9]*[.,]?[0-9]{0,2}$\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(event) => {\n                  if (event.currentTarget.validity.valid) {\n                    parseCustomSlippage(event.target.value.replace(/,/g, '.'))\n                  }\n                }}\n                isWarning={!slippageInputIsValid}\n              />\n              <Text color=\"yellow\" weight={700} style={{ position: 'absolute', right: '10px' }}>\n                %\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text weight={500} color={slippageError === SlippageError.InvalidInput ? 'error' : 'error'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between', alignItems: 'center', margin: '5px 0px' }}>\n        <Text weight={500}>{t('Tx deadline (mins)')}</Text>\n        <NewInput\n          inputMode=\"numeric\"\n          pattern=\"^[0-9]+$\"\n          color={deadlineError && 'red'}\n          onBlur={() => {\n            parseCustomDeadline((ttl / 60).toString())\n          }}\n          sx={{\n            width: '91px',\n            height: '36px',\n            borderRadius: '10px',\n            borderColor: 'yellow',\n            color: 'yellow',\n            fontWeight: '700',\n            textAlign: 'center',\n          }}\n          placeholder={(ttl / 60).toString()}\n          value={deadlineInput}\n          onChange={(event) => {\n            if (event.currentTarget.validity.valid) {\n              parseCustomDeadline(event.target.value)\n            }\n          }}\n        />\n      </Flex>\n    </Flex>\n  )\n}\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  height: 36px;\n  font-weight: 700;\n  color: ${(props) => props.theme.colors.yellow};\n  border-color: ${(props) => props.theme.colors.yellow};\n`\nconst SelectButton = styled(Flex)`\n  width: 64.67px;\n  min-width: 57px;\n  height: 36px;\n  radius: 10px;\n  color: primaryBright;\n  border-radius: 10px;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  margin-right: 5px;\n`\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Text, Flex, Modal, ModalProps, Checkbox, Button } from '@apeswapfinance/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport UnderlinedButton from 'components/UnderlinedButton'\n\ninterface ExpertModalProps extends ModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const { t } = useTranslation()\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  return (\n    <div style={{ zIndex: 101, maxWidth: '360px' }}>\n      <Modal title={t('Expert Mode')} onDismiss={() => setShowConfirmExpertModal(false)} maxWidth=\"360px\">\n        <Text>\n          {t(\n            'Expert mode turns off the Confirm transaction prompt, and allows high slippage trades that often result in bad rates and lost funds',\n          )}\n        </Text>\n        <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing')}</Text>\n        <Flex alignItems=\"center\" mb=\"24px\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isRememberChecked}\n            onChange={() => setIsRememberChecked(!isRememberChecked)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" color=\"gray\" style={{ userSelect: 'none' }}>\n            {t('Don’t show this again')}\n          </Text>\n        </Flex>\n        <Button\n          mb=\"10px\"\n          fullWidth\n          id=\"confirm-expert-mode\"\n          style={{ fontSize: '16px', fontWeight: 700 }}\n          onClick={() => {\n            // eslint-disable-next-line no-alert\n            if (window.prompt(t('Please type the word \"confirm\" to enable expert mode.')) === 'confirm') {\n              toggleExpertMode()\n              setShowConfirmExpertModal(false)\n              if (isRememberChecked) {\n                setShowExpertModeAcknowledgement(false)\n              }\n            }\n          }}\n        >\n          {t('Turn On Expert Mode')}\n        </Button>\n        <UnderlinedButton\n          text={t('Cancel')}\n          handleClick={() => {\n            setShowConfirmExpertModal(false)\n          }}\n        />\n      </Modal>\n    </div>\n  )\n}\n\nexport default ExpertModal\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  switch: {\n    borderRadius: '8px',\n    backgroundColor: 'white3',\n    'input:checked ~ &': {\n      backgroundColor: 'yellow',\n    },\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, ModalProps, LinkExternal } from '@ape.swap/uikit'\nimport { Modal } from '@apeswapfinance/uikit'\nimport { Link, Switch } from 'theme-ui'\n\nimport {\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n  useUserRecentTransactions,\n  useUserAutonomyPrepay,\n} from 'state/user/hooks'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport { styles } from './styles'\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal: React.FC<ModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [recentTransactions, setRecentTransactions] = useUserRecentTransactions()\n  const [autonomyPrepay, setAutonomyPrepay] = useUserAutonomyPrepay()\n  const { onChangeRecipient } = useSwapActionHandlers()\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal title={t('App Settings')} onDismiss={onDismiss} maxWidth=\"420px\">\n      <ScrollableContainer>\n        <Flex sx={{ justifyContent: 'space-between', alignItems: 'center', marginTop: '10px' }}>\n          <Text\n            as={Link}\n            href=\"https://app.multichain.org/#/router\"\n            size=\"16px\"\n            weight={500}\n            sx={{ cursor: 'pointer' }}\n          >\n            {t('Bridge')}\n          </Text>\n          <LinkExternal href=\"https://app.multichain.org/#/router\" />\n        </Flex>\n        <Text size=\"18px\" weight={700} margin=\"10px 0px\">\n          {t('Swap')}\n        </Text>\n        <TransactionSettings />\n        <Flex sx={{ justifyContent: 'space-between', margin: '5px 0px' }}>\n          <Text weight={500}>{t('Recent Transactions')}</Text>\n          <Flex>\n            <Switch\n              sx={styles.switch}\n              checked={recentTransactions}\n              onChange={() => {\n                setRecentTransactions(!recentTransactions)\n              }}\n            />\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: 'space-between', margin: '5px 0px' }}>\n          <Text>{t('Expert Mode')}</Text>\n          <Flex>\n            <Switch sx={styles.switch} checked={expertMode} onChange={handleExpertModeToggle} />\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: 'space-between', margin: '5px 0px' }}>\n          <Text weight={500}>{t('Disable Multihops')}</Text>\n          <Flex>\n            <Switch\n              sx={styles.switch}\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: 'space-between', margin: '5px 0px' }}>\n          <Text weight={500}>{t('Autonomy Prepay')}</Text>\n          <Flex>\n            <Switch\n              sx={styles.switch}\n              checked={autonomyPrepay}\n              onChange={() => {\n                setAutonomyPrepay(!autonomyPrepay)\n              }}\n            />\n          </Flex>\n        </Flex>\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import { ThemeUIStyleObject } from 'theme-ui'\nimport { textUnderlineHover } from 'views/Dex/styles'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Token selector container\n  dexNavContainer: {\n    position: 'relative',\n    width: '100%',\n    height: '30px',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n  },\n\n  navLinkContainer: {\n    width: '100%',\n    maxWidth: '225px',\n    paddingRight: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navIconContainer: {\n    width: '100%',\n    maxWidth: '60px',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  underline: {\n    display: 'inline-block',\n    position: 'relative',\n    background: 'primaryBright',\n    height: '1px',\n    width: '100%',\n    borderRadius: '10px',\n  },\n  navLink: {\n    position: 'relative',\n    cursor: 'pointer',\n    ...textUnderlineHover,\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Link, useHistory } from 'react-router-dom'\nimport { CogIcon, Flex, Text, useModal, RunFiatButton } from '@ape.swap/uikit'\nimport track from 'utils/track'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport MoonPayModal from 'views/Topup/MoonpayModal'\nimport SettingsModal from '../../../../components/Menu/GlobalSettings/SettingsModal'\nimport { styles } from './styles'\n\nconst DexNav = () => {\n  const { t } = useTranslation()\n  const { pathname } = useHistory().location\n  const { chainId } = useActiveWeb3React()\n\n  const onLiquidity =\n    pathname?.includes('add-liquidity') ||\n    pathname?.includes('liquidity') ||\n    pathname?.includes('remove') ||\n    pathname?.includes('find')\n\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [onPresentModal] = useModal(<MoonPayModal />)\n\n  return (\n    <Flex sx={styles.dexNavContainer}>\n      <Flex\n        sx={{ ...styles.navLinkContainer, justifyContent: chainId === ChainId.BSC ? 'space-between' : 'flex-start' }}\n      >\n        <Text\n          size=\"14px\"\n          sx={{\n            ...styles.navLink,\n            color: !pathname?.includes('swap') && 'textDisabled',\n            mr: chainId === ChainId.BSC ? '0px' : '30px',\n          }}\n          as={Link}\n          to=\"/swap\"\n          id=\"swap-link\"\n          className=\"swap\"\n        >\n          {t('Swap')}\n        </Text>\n        {chainId === ChainId.BSC && (\n          <Text\n            size=\"14px\"\n            sx={{\n              ...styles.navLink,\n              color: !pathname?.includes('orders') && 'textDisabled',\n            }}\n            as={Link}\n            to=\"/limit-orders\"\n            id=\"orders-link\"\n            className=\"orders\"\n          >\n            {t('Orders')}\n          </Text>\n        )}\n        <Text\n          size=\"14px\"\n          sx={{ ...styles.navLink, color: !onLiquidity && 'textDisabled' }}\n          as={Link}\n          to=\"/add-liquidity\"\n          id=\"liquidity-link\"\n          className=\"liquidity\"\n        >\n          {t('Liquidity')}\n        </Text>\n      </Flex>\n      <Flex sx={{ ...styles.navIconContainer }}>\n        <RunFiatButton\n          sx={{ marginRight: '2px', width: '20px' }}\n          mini\n          t={t}\n          runFiat={onPresentModal}\n          track={track}\n          position=\"DEX\"\n          chainId={chainId}\n        />\n        <CogIcon sx={{ cursor: 'pointer' }} onClick={onPresentSettingsModal} />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(DexNav)\n","import apePriceGetterABI from 'config/abi/apePriceGetter.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { Token } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getApePriceGetterAddress } from 'utils/addressHelper'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst fetchPrices = async (chainId, tokens: Token[]) => {\n  const apePriceGetterAddress = getApePriceGetterAddress(chainId)\n  const tokensToCall = Object.fromEntries(Object.entries(tokens).filter(([, values]) => values.address[chainId]))\n  const erc20Calls = Object.values(tokensToCall).map((token) => {\n    return {\n      address: token.address[chainId],\n      name: 'decimals',\n    }\n  })\n  const tokenDecimals = await multicall(chainId, erc20ABI, erc20Calls)\n  const calls = Object.values(tokensToCall).map((token, i) => {\n    if (token.lpToken) {\n      return {\n        address: apePriceGetterAddress,\n        name: 'getLPPrice',\n        params: [token.address[chainId], tokenDecimals[i][0]],\n      }\n    }\n    return {\n      address: apePriceGetterAddress,\n      name: 'getPrice',\n      params: [token.address[chainId], tokenDecimals[i][0]],\n    }\n  })\n  const tokenPrices = await multicall(chainId, apePriceGetterABI, calls)\n\n  // Banana should always be the first token\n  const mappedTokenPrices = Object.values(tokensToCall).map((token, i) => {\n    return {\n      symbol: token.symbol,\n      address: token.address,\n      price:\n        token.symbol === 'GNANA'\n          ? getBalanceNumber(tokenPrices[0], tokenDecimals[i][0]) * 1.389\n          : getBalanceNumber(tokenPrices[i], tokenDecimals[i][0]),\n      decimals: tokenDecimals[i][0],\n    }\n  })\n  return mappedTokenPrices\n}\n\nexport default fetchPrices\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheTokens = []\n\nconst fetchTokenPriceConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      tries++\n      const response = await axios.get(`${apeswapListUrl}/tokens.json`)\n      const tokenPriceConfigResp = await response.data\n      if (tokenPriceConfigResp.statusCode === 500) {\n        return null\n      }\n      cacheTokens = tokenPriceConfigResp\n      return tokenPriceConfigResp\n    }\n    return cacheTokens\n  } catch (error) {\n    return null\n  }\n}\n\nexport default fetchTokenPriceConfig\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Token } from 'config/constants/types'\nimport { getTokenUsdPrice } from 'utils/getTokenUsdPrice'\nimport { getBananaAddress } from 'utils/addressHelper'\nimport fetchPrices from './fetchPrices'\nimport { TokenPricesState, TokenPrices, AppThunk } from '../types'\nimport fetchTokenPriceConfig from './api'\n\nconst initialState: TokenPricesState = {\n  isTokensInitialized: false,\n  isInitialized: false,\n  isLoading: true,\n  tokens: [],\n  bananaPrice: null,\n  data: null,\n}\n\nexport const tokenPricesSlice = createSlice({\n  name: 'tokenPrices',\n  initialState,\n  reducers: {\n    tokenPricesFetchStart: (state) => {\n      state.isLoading = true\n    },\n    setBananaPrice: (state, action) => {\n      state.bananaPrice = action.payload\n      state.isInitialized = true\n    },\n    setIntialTokens: (state, action) => {\n      state.tokens = action.payload\n      state.isInitialized = true\n    },\n    tokenPricesFetchSucceeded: (state, action: PayloadAction<TokenPrices[]>) => {\n      state.data = action.payload\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    tokenPricesFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n  },\n})\n\n// Actions\nexport const {\n  setBananaPrice,\n  setIntialTokens,\n  tokenPricesFetchStart,\n  tokenPricesFetchSucceeded,\n  tokenPricesFetchFailed,\n} = tokenPricesSlice.actions\n\nexport const setInitialTokensDataAsync = () => async (dispatch) => {\n  try {\n    const initialTokensState: Token[] = await fetchTokenPriceConfig()\n    dispatch(setIntialTokens(initialTokensState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchTokenPrices =\n  (chainId, tokens): AppThunk =>\n  async (dispatch) => {\n    try {\n      dispatch(tokenPricesFetchStart())\n      const tokenPrices = await fetchPrices(chainId, tokens)\n      dispatch(tokenPricesFetchSucceeded(tokenPrices))\n    } catch (error) {\n      dispatch(tokenPricesFetchFailed())\n    }\n  }\n\nexport const fetchBananaPrice =\n  (chainId): AppThunk =>\n  async (dispatch) => {\n    const bananaPrice = await getTokenUsdPrice(chainId, getBananaAddress(chainId), 18)\n    dispatch(setBananaPrice(bananaPrice))\n  }\n\nexport default tokenPricesSlice.reducer\n","import { apiBaseUrl } from 'hooks/api'\nimport { IazoSocialInfo, IazoFeeInfo, IazoTimeInfo, IazoStatus, Iazo, IazoTokenInfo } from 'state/types'\n\nconst getIazosFromApi = async (chainId: number) => {\n  const apiUrl = chainId === 97 ? 'https://apeswap-api-development.herokuapp.com' : apiBaseUrl\n  try {\n    const response = await fetch(`${apiUrl}/iazo`)\n    const statRes = await response.json()\n    if (statRes.statusCode === 500) {\n      return null\n    }\n    return statRes\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nconst getIazoFromApi = async (chainId: number, address: string) => {\n  const apiUrl = chainId === 97 ? 'https://apeswap-api-development.herokuapp.com' : apiBaseUrl\n  try {\n    const response = await fetch(`${apiUrl}/iazo/${address}`)\n    const statRes = await response.json()\n    if (statRes.statusCode === 500) {\n      return null\n    }\n    return statRes\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nconst formatIazoData = (iazo): Iazo => {\n  const iazoSocialInfo: IazoSocialInfo = {\n    twitter: iazo.twitter,\n    telegram: iazo.telegram,\n    medium: iazo.medium,\n    whitepaper: iazo.whitepaper,\n    website: iazo.website,\n    description: iazo.description,\n    tokenImage: iazo.pathImage,\n  }\n\n  const timeInfo: IazoTimeInfo = {\n    startTime: iazo.startDate,\n    activeTime: iazo.duration,\n    lockPeriod: iazo.lockTime,\n  }\n\n  const feeInfo: IazoFeeInfo = {\n    feeAddress: null,\n    baseFee: null,\n    iazoTokenFee: null,\n  }\n\n  const status: IazoStatus = {\n    lpGenerationComplete: null,\n    forceFailed: null,\n    totalBaseCollected: null,\n    totalTokensSold: null,\n    totalTokensWithdraw: null,\n    totalBaseWithdraw: null,\n    numBuyers: null,\n  }\n\n  const baseToken: IazoTokenInfo = {\n    address: iazo.token2,\n    name: null,\n    symbol: null,\n    decimals: null,\n  }\n\n  const iazoToken: IazoTokenInfo = {\n    address: iazo.token1,\n    name: null,\n    symbol: null,\n    decimals: null,\n    totalSupply: null,\n  }\n\n  return {\n    iazoContractAddress: iazo.iazoAddress,\n    iazoOwnerAddress: iazo.owner,\n    tokenPrice: iazo.pricePresale,\n    amount: iazo.totalPresale,\n    hardcap: iazo.hardcap,\n    softcap: iazo.softcap,\n    maxSpendPerBuyer: iazo.limitDefault,\n    liquidityPercent: iazo.percentageLock,\n    listingPrice: iazo.priceListing,\n    burnRemain: iazo.burnRemaining,\n    iazoTags: iazo.tags,\n    iazoState: null,\n    feeInfo,\n    timeInfo,\n    status,\n    baseToken,\n    iazoToken,\n    socialInfo: iazoSocialInfo,\n  }\n}\nconst fetchIazosFromApi = async (chainId: number): Promise<Iazo[]> => {\n  const iazos = await getIazosFromApi(chainId)\n\n  const formattedIazos = iazos.map((iazo) => {\n    return formatIazoData(iazo)\n  })\n  return formattedIazos\n}\n\nexport const fetchIazoFromApi = async (chainId: number, address: string): Promise<Iazo[]> => {\n  const iazos = await getIazoFromApi(chainId, address)\n  const formattedIazos = iazos.map((iazo) => {\n    return formatIazoData(iazo)\n  })\n  return formattedIazos\n}\n\nexport default fetchIazosFromApi\n","import iazoAbi from 'config/abi/iazo.json'\nimport iazoExposerABI from 'config/abi/iazoExposer.json'\nimport iazoSettingsAbi from 'config/abi/iazoSettings.json'\nimport erc20Abi from 'config/abi/erc20.json'\nimport { getIazoExposerAddress, getIazoSettingsAddress } from 'utils/addressHelper'\nimport multicall from 'utils/multicall'\nimport { IazoFeeInfo, IazoStatus, IazoDefaultSettings, IazoTokenInfo } from 'state/types'\n\nconst fetchIazoDefaultSettings = async (chainId: number) => {\n  const iazoSettingsAddress = getIazoSettingsAddress(chainId)\n  const [fetchIazoDefaultSetting, fetchIazoDelaySetting] = await multicall(chainId, iazoSettingsAbi, [\n    { address: iazoSettingsAddress, name: 'SETTINGS' },\n    { address: iazoSettingsAddress, name: 'DELAY_SETTINGS' },\n  ])\n  const iazoDefaultSettings = fetchIazoDefaultSetting\n  const iazoDelaySettings = fetchIazoDelaySetting\n\n  const iazoDefaultSettingsData: IazoDefaultSettings = {\n    adminAddress: iazoDefaultSettings[0].toString(),\n    feeAddress: iazoDefaultSettings[1].toString(),\n    burnAddress: iazoDefaultSettings[2].toString(),\n    baseFee: iazoDefaultSettings[3].toString(),\n    maxBaseFee: iazoDefaultSettings[4].toString(),\n    iazoTokenFee: iazoDefaultSettings[5].toString(),\n    maxIazoTokenFee: iazoDefaultSettings[6].toString(),\n    nativeCreationFee: iazoDefaultSettings[7].toString(),\n    minIazoLength: iazoDelaySettings[0].toString(),\n    maxIazoLength: iazoDelaySettings[1].toString(),\n    minLockPeriod: iazoDelaySettings[3].toString(),\n  }\n  return iazoDefaultSettingsData\n}\n\nexport const fetchIazoTokenDetails = async (chainId: number, iazoTokenAddress: string, baseTokenAddress: string) => {\n  const erc20Calls = [\n    { address: baseTokenAddress, name: 'name' },\n    { address: baseTokenAddress, name: 'symbol' },\n    { address: baseTokenAddress, name: 'decimals' },\n    { address: iazoTokenAddress, name: 'name' },\n    { address: iazoTokenAddress, name: 'symbol' },\n    { address: iazoTokenAddress, name: 'decimals' },\n    { address: iazoTokenAddress, name: 'totalSupply' },\n  ]\n\n  const [\n    baseTokenName,\n    baseTokenSymbol,\n    baseTokenDecimals,\n    iazoTokenName,\n    iazoTokenSymbol,\n    iazoTokenDecimals,\n    iazoTokenTotalSupply,\n  ] = await multicall(chainId, erc20Abi, erc20Calls)\n\n  const baseTokenData: IazoTokenInfo = {\n    address: baseTokenAddress.toString(),\n    name: baseTokenName.toString(),\n    symbol: baseTokenSymbol.toString(),\n    decimals: baseTokenDecimals.toString(),\n  }\n\n  const iazoTokenData: IazoTokenInfo = {\n    address: iazoTokenAddress.toString(),\n    name: iazoTokenName.toString(),\n    symbol: iazoTokenSymbol.toString(),\n    decimals: iazoTokenDecimals.toString(),\n    totalSupply: iazoTokenTotalSupply.toString(),\n  }\n\n  return { baseToken: baseTokenData, iazoToken: iazoTokenData }\n}\n\nexport const fetchIazoStatusInfo = async (chainId: number, address: string) => {\n  const calls = [\n    { address, name: 'FEE_INFO' },\n    { address, name: 'STATUS' },\n    { address, name: 'getIAZOState' },\n    { address, name: 'IAZO_INFO' },\n  ]\n  const iazoStates = {\n    '0': 'QUEUED',\n    '1': 'ACTIVE',\n    '2': 'SUCCESS',\n    '3': 'HARD_CAP_MET',\n    '4': 'FAILED',\n  }\n  const [feeInfo, status, iazoState, iazoInfo] = await multicall(chainId, iazoAbi, calls)\n\n  const iazoData = {\n    tokenPrice: iazoInfo[4].toString(),\n    amount: iazoInfo[5].toString(),\n    hardcap: iazoInfo[6].toString(),\n    softcap: iazoInfo[7].toString(),\n    maxSpendPerBuyer: iazoInfo[8].toString(),\n    liquidityPercent: iazoInfo[9].toString(),\n    listingPrice: iazoInfo[10].toString(),\n  }\n\n  const feeInfoData: IazoFeeInfo = {\n    feeAddress: feeInfo[0].toString(),\n    baseFee: feeInfo[1].toString(),\n    iazoTokenFee: feeInfo[2].toString(),\n  }\n\n  const iazoStatusData: IazoStatus = {\n    lpGenerationComplete: status[0].toString(),\n    forceFailed: status[1].toString(),\n    totalBaseCollected: status[2].toString(),\n    totalTokensSold: status[3].toString(),\n    totalTokensWithdraw: status[4].toString(),\n    totalBaseWithdraw: status[5].toString(),\n    numBuyers: status[6].toString(),\n  }\n\n  return { ...iazoData, feeInfo: feeInfoData, status: iazoStatusData, iazoState: iazoStates[iazoState.toString()] }\n}\n\nexport const isRegisteredIazoCheck = async (chainId: number, address: string) => {\n  const iazoExposerAddress = getIazoExposerAddress(chainId)\n  const resp = await multicall(chainId, iazoExposerABI, [\n    { address: iazoExposerAddress, name: 'IAZOIsRegistered', params: [address] },\n  ])\n  return { isRegistered: resp[0][0] }\n}\n\nexport default fetchIazoDefaultSettings\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { IazosState } from '../types'\nimport fetchIazosFromApi, { fetchIazoFromApi } from './fetchIazosFromApi'\nimport fetchIazoDefaultSettings, {\n  fetchIazoTokenDetails,\n  fetchIazoStatusInfo,\n  isRegisteredIazoCheck,\n} from './fetchIazoWeb3'\n\nconst initialState: IazosState = {\n  isInitialized: false,\n  isLoading: true,\n  iazoData: null,\n  iazoDefaultSettings: null,\n}\n\nexport const iazosSlice = createSlice({\n  name: 'iazos',\n  initialState,\n  reducers: {\n    iazosFetchStart: (state) => {\n      state.isLoading = true\n    },\n    iazosFetchSucceeded: (state, action) => {\n      const { liveIazosData, singleFlag } = action.payload\n      if (singleFlag) {\n        state.iazoData = state.iazoData\n          ? state.iazoData.map((iazo) => {\n              const liveIazoData = state.iazoData.find(\n                (entry) => entry.iazoContractAddress === iazo.iazoContractAddress,\n              )\n              return { ...liveIazoData, ...iazo }\n            })\n          : liveIazosData\n      } else {\n        state.iazoData = state.iazoData\n          ? liveIazosData.map((iazo) => {\n              const liveIazoData = state.iazoData.find(\n                (entry) => entry.iazoContractAddress === iazo.iazoContractAddress,\n              )\n              return { ...iazo, ...liveIazoData }\n            })\n          : liveIazosData\n      }\n      state.isInitialized = true\n      state.isLoading = false\n    },\n    iazoDefaultSettings: (state, action) => {\n      const settings = action.payload\n      state.iazoDefaultSettings = settings\n    },\n    iazosFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = false\n    },\n    updateIazoWeb3Data: (state, action) => {\n      const { value, contractAddress } = action.payload\n      const index = state.iazoData.findIndex((p) => p.iazoContractAddress === contractAddress)\n      state.iazoData[index] = { ...state.iazoData[index], ...value }\n    },\n  },\n})\n\n// Actions\nexport const { iazosFetchStart, iazosFetchSucceeded, iazosFetchFailed, updateIazoWeb3Data, iazoDefaultSettings } =\n  iazosSlice.actions\n\nexport const fetchIazos = (chainId: number) => async (dispatch) => {\n  try {\n    dispatch(iazosFetchStart())\n    const iazos = await fetchIazosFromApi(chainId)\n    dispatch(iazosFetchSucceeded({ liveIazosData: iazos, singleFlag: false }))\n    iazos?.map(async (iazo) => {\n      const isRegestered = await isRegisteredIazoCheck(chainId, iazo.iazoContractAddress)\n      dispatch(updateIazoWeb3Data({ value: isRegestered, contractAddress: iazo.iazoContractAddress }))\n      if (isRegestered?.isRegistered) {\n        const iazoTokenDetails = await fetchIazoTokenDetails(chainId, iazo.baseToken.address, iazo.iazoToken.address)\n        dispatch(\n          updateIazoWeb3Data({\n            value: iazoTokenDetails,\n            contractAddress: iazo.iazoContractAddress,\n            iazoState: iazo.iazoState,\n          }),\n        )\n        const iazoStatusInfo = await fetchIazoStatusInfo(chainId, iazo.iazoContractAddress)\n        dispatch(updateIazoWeb3Data({ value: iazoStatusInfo, contractAddress: iazo.iazoContractAddress }))\n      }\n    })\n  } catch (error) {\n    console.error(error)\n    dispatch(iazosFetchFailed())\n  }\n}\n\nexport const fetchIazo = (chainId: number, address: string) => async (dispatch) => {\n  try {\n    dispatch(iazosFetchStart())\n    const iazos = await fetchIazoFromApi(chainId, address)\n    dispatch(iazosFetchSucceeded({ liveIazosData: iazos, singleFlag: true }))\n    iazos?.map(async (iazo) => {\n      const isRegestered = await isRegisteredIazoCheck(chainId, iazo.iazoContractAddress)\n      dispatch(updateIazoWeb3Data({ value: isRegestered, contractAddress: iazo.iazoContractAddress }))\n      if (isRegestered?.isRegistered) {\n        const iazoTokenDetails = await fetchIazoTokenDetails(chainId, iazo.baseToken.address, iazo.iazoToken.address)\n        dispatch(\n          updateIazoWeb3Data({\n            value: iazoTokenDetails,\n            contractAddress: iazo.iazoContractAddress,\n            iazoState: iazo.iazoState,\n          }),\n        )\n        const iazoStatusInfo = await fetchIazoStatusInfo(chainId, iazo.iazoContractAddress)\n        dispatch(updateIazoWeb3Data({ value: iazoStatusInfo, contractAddress: iazo.iazoContractAddress }))\n      }\n    })\n  } catch (error) {\n    console.error(error)\n    dispatch(iazosFetchFailed())\n  }\n}\n\nexport const fetchSettings = (chainId: number) => async (dispatch) => {\n  try {\n    const settings = await fetchIazoDefaultSettings(chainId)\n    dispatch(iazoDefaultSettings(settings))\n  } catch (error) {\n    console.error(error)\n    dispatch(iazosFetchFailed())\n  }\n}\n\nexport default iazosSlice.reducer\n","/** @jsxImportSource theme-ui */\nimport { AutoRenewIcon, BlockIcon, Flex, Text, CheckmarkCircleIcon, Svg } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { orderBy } from 'lodash'\nimport React from 'react'\nimport { useAppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { Grid } from 'theme-ui'\nimport { getEtherscanLink } from 'utils'\nimport { dexStyles, textUnderlineHover } from 'views/Dex/styles'\n\nconst renderIcon = (tx: TransactionDetails) => {\n  if (!tx.receipt) {\n    return <AutoRenewIcon spin width=\"20px\" />\n  }\n\n  return tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"20px\" />\n  ) : (\n    <BlockIcon color=\"error\" width=\"20px\" />\n  )\n}\n\nconst RecentTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n  const { t } = useTranslation()\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n  return (\n    <Flex sx={{ ...dexStyles.dexContainer, marginTop: '10px' }}>\n      <Flex sx={{ maxWidth: '100%', width: '420px' }} />\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((tx) => {\n          return (\n            <Grid columns=\".2fr 2fr 0fr\" sx={{ width: '100%', alignItems: 'center', margin: '2px 0px' }} key={tx.hash}>\n              {renderIcon(tx)}\n              <Text size=\"12px\" weight={600}>\n                {tx.summary ?? tx.hash}\n              </Text>\n              <a href={getEtherscanLink(tx.hash, 'transaction', chainId)} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Svg icon=\"external\" width=\"12px\" />\n              </a>\n            </Grid>\n          )\n        })\n      ) : (\n        <Flex sx={{ alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n          <Text>{t('No recent transactions')}</Text>\n        </Flex>\n      )}\n      {sortedTransactions.length > 0 && (\n        <Flex sx={{ alignItems: 'center', justifyContent: 'center', width: '100%', marginTop: '10px' }}>\n          <Text\n            size=\"12px\"\n            weight={700}\n            sx={{ position: 'relative', cursor: 'pointer', ...textUnderlineHover }}\n            onClick={handleClearAll}\n          >\n            {t('Clear all')}\n          </Text>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default React.memo(RecentTransactions)\n","import { ChainId, Currency, ETHER, Token } from '@apeswapfinance/sdk'\nimport { getMaticTokenLogoURL } from 'config/constants/maticTokenMapping'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport Logo from './Logo'\n\nconst getTokenLogoURL = (address: string, chainId: any) => {\n  let imageURL\n  if (chainId === ChainId.BSC) {\n    if (address?.toLowerCase() === '0x55d398326f99059fF775485246999027B3197955'.toLowerCase()) {\n      imageURL = 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/USDT.svg'\n    } else {\n      imageURL = `https://assets-cdn.trustwallet.com/blockchains/smartchain/assets/${address}/logo.png`\n    }\n  } else if (chainId === ChainId.MATIC) {\n    imageURL = getMaticTokenLogoURL(address)\n  } else {\n    imageURL = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n  }\n  return imageURL\n}\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\nconst StyledNativeCurrencyLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: 10px;\n`\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const { chainId } = useActiveWeb3React()\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address, chainId)]\n      }\n      return [getTokenLogoURL(currency.address, chainId)]\n    }\n    return []\n  }, [chainId, currency, uriLocations])\n\n  if (currency === ETHER && chainId) {\n    if (chainId === ChainId.MATIC || chainId === ChainId.MATIC_TESTNET) {\n      return (\n        <StyledNativeCurrencyLogo\n          size={size}\n          style={style}\n          src=\"https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/MATIC.svg\"\n        />\n      )\n    }\n    if (chainId === ChainId.MAINNET) {\n      return (\n        <StyledNativeCurrencyLogo\n          size={size}\n          style={style}\n          src=\"https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/ETH.svg\"\n        />\n      )\n    }\n    return (\n      <StyledNativeCurrencyLogo\n        size={size}\n        style={style}\n        src=\"https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/WBNB.svg\"\n      />\n    )\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.getSymbol(chainId) ?? 'token'} logo`} style={style} />\n}\n","export const getMaticTokenLogoURL = (address: string) => {\n  let uri\n  if (address?.toLowerCase() === '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270') {\n    address = '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n  }\n  if (address?.toLowerCase() === '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063') {\n    address = '0x6B175474E89094C44Da98b954EedeAC495271d0F'\n  }\n  if (address?.toLowerCase() === '0xc2132d05d31c914a87c6611c10748aeb04b58e8f') {\n    uri = 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/USDT.svg'\n  }\n  if (address?.toLowerCase() === '0x2791bca1f2de4661ed88a30c99a7a9449aa84174') {\n    address = '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'\n  }\n\n  if (address?.toLowerCase() === '0xb33eaad8d922b1083446dc23f610c2567fb5180f') {\n    address = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'\n  }\n\n  if (address?.toLowerCase() === '0xdb3b3b147a030f032633f6c4bebf9a2fb5a882b5') {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-interface/master/assets/easyfi-token.png'\n  }\n\n  if (address?.toLowerCase() === '0x831753dd7087cac61ab5644b308642cc1c33dc13') {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-interface/master/public/favicon.jpeg'\n  }\n\n  if (address?.toLowerCase() === '0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6') {\n    address = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'\n  }\n\n  if (address?.toLowerCase() === '0x385eeac5cb85a38a9a07a70c73e0a3271cfb54a7') {\n    uri = 'https://etherscan.io/token/images/AavegotchiGHST_32.png'\n  }\n\n  if (address?.toLowerCase() === '0x4ebde54ba404be158262ede801744b92b9878c61') {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-interface/master/assets/easyfi-token.png'\n  }\n\n  if (address?.toLowerCase() === '0xa1c09c8f4f5d03fcc27b456475d53d988e98d7c5') {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-interface/master/assets/easyfi-token.png'\n  }\n\n  if (address?.toLowerCase() === '0xfc39742fe9420a7af23757fc7e78d1c3ae4a9474') {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-interface/master/assets/easyfi-token.png'\n  }\n\n  if (address?.toLowerCase() === '0x9f5755d47fb80100e7ee65bf7e136fca85dd9334') {\n    uri = 'https://etherscan.io/token/images/om_32.png'\n  }\n\n  if (address?.toLowerCase() === '0x9719d867a500ef117cc201206b8ab51e794d3f82') {\n    uri = 'https://aavegotchi.com/images/matokens/maUSDC.svg'\n  }\n\n  if (address?.toLowerCase() === '0xE0b22E0037B130A9F56bBb537684E6fA18192341'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maDAI.svg'\n  }\n\n  if (address?.toLowerCase() === '0x20D3922b4a1A8560E1aC99FBA4faDe0c849e2142'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maWETH.svg'\n  }\n\n  if (address?.toLowerCase() === '0x823CD4264C1b951C9209aD0DeAea9988fE8429bF'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maAAVE.svg'\n  }\n\n  if (address?.toLowerCase() === '0x98ea609569bD25119707451eF982b90E3eb719cD'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maLINK.svg'\n  }\n\n  if (address?.toLowerCase() === '0xDAE5F1590db13E3B40423B5b5c5fbf175515910b'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maUSDT.svg'\n  }\n\n  if (address?.toLowerCase() === '0xF4b8888427b00d7caf21654408B7CBA2eCf4EbD9'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maTUSD.svg'\n  }\n\n  if (address?.toLowerCase() === '0xe86E8beb7340659DDDCE61727E500e3A5aD75a90'.toLowerCase()) {\n    uri = 'https://s2.gifyu.com/images/zutlogo.jpg'\n  }\n\n  if (address?.toLowerCase() === '0x104592a158490a9228070e0a8e5343b499e125d0'.toLowerCase()) {\n    uri = 'https://avatars.githubusercontent.com/u/56005256?s=200&v=4'\n  }\n\n  if (address?.toLowerCase() === '0x9C78EE466D6Cb57A4d01Fd887D2b5dFb2D46288f'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/cometh_32.png'\n  }\n\n  if (address?.toLowerCase() === '0x127984b5E6d5c59f81DACc9F1C8b3Bdc8494572e'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/pepedex_32.png?v=2'\n  }\n\n  if (address?.toLowerCase() === '0x2a93172c8DCCbfBC60a39d56183B7279a2F647b4'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-default-token-list/master/assets/dg.jpg'\n  }\n\n  if (address?.toLowerCase() === '0x3e121107F6F22DA4911079845a470757aF4e1A1b'.toLowerCase()) {\n    uri = 'https://avatars.githubusercontent.com/u/56005256?s=200&v=4'\n  }\n\n  if (address?.toLowerCase() === '0x104592a158490a9228070E0A8e5343B499e125D0'.toLowerCase()) {\n    uri =\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x853d955aCEf822Db058eb8505911ED77F175b99e/logo.png'\n  }\n\n  if (address?.toLowerCase() === '0xab0b2ddB9C7e440fAc8E140A89c0dbCBf2d7Bbff'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/harvestfi/assets/main/farm-logo.png'\n  }\n\n  if (address?.toLowerCase() === '0x034b2090b579228482520c589dbD397c53Fc51cC'.toLowerCase()) {\n    uri = 'https://s3-us-west-2.amazonaws.com/acf-uploads/apyvisionlogo200circle.png'\n  }\n\n  if (address?.toLowerCase() === '0x7FBc10850caE055B27039aF31bD258430e714c62'.toLowerCase()) {\n    uri = 'https://assets.coingecko.com/coins/images/2707/small/UnibrightLogo_colorful_500x500_preview.png?1547036916'\n  }\n\n  if (address?.toLowerCase() === '0x0e59D50adD2d90f5111aca875baE0a72D95B4762'.toLowerCase()) {\n    uri = 'https://dark-build.app/logo192.png'\n  }\n\n  if (address?.toLowerCase() === '0x3809dcDd5dDe24B37AbE64A5a339784c3323c44F'.toLowerCase()) {\n    uri = 'https://i.imgur.com/vZnU36G.png'\n  }\n\n  if (address?.toLowerCase() === '0x23D29D30e35C5e8D321e1dc9A8a61BFD846D4C5C'.toLowerCase()) {\n    uri = 'https://hex.com/favicon.png'\n  }\n\n  if (address?.toLowerCase() === '0x07738Eb4ce8932CA961c815Cb12C9d4ab5Bd0Da4'.toLowerCase()) {\n    uri = 'https://etherlegends.com/ELET.png'\n  }\n\n  if (address?.toLowerCase() === '0x8d1566569d5b695d44a9a234540f68D393cDC40D'.toLowerCase()) {\n    uri = 'https://i.imgur.com/IIUglm9.png?1'\n  }\n\n  if (address?.toLowerCase() === '0x66768ad00746aC4d68ded9f64886d55d5243f5Ec'.toLowerCase()) {\n    uri = 'https://rebalancetoken.io/images/logo/logo.png'\n  }\n\n  if (address?.toLowerCase() === '0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maUNI.svg'\n  }\n\n  if (address?.toLowerCase() === '0xe20f7d1f0eC39C4d5DB01f53554F2EF54c71f613'.toLowerCase()) {\n    uri = 'https://aavegotchi.com/images/matokens/maYFI.svg'\n  }\n\n  if (address?.toLowerCase() === '0x840195888Db4D6A99ED9F73FcD3B225Bb3cB1A79'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-default-token-list/master/assets/sx.jpg'\n  }\n\n  if (address?.toLowerCase() === '0xe6fc6c7cb6d2c31b359a49a33ef08ab87f4de7ce') {\n    uri = 'https://assets.coingecko.com/coins/images/7697/small/N7aEdYrY_400x400.png?1561587437'\n  }\n\n  if (address?.toLowerCase() === '0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39') {\n    address = '0x514910771AF9Ca656af840dff83E8264EcF986CA'\n  }\n\n  if (address?.toLowerCase() === '0x71b821aa52a49f32eed535fca6eb5aa130085978') {\n    address = '0xB6eD7644C69416d67B522e20bC294A9a9B405B31'\n  }\n\n  if (address?.toLowerCase() === '0xa1c57f48f0deb89f569dfbe6e2b7f46d33606fd4') {\n    address = '0x0F5D2fB29fb7d3CFeE444a200298f468908cC942'\n  }\n\n  if (address?.toLowerCase() === '0x8505b9d2254a7ae468c0e9dd10ccea3a837aef5c') {\n    address = '0xc00e94Cb662C3520282E6f5717214004A7f26888'\n  }\n\n  if (address?.toLowerCase() === '0x313d009888329c9d1cf4f75ca3f32566335bd604') {\n    address = '0x80fB784B7eD66730e8b1DBd9820aFD29931aab03'\n  }\n\n  if (address?.toLowerCase() === '0xda537104d6a5edd53c6fbba9a898708e465260b6') {\n    address = '0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e'\n  }\n\n  if (address?.toLowerCase() === '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619') {\n    address = '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'\n  }\n\n  if (address?.toLowerCase() === '0x53E0bca35eC356BD5ddDFebbD1Fc0fD03FaBad39'.toLowerCase()) {\n    uri =\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png'\n  }\n\n  if (address?.toLowerCase() === '0xC3Ec80343D2bae2F8E680FDADDe7C17E71E114ea'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/mantradao_32.png'\n  }\n\n  if (address?.toLowerCase() === '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-interface/master/public/favicon.jpeg'\n  }\n\n  if (address?.toLowerCase() === '0xd85d1e945766fea5eda9103f918bd915fbca63e6'.toLowerCase()) {\n    uri = 'https://assets.coingecko.com/coins/images/3263/small/CEL_logo.png?1609598753'\n  }\n\n  if (address?.toLowerCase() === '0x46F48FbdedAa6F5500993BEDE9539ef85F4BeE8e'.toLowerCase()) {\n    uri = 'https://aria.fyi/images/Aria_Logo_256.png'\n  }\n\n  if (address?.toLowerCase() === '0xeCf8f2FA183b1C4d2A269BF98A54fCe86C812d3e'.toLowerCase()) {\n    uri = 'https://i.imgur.com/Z8V1O7H.png'\n  }\n\n  if (address?.toLowerCase() === '0xa1428174F516F527fafdD146b883bB4428682737'.toLowerCase()) {\n    uri = 'https://assets.coingecko.com/coins/images/14040/small/6YPdWn6.png?1613975899'\n  }\n\n  if (address?.toLowerCase() === '0x42435F467D33e5C4146a4E8893976ef12BBCE762'.toLowerCase()) {\n    uri = 'https://i.imgur.com/uVGtugL.png'\n  }\n\n  if (address?.toLowerCase() === '0x7CdC0421469398e0F3aA8890693d86c840Ac8931'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-default-token-list/master/assets/azuki.png'\n  }\n\n  if (address?.toLowerCase() === '0xd28449BB9bB659725aCcAd52947677ccE3719fD7'.toLowerCase()) {\n    uri = 'https://darkmatter.finance/i/favicon/512x512.png'\n  }\n\n  if (address?.toLowerCase() === '0x8a2870fb69A90000D6439b7aDfB01d4bA383A415'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-default-token-list/master/assets/DEGEN_LOGO.png'\n  }\n\n  if (address?.toLowerCase() === '0x521CddC0CBa84F14c69C1E99249F781AA73Ee0BC'.toLowerCase()) {\n    uri = 'https://assets.coingecko.com/coins/images/13719/small/hh.png?1611137626'\n  }\n\n  if (address?.toLowerCase() === '0x6968105460f67c3BF751bE7C15f92F5286Fd0CE5'.toLowerCase()) {\n    uri = 'https://i.imgur.com/FR12tmm.jpg'\n  }\n\n  if (address?.toLowerCase() === '0x9c49BA0212Bb5Db371e66b59D1565b7c06E4894e'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/indexed-cc10_32.png'\n  }\n\n  if (address?.toLowerCase() === '0x282d8efCe846A88B159800bd4130ad77443Fa1A1'.toLowerCase()) {\n    uri = 'https://oceanprotocol.com/static/4ad704a150d436a1f32d495413fc47cd/favicon-white.png'\n  }\n\n  if (address?.toLowerCase() === '0x232eaB56c4fB3f84c6Fb0a50c087c74b7B43c6Ad'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/zuzprotocol_32.png'\n  }\n\n  if (address?.toLowerCase() === '0xFdc26CDA2d2440d0E83CD1DeE8E8bE48405806DC'.toLowerCase()) {\n    uri =\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xb683D83a532e2Cb7DFa5275eED3698436371cc9f/logo.png'\n  }\n\n  if (address?.toLowerCase() === '0xB77e62709e39aD1cbeEBE77cF493745AeC0F453a'.toLowerCase()) {\n    uri = 'https://i.imgur.com/eOOhNeh.png'\n  }\n\n  if (address?.toLowerCase() === '0xB77e62709e39aD1cbeEBE77cF493745AeC0F453a'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/wisetoken_32.png'\n  }\n\n  if (address?.toLowerCase() === '0x82B6205002ecd05e97642D38D61e2cFeaC0E18cE'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/deflect_32.png?=v1'\n  }\n\n  if (address?.toLowerCase() === '0xf153EfF70DC0bf3b085134928daeEA248d9B30d0'.toLowerCase()) {\n    uri =\n      'https://raw.githubusercontent.com/trustwallet/assets/8cb78aca77b340510958ed98a3cd260d2d7f0420/blockchains/ethereum/assets/0x36b679bd64Ed73DBfd88909cDCB892cB66Bd4CBb/logo.png'\n  }\n\n  if (address?.toLowerCase() === '0xa0E390e9ceA0D0e8cd40048ced9fA9EA10D71639'.toLowerCase()) {\n    uri = 'https://storage.googleapis.com/stacktical-public/dsla.png'\n  }\n\n  if (address?.toLowerCase() === '0xFeD16c746CB5BFeD009730f9E3e6A673006105c7'.toLowerCase()) {\n    uri = 'https://pbs.twimg.com/profile_images/1318783238291292160/R4DxXdRA_400x400.jpg'\n  }\n\n  if (address?.toLowerCase() === '0x8f18dC399594b451EdA8c5da02d0563c0b2d0f16'.toLowerCase()) {\n    uri = 'https://i.imgur.com/UIjlQpC.png'\n  }\n  if (address?.toLowerCase() === '0x033d942A6b495C4071083f4CDe1f17e986FE856c'.toLowerCase()) {\n    uri = 'https://i.imgur.com/R0aQlym.png'\n  }\n  if (address?.toLowerCase() === '0xF84BD51eab957c2e7B7D646A3427C5A50848281D'.toLowerCase()) {\n    uri = 'https://i.imgur.com/06BkcTT.png'\n  }\n  if (address?.toLowerCase() === '0x23D29D30e35C5e8D321e1dc9A8a61BFD846D4C5C'.toLowerCase()) {\n    uri = 'https://hex.com/favicon.png'\n  }\n\n  if (address?.toLowerCase() === '0x2727Ab1c2D22170ABc9b595177B2D5C6E1Ab7B7B'.toLowerCase()) {\n    uri = 'https://i.imgur.com/q3SnElh.png'\n  }\n\n  if (address?.toLowerCase() === '0xdF7837DE1F2Fa4631D716CF2502f8b230F1dcc32'.toLowerCase()) {\n    uri = 'https://pbs.twimg.com/profile_images/933388441475194881/57fOk40N_400x400.jpg'\n  }\n  if (address?.toLowerCase() === '0x7075cAB6bCCA06613e2d071bd918D1a0241379E2'.toLowerCase()) {\n    uri = 'https://gains.farm/images/logo256.png'\n  }\n  if (address?.toLowerCase() === '0xf7d9e281c5Cb4C6796284C5b663b3593D2037aF2'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/sameepsi/quickswap-default-token-list/master/assets/NFTP.png'\n  }\n\n  if (address?.toLowerCase() === '0xD6DF932A45C0f255f85145f286eA0b292B21C90B'.toLowerCase()) {\n    uri = 'https://etherscan.io/token/images/aave_32.png'\n  }\n  if (address?.toLowerCase() === '0x2bF9b864cdc97b08B6D79ad4663e71B8aB65c45c'.toLowerCase()) {\n    uri = 'https://cryptologos.cc/logos/fusion-fsn-logo.png?v=010'\n  }\n  if (address?.toLowerCase() === '0x6aB6d61428fde76768D7b45D8BFeec19c6eF91A8'.toLowerCase()) {\n    uri = 'https://raw.githubusercontent.com/anyswap/Brand-assets/master/logo/c-128-white.svg'\n  }\n  if (address?.toLowerCase() === '0xe82808eaA78339b06a691fd92E1Be79671cAd8D3'.toLowerCase()) {\n    uri = 'https://i.imgur.com/nQDG9AQ.png'\n  }\n  if (address?.toLowerCase() === '0x7ff2FC33E161E3b1C6511B934F0209D304267857'.toLowerCase()) {\n    uri = 'https://www.opucoin.io/wp-content/uploads/2021/04/opu-coiin-icon-border.svg'\n  }\n  if (address?.toLowerCase() === '0x0b3F868E0BE5597D5DB7fEÇB59E1CADBb0fdDa50a'.toLowerCase()) {\n    address = '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2'\n  }\n  if (address?.toLowerCase() === '0x5d47baba0d66083c52009271faf3f50dcc01023c'.toLowerCase()) {\n    uri =\n      'https://raw.githubusercontent.com/ApeSwapFinance/assets/master/blockchains/smartchain/assets/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95/logo.png'\n  }\n  if (!uri) {\n    uri = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n  }\n\n  return uri\n}\n","import { Token } from '@apeswapfinance/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import sousChefABI from 'config/abi/sousChef.json'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { getMasterChefAddress } from 'utils/addressHelper'\nimport { getContract } from 'utils/getContract'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { QuoteToken } from 'config/constants/types'\nimport { Pool } from 'state/types'\n\nexport const fetchPoolsAllowance = async (chainId: number, account, poolsConfig: Pool[]) => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.address !== QuoteToken.BNB)\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingToken.address[chainId],\n    name: 'allowance',\n    params: [account, p.contractAddress[chainId]],\n  }))\n\n  const allowances = await multicall(chainId, erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (chainId: number, account, poolsConfig: Pool[]) => {\n  // Non BNB pools\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.address !== QuoteToken.BNB)\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingToken.address[chainId],\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(chainId, erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances }\n}\n\nexport const fetchUserStakeBalances = async (chainId: number, account, poolsConfig: Pool[]) => {\n  const nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\n  const masterChefAddress = getMasterChefAddress(chainId)\n  const masterChefContract = getContract(masterChefABI, masterChefAddress, chainId)\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(chainId, sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (chainId: number, account, poolsConfig: Pool[]) => {\n  const nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\n  const masterChefAddress = getMasterChefAddress(chainId)\n  const masterChefContract = getContract(masterChefABI, masterChefAddress, chainId)\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(chainId, sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import { PoolConfig } from 'config/constants/types'\nimport { Call } from 'utils/multicall'\n\nconst fetchPoolCalls = (pool: PoolConfig, chainId: number): Call[] => {\n  const standardCalls = [\n    {\n      address: pool.contractAddress[chainId],\n      name: 'startBlock',\n    },\n    // Get end block\n    {\n      address: pool.contractAddress[chainId],\n      name: 'bonusEndBlock',\n    },\n  ]\n  const bananaCall = {\n    address: pool.stakingToken.address[chainId],\n    name: 'balanceOf',\n    params: [pool.contractAddress[chainId]],\n  }\n  const gnanaCall = {\n    address: pool.contractAddress[chainId],\n    name: 'totalStaked',\n  }\n  // Banana earn banana pool will break on start / end block calls\n  if (pool.sousId === 0) {\n    return [bananaCall]\n  }\n  return [...standardCalls, pool.reflect || pool.stakingToken.symbol === 'GNANA' ? gnanaCall : bananaCall]\n}\n\nexport default fetchPoolCalls\n","import BigNumber from 'bignumber.js'\nimport { PoolConfig, Token } from 'config/constants/types'\nimport { Pool, TokenPrices } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst cleanPoolData = (\n  poolIds: number[],\n  chunkedPools: any[],\n  tokenPrices: TokenPrices[],\n  chainId: number,\n  poolsConfig: Pool[],\n) => {\n  const data = chunkedPools.map((chunk, index) => {\n    const poolConfig: PoolConfig = poolsConfig.find((pool) => pool.sousId === poolIds[index])\n    const [startBlock, endBlock, totalStaked] = chunk\n    const totalStakedFormatted = new BigNumber(totalStaked).toJSON()\n    const [stakingToken, rewardToken, apr] = fetchPoolTokenStatsAndApr(\n      poolConfig,\n      tokenPrices,\n      totalStakedFormatted,\n      chainId,\n    )\n    return {\n      sousId: poolIds[index],\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: poolConfig?.bonusEndBlock || new BigNumber(endBlock).toJSON(),\n      totalStaked: totalStakedFormatted,\n      stakingToken: { ...poolConfig?.stakingToken, ...stakingToken },\n      rewardToken: { ...poolConfig?.rewardToken, ...rewardToken },\n      apr,\n    }\n  })\n  return data\n}\n\nconst fetchPoolTokenStatsAndApr = (\n  pool: PoolConfig,\n  tokenPrices: TokenPrices[],\n  totalStaked,\n  chainId: number,\n): [Token, Token, number] => {\n  // Get values needed to calculate apr\n  const curPool = pool\n  const rewardToken = tokenPrices\n    ? tokenPrices.find(\n        (token) => pool?.rewardToken && token?.address?.[chainId] === pool?.rewardToken?.address?.[chainId],\n      )\n    : pool?.rewardToken\n  const stakingToken = tokenPrices\n    ? tokenPrices.find((token) => token?.address?.[chainId] === pool?.stakingToken?.address?.[chainId])\n    : pool?.stakingToken\n  // Calculate apr\n  const apr = getPoolApr(stakingToken?.price, rewardToken?.price, getBalanceNumber(totalStaked), curPool?.tokenPerBlock)\n  return [stakingToken, rewardToken, apr]\n}\n\nexport default cleanPoolData\n","import sousChefABI from 'config/abi/sousChef.json'\nimport bananaABI from 'config/abi/banana.json'\nimport { Pool, TokenPrices } from 'state/types'\nimport { chunk } from 'lodash'\nimport multicall from 'utils/multicall'\nimport fetchPoolCalls from './fetchPoolCalls'\nimport cleanPoolData from './cleanPoolData'\n\nconst fetchPools = async (chainId: number, tokenPrices: TokenPrices[], poolsConfig: Pool[]) => {\n  const poolIds = []\n  const poolCalls = poolsConfig.flatMap((pool) => {\n    poolIds.push(pool.sousId)\n    return fetchPoolCalls(pool, chainId)\n  })\n  // We do not want the block time for the banana earn banana pool so we append two null values to keep the chunks even\n  const vals = await multicall(chainId, [...sousChefABI, ...bananaABI], poolCalls)\n  const formattedVals = [null, null, ...vals]\n  const chunkSize = formattedVals.length / poolsConfig.length\n  const chunkedPools = chunk(formattedVals, chunkSize)\n\n  return cleanPoolData(poolIds, chunkedPools, tokenPrices, chainId, poolsConfig)\n}\n\nexport default fetchPools\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cachePools = []\n\nconst fetchPoolConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      tries++\n      const response = await axios.get(`${apeswapListUrl}/pools.json`)\n      const poolConfigResp = await response.data\n      if (poolConfigResp.statusCode === 500) {\n        return null\n      }\n      cachePools = poolConfigResp\n      return poolConfigResp\n    }\n    return cachePools\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchPoolConfig\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool, TokenPrices, AppThunk } from '../types'\nimport fetchPools from './fetchPools'\nimport fetchPoolConfig from './api'\n\nconst initialState: PoolsState = {\n  data: [],\n}\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setInitialPoolData: (state, action) => {\n      state.data = action.payload\n    },\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setInitialPoolData, setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\n\nexport const setInitialPoolDataAsync = () => async (dispatch) => {\n  try {\n    const initialPoolState: Pool[] = await fetchPoolConfig()\n    dispatch(setInitialPoolData(initialPoolState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchPoolsPublicDataAsync =\n  (chainId: number, tokenPrices: TokenPrices[]): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const poolsConfig = getState().pools.data\n      const pools = await fetchPools(chainId, tokenPrices, poolsConfig)\n      dispatch(setPoolsPublicData(pools))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const fetchPoolsUserDataAsync =\n  (chainId: number, account): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const pools = getState().pools.data\n      const allowances = await fetchPoolsAllowance(chainId, account, pools)\n      const stakingTokenBalances = await fetchUserBalances(chainId, account, pools)\n      const stakedBalances = await fetchUserStakeBalances(chainId, account, pools)\n      const pendingRewards = await fetchUserPendingRewards(chainId, account, pools)\n      const userData = pools.map((pool) => ({\n        sousId: pool.sousId,\n        allowance: allowances[pool.sousId],\n        stakingTokenBalance: stakingTokenBalances[pool.sousId],\n        stakedBalance: stakedBalances[pool.sousId],\n        pendingReward: pendingRewards[pool.sousId],\n      }))\n      dispatch(setPoolsUserData(userData))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const updateUserAllowance =\n  (chainId: number, sousId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const pools = getState().pools.data\n    const allowances = await fetchPoolsAllowance(chainId, account, pools)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (chainId: number, sousId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const pools = getState().pools.data\n    const tokenBalances = await fetchUserBalances(chainId, account, pools)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (chainId: number, sousId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const pools = getState().pools.data\n    const stakedBalances = await fetchUserStakeBalances(chainId, account, pools)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (chainId: number, sousId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const pools = getState().pools.data\n    const pendingRewards = await fetchUserPendingRewards(chainId, account, pools)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport default PoolsSlice.reducer\n","import jungleChefABI from 'config/abi/jungleChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { JungleFarmConfig } from 'config/constants/types'\n\nexport const fetchJungleFarmsAllowance = async (\n  chainId: number,\n  account: string,\n  jungleFarmsConfig: JungleFarmConfig[],\n) => {\n  const calls = jungleFarmsConfig\n    .filter((f) => f.network === chainId)\n    .map((f) => ({\n      address: f.stakingToken.address[chainId],\n      name: 'allowance',\n      params: [account, f.contractAddress[chainId]],\n    }))\n\n  const allowances = await multicall(chainId, erc20ABI, calls)\n  return jungleFarmsConfig.reduce(\n    (acc, farm, index) => ({ ...acc, [farm.jungleId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (chainId: number, account: string, jungleFarmsConfig: JungleFarmConfig[]) => {\n  const calls = jungleFarmsConfig\n    .filter((f) => f.network === chainId)\n    .map((p) => ({\n      address: p.stakingToken.address[chainId],\n      name: 'balanceOf',\n      params: [account],\n    }))\n  const tokenBalancesRaw = await multicall(chainId, erc20ABI, calls)\n  const tokenBalances = jungleFarmsConfig.reduce(\n    (acc, farm, index) => ({ ...acc, [farm.jungleId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances }\n}\n\nexport const fetchUserStakeBalances = async (\n  chainId: number,\n  account: string,\n  jungleFarmsConfig: JungleFarmConfig[],\n) => {\n  const calls = jungleFarmsConfig.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(chainId, jungleChefABI, calls)\n  const stakedBalances = jungleFarmsConfig.reduce(\n    (acc, farm, index) => ({\n      ...acc,\n      [farm.jungleId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...stakedBalances }\n}\n\nexport const fetchUserPendingRewards = async (\n  chainId: number,\n  account: string,\n  jungleFarmsConfig: JungleFarmConfig[],\n) => {\n  const calls = jungleFarmsConfig.map((p) => ({\n    address: p.contractAddress[chainId],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(chainId, jungleChefABI, calls)\n  const pendingRewards = jungleFarmsConfig.reduce(\n    (acc, farm, index) => ({\n      ...acc,\n      [farm.jungleId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  return { ...pendingRewards }\n}\n","import { JungleFarmConfig } from 'config/constants/types'\nimport { Call } from 'utils/multicall'\n\nconst fetchJungleFarmCalls = (farm: JungleFarmConfig, chainId: number): Call[] => {\n  const standardCalls = [\n    {\n      address: farm.contractAddress[chainId],\n      name: 'startBlock',\n    },\n    // Get end block\n    {\n      address: farm.contractAddress[chainId],\n      name: 'bonusEndBlock',\n    },\n    {\n      address: farm.contractAddress[chainId],\n      name: 'totalStaked',\n    },\n  ]\n\n  return [...standardCalls]\n}\n\nexport default fetchJungleFarmCalls\n","import BigNumber from 'bignumber.js'\nimport { JungleFarmConfig } from 'config/constants/types'\nimport { JungleFarm, TokenPrices } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst cleanJungleFarmData = (\n  farmIds: number[],\n  chunkedFarms: any[],\n  tokenPrices: TokenPrices[],\n  chainId: number,\n  jungleFarmsConfig: JungleFarm[],\n) => {\n  const data = chunkedFarms.map((chunk, index) => {\n    const farmConfig = jungleFarmsConfig.find((farm) => farm.jungleId === farmIds[index])\n    const [startBlock, endBlock, totalStaked] = chunk\n\n    const totalStakedFormatted = new BigNumber(totalStaked).toJSON()\n    const [stakingToken, rewardToken, apr] = fetchJungleFarmTokenStatsAndApr(\n      farmConfig,\n      tokenPrices,\n      totalStakedFormatted,\n      chainId,\n    )\n\n    return {\n      jungleId: farmIds[index],\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: farmConfig.bonusEndBlock || new BigNumber(endBlock).toJSON(),\n      totalStaked: totalStakedFormatted,\n      stakingToken,\n      rewardToken,\n      apr,\n    }\n  })\n  return data\n}\n\nconst fetchJungleFarmTokenStatsAndApr = (\n  farm: JungleFarmConfig,\n  tokenPrices: TokenPrices[],\n  totalStaked,\n  chainId: number,\n) => {\n  // Get values needed to calculate apr\n  const curFarm = farm\n  const rewardToken = tokenPrices\n    ? tokenPrices.find((token) => farm?.rewardToken && token?.address[chainId] === farm?.rewardToken.address[chainId])\n    : farm.rewardToken\n  const stakingToken = tokenPrices\n    ? tokenPrices.find((token) => token?.address[chainId] === farm?.stakingToken.address[chainId])\n    : farm.stakingToken\n  // Calculate apr\n  const apr = getPoolApr(stakingToken?.price, rewardToken?.price, getBalanceNumber(totalStaked), curFarm?.tokenPerBlock)\n\n  return [stakingToken, rewardToken, apr]\n}\n\nexport default cleanJungleFarmData\n","import jungleChefABI from 'config/abi/jungleChef.json'\nimport bananaABI from 'config/abi/banana.json'\nimport { JungleFarm, TokenPrices } from 'state/types'\nimport { chunk } from 'lodash'\nimport multicall from 'utils/multicall'\nimport fetchJungleFarmCalls from './fetchJungleFarmCalls'\nimport cleanJungleFarmData from './cleanJungleFarmData'\n\nconst fetchJungleFarms = async (chainId: number, tokenPrices: TokenPrices[], jungleFarmsConfig: JungleFarm[]) => {\n  const farmIds = []\n  const farmCalls = jungleFarmsConfig.flatMap((farm) => {\n    farmIds.push(farm.jungleId)\n    return fetchJungleFarmCalls(farm, chainId)\n  })\n\n  const vals = await multicall(chainId, [...jungleChefABI, ...bananaABI], farmCalls)\n  const chunkSize = vals.length / jungleFarmsConfig.length\n  const chunkedFarms = chunk(vals, chunkSize)\n\n  return cleanJungleFarmData(farmIds, chunkedFarms, tokenPrices, chainId, jungleFarmsConfig)\n}\n\nexport default fetchJungleFarms\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheJungleFarms = []\n\nconst fetchJungleFarmConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      tries++\n      const response = await axios.get(`${apeswapListUrl}/jungleFarms.json`)\n      const jungleFarmConfigResp = await response.data\n      if (jungleFarmConfigResp.statusCode === 500) {\n        return null\n      }\n      cacheJungleFarms = jungleFarmConfigResp\n      return jungleFarmConfigResp\n    }\n    return cacheJungleFarms\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchJungleFarmConfig\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  fetchJungleFarmsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchJungleFarmUser'\nimport { JungleFarmsState, JungleFarm, TokenPrices, AppThunk } from '../types'\nimport fetchJungleFarms from './fetchJungleFarms'\nimport fetchJungleFarmConfig from './api'\n\nconst initialState: JungleFarmsState = { data: [] }\n\nexport const JungleFarmsSlice = createSlice({\n  name: 'JungleFarms',\n  initialState,\n  reducers: {\n    setInitialJungleFarmData: (state, action) => {\n      state.data = action.payload\n    },\n    setJungleFarmsPublicData: (state, action) => {\n      const liveJungleFarmsData: JungleFarm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveJungleFarmsData.find((entry) => entry.jungleId === farm.jungleId)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setJungleFarmsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((farm) => {\n        const userFarmData = userData.find((entry) => entry.jungleId === farm.jungleId)\n        return { ...farm, userData: userFarmData }\n      })\n    },\n    updateJungleFarmsUserData: (state, action) => {\n      const { field, value, jungleId } = action.payload\n      const index = state.data.findIndex((p) => p.jungleId === jungleId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setInitialJungleFarmData, setJungleFarmsPublicData, setJungleFarmsUserData, updateJungleFarmsUserData } =\n  JungleFarmsSlice.actions\n\n// Thunks\n\nexport const setInitialJungleFarmDataAsync = () => async (dispatch) => {\n  try {\n    const initialJungleFarmState: JungleFarm[] = await fetchJungleFarmConfig()\n    dispatch(setInitialJungleFarmData(initialJungleFarmState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchJungleFarmsPublicDataAsync =\n  (chainId: number, tokenPrices: TokenPrices[]): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const jungleFarms = getState().jungleFarms.data\n      const farms = await fetchJungleFarms(chainId, tokenPrices, jungleFarms)\n      dispatch(setJungleFarmsPublicData(farms))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const fetchJungleFarmsUserDataAsync =\n  (chainId: number, account): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const jungleFarms = getState().jungleFarms.data\n      const allowances = await fetchJungleFarmsAllowance(chainId, account, jungleFarms)\n      const stakingTokenBalances = await fetchUserBalances(chainId, account, jungleFarms)\n      const stakedBalances = await fetchUserStakeBalances(chainId, account, jungleFarms)\n      const pendingRewards = await fetchUserPendingRewards(chainId, account, jungleFarms)\n      const userData = jungleFarms.map((farm) => ({\n        jungleId: farm.jungleId,\n        allowance: allowances[farm.jungleId],\n        stakingTokenBalance: stakingTokenBalances[farm.jungleId],\n        stakedBalance: stakedBalances[farm.jungleId],\n        pendingReward: pendingRewards[farm.jungleId],\n      }))\n      dispatch(setJungleFarmsUserData(userData))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const updateJungleFarmsUserAllowance =\n  (chainId: number, jungleId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const jungleFarms = getState().jungleFarms.data\n    const allowances = await fetchJungleFarmsAllowance(chainId, account, jungleFarms)\n    dispatch(updateJungleFarmsUserData({ jungleId, field: 'allowance', value: allowances[jungleId] }))\n  }\n\nexport const updateJungleFarmsUserBalance =\n  (chainId: number, jungleId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const jungleFarms = getState().jungleFarms.data\n    const tokenBalances = await fetchUserBalances(chainId, account, jungleFarms)\n    dispatch(updateJungleFarmsUserData({ jungleId, field: 'stakingTokenBalance', value: tokenBalances[jungleId] }))\n  }\n\nexport const updateJungleFarmsUserStakedBalance =\n  (chainId: number, jungleId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const jungleFarms = getState().jungleFarms.data\n    const stakedBalances = await fetchUserStakeBalances(chainId, account, jungleFarms)\n    dispatch(updateJungleFarmsUserData({ jungleId, field: 'stakedBalance', value: stakedBalances[jungleId] }))\n  }\n\nexport const updateJungleFarmsUserPendingReward =\n  (chainId: number, jungleId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const jungleFarms = getState().jungleFarms.data\n    const pendingRewards = await fetchUserPendingRewards(chainId, account, jungleFarms)\n    dispatch(updateJungleFarmsUserData({ jungleId, field: 'pendingReward', value: pendingRewards[jungleId] }))\n  }\n\nexport default JungleFarmsSlice.reducer\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@apeswapfinance/sdk'\nimport styled from 'styled-components'\nimport { Button, Text, ErrorIcon, Flex, Link, MetamaskIcon, Spinner } from '@ape.swap/uikit'\nimport { Modal, ModalProps } from '@apeswapfinance/uikit'\nimport { registerToken } from 'utils/wallet'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { dexStyles } from 'views/Dex/styles'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { ArrowUpCircle } from 'react-feather'\nimport { useTranslation } from 'contexts/Localization'\nimport { getEtherscanLink } from 'utils'\nimport { RowFixed } from '../layout/Row'\nimport { AutoColumn, ColumnCenter } from '../layout/Column'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nexport function ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Flex\n      sx={{\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n        background: 'white3',\n        margin: '15px 0px',\n        borderRadius: '10px',\n      }}\n    >\n      <Flex sx={{ alignItems: 'center', justifyContent: 'center' }}>\n        <Spinner size={150} />\n      </Flex>\n      <Flex\n        sx={{\n          flexDirection: 'column',\n          alignItems: 'center',\n          background: 'white4',\n          padding: '10px 20px',\n          margin: '10px',\n          borderRadius: '10px',\n        }}\n      >\n        <Text size=\"20px\" weight={500} margin=\"5px 0px\" sx={{ textAlign: 'center' }}>\n          {t('Waiting For Confirmation')}\n        </Text>\n        <Flex margin=\"10px 0px\">\n          <Text weight={700} sx={{ textAlign: 'center' }}>\n            {pendingText}\n          </Text>\n        </Flex>\n        <Text size=\"14px\" weight={400}>\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport function TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <ArrowUpCircle strokeWidth={1} size={97} color=\"rgba(255, 179, 0, 1)\" />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n        {chainId && hash && (\n          <Link color=\"text\" external small href={getEtherscanLink(hash, 'transaction', chainId)}>\n            {t('View on explorer')}\n          </Link>\n        )}\n        {currencyToAdd && library?.provider?.isMetaMask && (\n          <Button\n            variant=\"tertiary\"\n            mt=\"12px\"\n            onClick={() => registerToken(token.address, token.symbol, token.decimals, '')}\n          >\n            <RowFixed>\n              <Text>{t(`Add %symbol% to Metamask`, { symbol: currencyToAdd.getSymbol(chainId) })}</Text>\n              <MetamaskIcon width=\"16px\" ml=\"6px\" />\n            </RowFixed>{' '}\n          </Button>\n        )}\n        <Button fullWidth onClick={onDismiss} style={{ height: '50px', fontSize: '20px' }} mt=\"20px\">\n          {t('Close')}\n        </Button>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Flex sx={{ ...dexStyles.dexContainer, padding: '0px' }}>\n      <div>{topContent()}</div>\n      <div>{bottomContent()}</div>\n    </Flex>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"error\" width=\"64px\" />\n        <Text color=\"error\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n        <Flex justifyContent=\"center\" pt=\"24px\">\n          <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n        </Flex>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<ModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Flex sx={{ width: '420px' }}>\n      <Modal title={title} onDismiss={handleDismiss} maxWidth=\"100%\">\n        <Flex sx={{ width: '380px', maxWidth: '100%' }}>\n          {attemptingTxn ? (\n            <ConfirmationPendingContent pendingText={pendingText} />\n          ) : hash ? (\n            <TransactionSubmittedContent\n              chainId={chainId}\n              hash={hash}\n              onDismiss={onDismiss}\n              currencyToAdd={currencyToAdd}\n            />\n          ) : (\n            content()\n          )}\n        </Flex>\n      </Modal>\n    </Flex>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@apeswapfinance/sdk'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { createMulticall, ListenerOptions } from '@uniswap/redux-multicall'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useInterfaceMulticall } from 'hooks/useContract'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport React, { useMemo } from 'react'\nimport { combineReducers, createStore } from 'redux'\n\nconst multicall = createMulticall()\nconst reducer = combineReducers({ [multicall.reducerPath]: multicall.reducer })\nexport const store = createStore(reducer)\n\nexport default multicall\n\nexport function MulticallUpdater() {\n  const { chainId } = useActiveWeb3React()\n  const currentBlock = useBlockNumber()\n  const contract = useInterfaceMulticall()\n  // TODO: Update this with block times for specific chains\n  const listenerOptions: ListenerOptions = useMemo(\n    () => ({\n      blocksPerFetch: 1,\n    }),\n    [],\n  )\n\n  return (\n    <multicall.Updater\n      chainId={chainId}\n      latestBlockNumber={currentBlock}\n      contract={contract}\n      listenerOptions={listenerOptions}\n    />\n  )\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { TorusConnector } from '@web3-react/torus-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@ape.swap/uikit'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { UAuthConnector } from '@uauth/web3-react'\nimport UAuth from '@uauth/js'\nimport { ChainId } from '@apeswapfinance/sdk'\n\nconst POLLING_INTERVAL = 15000\n\n// When adding a new chain we need to add the CHAIN_ID to the supported chains\n\nconst injected = new InjectedConnector({\n  supportedChainIds: [\n    ChainId.BSC,\n    ChainId.BSC_TESTNET,\n    ChainId.MATIC,\n    ChainId.MATIC_TESTNET,\n    ChainId.MAINNET,\n    ChainId.FLARE,\n    ChainId.COSTON,\n    ChainId.SONGBIRD,\n  ],\n})\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [ChainId.BSC]: getRpcUrl(ChainId.BSC) },\n  supportedChainIds: [ChainId.BSC, ChainId.BSC_TESTNET, ChainId.MATIC, ChainId.MATIC_TESTNET, ChainId.MAINNET],\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [ChainId.BSC] })\nconst torus = new TorusConnector({ chainId: ChainId.BSC, initOptions: { network: { host: 'bsc_mainnet' } } })\n\nexport const walletlink = new WalletLinkConnector({\n  url: getRpcUrl(ChainId.BSC),\n  supportedChainIds: [ChainId.BSC],\n  appName: 'Apeswap',\n  darkMode: true,\n  appLogoUrl: 'https://apeswap.finance/logo.png',\n})\n\nexport const uauth = new UAuthConnector({\n  uauth: new UAuth({\n    clientID: process.env.REACT_APP_UD_CLIENT_ID,\n    redirectUri: process.env.REACT_APP_UD_REDIRECT_URI,\n    scope: 'openid wallet',\n  }),\n  connectors: { injected, walletconnect },\n})\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n  [ConnectorNames.Walletlink]: walletlink,\n  [ConnectorNames.Torus]: torus,\n  [ConnectorNames.Unstoppable]: uauth,\n}\n\nexport const getLibrary = (provider: any): Web3Provider => {\n  const library = new Web3Provider(provider, 'any')\n  library.pollingInterval = 15000\n  return library\n}\n","const fetchAndUpdateNetwork = (web3ChainId: number, account: string, chainId: number) => {\n  if (account) {\n    if (web3ChainId === chainId) {\n      return { chainId }\n    }\n    return { chainId: web3ChainId }\n  }\n  return { chainId }\n}\n\nexport default fetchAndUpdateNetwork\n","/* eslint-disable no-param-reassign */\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { NETWORK_LABEL } from 'config/constants/chains'\nimport { Network, NetworkState } from 'state/types'\nimport fetchAndUpdateNetwork from './fetchNetwork'\n\nconst chainIdSafeCheck = (): { chainId: number; chainIdFromUrl: boolean } => {\n  const { search } = window.location\n  const params = new URLSearchParams(search)\n  const chainStr = params.get('chain')\n  const removeChainParamUrl = window.location.href.split('?chain')[0]\n  window.history.pushState({}, document.title, removeChainParamUrl)\n  const localStorageChain = parseInt(window.localStorage.getItem('chainIdStatus'))\n  if (chainStr) {\n    if (chainStr.toLowerCase() === NETWORK_LABEL[ChainId.BSC].toLowerCase()) {\n      return { chainId: ChainId.BSC, chainIdFromUrl: true }\n    }\n    if (chainStr.toLowerCase() === NETWORK_LABEL[ChainId.MATIC].toLowerCase()) {\n      return { chainId: ChainId.MATIC, chainIdFromUrl: true }\n    }\n    if (chainStr.toLowerCase() === NETWORK_LABEL[ChainId.MAINNET].toLowerCase()) {\n      return { chainId: ChainId.MAINNET, chainIdFromUrl: true }\n    }\n    if (chainStr.toLowerCase() === NETWORK_LABEL[ChainId.FLARE].toLowerCase()) {\n      return { chainId: ChainId.FLARE, chainIdFromUrl: true }\n    }\n    if (chainStr.toLowerCase() === NETWORK_LABEL[ChainId.COSTON].toLowerCase()) {\n      return { chainId: ChainId.COSTON, chainIdFromUrl: true }\n    }\n    if (chainStr.toLowerCase() === NETWORK_LABEL[ChainId.SONGBIRD].toLowerCase()) {\n      return { chainId: ChainId.SONGBIRD, chainIdFromUrl: true }\n    }\n    return { chainId: localStorageChain || ChainId.BSC, chainIdFromUrl: false }\n  }\n  return { chainId: localStorageChain || ChainId.BSC, chainIdFromUrl: false }\n}\n\nconst { chainId: initChainId, chainIdFromUrl } = chainIdSafeCheck()\n\nconst initialState: NetworkState = {\n  isInitialized: false,\n  isLoading: true,\n  data: { chainId: initChainId, chainIdFromUrl },\n}\n\nexport const networkSlice = createSlice({\n  name: 'network',\n  initialState,\n  reducers: {\n    networkFetchStart: (state) => {\n      state.isLoading = true\n    },\n    networkFetchSucceeded: (state, action: PayloadAction<Network>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    networkFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    setNetwork: (state, action) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data.chainId = action.payload.chainId\n    },\n    setChainIdFromUrl: (state, action) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data.chainIdFromUrl = action.payload.chainIdFromUrl\n    },\n  },\n})\n\n// Actions\nexport const { networkFetchStart, networkFetchSucceeded, networkFetchFailed, setNetwork, setChainIdFromUrl } =\n  networkSlice.actions\n\n// thunks\nexport const fetchUserNetwork = (web3ChainId: number, account: string, chainId: number) => (dispatch) => {\n  try {\n    dispatch(networkFetchStart())\n    const network = fetchAndUpdateNetwork(web3ChainId, account, chainId)\n    dispatch(setNetwork(network))\n    localStorage.setItem(`chainIdStatus`, JSON.stringify(network.chainId))\n  } catch (error) {\n    dispatch(networkFetchFailed())\n  }\n}\n\nexport const fetchChainIdFromUrl = (updatedChainIdFromUrl: boolean) => (dispatch) => {\n  dispatch(setChainIdFromUrl(updatedChainIdFromUrl))\n}\n\nexport default networkSlice.reducer\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BANANA_PER_BLOCK = new BigNumber(10)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BLOCKS_PER_DAY = new BigNumber(28800)\nexport const SECONDS_PER_YEAR = new BigNumber(31536000)\nexport const BANANA_PER_YEAR = BANANA_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BSC_BLOCK_TIME = 3\nexport const BANANA_POOL_PID = 1\nexport const BASE_EXCHANGE_URL = 'https://apeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 2\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const VAULT_COMPOUNDS_PER_DAY = 24\n\nexport const MATIC_BLOCK_TIME = 2.4\nexport const MATIC_BLOCKS_PER_YEAR = SECONDS_PER_YEAR.div(MATIC_BLOCK_TIME)\n","import BigNumber from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, TokenPricesState } from 'state/types'\nimport { fetchBananaPrice, fetchTokenPrices, setInitialTokensDataAsync } from '.'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchTokenPrices = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const { chainId } = useActiveWeb3React()\n  const { tokens }: TokenPricesState = useSelector((state: State) => state.tokenPrices)\n  if (tokens.length === 0) {\n    dispatch(setInitialTokensDataAsync())\n  }\n  useEffect(() => {\n    dispatch(fetchTokenPrices(chainId, tokens))\n  }, [dispatch, fastRefresh, tokens, chainId])\n}\n\nexport const useTokenPrices = () => {\n  const { isInitialized, isLoading, data }: TokenPricesState = useSelector((state: State) => state.tokenPrices)\n  return { tokenPrices: data, isInitialized, isLoading }\n}\n\nexport const useFetchBananaPrice = () => {\n  const { fastRefresh } = useRefresh()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchBananaPrice(chainId))\n  }, [fastRefresh, chainId, dispatch])\n}\n\nexport const useBananaPrice = () => {\n  const { bananaPrice }: TokenPricesState = useSelector((state: State) => state.tokenPrices)\n  return bananaPrice\n}\n\n// Prices\nexport const usePriceBananaBusd = (): BigNumber => {\n  const tokenPrices = useTokenPrices()\n  const price = new BigNumber(tokenPrices?.tokenPrices?.find((token) => token.symbol === 'BANANA')?.price)\n  return price || ZERO\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const tokenPrices = useTokenPrices()\n  const price = new BigNumber(tokenPrices?.tokenPrices?.find((token) => token.symbol === 'BNB')?.price)\n  return price || ZERO\n}\n\nexport const usePriceGnanaBusd = (): BigNumber => {\n  const bananaPrice = useBananaPrice()\n  return new BigNumber(bananaPrice).times(1.3889)\n}\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport React, { createContext, ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react'\n\nconst MISSING_PROVIDER = Symbol()\nconst BlockNumberContext = createContext<\n  | {\n      value?: number\n      fastForward(block: number): void\n    }\n  | typeof MISSING_PROVIDER\n>(MISSING_PROVIDER)\n\nfunction useBlockNumberContext() {\n  const blockNumber = useContext(BlockNumberContext)\n  if (blockNumber === MISSING_PROVIDER) {\n    throw new Error('BlockNumber hooks must be wrapped in a <BlockNumberProvider>')\n  }\n  return blockNumber\n}\n\n/** Requires that BlockUpdater be installed in the DOM tree. */\nexport default function useBlockNumber(): number | undefined {\n  return useBlockNumberContext().value\n}\n\nexport function useFastForwardBlockNumber(): (block: number) => void {\n  return useBlockNumberContext().fastForward\n}\n\nexport function BlockNumberProvider({ children }: { children: ReactNode }) {\n  const { chainId: activeChainId, library } = useActiveWeb3React()\n  const [{ chainId, block }, setChainBlock] = useState<{ chainId?: number; block?: number }>({ chainId: activeChainId })\n\n  const onBlock = useCallback(\n    (block: number) => {\n      setChainBlock((chainBlock) => {\n        if (chainBlock.chainId === activeChainId) {\n          if (!chainBlock.block || chainBlock.block < block) {\n            return { chainId: activeChainId, block }\n          }\n        }\n        return chainBlock\n      })\n    },\n    [activeChainId, setChainBlock],\n  )\n\n  const windowVisible = useIsWindowVisible()\n  useEffect(() => {\n    if (library && activeChainId && windowVisible) {\n      // If chainId hasn't changed, don't clear the block. This prevents re-fetching still valid data.\n      setChainBlock((chainBlock) => (chainBlock.chainId === activeChainId ? chainBlock : { chainId: activeChainId }))\n\n      library\n        .getBlockNumber()\n        .then(onBlock)\n        .catch((error) => {\n          console.error(`Failed to get block number for chainId ${activeChainId}`, error)\n        })\n\n      library.on('block', onBlock)\n      return () => {\n        library.removeListener('block', onBlock)\n      }\n    }\n    return undefined\n  }, [activeChainId, library, onBlock, setChainBlock, windowVisible])\n\n  const value = useMemo(\n    () => ({\n      value: chainId === activeChainId ? block : undefined,\n      fastForward: (block: number) => setChainBlock({ chainId: activeChainId, block }),\n    }),\n    [activeChainId, block, chainId],\n  )\n  return <BlockNumberContext.Provider value={value}>{children}</BlockNumberContext.Provider>\n}\n","import { ethers } from 'ethers'\nimport getProvider from './getProvider'\n\nexport const getContract = (\n  abi: any,\n  address: string,\n  chainId: number,\n  signer?: ethers.Signer | ethers.providers.Provider,\n) => {\n  const provider = getProvider(chainId)\n  const signerOrProvider = signer ?? provider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import getRpcUrl from 'utils/getRpcUrl'\nimport { ethers } from 'ethers'\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\n\nconst activeWeb3Instance = {}\n\nconst getProvider = (chainId: number) => {\n  if (!activeWeb3Instance[chainId]) {\n    const RPC_URL = getRpcUrl(chainId)\n    activeWeb3Instance[chainId] = new ethers.providers.JsonRpcProvider(RPC_URL, chainId)\n  }\n  return activeWeb3Instance[chainId]\n}\n\nexport default getProvider\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@apeswapfinance/uikit'\nimport { Apeswap } from '@ape.swap/uikit'\nimport { ThemeProvider as ThemeUIProvider } from 'theme-ui'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>\n        <ThemeUIProvider theme={Apeswap}>{children}</ThemeUIProvider>\n      </SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport vaultApeV1ABI from 'config/abi/vaultApeV1.json'\nimport vaultApeV2ABI from 'config/abi/vaultApeV2.json'\nimport multicall from 'utils/multicall'\nimport { getVaultApeAddressV1, getVaultApeAddressV2 } from 'utils/addressHelper'\nimport { Vault } from 'state/types'\n\nexport const fetchVaultUserAllowances = async (account: string, chainId: number, vaultsConfig: Vault[]) => {\n  const vaultApeAddressV1 = getVaultApeAddressV1(chainId)\n  const vaultApeAddressV2 = getVaultApeAddressV2(chainId)\n  const filteredVaults = vaultsConfig.filter((vault) => vault.availableChains.includes(chainId))\n  const calls = filteredVaults.map((vault) => {\n    return {\n      address: vault.stakeToken.address[chainId],\n      name: 'allowance',\n      params: [account, vault.version === 'V1' ? vaultApeAddressV1 : vaultApeAddressV2],\n    }\n  })\n  const rawStakeAllowances = await multicall(chainId, erc20ABI, calls)\n  const parsedStakeAllowances = rawStakeAllowances.map((stakeBalance) => {\n    return new BigNumber(stakeBalance).toJSON()\n  })\n  return parsedStakeAllowances\n}\n\nexport const fetchVaultUserTokenBalances = async (account: string, chainId: number, vaultsConfig: Vault[]) => {\n  const filteredVaults = vaultsConfig.filter((vault) => vault.availableChains.includes(chainId))\n  const calls = filteredVaults.map((vault) => {\n    return {\n      address: vault.stakeToken.address[chainId],\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n  const rawTokenBalances = await multicall(chainId, erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchVaultUserStakedAndPendingBalances = async (\n  account: string,\n  chainId: number,\n  vaultsConfig: Vault[],\n) => {\n  const vaultApeAddressV1 = getVaultApeAddressV1(chainId)\n  const vaultApeAddressV2 = getVaultApeAddressV2(chainId)\n  const filteredVaults = vaultsConfig.filter((vault) => vault.availableChains.includes(chainId))\n  const calls = filteredVaults.map((vault) => {\n    return vault.version === 'V1'\n      ? {\n          address: vaultApeAddressV1,\n          name: 'stakedWantTokens',\n          params: [vault.pid, account],\n        }\n      : {\n          address: vaultApeAddressV2,\n          name: 'balanceOf',\n          params: [vault.pid, account],\n        }\n  })\n\n  const rawStakedBalances = await multicall(chainId, [...vaultApeV1ABI, ...vaultApeV2ABI], calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  const parsePendingBalances = rawStakedBalances.map((stakedBalance, index) => {\n    return filteredVaults[index].version === 'V1' ? '0' : new BigNumber(stakedBalance[1]._hex).toJSON()\n  })\n  return { stakedBalances: parsedStakedBalances, pendingRewards: parsePendingBalances }\n}\n","import { Call } from 'utils/multicall'\nimport { VaultConfig } from 'config/constants/types'\n\nconst fetchVaultCalls = (vault: VaultConfig, chainId: number): Call[] => {\n  const stratAddress = vault.stratAddress[chainId]\n  const { stakeToken, rewardToken, masterchef } = vault\n  const masterchefCalls = [\n    // Masterchef total alloc points\n    {\n      address: masterchef.address[chainId],\n      name: 'totalAllocPoint',\n    },\n    // Vaulted farm pool info\n    {\n      address: masterchef.address[chainId],\n      name: 'poolInfo',\n      params: [masterchef.pid[chainId]],\n    },\n    // Masterchef strategy info\n    {\n      address: masterchef.address[chainId],\n      name: 'userInfo',\n      params: [masterchef.pid[chainId], stratAddress],\n    },\n  ]\n  const calls = [\n    // Stake token balance in masterchef\n    {\n      address: stakeToken.address[chainId],\n      name: 'balanceOf',\n      params: [masterchef.address[chainId]],\n    },\n  ]\n  const bananaPoolCalls = [\n    // Banana pool info\n    {\n      address: masterchef.address[chainId],\n      name: 'poolInfo',\n      params: [0],\n    },\n    // Total banana staked in pool\n    {\n      address: rewardToken.address[chainId],\n      name: 'balanceOf',\n      params: [masterchef.address[chainId]],\n    },\n  ]\n  return [...masterchefCalls, ...calls, ...bananaPoolCalls]\n}\n\nexport default fetchVaultCalls\n","import BigNumber from 'bignumber.js'\nimport { VaultConfig } from 'config/constants/types'\nimport { FarmLpAprsType, TokenPrices, Vault } from 'state/types'\nimport { getFarmApr } from 'utils/apr'\nimport {\n  getRoi,\n  tokenEarnedPerThousandDollarsCompounding,\n  tokenEarnedPerThousandDollarsCompoundingMax,\n} from 'utils/compoundApyHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst cleanVaultData = (\n  vaultIds: number[],\n  chunkedVaults: any[],\n  vaultSettings: any[],\n  tokenPrices: TokenPrices[],\n  farmLpAprs: FarmLpAprsType,\n  chainId: number,\n  vaultsConfig: Vault[],\n) => {\n  const keeperFee = parseFloat(vaultSettings[1]) / 100\n  const withdrawFee = parseFloat(vaultSettings[5]) / 100\n  const data = chunkedVaults.map((chunk, index) => {\n    const filteredVaults = vaultsConfig.filter((vault) => vault.availableChains.includes(chainId))\n    const vaultConfig: VaultConfig = filteredVaults?.find((vault) => vault.id === vaultIds[index])\n    const [totalAllocPoint, poolInfo, userInfo, stakeTokenMCBalance, bananaPoolInfo, bananaPoolTotalStaked] = chunk\n\n    const rewardTokenPriceUsd = tokenPrices?.find(\n      (token) =>\n        token.address[chainId]?.toLowerCase() === vaultConfig.masterchef.rewardToken.address[chainId]?.toLowerCase(),\n    )?.price\n    const stakeTokenPriceUsd = tokenPrices?.find(\n      (token) => token.address[chainId]?.toLowerCase() === vaultConfig.stakeToken.address[chainId]?.toLowerCase(),\n    )?.price\n\n    // Strat info\n    const allocPoint = new BigNumber(poolInfo.allocPoint?._hex)\n    const strategyPairBalance = userInfo.amount.toString()\n    const weight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : new BigNumber(0)\n    const totalTokensStaked = getBalanceNumber(new BigNumber(strategyPairBalance))\n    const totalTokensStakedMC = getBalanceNumber(new BigNumber(stakeTokenMCBalance))\n    const totalValueStakedInMCUsd = totalTokensStakedMC * stakeTokenPriceUsd\n\n    // Banana pool info\n    const bananaPoolAllocPoint = new BigNumber(bananaPoolInfo.allocPoint?._hex)\n    const bananaPoolWeight = totalAllocPoint\n      ? bananaPoolAllocPoint.div(new BigNumber(totalAllocPoint))\n      : new BigNumber(0)\n    const totalBananaStakedMC = getBalanceNumber(new BigNumber(bananaPoolTotalStaked))\n    const totalBananaValueStakedInMCUsd = totalBananaStakedMC * rewardTokenPriceUsd\n\n    // Calculate APR\n    const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : new BigNumber(0)\n\n    // This only works for apeswap farms\n    const lpApr = farmLpAprs?.lpAprs?.find((lp) => lp.pid === vaultConfig.masterchef.pid[chainId])?.lpApr * 100\n\n    const oneThousandDollarsWorthOfToken = 1000 / rewardTokenPriceUsd\n\n    const apr = getFarmApr(poolWeight, new BigNumber(rewardTokenPriceUsd), new BigNumber(totalValueStakedInMCUsd))\n    const bananaPoolApr = getFarmApr(\n      bananaPoolWeight,\n      new BigNumber(rewardTokenPriceUsd),\n      new BigNumber(totalBananaValueStakedInMCUsd),\n    )\n\n    let yearlyApy = 0\n    let dailyApy = 0\n\n    if (vaultConfig.version === 'V2') {\n      yearlyApy = tokenEarnedPerThousandDollarsCompoundingMax({\n        numberOfDays: 365,\n        farmApr: lpApr ? apr + lpApr : apr,\n        bananaPoolApr,\n        performanceFee: keeperFee,\n      })\n      dailyApy = tokenEarnedPerThousandDollarsCompoundingMax({\n        numberOfDays: 1,\n        farmApr: lpApr ? apr + lpApr : apr,\n        bananaPoolApr,\n        performanceFee: keeperFee,\n      })\n    } else {\n      const amountEarnedYealry = tokenEarnedPerThousandDollarsCompounding({\n        numberOfDays: 365,\n        farmApr: lpApr ? apr + lpApr : apr,\n        tokenPrice: rewardTokenPriceUsd,\n        performanceFee: keeperFee,\n      })\n      const amountEarnedDaily = tokenEarnedPerThousandDollarsCompounding({\n        numberOfDays: 1,\n        farmApr: lpApr ? apr + lpApr : apr,\n        tokenPrice: rewardTokenPriceUsd,\n        performanceFee: keeperFee,\n      })\n      yearlyApy = getRoi({ amountEarned: amountEarnedYealry, amountInvested: oneThousandDollarsWorthOfToken })\n      dailyApy = getRoi({ amountEarned: amountEarnedDaily, amountInvested: oneThousandDollarsWorthOfToken })\n    }\n\n    return {\n      ...vaultConfig,\n      keeperFee: vaultConfig.version === 'V2' ? keeperFee.toString() : '0.25',\n      withdrawFee: vaultConfig.version === 'V2' ? withdrawFee.toString() : vaultConfig?.fee ? vaultConfig.fee : '0',\n      totalStaked: totalTokensStaked.toString(),\n      totalAllocPoint: totalAllocPoint.toString(),\n      allocPoint: allocPoint.toString(),\n      weight: parseInt(weight.toString()),\n      strategyPairBalance: strategyPairBalance.toString(),\n      strategyPairBalanceFixed: null,\n      stakeTokenPrice: stakeTokenPriceUsd,\n      rewardTokenPrice: rewardTokenPriceUsd,\n      masterChefPairBalance: stakeTokenMCBalance.toString(),\n      apy: {\n        daily: dailyApy,\n        yearly: yearlyApy,\n      },\n    }\n  })\n  return data\n}\n\nexport default cleanVaultData\n","import erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport { FarmLpAprsType, TokenPrices, Vault } from 'state/types'\nimport { getContract } from 'utils/getContract'\nimport { getVaultApeAddressV2 } from 'utils/addressHelper'\nimport { chunk } from 'lodash'\nimport vaultApeV2ABI from 'config/abi/vaultApeV2.json'\nimport multicall from 'utils/multicall'\nimport fetchVaultCalls from './fetchVaultCalls'\nimport cleanVaultData from './cleanVaultData'\n\nconst fetchVaults = async (\n  chainId: number,\n  tokenPrices: TokenPrices[],\n  farmLpAprs: FarmLpAprsType,\n  vaultsConfig: Vault[],\n) => {\n  const filteredVaults = vaultsConfig.filter((vault) => vault.availableChains.includes(chainId))\n  const masterVaultApev2 = getContract(vaultApeV2ABI, getVaultApeAddressV2(chainId), chainId)\n  const vaultIds = []\n  const vaultCalls = filteredVaults.flatMap((vault) => {\n    vaultIds.push(vault.id)\n    return fetchVaultCalls(vault, chainId)\n  })\n  const vals = await multicall(chainId, [...masterchefABI, ...erc20], vaultCalls)\n  const vaultSettings = await masterVaultApev2.getSettings()\n  const chunkSize = vaultCalls.length / filteredVaults.length\n  const chunkedVaults = chunk(vals, chunkSize)\n  return cleanVaultData(vaultIds, chunkedVaults, vaultSettings, tokenPrices, farmLpAprs, chainId, vaultsConfig)\n}\n\nexport default fetchVaults\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheVaults = []\n\nconst fetchVaultConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      const response = await axios.get(`${apeswapListUrl}/vaults.json`)\n      tries++\n      const vaultConfigResp = await response.data\n      if (vaultConfigResp.statusCode === 500) {\n        return null\n      }\n      cacheVaults = vaultConfigResp\n      return vaultConfigResp\n    }\n    return cacheVaults\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchVaultConfig\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport {\n  fetchVaultUserAllowances,\n  fetchVaultUserStakedAndPendingBalances,\n  fetchVaultUserTokenBalances,\n} from './fetchVaultsUser'\nimport { VaultsState, TokenPrices, Vault, FarmLpAprsType, AppThunk } from '../types'\nimport fetchVaults from './fetchVaults'\nimport fetchVaultConfig from './api'\n\nconst initialState: VaultsState = { data: [], loadVaultData: false, userDataLoaded: false }\n\nexport const vaultSlice = createSlice({\n  name: 'Vaults',\n  initialState,\n  reducers: {\n    setInitialVaultData: (state, action) => {\n      state.data = action.payload\n    },\n    setLoadVaultData: (state, action) => {\n      const liveVaultsData: Vault[] = action.payload\n      state.data = state.data.map((vault) => {\n        const liveVaultData = liveVaultsData.find((entry) => entry.id === vault.id)\n        return { ...vault, ...liveVaultData }\n      })\n    },\n    setVaultUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((vault) => {\n        const userVaultData = userData.find((entry) => entry.id === vault.id)\n        return { ...vault, userData: userVaultData }\n      })\n    },\n    updateVaultsUserData: (state, action) => {\n      const { field, value, id } = action.payload\n      const index = state.data.findIndex((v) => v.id === id)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n\n    setVaultsLoad: (state, action) => {\n      state.loadVaultData = action.payload\n    },\n  },\n})\n\n// thunks\n\nexport const setInitialVaultDataAsync = (chainId: number) => async (dispatch) => {\n  try {\n    const initialVaultState: Vault[] = await fetchVaultConfig()\n    const filteredVaults = initialVaultState?.filter((vault) => vault.availableChains.includes(chainId))\n    dispatch(setInitialVaultData(filteredVaults || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchVaultsPublicDataAsync =\n  (chainId: number, tokenPrices: TokenPrices[], farmLpAprs: FarmLpAprsType): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const vaultsConfig = getState().vaults.data\n      const vaults = await fetchVaults(chainId, tokenPrices, farmLpAprs, vaultsConfig)\n      dispatch(setLoadVaultData(vaults))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const fetchVaultUserDataAsync =\n  (account: string, chainId: number): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const vaults = getState().vaults.data\n      const filteredVaults = vaults.filter((vault) => vault.availableChains.includes(chainId))\n      const userVaultAllowances = await fetchVaultUserAllowances(account, chainId, vaults)\n      const userVaultTokenBalances = await fetchVaultUserTokenBalances(account, chainId, vaults)\n      const userVaultBalances = await fetchVaultUserStakedAndPendingBalances(account, chainId, vaults)\n      const userData = filteredVaults.map((vault, index) => {\n        return {\n          id: vault.id,\n          allowance: userVaultAllowances[index],\n          tokenBalance: userVaultTokenBalances[index],\n          stakedBalance: userVaultBalances.stakedBalances[index],\n          pendingRewards: userVaultBalances.pendingRewards[index],\n        }\n      })\n      dispatch(setVaultUserData(userData))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const updateVaultUserAllowance =\n  (account: string, chainId: number, id: number): AppThunk =>\n  async (dispatch, getState) => {\n    const vaults = getState().vaults.data\n    const allowances = await fetchVaultUserAllowances(account, chainId, vaults)\n    const filteredVaults = vaults.filter((vault) => vault.availableChains.includes(chainId))\n    const index = filteredVaults.findIndex((v) => v.pid === id)\n    dispatch(updateVaultsUserData({ id, field: 'allowance', value: allowances[index] }))\n  }\n\nexport const updateVaultUserBalance =\n  (account: string, chainId: number, id: number): AppThunk =>\n  async (dispatch, getState) => {\n    const vaults = getState().vaults.data\n    const tokenBalances = await fetchVaultUserTokenBalances(account, chainId, vaults)\n    const filteredVaults = vaults.filter((vault) => vault.availableChains.includes(chainId))\n    const index = filteredVaults.findIndex((v) => v.id === id)\n    dispatch(updateVaultsUserData({ id, field: 'tokenBalance', value: tokenBalances[index] }))\n  }\n\nexport const updateVaultUserStakedBalance =\n  (account: string, chainId: number, id: number): AppThunk =>\n  async (dispatch, getState) => {\n    const vaults = getState().vaults.data\n    const stakedBalances = await fetchVaultUserStakedAndPendingBalances(account, chainId, vaults)\n    const filteredVaults = vaults.filter((vault) => vault.availableChains.includes(chainId))\n    const index = filteredVaults.findIndex((v) => v.id === id)\n    dispatch(updateVaultsUserData({ id, field: 'stakedBalance', value: stakedBalances.stakedBalances[index] }))\n  }\n\n// Actions\nexport const { setInitialVaultData, setLoadVaultData, setVaultUserData, setVaultsLoad, updateVaultsUserData } =\n  vaultSlice.actions\n\nexport default vaultSlice.reducer\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Token, Trade, Pair, SmartRouter } from '@apeswapfinance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { APE_PRICE_IMPACT, PRIORITY_SMART_ROUTERS } from 'config/constants/chains'\nimport { SwapDelay } from 'state/swap/actions'\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, useAllSmartPairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nexport function useAllCommonPairs(currencyA?: Currency, currencyB?: Currency) {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = useAllSmartPairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  // Since useMemo was re-calculating each pair from the list on each keystroke we will only update on valid pair length changing and token switches\n  return useMemo(\n    () =>\n      allPairs.map((currPair) => {\n        return Object.values(\n          currPair\n            // filter out invalid pairs\n            .filter((result): result is [PairState.EXISTS, Pair] =>\n              Boolean(result[0] === PairState.EXISTS && result[1]),\n            )\n            // filter out duplicated pairs\n            .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n              memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n              return memo\n            }, {}),\n        )\n      }),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\n\nlet bestTradeExactIn = null\n\nexport function useTradeExactIn(\n  currencyAmountIn?: CurrencyAmount,\n  currencyOut?: Currency,\n  swapDelay?: SwapDelay,\n  onSetSwapDelay?: (swapDelay: SwapDelay) => void,\n): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n  const { chainId } = useActiveWeb3React()\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  bestTradeExactIn = useMemo(() => {\n    if (!currencyAmountIn) {\n      return null\n    }\n    if (swapDelay !== SwapDelay.USER_INPUT_COMPLETE && swapDelay !== SwapDelay.SWAP_REFRESH) {\n      return bestTradeExactIn\n    }\n\n    // search through trades with varying hops, find best trade out of them\n    let bestTradeSoFar: Trade | null = null\n    // Save the best ApeRouter trade if it exists\n    let bestApeTradeSoFar: Trade | null = null\n    for (let index = 0; index < allowedPairs.length; index++) {\n      if (currencyAmountIn && currencyOut && allowedPairs[index].length > 0) {\n        if (singleHopOnly) {\n          const currentSingleHopTrade =\n            Trade.bestTradeExactIn(allowedPairs[index], currencyAmountIn, currencyOut, {\n              maxHops: 1,\n              maxNumResults: 1,\n            })[0] ?? null\n          if (isTradeBetter(bestTradeSoFar, currentSingleHopTrade)) {\n            // if current trade is best yet, save it\n            bestTradeSoFar = currentSingleHopTrade\n          }\n          if (index === allowedPairs.length - 1) {\n            break\n          }\n        } else {\n          for (let i = 1; i <= MAX_HOPS; i++) {\n            const currentTrade: Trade | null =\n              Trade.bestTradeExactIn(allowedPairs[index], currencyAmountIn, currencyOut, {\n                maxHops: i,\n                maxNumResults: 1,\n              })[0] ?? null\n\n            if (PRIORITY_SMART_ROUTERS[chainId][0] === SmartRouter.APE) {\n              if (currentTrade?.route?.pairs?.[0]?.router === SmartRouter.APE) {\n                if (isTradeBetter(bestApeTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n                  bestApeTradeSoFar = currentTrade\n                }\n              }\n            }\n            if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n              // if current trade is best yet, save it\n              bestTradeSoFar = currentTrade\n            }\n          }\n        }\n      }\n    }\n    if (swapDelay !== SwapDelay.SWAP_REFRESH) {\n      onSetSwapDelay(SwapDelay.SWAP_COMPLETE)\n    }\n    if (bestApeTradeSoFar) {\n      if (parseFloat(bestApeTradeSoFar.priceImpact.toSignificant(6)) < APE_PRICE_IMPACT) {\n        return bestApeTradeSoFar\n      }\n    }\n    return bestTradeSoFar\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly, chainId, swapDelay, onSetSwapDelay])\n\n  return bestTradeExactIn\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\n\nlet bestTradeExactOut = null\n\nexport function useTradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount,\n  swapDelay?: SwapDelay,\n  onSetSwapDelay?: (swapDelay: SwapDelay) => void,\n): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n  const { chainId } = useActiveWeb3React()\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  bestTradeExactOut = useMemo(() => {\n    if (!currencyAmountOut) {\n      return null\n    }\n    if (swapDelay !== SwapDelay.USER_INPUT_COMPLETE && swapDelay !== SwapDelay.SWAP_REFRESH) {\n      return bestTradeExactOut\n    }\n    // search through trades with varying hops, find best trade out of them\n    let bestTradeSoFar: Trade | null = null\n    // Save the best ApeRouter trade if it exists\n    let bestApeTradeSoFar: Trade | null = null\n    for (let index = 0; index < allowedPairs.length; index++) {\n      if (currencyAmountOut && currencyIn && allowedPairs[index].length > 0) {\n        if (singleHopOnly) {\n          const currentSingleHopTrade =\n            Trade.bestTradeExactOut(allowedPairs[index], currencyIn, currencyAmountOut, {\n              maxHops: 1,\n              maxNumResults: 1,\n            })[0] ?? null\n          if (isTradeBetter(bestTradeSoFar, currentSingleHopTrade)) {\n            // if current trade is best yet, save it\n            bestTradeSoFar = currentSingleHopTrade\n          }\n          if (index === allowedPairs.length - 1) {\n            break\n          }\n        } else {\n          for (let i = 1; i <= MAX_HOPS; i++) {\n            const currentTrade: Trade | null =\n              Trade.bestTradeExactOut(allowedPairs[index], currencyIn, currencyAmountOut, {\n                maxHops: i,\n                maxNumResults: 1,\n              })[0] ?? null\n            if (PRIORITY_SMART_ROUTERS[chainId][0] === SmartRouter.APE) {\n              if (currentTrade?.route?.pairs?.[0]?.router === SmartRouter.APE) {\n                if (isTradeBetter(bestApeTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n                  bestApeTradeSoFar = currentTrade\n                }\n              }\n            }\n            if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n              // if current trade is best yet, save it\n              bestTradeSoFar = currentTrade\n            }\n          }\n        }\n      }\n    }\n    if (swapDelay !== SwapDelay.SWAP_REFRESH) {\n      onSetSwapDelay(SwapDelay.SWAP_COMPLETE)\n    }\n    if (bestApeTradeSoFar) {\n      if (parseFloat(bestApeTradeSoFar.priceImpact.toSignificant(6)) < APE_PRICE_IMPACT) {\n        return bestApeTradeSoFar\n      }\n    }\n    return bestTradeSoFar\n  }, [allowedPairs, currencyAmountOut, currencyIn, singleHopOnly, chainId, swapDelay, onSetSwapDelay])\n\n  return bestTradeExactOut\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useSelector } from 'react-redux'\nimport getProvider from 'utils/getProvider'\nimport { State } from 'state/types'\n\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { account, library, chainId, ...web3React } = useWeb3React()\n  const appChainId = useSelector((state: State) => state.network.data.chainId)\n  const appProvider = getProvider(appChainId)\n  const currChainId = chainId || appChainId\n  const refChainId = useRef(currChainId)\n  const refEth = useRef(library || appProvider)\n  const [provider, setProvider] = useState(library || appProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current || appProvider !== refEth.current) {\n      setProvider(library || appProvider)\n      refEth.current = library || appProvider\n      refChainId.current = currChainId\n    }\n  }, [library, appProvider, currChainId])\n\n  // To allow the app to update before passing a chainId !== provider\n  if (currChainId !== refChainId.current) {\n    return { library: refEth.current, chainId: refChainId.current, account, ...web3React }\n  }\n\n  return { library: provider, chainId: currChainId, account, ...web3React }\n}\n\nexport default useActiveWeb3React\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Token selector container\n  primaryFlex: {\n    minWidth: 'max-content',\n    height: '40px',\n    background: 'white4',\n    padding: '5px 10px',\n    borderRadius: '10px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'all .3s linear',\n    '&:active': {\n      transform: 'scale(0.9)',\n    },\n    ':hover': { background: 'navMenuLogo' },\n  },\n\n  // Token selected text\n  tokenText: {\n    fontSize: '14px',\n    margin: '0px 7.5px',\n    textTransform: 'uppercase',\n  },\n}\n","import { Trade, Percent, currencyEquals } from '@apeswapfinance/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL || ''\n\nexport const LS_KEY = 'apeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, Language, ProviderState, TranslateFunction } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = useCallback(async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      if (locale) {\n        const enLocale = languageMap.get(EN.locale)\n        languageMap.set(language.locale, { ...enLocale, ...locale })\n      }\n\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }, [])\n\n  const translate: TranslateFunction = useCallback(\n    (key, data) => {\n      const translationSet = languageMap.get(currentLanguage.locale) ?? languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useContext, useEffect } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\nimport { useColorMode } from 'theme-ui'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const [, setColorMode] = useColorMode()\n  useEffect(() => {\n    setColorMode(isDark ? 'dark' : 'light')\n  }, [isDark, setColorMode])\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import apePriceGetterABI from 'config/abi/apePriceGetter.json'\nimport multicall from 'utils/multicall'\nimport { getApePriceGetterAddress } from 'utils/addressHelper'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Farm } from 'state/types'\n\nconst fetchLpPrices = async (chainId, farmsConfig: Farm[]) => {\n  const apePriceGetterAddress = getApePriceGetterAddress(chainId)\n  const tokensToCall = Object.keys(farmsConfig).filter((token) => farmsConfig[token].lpAddresses[chainId] !== undefined)\n  const calls = tokensToCall.map((token) => {\n    return {\n      address: apePriceGetterAddress,\n      name: 'getLPPrice',\n      params: [farmsConfig[token].lpAddresses[chainId], 18],\n    }\n  })\n  const tokenPrices = await multicall(chainId, apePriceGetterABI, calls)\n  // Banana should always be the first token\n  const mappedTokenPrices = tokensToCall.map((token, i) => {\n    return {\n      symbol: farmsConfig[token].lpSymbol,\n      address: farmsConfig[token].lpAddresses,\n      price: getBalanceNumber(tokenPrices[i], 18),\n      decimals: 18,\n      pid: farmsConfig[token].pid,\n    }\n  })\n  return mappedTokenPrices\n}\n\nexport default fetchLpPrices\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LpTokenPricesState, LpTokenPrices, AppThunk } from '../types'\nimport fetchLpPrices from './fetchLpPrices'\n\nconst initialState: LpTokenPricesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: null,\n}\n\nexport const lpTokenPricesSlice = createSlice({\n  name: 'lpTokenPrices',\n  initialState,\n  reducers: {\n    lpTokenPricesFetchStart: (state) => {\n      state.isLoading = true\n    },\n    lpTokenPricesFetchSucceeded: (state, action: PayloadAction<LpTokenPrices[]>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    lpTokenPricesFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n  },\n})\n\n// Actions\nexport const { lpTokenPricesFetchStart, lpTokenPricesFetchSucceeded, lpTokenPricesFetchFailed } =\n  lpTokenPricesSlice.actions\n\nexport const fetchLpTokenPrices =\n  (chainId, farms): AppThunk =>\n  async (dispatch) => {\n    try {\n      dispatch(lpTokenPricesFetchStart())\n      const tokenPrices = await fetchLpPrices(chainId, farms)\n      dispatch(lpTokenPricesFetchSucceeded(tokenPrices))\n    } catch (error) {\n      dispatch(lpTokenPricesFetchFailed())\n    }\n  }\nexport default lpTokenPricesSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@apeswapfinance/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { StatsOverall, StatsOverallState } from 'state/types'\nimport getStatsOverall from './getStatsOverall'\n\nconst initialState: StatsOverallState = {\n  isInitialized: false,\n  isLoading: true,\n  data: null,\n}\n\nexport const statsOverallSlice = createSlice({\n  name: 'statsOverall',\n  initialState,\n  reducers: {\n    statsOverallFetchStart: (state) => {\n      state.isLoading = true\n    },\n    statsOverallFetchSucceeded: (state, action: PayloadAction<StatsOverall>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    statsOverallFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n  },\n})\n\n// Actions\nexport const { statsOverallFetchStart, statsOverallFetchSucceeded, statsOverallFetchFailed } = statsOverallSlice.actions\n\n// Thunks\nexport const fetchStatsOverall = () => async (dispatch) => {\n  try {\n    dispatch(statsOverallFetchStart())\n    const stats = await getStatsOverall()\n    dispatch(statsOverallFetchSucceeded(stats))\n  } catch (error) {\n    dispatch(statsOverallFetchFailed())\n  }\n}\n\nexport default statsOverallSlice.reducer\n","// Set of helper functions to facilitate wallet setup\nimport erc20 from 'config/abi/erc20.json'\nimport { getContract } from 'utils'\nimport { CHAIN_PARAMS } from 'config/constants/chains'\nimport { Erc20 } from 'config/abi/types'\nimport getProvider from './getProvider'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async (chainId: number) => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [CHAIN_PARAMS[chainId]],\n      })\n      return true\n    } catch (error) {\n      console.warn(error)\n      return false\n    }\n  } else {\n    console.warn(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n\nexport const getTokenInfo = async (tokenAddress: string, chainId: number) => {\n  const provider = getProvider(chainId)\n  const token = getContract(tokenAddress, erc20, provider) as Erc20\n  return {\n    symbolToken: await token.symbol(),\n    nameToken: await token.name(),\n    decimalsToken: await token.decimals(),\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport styled from 'styled-components'\nimport Iframe from 'react-iframe'\nimport { useMoonPayUrl } from 'hooks/api'\n\nconst StyledIframe = styled(Iframe)`\n  width: 100%;\n  max-width: 398px;\n  height: calc(100vh - 130px);\n  max-height: 738px;\n  overflow: hidden;\n  margin: 0 auto;\n  margin-top: 16px;\n  border-radius: 1rem;\n\n  & > div {\n    grid-column: span 12;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      height: 1200px;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      height: 860px;\n    }\n  }\n`\n\nexport default function MoonPayIframe() {\n  const url = useMoonPayUrl()\n\n  return (\n    <StyledIframe\n      title=\"Moonpay topup\"\n      url={url}\n      scrolling=\"no\"\n      allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\n    />\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Modal, ModalProps } from '@ape.swap/uikit'\nimport MoonPayIframe from './MoonFrame'\n\nexport default function MoonPayModal({ onDismiss }: ModalProps) {\n  const modalProps = {\n    style: {\n      zIndex: 10,\n      overflowY: 'auto',\n      maxHeight: 'calc(100% - 30px)',\n    },\n    sx: {\n      minWidth: '437px',\n      '@media screen and (max-width: 437px)': {\n        minWidth: '95%',\n      },\n      maxWidth: '437px',\n    },\n  }\n  return (\n    <Modal title=\"Buy crypto with MoonPay\" onDismiss={onDismiss} {...modalProps}>\n      <MoonPayIframe />\n    </Modal>\n  )\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { Multicall } from 'config/abi/types'\nimport contracts from 'config/constants/contracts'\nimport multi from 'config/abi/Multicall.json'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { BigNumber } from 'ethers'\nimport useActiveWeb3React from './useActiveWeb3React'\nimport useContract from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const { chainId } = useActiveWeb3React()\n  const multicall = useContract(multi, contracts.mulltiCallV3[chainId], false) as Multicall\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nfunction isVisibilityStateSupported() {\n  return 'visibilityState' in document\n}\n\nfunction isWindowVisible() {\n  return !isVisibilityStateSupported() || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(false)\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!isVisibilityStateSupported()) return undefined\n    setFocused(() => isWindowVisible())\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { getApePriceGetterAddress, getNativeWrappedAddress, getSmartPriceGetter } from 'utils/addressHelper'\nimport apePriceGetterABI from 'config/abi/apePriceGetter.json'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport multicall from 'utils/multicall'\nimport { Currency, SmartRouter, Token } from '@apeswapfinance/sdk'\nimport store from '../state'\n\nexport const getTokenUsdPrice = async (\n  chainId: number,\n  tokenAddress: string,\n  tokenDecimal: number,\n  lp?: boolean,\n  isNative?: boolean,\n) => {\n  const priceGetterAddress = getApePriceGetterAddress(chainId)\n  const nativeTokenAddress = getNativeWrappedAddress(chainId)\n  if (!priceGetterAddress) return 0\n  if ((tokenAddress || isNative) && tokenDecimal) {\n    const call = lp\n      ? {\n          address: priceGetterAddress,\n          name: 'getLPPrice',\n          params: [tokenAddress, 18],\n        }\n      : {\n          address: priceGetterAddress,\n          name: 'getPrice',\n          params: [isNative ? nativeTokenAddress : tokenAddress, tokenDecimal],\n        }\n\n    const tokenPrice = await multicall(chainId, apePriceGetterABI, [call])\n    const filterPrice = getBalanceNumber(tokenPrice[0], tokenDecimal)\n    return filterPrice\n  }\n  return null\n}\n\nexport const getCurrencyUsdPrice = async (\n  chainId: number,\n  currency: Currency,\n  lp = false,\n  smartRouter?: SmartRouter,\n) => {\n  if (!currency) {\n    return null\n  }\n\n  if (currency?.symbol === 'GNANA') {\n    return parseFloat(store.getState().tokenPrices.bananaPrice) * 1.3889\n  }\n  const isNative = currency?.symbol === 'ETH'\n  const [address, decimals] = currency instanceof Token ? [currency?.address, currency?.decimals] : ['', 18]\n  const priceGetterAddress = getSmartPriceGetter(chainId, smartRouter)\n\n  const nativeTokenAddress = getNativeWrappedAddress(chainId)\n  if ((address || isNative) && decimals) {\n    const call = lp\n      ? {\n          address: priceGetterAddress,\n          name: 'getLPPrice',\n          params: [address, 18],\n        }\n      : {\n          address: priceGetterAddress,\n          name: 'getPrice',\n          params: [isNative ? nativeTokenAddress : address, decimals],\n        }\n    const tokenPrice = await multicall(chainId, apePriceGetterABI, [call])\n    return getBalanceNumber(tokenPrice[0], decimals)\n  }\n  return null\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { SmartRouter } from '@apeswapfinance/sdk'\nimport { createAction } from '@reduxjs/toolkit'\nimport { RouterTypes } from 'config/constants'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport enum SwapDelay {\n  INIT = 'INIT', // The initial state of the swap cycle before a user interaction\n  USER_INPUT = 'USER_INPUT', // Swap state when a user is inputing a trade\n  USER_INPUT_COMPLETE = 'USER_INPUT_COMPLETE', // To let the app know when to start calculating swaps\n  FETCHING_SWAP = 'FETCHING_SWAP', // To not calculate swaps on every keystroke\n  SWAP_COMPLETE = 'SWAP_COMPLETE', // When the swap is ready to be displayed and fetch a bonus\n  FETCHING_BONUS = 'FETCHING_BONUS', // Checks if the swap has a valid bous route\n  SWAP_REFRESH = 'SWAP_REFRESH', // The last state that lets the app know to refresh routes to check for changes\n}\n\ntype SearchSummary = {\n  expectedProfit?: number\n  expectedUsdProfit?: number\n  firstTokenAddress?: string\n  firstTokenAmount?: number\n  expectedKickbackProfit?: number\n}\n\ntype TransactionArgs = {\n  data: string\n  destination: string\n  sender: string\n  value: string\n  masterInput: string\n}\n\nexport type DataResponse = {\n  pathFound: boolean\n  summary?: { searchSummary?: SearchSummary }\n  transactionArgs: TransactionArgs\n}\n\nexport interface RouterTypeParams {\n  routerType: RouterTypes\n  smartRouter: SmartRouter\n  bonusRouter?: DataResponse\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const setSwapDelay = createAction<{ swapDelay: SwapDelay }>('swap/swapDelay')\nexport const setBestRoute = createAction<{ bestRoute: RouterTypeParams }>('swap/bestRoute')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n  swapDelay: SwapDelay\n  bestRoute: RouterTypeParams\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { textUnderlineHover } from '../styles'\n\nconst MyPositions: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <Flex\n      sx={{\n        margin: '0px 0px 40px 0px',\n        width: 'fit-content',\n        alignItems: 'center',\n        position: 'relative',\n        ...textUnderlineHover,\n      }}\n      as={Link}\n      to=\"/liquidity\"\n    >\n      <Svg icon=\"caret\" direction=\"left\" width=\"7px\" />\n      <Text size=\"12px\" ml=\"5px\">\n        {t('My positions')}\n      </Text>\n    </Flex>\n  )\n}\n\nexport default React.memo(MyPositions)\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport defaultTokenJson from 'config/constants/token-lists/apeswap.json'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\nexport function getDefaultTokenListAddresses() {\n  return defaultTokenJson?.tokens?.map((token) => token.address.toLowerCase())\n}\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import { useMemo } from 'react'\nimport { Token } from '@apeswapfinance/sdk'\nimport { TokenInfo } from '@uniswap/token-lists'\n\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function createFilterToken<T extends TokenInfo | Token>(search: string): (token: T) => boolean {\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    const address = searchingAddress.toLowerCase()\n    return (t: T) => 'address' in t && address === t.address.toLowerCase()\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return () => true\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n  return (token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  }\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const bananaToken: Token[] = []\n    const exactMatches: Token[] = []\n    const symbolSubstrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> substring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === 'banana') {\n        return bananaToken.push(token)\n      }\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubstrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...bananaToken, ...exactMatches, ...symbolSubstrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@apeswapfinance/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport { Farm } from 'state/types'\nimport { getMasterChefAddress } from 'utils/addressHelper'\nimport multicall from 'utils/multicall'\n\nexport const fetchFarmUserAllowances = async (chainId: number, account: string, farmsConfig: Farm[]) => {\n  const masterChefAddress = getMasterChefAddress(chainId)\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[chainId]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(chainId, erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (chainId: number, account: string, farmsConfig: Farm[]) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[chainId]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(chainId, erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (chainId: number, account: string, farmsConfig: Farm[]) => {\n  const masterChefAddress = getMasterChefAddress(chainId)\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(chainId, masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (chainId: number, account: string, farmsConfig: Farm[]) => {\n  const masterChefAddress = getMasterChefAddress(chainId)\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(chainId, masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { getMasterChefAddress } from 'utils/addressHelper'\nimport { Call } from 'utils/multicall'\nimport { FarmConfig } from 'config/constants/types'\n\nconst fetchFarmCalls = (farm: FarmConfig, chainId: number): Call[] => {\n  const masterChefAddress = getMasterChefAddress(chainId)\n  const lpAdress = farm.lpAddresses[chainId]\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: farm.tokenAddresses[chainId],\n      name: 'balanceOf',\n      params: [lpAdress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: farm.quoteTokenAdresses[chainId],\n      name: 'balanceOf',\n      params: [lpAdress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAdress,\n      name: 'balanceOf',\n      params: [masterChefAddress],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAdress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: farm.tokenAddresses[chainId],\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: farm.quoteTokenAdresses[chainId],\n      name: 'decimals',\n    },\n    // poolInfo\n    {\n      address: masterChefAddress,\n      name: 'poolInfo',\n      params: [farm.pid],\n    },\n    // totalAllocPoint\n    {\n      address: masterChefAddress,\n      name: 'totalAllocPoint',\n    },\n  ]\n  return calls\n}\n\nexport default fetchFarmCalls\n","import BigNumber from 'bignumber.js'\nimport { Farm, FarmLpAprsType, LpTokenPrices } from 'state/types'\nimport { getFarmApr } from 'utils/apr'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\n\nconst cleanFarmData = (\n  farmIds: number[],\n  chunkedFarms: any[],\n  lpPrices: LpTokenPrices[],\n  bananaPrice: BigNumber,\n  farmLpAprs: FarmLpAprsType,\n  farmsConfig: Farm[],\n) => {\n  const data = chunkedFarms.map((chunk, index) => {\n    const farmConfig = farmsConfig?.find((farm) => farm.pid === farmIds[index])\n    const filteredLpPrice = lpPrices?.find((lp) => lp.address === farmConfig.lpAddresses)\n    const [\n      tokenBalanceLP,\n      quoteTokenBlanceLP,\n      lpTokenBalanceMC,\n      lpTotalSupply,\n      tokenDecimals,\n      quoteTokenDecimals,\n      info,\n      totalAllocPoint,\n    ] = chunk\n\n    // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n    const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n    const totalLpStaked = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(18))\n\n    // Total value in staking in quote token value\n    const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n      .div(new BigNumber(10).pow(18))\n      .times(new BigNumber(2))\n      .times(lpTokenRatio)\n    // Total value in pool in quote token value\n    const totalInQuoteToken = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(10).pow(18)).times(new BigNumber(2))\n\n    // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n    const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n    const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n      .div(new BigNumber(10).pow(quoteTokenDecimals))\n      .times(lpTokenRatio)\n\n    let alloc = null\n    let multiplier = 'unset'\n    const allocPoint = new BigNumber(info.allocPoint._hex)\n    const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n    alloc = poolWeight.toJSON()\n    multiplier = `${allocPoint.div(100).toString()}X`\n    const totalLpStakedUsd = totalLpStaked.times(filteredLpPrice?.price)\n    const apr = getFarmApr(poolWeight, bananaPrice, totalLpStakedUsd)\n    const lpApr = farmLpAprs?.lpAprs?.find((lp) => lp.pid === farmConfig.pid)?.lpApr * 100\n    const amountEarned = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: lpApr ? apr + lpApr : apr,\n      tokenPrice: bananaPrice,\n    })\n\n    const apy = getRoi({ amountEarned, amountInvested: 1000 / bananaPrice?.toNumber() })\n\n    return {\n      ...farmConfig,\n      tokenAmount: tokenAmount.toJSON(),\n      quoteTokenAmount: quoteTokenAmount.toJSON(),\n      totalInQuoteToken: totalInQuoteToken.toJSON(),\n      lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n      tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n      totalLpStakedUsd: totalLpStakedUsd?.toFixed(0),\n      apr: apr?.toFixed(2),\n      apy: apy?.toFixed(2),\n      lpApr: lpApr?.toFixed(2),\n      lpValueUsd: filteredLpPrice?.price,\n      bananaPrice: bananaPrice?.toNumber(),\n      poolWeight: alloc,\n      multiplier,\n    }\n  })\n  return data\n}\n\nexport default cleanFarmData\n","import erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport BigNumber from 'bignumber.js'\nimport { Farm, FarmLpAprsType, LpTokenPrices } from 'state/types'\nimport { chunk } from 'lodash'\nimport multicall from 'utils/multicall'\nimport fetchFarmCalls from './fetchFarmCalls'\nimport cleanFarmData from './cleanFarmData'\n\nconst fetchFarms = async (\n  chainId: number,\n  lpPrices: LpTokenPrices[],\n  bananaPrice: BigNumber,\n  farmLpAprs: FarmLpAprsType,\n  farmsConfig: Farm[],\n) => {\n  const farmIds = []\n  const farmCalls = farmsConfig.flatMap((farm) => {\n    farmIds.push(farm.pid)\n    return fetchFarmCalls(farm, chainId)\n  })\n  const vals = await multicall(chainId, [...masterchefABI, ...erc20], farmCalls)\n  const chunkSize = farmCalls.length / farmsConfig.length\n  const chunkedFarms = chunk(vals, chunkSize)\n  return cleanFarmData(farmIds, chunkedFarms, lpPrices, bananaPrice, farmLpAprs, farmsConfig)\n}\n\nexport default fetchFarms\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheFarms = []\n\nconst fetchFarmConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      tries++\n      const response = await axios.get(`${apeswapListUrl}/farms.json`)\n      const farmConfigResp = await response.data\n      if (farmConfigResp.statusCode === 500) {\n        return null\n      }\n      cacheFarms = farmConfigResp\n      return farmConfigResp\n    }\n    return cacheFarms\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchFarmConfig\n","import { createSlice } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm, LpTokenPrices, FarmLpAprsType, AppThunk } from '../types'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmConfig from './api'\n\nconst initialState: FarmsState = {\n  data: [],\n}\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setInitialFarmData: (state, action) => {\n      state.data = action.payload\n    },\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n    updateFarmUserData: (state, action) => {\n      const { field, value, pid } = action.payload\n      const index = state.data.findIndex((p) => p.pid === pid)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setInitialFarmData, setFarmsPublicData, setFarmUserData, updateFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync =\n  (chainId: number, lpPrices: LpTokenPrices[], bananaPrice: BigNumber, farmLpAprs: FarmLpAprsType): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const farmsConfig = getState().farms.data\n      const farms = await fetchFarms(chainId, lpPrices, bananaPrice, farmLpAprs, farmsConfig)\n      dispatch(setFarmsPublicData(farms))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\nexport const fetchFarmUserDataAsync =\n  (chainId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const farms = getState().farms.data\n      const userFarmAllowances = await fetchFarmUserAllowances(chainId, account, farms)\n      const userFarmTokenBalances = await fetchFarmUserTokenBalances(chainId, account, farms)\n      const userStakedBalances = await fetchFarmUserStakedBalances(chainId, account, farms)\n      const userFarmEarnings = await fetchFarmUserEarnings(chainId, account, farms)\n\n      const arrayOfUserDataObjects = userFarmAllowances.map((_, index) => {\n        return {\n          index,\n          allowance: userFarmAllowances[index],\n          tokenBalance: userFarmTokenBalances[index],\n          stakedBalance: userStakedBalances[index],\n          earnings: userFarmEarnings[index],\n        }\n      })\n      dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const setInitialFarmDataAsync = (): AppThunk => async (dispatch) => {\n  try {\n    const initialFarmState: Farm[] = await fetchFarmConfig()\n    dispatch(setInitialFarmData(initialFarmState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const updateFarmUserAllowances =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const farms = getState().farms.data\n    const allowances = await fetchFarmUserAllowances(chainId, account, farms)\n    dispatch(updateFarmUserData({ pid, field: 'allowance', value: allowances[pid] }))\n  }\n\nexport const updateFarmUserTokenBalances =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const farms = getState().farms.data\n    const tokenBalances = await fetchFarmUserTokenBalances(chainId, account, farms)\n    dispatch(updateFarmUserData({ pid, field: 'tokenBalance', value: tokenBalances[pid] }))\n  }\n\nexport const updateFarmUserStakedBalances =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const farms = getState().farms.data\n    const stakedBalances = await fetchFarmUserStakedBalances(chainId, account, farms)\n    dispatch(updateFarmUserData({ pid, field: 'stakedBalance', value: stakedBalances[pid] }))\n  }\n\nexport const updateFarmUserEarnings =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const farms = getState().farms.data\n    const pendingRewards = await fetchFarmUserEarnings(chainId, account, farms)\n    dispatch(updateFarmUserData({ pid, field: 'earnings', value: pendingRewards[pid] }))\n  }\n\nexport default farmsSlice.reducer\n","import { Currency, currencyEquals, ETHER, WETH } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { NETWORK_RPC } from 'config/constants/chains'\nimport random from 'lodash/random'\n\nconst getNodeUrl = (chainId: number) => {\n  const randomIndex = random(0, NETWORK_RPC[chainId].length - 1)\n  return NETWORK_RPC[chainId][randomIndex]\n}\n\nexport default getNodeUrl\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@apeswapfinance/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  warningMessageContainer: {\n    flexDirection: 'column',\n    background: 'error',\n    borderRadius: '10px',\n    marginBottom: '40px',\n    padding: '15px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transform: 'translate(0px, -15px)',\n  },\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  swapSwitchContainer: {\n    width: '100%',\n    height: '50px',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  swapSwitchButton: {\n    backgroundColor: 'yellow',\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n  },\n}\n","import { Flex, Text } from '@ape.swap/uikit'\nimport React from 'react'\nimport { styles } from './styles'\n\nconst AddLiquiditySign: React.FC = () => (\n  <Flex sx={{ ...styles.swapSwitchContainer }}>\n    <Flex sx={{ ...styles.swapSwitchButton }}>\n      <Text weight={700} size=\"20px\" color=\"primaryBright\" sx={{ lineHeight: '0px' }}>\n        +\n      </Text>\n    </Flex>\n  </Flex>\n)\n\nexport default React.memo(AddLiquiditySign)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  poolInfoContainer: {\n    width: '100%',\n    background: 'white3',\n    marginTop: '10px',\n    flexDirection: 'column',\n    borderRadius: '10px',\n    padding: '10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { Currency, Percent, Price, TokenAmount } from '@apeswapfinance/sdk'\nimport { DoubleCurrencyLogo } from 'components/Logo'\nimport { ONE_BIPS } from 'config/constants'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Field } from 'state/mint/actions'\nimport { dexStyles } from 'views/Dex/styles'\nimport { styles } from './styles'\n\nconst PoolInfo: React.FC<{\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n  chainId?: number\n  liquidityMinted?: TokenAmount\n}> = ({ currencies, noLiquidity, poolTokenPercentage, price, chainId, liquidityMinted }) => {\n  const { t } = useTranslation()\n  return (\n    <Flex sx={{ ...styles.poolInfoContainer }}>\n      <Flex sx={{ justifyContent: 'space-between', margin: '4px 0px' }}>\n        <Text size=\"12px\" weight=\"light\" sx={dexStyles.textWrap}>\n          {`${currencies[Field.CURRENCY_A]?.getSymbol(chainId) || ''} - \n            ${currencies[Field.CURRENCY_B]?.getSymbol(chainId) || ''} LP`}\n        </Text>\n        <Flex sx={{ alignItems: 'center', justifyContent: 'center' }}>\n          <Text size=\"12px\" weight={700} mr=\"5px\" sx={dexStyles.textWrap}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={16}\n          />\n        </Flex>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between', margin: '4px 0px' }}>\n        <Text size=\"12px\" weight=\"light\" sx={dexStyles.textWrap}>\n          {t('Share of Pool')}\n        </Text>\n        <Text size=\"12px\" weight={700} sx={dexStyles.textWrap}>\n          {noLiquidity && price\n            ? '100'\n            : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n          %\n        </Text>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between', margin: '4px 0px' }}>\n        <Text size=\"12px\" weight=\"light\" sx={dexStyles.textWrap}>\n          {t('%currencyA% per %currencyB%', {\n            currencyA: currencies[Field.CURRENCY_A]?.getSymbol(chainId) || '',\n            currencyB: currencies[Field.CURRENCY_B]?.getSymbol(chainId) || '',\n          })}\n        </Text>\n        <Text size=\"12px\" weight={700} sx={dexStyles.textWrap}>\n          {price?.invert()?.toSignificant(6) ?? '-'}\n        </Text>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between', margin: '4px 0px' }}>\n        <Text size=\"12px\" weight=\"light\" sx={dexStyles.textWrap}>\n          {t('%currencyB% per %currencyA%', {\n            currencyB: currencies[Field.CURRENCY_B]?.getSymbol(chainId) || '',\n            currencyA: currencies[Field.CURRENCY_A]?.getSymbol(chainId) || '',\n          })}\n        </Text>\n        <Text size=\"12px\" weight={700} sx={dexStyles.textWrap}>\n          {price?.toSignificant(6) ?? '-'}\n        </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(PoolInfo)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  modalWrapper: {\n    flexDirection: 'column',\n  },\n  swapSwitchButton: {\n    backgroundColor: 'yellow',\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n  },\n  confirmDisabledInputContainer: {\n    backgroundColor: 'white3',\n    borderRadius: '10px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    padding: '10px',\n    height: '60px',\n  },\n  outerLogoCircle: {\n    zIndex: 1,\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white2',\n    flexDirection: 'column',\n  },\n  innerLogoCircle: {\n    height: '22.5px',\n    width: '22.5px',\n    borderRadius: '22.5px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Button, Flex, Text } from '@ape.swap/uikit'\nimport { Modal } from '@apeswapfinance/uikit'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React from 'react'\nimport { Field } from 'state/mint/actions'\nimport { ConfirmationPendingContent, TransactionSubmittedContent } from 'components/TransactionConfirmationModal'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { AddLiquidityModalProps } from './types'\nimport { styles } from './styles'\nimport PoolInfo from '../PoolInfo'\n\nconst AddLiquidityModal: React.FC<AddLiquidityModalProps> = ({\n  currencies,\n  liquidityMinted,\n  noLiquidity,\n  title,\n  parsedAmounts,\n  poolTokenPercentage,\n  price,\n  txHash,\n  attemptingTxn,\n  onDismiss,\n  onAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const { t } = useTranslation()\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? ''} ${\n    currencies[Field.CURRENCY_A]?.getSymbol(chainId) ?? ''\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? ''} ${\n    currencies[Field.CURRENCY_B]?.getSymbol(chainId) ?? ''\n  }`\n  return (\n    <Modal title={title} maxWidth=\"420px\" onDismiss={onDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : txHash ? (\n        <TransactionSubmittedContent chainId={chainId} hash={txHash} onDismiss={onDismiss} />\n      ) : (\n        <Flex sx={styles.modalWrapper}>\n          <>\n            <Flex sx={{ ...styles.confirmDisabledInputContainer, transform: 'translate(0px, 12px)' }}>\n              <Text size=\"22px\" weight={700}>\n                {parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)}\n              </Text>\n              <Flex sx={{ alignItems: 'center' }}>\n                <CurrencyLogo currency={currencies[Field.CURRENCY_A]} size=\"30px\" />\n                <Text size=\"14px\" weight={700} ml=\"10px\">\n                  {currencies[Field.CURRENCY_A].getSymbol(chainId)}\n                </Text>\n              </Flex>\n            </Flex>\n            <Flex sx={{ justifyContent: 'center', alignItems: 'center' }}>\n              <Flex sx={styles.outerLogoCircle}>\n                <Flex sx={styles.innerLogoCircle}>\n                  <Text weight={700} color=\"primaryBright\" sx={{ lineHeight: '0px' }}>\n                    +\n                  </Text>\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex sx={{ ...styles.confirmDisabledInputContainer, transform: 'translate(0px, -12px)' }}>\n              <Text size=\"22px\" weight={700}>\n                {parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)}\n              </Text>\n              <Flex sx={{ alignItems: 'center' }}>\n                <CurrencyLogo currency={currencies[Field.CURRENCY_B]} size=\"30px\" />\n                <Text size=\"14px\" weight={700} ml=\"10px\">\n                  {currencies[Field.CURRENCY_B].getSymbol(chainId)}\n                </Text>\n              </Flex>\n            </Flex>\n            <Text size=\"14px\" textAlign=\"left\" weight={500} margin=\"10px 0px\" style={{ textAlign: 'center' }}>\n              {t(\n                'Output is estimated. If the price changes by more than %allowedSlippage%% your transaction will revert.',\n                { allowedSlippage: allowedSlippage / 100 },\n              )}\n            </Text>\n            <PoolInfo\n              currencies={currencies}\n              noLiquidity={noLiquidity}\n              chainId={chainId}\n              price={price}\n              poolTokenPercentage={poolTokenPercentage}\n              liquidityMinted={liquidityMinted}\n            />\n            <Button onClick={onAdd} fullWidth mt=\"15px\">\n              {t('Confirm Add Liquidity')}\n            </Button>\n          </>\n        </Flex>\n      )}\n    </Modal>\n  )\n}\n\nexport default React.memo(AddLiquidityModal)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Token selector container\n  dexActionsContainer: {\n    position: 'relative',\n    width: '100%',\n    marginTop: '10px',\n  },\n\n  navLinkContainer: {\n    width: '100%',\n    maxWidth: '225px',\n    paddingRight: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navIconContainer: {\n    width: '100%',\n    maxWidth: '60px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navLink: {\n    cursor: 'pointer',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Button, Flex, useModal } from '@ape.swap/uikit'\nimport { ETHER, ROUTER_ADDRESS } from '@apeswapfinance/sdk'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber } from 'ethers'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { parseAddress } from 'hooks/useAddress'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport React, { useCallback, useState } from 'react'\nimport { Field } from 'state/mint/actions'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from 'state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\nimport track from 'utils/track'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport AddLiquidityModal from '../AddLiquidityModal'\nimport { styles } from './styles'\nimport { AddLiquidityActionsProps } from './types'\n\nconst AddLiquidityActions: React.FC<AddLiquidityActionsProps> = ({\n  currencies,\n  error,\n  parsedAmounts,\n  noLiquidity,\n  liquidityMinted,\n  poolTokenPercentage,\n  tradeValueUsd,\n  price,\n}) => {\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>('')\n  const { t } = useTranslation()\n  const { account, chainId, library } = useActiveWeb3React()\n\n  // Currencies\n  const currencyA = currencies?.CURRENCY_A\n  const currencyB = currencies?.CURRENCY_B\n\n  // Check to see if the add is supported\n  const addIsUnsupported = useIsTransactionUnsupported(currencyA, currencyB)\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // Custom from users settings\n  const deadline = useTransactionDeadline()\n\n  // Check if user has expert mode set\n  const expertMode = useIsExpertMode()\n\n  // Add transaction\n  const addTransaction = useTransactionAdder()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    parseAddress(ROUTER_ADDRESS, chainId),\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    parseAddress(ROUTER_ADDRESS, chainId),\n  )\n\n  const onAdd = async () => {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${currencies[\n              Field.CURRENCY_A\n            ]?.getSymbol(chainId)} and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[\n              Field.CURRENCY_B\n            ]?.getSymbol(chainId)}`,\n          })\n\n          setTxHash(response.hash)\n          track({\n            event: 'liquidity',\n            chain: chainId,\n            value: tradeValueUsd * 2,\n            data: {\n              token1: currencies[Field.CURRENCY_A]?.getSymbol(chainId),\n              token2: currencies[Field.CURRENCY_B]?.getSymbol(chainId),\n              token1Amount: parsedAmounts[Field.CURRENCY_A]?.toSignificant(3),\n              token2Amount: parsedAmounts[Field.CURRENCY_B]?.toSignificant(3),\n              cat: 'add',\n            },\n          })\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    setTxHash('')\n  }, [])\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <AddLiquidityModal\n      title={noLiquidity ? t('You are creating a pool') : t('Confirm Add Liquidity')}\n      currencies={currencies}\n      noLiquidity={noLiquidity}\n      liquidityMinted={liquidityMinted}\n      parsedAmounts={parsedAmounts}\n      price={price}\n      poolTokenPercentage={poolTokenPercentage}\n      txHash={txHash}\n      attemptingTxn={attemptingTxn}\n      onDismiss={handleDismissConfirmation}\n      onAdd={onAdd}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  const renderAction = () => {\n    if (addIsUnsupported) {\n      return (\n        <Button fullWidth disabled>\n          {t('Unsupported Asset')}\n        </Button>\n      )\n    }\n    if (!account) {\n      return <UnlockButton fullWidth />\n    }\n    if (error) {\n      return (\n        <Button fullWidth disabled>\n          {error}\n        </Button>\n      )\n    }\n    if (\n      (approvalA === ApprovalState.NOT_APPROVED ||\n        approvalA === ApprovalState.PENDING ||\n        approvalB === ApprovalState.NOT_APPROVED ||\n        approvalB === ApprovalState.PENDING) &&\n      !error\n    ) {\n      return (\n        <Flex sx={{ width: '100%' }}>\n          <>\n            {approvalA !== ApprovalState.APPROVED && (\n              <Button\n                onClick={approveACallback}\n                disabled={approvalA === ApprovalState.PENDING}\n                load={approvalA === ApprovalState.PENDING}\n                fullWidth\n                mr={approvalB !== ApprovalState.APPROVED && '7.5px'}\n                sx={{ padding: '10px 2px' }}\n              >\n                {approvalA === ApprovalState.PENDING\n                  ? `${t('Enabling')} ${currencies[Field.CURRENCY_A]?.getSymbol(chainId)}`\n                  : `${t('Enable')} ${currencies[Field.CURRENCY_A]?.getSymbol(chainId)}`}\n              </Button>\n            )}\n            {approvalB !== ApprovalState.APPROVED && (\n              <Button\n                onClick={approveBCallback}\n                disabled={approvalB === ApprovalState.PENDING}\n                load={approvalB === ApprovalState.PENDING}\n                fullWidth\n                sx={{ padding: '10px 2px' }}\n              >\n                {approvalB === ApprovalState.PENDING\n                  ? `${t('Enabling')} ${currencies[Field.CURRENCY_B]?.getSymbol(chainId)}`\n                  : `${t('Enable')} ${currencies[Field.CURRENCY_B]?.getSymbol(chainId)}`}\n              </Button>\n            )}\n          </>\n        </Flex>\n      )\n    }\n    return (\n      <Button\n        fullWidth\n        onClick={() => {\n          if (expertMode) {\n            onAdd()\n          } else {\n            onPresentAddLiquidityModal()\n          }\n        }}\n      >\n        {t('Add Liquidity')}\n      </Button>\n    )\n  }\n\n  return <Flex sx={{ ...styles.dexActionsContainer }}>{renderAction()}</Flex>\n}\n\nexport default React.memo(AddLiquidityActions)\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useCurrency } from 'hooks/Tokens'\nimport { Flex, Text } from '@ape.swap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Currency, TokenAmount } from '@apeswapfinance/sdk'\nimport { useSwapState } from 'state/swap/hooks'\nimport { useUserRecentTransactions } from 'state/user/hooks'\nimport maxAmountSpend from 'utils/maxAmountSpend'\nimport { useAppDispatch } from 'state'\nimport { Field, resetMintState } from 'state/mint/actions'\nimport { currencyId } from 'utils/currencyId'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\nimport { dexStyles } from '../styles'\nimport { styles } from './styles'\nimport DexPanel from '../components/DexPanel'\nimport DexNav from '../components/DexNav'\nimport AddLiquiditySign from './components/AddLiquiditySign'\nimport PoolInfo from './components/PoolInfo'\nimport AddLiquidityActions from './components/Actions'\nimport MyPositions from '../components/MyPositions'\nimport RecentTransactions from '../components/RecentTransactions'\n\nfunction AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const { INPUT, OUTPUT } = useSwapState()\n  const { t } = useTranslation()\n  const [tradeValueUsd, setTradeValueUsd] = useState(0)\n\n  // Set either param currency or swap currency\n  currencyIdA = currencyIdA || INPUT.currencyId\n  currencyIdB = currencyIdB || OUTPUT.currencyId\n\n  const [recentTransactions] = useUserRecentTransactions()\n\n  // Set currencies\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  // Check to reset mint state\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onUserInput } = useMintActionHandlers(noLiquidity)\n\n  // Handle currency selection\n  const handleCurrencySelect = useCallback(\n    (field: Field, currency: Currency) => {\n      const newCurrencyId = currencyId(currency)\n      if (field === Field.CURRENCY_A) {\n        if (newCurrencyId === currencyIdB) {\n          history.push(`/add-liquidity/${currencyIdB}/${currencyIdA}`)\n        } else if (currencyIdB) {\n          history.push(`/add-liquidity/${newCurrencyId}/${currencyIdB}`)\n        } else {\n          history.push(`/add-liquidity/${newCurrencyId}`)\n        }\n      } else if (field === Field.CURRENCY_B) {\n        if (newCurrencyId === currencyIdA) {\n          if (currencyIdB) {\n            history.push(`/add-liquidity/${currencyIdB}/${newCurrencyId}`)\n          } else {\n            history.push(`/add-liquidity/${newCurrencyId}`)\n          }\n        } else {\n          history.push(`/add-liquidity/${currencyIdA || 'ETH'}/${newCurrencyId}`)\n        }\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const handleMaxInput = useCallback(\n    (field: Field) => {\n      if (maxAmounts) {\n        onUserInput(field, maxAmounts[field]?.toExact() ?? '')\n      }\n    },\n    [maxAmounts, onUserInput],\n  )\n\n  return (\n    <Flex sx={{ ...dexStyles.pageContainer }}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex sx={{ ...dexStyles.dexContainer }}>\n          <DexNav />\n          <Flex sx={{ margin: '20px 0px 5px 0px', justifyContent: 'center', maxWidth: '100%', width: '420px' }}>\n            <Text weight={700}>ADD LIQUIDITY</Text>\n          </Flex>\n          <MyPositions />\n          {noLiquidity && (\n            <Flex sx={{ ...styles.warningMessageContainer }}>\n              <Text size=\"14px\" weight={700} mb=\"10px\" color=\"primaryBright\">\n                {t('You are the first liquidity provider.')}\n              </Text>\n              <Text size=\"12px\" weight={500} color=\"primaryBright\" sx={{ textAlign: 'center' }}>\n                {t(\n                  'The ratio of tokens you add will set the price of this pool. Once you are happy with the rate click supply to review.',\n                )}\n              </Text>\n            </Flex>\n          )}\n          <DexPanel\n            value={formattedAmounts[Field.CURRENCY_A]}\n            panelText=\"Token 1\"\n            currency={currencyA}\n            otherCurrency={currencyB}\n            setTradeValueUsd={setTradeValueUsd}\n            fieldType={Field.CURRENCY_A}\n            onCurrencySelect={handleCurrencySelect}\n            onUserInput={onUserInput}\n            handleMaxInput={handleMaxInput}\n            showCommonBases\n          />\n          <AddLiquiditySign />\n          <DexPanel\n            value={formattedAmounts[Field.CURRENCY_B]}\n            panelText=\"Token 2\"\n            currency={currencyB}\n            otherCurrency={currencyA}\n            fieldType={Field.CURRENCY_B}\n            onCurrencySelect={handleCurrencySelect}\n            onUserInput={onUserInput}\n            handleMaxInput={handleMaxInput}\n            showCommonBases\n          />\n          <PoolInfo\n            currencies={currencies}\n            poolTokenPercentage={poolTokenPercentage}\n            noLiquidity={noLiquidity}\n            price={price}\n            chainId={chainId}\n            liquidityMinted={liquidityMinted}\n          />\n          <AddLiquidityActions\n            currencies={currencies}\n            tradeValueUsd={tradeValueUsd}\n            error={error}\n            parsedAmounts={parsedAmounts}\n            noLiquidity={noLiquidity}\n            liquidityMinted={liquidityMinted}\n            poolTokenPercentage={poolTokenPercentage}\n            price={price}\n          />\n        </Flex>\n        {recentTransactions && <RecentTransactions />}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(AddLiquidity)\n","import { JSBI, Percent, Token, ChainId, WETH } from '@apeswapfinance/sdk'\n\nexport enum RouterTypes {\n  APE = 'APE',\n  SMART = 'SMART',\n  BONUS = 'BONUS',\n  FLARE = 'FLARE',\n  COSTON = 'COSTON',\n  SONGBIRD = 'SONGBIRD',\n}\n\nexport const NetworkContextName = 'NETWORK'\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\nexport const WRAPPED_NATIVE_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.MATIC]: [WETH[ChainId.MATIC]],\n  [ChainId.MATIC_TESTNET]: [WETH[ChainId.MATIC_TESTNET]],\n  [ChainId.BSC]: [WETH[ChainId.BSC]],\n  [ChainId.BSC_TESTNET]: [WETH[ChainId.BSC_TESTNET]],\n  [ChainId.FLARE]: [WETH[ChainId.FLARE]],\n  [ChainId.COSTON]: [WETH[ChainId.COSTON]],\n  [ChainId.SONGBIRD]: [WETH[ChainId.SONGBIRD]],\n}\n\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\n\n// Default Ethereum chain tokens\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD Coin')\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC')\nexport const RUNE = new Token(ChainId.MAINNET, '0x3155BA85D5F96b2d030a4966AF206230e46849cb', 18, 'RUNE', 'RUNE.ETH')\nexport const NFTX = new Token(ChainId.MAINNET, '0x87d73E916D7057945c9BcD8cdd94e42A6F47f776', 18, 'NFTX', 'NFTX')\nexport const STETH = new Token(ChainId.MAINNET, '0xDFe66B14D37C77F4E9b180cEb433d1b164f0281D', 18, 'stETH', 'stakedETH')\n\nexport const BSC: { [key: string]: Token } = {\n  DAI: new Token(ChainId.BSC, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin'),\n  USD: new Token(ChainId.BSC, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', 18, 'BUSD', 'Binance USD'),\n  USDC: new Token(ChainId.BSC, '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d', 18, 'USDC', 'USD Coin'),\n  USDT: new Token(ChainId.BSC, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD'),\n  BTCB: new Token(ChainId.BSC, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Bitcoin'),\n  BANANA: new Token(ChainId.BSC, '0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95', 18, 'BANANA', 'ApeSwapFinance BANANA'),\n  FRM: new Token(ChainId.BSC, '0xa719b8ab7ea7af0ddb4358719a34631bb79d15dc', 18, 'FRM', 'Ferrum Network Token'),\n  FRMX: new Token(ChainId.BSC, '0x8523518001ad5d24b2a04e8729743c0643a316c0', 18, 'FRMX', 'FRMx Token'),\n}\n\nexport const MATIC: { [key: string]: Token } = {\n  USDC: new Token(ChainId.MATIC, '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174', 6, 'USDC', 'USD Coin'),\n  WBTC: new Token(ChainId.MATIC, '0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6', 8, 'WBTC', 'Wrapped Bitcoin'),\n  DAI: new Token(ChainId.MATIC, '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063', 18, 'DAI', 'Dai Stablecoin'),\n  WETH: new Token(ChainId.MATIC, '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619', 18, 'WETH', 'Wrapped Ether'),\n  USDT: new Token(ChainId.MATIC, '0xc2132D05D31c914a87C6611C10748AEb04B58e8F', 6, 'USDT', 'Tether USD'),\n  TEL: new Token(ChainId.MATIC, '0xdF7837DE1F2Fa4631D716CF2502f8b230F1dcc32', 2, 'TEL', 'Telcoin'),\n  SUSHI: new Token(ChainId.MATIC, '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a', 18, 'SUSHI', 'SushiToken'),\n  BANANA: new Token(ChainId.MATIC, '0x5d47bAbA0d66083C52009271faF3F50DCc01023C', 18, 'BANANA', 'BananaToken'),\n  AAVE: new Token(ChainId.MATIC, '0xD6DF932A45C0f255f85145f286eA0b292B21C90B', 18, 'AAVE', 'Aave'),\n  FRAX: new Token(ChainId.MATIC, '0x104592a158490a9228070E0A8e5343B499e125D0', 18, 'FRAX', 'Frax'),\n  FXS: new Token(ChainId.MATIC, '0x3e121107F6F22DA4911079845a470757aF4e1A1b', 18, 'FXS', 'Frax Share'),\n}\n\nexport const CHAIN_USD: { [key: number]: Token } = {\n  [ChainId.BSC]: BSC.USD,\n  [ChainId.MATIC]: MATIC.USDC,\n  [ChainId.MAINNET]: USDC,\n}\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const BIPS_BASE = JSBI.BigInt(10000)\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE)\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\n    ],\n    [USDC, USDT],\n    [DAI, USDT],\n  ],\n  [ChainId.FLARE]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\n    ],\n    [USDC, USDT],\n    [DAI, USDT],\n  ],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WRAPPED_NATIVE_ONLY,\n  [ChainId.MAINNET]: [...WRAPPED_NATIVE_ONLY[ChainId.MAINNET], DAI],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WRAPPED_NATIVE_ONLY,\n  [ChainId.MATIC]: [...WRAPPED_NATIVE_ONLY[ChainId.MATIC], MATIC.USDC, MATIC.WBTC, MATIC.DAI, MATIC.WETH, MATIC.USDT],\n  [ChainId.BSC]: [\n    ...WRAPPED_NATIVE_ONLY[ChainId.BSC],\n    BSC.DAI,\n    BSC.USD,\n    BSC.USDC,\n    BSC.USDT,\n    BSC.BTC,\n    BSC.BANANA,\n    BSC.FRM,\n    BSC.FRMX,\n  ],\n  [ChainId.MAINNET]: [...WRAPPED_NATIVE_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\n}\n\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]],\n  },\n  [ChainId.MATIC]: {\n    [MATIC.TEL.address]: [MATIC.SUSHI, MATIC.AAVE],\n    [MATIC.FXS.address]: [MATIC.FRAX],\n  },\n}\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WRAPPED_NATIVE_ONLY,\n  [ChainId.MATIC]: [\n    ...WRAPPED_NATIVE_ONLY[ChainId.MATIC],\n    MATIC.USDC,\n    MATIC.WBTC,\n    MATIC.DAI,\n    MATIC.WETH,\n    MATIC.USDT,\n    MATIC.BANANA,\n  ],\n  [ChainId.BSC]: [...WRAPPED_NATIVE_ONLY[ChainId.BSC], BSC.DAI, BSC.USD, BSC.USDC, BSC.USDT, BSC.BTCB],\n  [ChainId.MAINNET]: [...WRAPPED_NATIVE_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\n}\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\n\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\nexport { default as ifosConfig } from './ifo'\n\n// DEFAULT MODAL CONSTANTS\nexport const SHOW_DEFAULT_MODAL_KEY = 'SHOW_DEFAULT_MODAL'\nexport const SET_DEFAULT_MODAL_KEY = 'SET_DEFAULT_MODAL'\n","import { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'ApeSwap : Your One-Stop DeFi Hub',\n  description:\n    'ApeSwap is a DeFi Hub on BNB Chain, Polygon, & Ethereum. Swap, stake, and lend cryptocurrencies, from stablecoins to altcoins - all in one place.',\n  image: 'https://apeswap.finance/logo.png',\n}\n\nexport const customMeta: { [key: string]: PageMeta } = {\n  '/': {\n    title: 'Home Page | ApeSwap: Your One-Stop DeFi Hub',\n    description:\n      'ApeSwap is a DeFi Hub on BNB Chain, Polygon, & Ethereum. Swap, stake, and lend cryptocurrencies, from stablecoins to altcoins - all in one place.',\n  },\n  '/swap': {\n    title: 'Swap | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Swap between hundreds of crypto tokens using our decentralized exchange.',\n  },\n  '/apestats': {\n    title: 'ApeStats | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Track your portfolio on ApeSwap using our custom dashboard.',\n  },\n  '/nft': {\n    title: 'Non Fungible Apes | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Buy and sell ApeSwap NFTs and join our NFT community.',\n  },\n  '/banana-farms': {\n    title: 'BANANA Farms | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Stake your liquidity provider (LP) tokens in BANANA Farms to earn BANANA.',\n  },\n  '/jungle-farms': {\n    title: 'Jungle Farms | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Stake your liquidity provider (LP) tokens to earn partner project tokens.',\n  },\n  '/pools': {\n    title: 'Staking Pools | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Stake BANANA in Staking Pools to earn partner project tokens.',\n  },\n  '/liquidity': {\n    title: 'Liquidity | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Add liquidity to the ApeSwap decentralized exchange to create LPs and earn trading fees.',\n  },\n  '/add-liquidity': {\n    title: 'Liquidity | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Add liquidity to the ApeSwap decentralized exchange to create LPs and earn trading fees.',\n  },\n  '/iao': {\n    title: 'Initial Ape Offerings | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Launch your crypto project with ApeSwap, or commit into Initial Ape Offerings.',\n  },\n  '/gnana': {\n    title: 'GNANA | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Convert your BANANA to GNANA to gain exclusive access to governance, pools, and more.',\n  },\n  '/maximizers': {\n    title: 'BANANA Maximizers | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Stake your liquidity provider (LP) tokens in auto-compounding vaults to earn BANANA.',\n  },\n  '/auction': {\n    title: 'Auction | ApeSwap : Your One-Stop DeFi Hub',\n  },\n  '/staking': {\n    title: 'NFA Staking | ApeSwap : Your One-Stop DeFi Hub',\n  },\n  '/treasury-bills': {\n    title: 'Treasury Bills | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Get BANANA and partner project tokens at a discount using your liquidity provider (LP) tokens.',\n  },\n  '/limit-orders': {\n    title: 'Limit Orders | ApeSwap : Your One-Stop DeFi Hub',\n    description: 'Trade crypto tokens at the price you want using limit orders on the ApeSwap DEX.',\n  },\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { customMeta, DEFAULT_META } from 'config/constants/meta'\nimport Container from './Container'\n\ninterface SizeProps {\n  width?: string\n}\n\nconst StyledPage = styled(Container)<SizeProps>`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n    max-width: ${({ width }) => width || '1200px'};\n  }\n`\n\nexport const PageMeta = () => {\n  const { pathname } = useLocation()\n  const pageMeta = customMeta[pathname] || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<SizeProps> = ({ children, ...props }) => {\n  return (\n    <>\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { fetchVaultsPublicDataAsync, fetchVaultUserDataAsync } from './vaults'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport {\n  fetchJungleFarmsPublicDataAsync,\n  fetchJungleFarmsUserDataAsync,\n  updateJungleFarmsUserAllowance,\n  updateJungleFarmsUserBalance,\n  updateJungleFarmsUserPendingReward,\n  updateJungleFarmsUserStakedBalance,\n} from './jungleFarms'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport {\n  statsFetchStart,\n  statsFetchSucceeded,\n  statsFetchFailed,\n  fetchLiveIfoFailure,\n  fetchLiveIfoStart,\n  fetchLiveIfoSuccess,\n  fetchLiveTags,\n} from './stats'\nexport { statsOverallFetchStart, statsOverallFetchSucceeded, statsOverallFetchFailed } from './statsOverall'\nexport { tokenPricesFetchStart, tokenPricesFetchSucceeded, tokenPricesFetchFailed } from './tokenPrices'\nexport { lpTokenPricesFetchStart, lpTokenPricesFetchSucceeded, lpTokenPricesFetchFailed } from './lpPrices'\nexport { iazosFetchStart, iazosFetchSucceeded, iazosFetchFailed } from './iazos'\nexport {\n  setNfaStakingPoolsPublicData,\n  setNfaStakingPoolsUserData,\n  updateNfaStakingPoolsUserData,\n  updateNfaStakingUserAllowance,\n  updateNfaStakingUserBalance,\n  updateUserNfaStakingStakedBalance,\n  updateUserNfaStakingPendingReward,\n} from './nfaStakingPools'\n","import React, { createContext, Dispatch, useState } from 'react'\nimport SwiperCore from 'swiper'\n\ninterface Context {\n  swiper: SwiperCore\n  setSwiper: Dispatch<React.SetStateAction<SwiperCore>>\n  destroySwiper: () => void\n}\n\nexport const SwiperContext = createContext<Context>(undefined)\n\nconst SwiperProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [swiper, setSwiper] = useState<SwiperCore>(null)\n\n  const destroySwiper = () => {\n    if (swiper) {\n      swiper.destroy()\n      setSwiper(null)\n    }\n  }\n\n  return <SwiperContext.Provider value={{ swiper, setSwiper, destroySwiper }}>{children}</SwiperContext.Provider>\n}\n\nexport default SwiperProvider\n","import { CurrencyAmount, ETHER, JSBI } from '@apeswapfinance/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","\r\nexport const enum ChainId {\r\n    MAINNET = 1,\r\n    MATIC = 137,\r\n    MATIC_TESTNET = 80001,\r\n    BSC = 56,\r\n    BSC_TESTNET = 97,\r\n    FLARE = 14,\r\n    COSTON = 16,\r\n    SONGBIRD = 19\r\n}","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = (refreshTime = 10000) => {\n  const dispatch = useDispatch()\n  const isWindowVisible = useIsWindowVisible()\n  const { library } = useActiveWeb3React()\n\n  useInterval(\n    () => {\n      const fetchBlock = async () => {\n        try {\n          const blockNumber = await library.getBlockNumber()\n          dispatch(setBlock(blockNumber))\n        } catch {\n          console.error('Could not fetch block number')\n        }\n      }\n\n      fetchBlock()\n    },\n    refreshTime,\n    isWindowVisible,\n  )\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","import React, { useState } from 'react'\nimport { MissingIcon } from '@ape.swap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n  width?: number\n  height?: number\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, width, height, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        width={`${width}px`}\n        height={`${height}px`}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <MissingIcon {...rest} color=\"white\" />\n}\n\nexport default React.memo(Logo)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@apeswapfinance/sdk'\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { CurrencyLogo } from '../Logo'\n\nconst style = {\n  wrapper: {\n    background: 'white3',\n    borderRadius: '10px',\n    padding: '5px 10px',\n    width: 'fit-content',\n    height: 'fit-content',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '2.5px 5px 2.5px 0px',\n    cursor: 'pointer',\n    ':hover': {\n      background: 'white4',\n    },\n  },\n}\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <Flex sx={{ flexDirection: 'column', marginBottom: '15px' }}>\n      <Text size=\"11px\" weight={700} ml=\"2px\">\n        {t('Common bases')}\n      </Text>\n      <Flex sx={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        <Flex\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          sx={style.wrapper}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text> {Currency.getNativeCurrencySymbol(chainId)}</Text>\n        </Flex>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <Flex\n              sx={style.wrapper}\n              onClick={() => !selected && onSelect(token)}\n              disable={selected}\n              key={token.address}\n            >\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </Flex>\n          )\n        })}\n      </Flex>\n    </Flex>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { CSSProperties } from 'react'\nimport { Token } from '@apeswapfinance/sdk'\nimport { Button, Text, CheckmarkCircleIcon, Flex } from '@ape.swap/uikit'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { EXTENDED_LIST_DETAILS } from 'config/constants/lists'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowFixed } from '../layout/Row'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 5px;\n  height: 150px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n  margin: 5px 0px;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // Extended doesn't need to be defined for each list\n  const extendedLogo = EXTENDED_LIST_DETAILS[list?.name]?.logo\n  const extendedName = EXTENDED_LIST_DETAILS[list?.name]?.name\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n  const { t } = useTranslation()\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <Flex sx={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'flex-start' }}>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={extendedName || token.name}>{extendedName || token.name}</NameOverflow>\n          </Text>\n        </Flex>\n        {list && (list.logoURI || extendedLogo) && (\n          <Flex sx={{ alignItems: 'center' }}>\n            <Text size=\"8px\" mr=\"10px\" color=\"textDisabled\" sx={{ lineHeight: '0px' }}>\n              via {extendedName || list.name}\n            </Text>\n            <ListLogo logoURI={extendedLogo || list.logoURI} size=\"12px\" style={{ borderRadius: '6px' }} />\n          </Flex>\n        )}\n      </Flex>\n      {!isActive && !isAdded ? (\n        <Button\n          size=\"sm\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">{t('Active')}</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@apeswapfinance/sdk'\nimport { Text, Flex, MetamaskIcon } from '@ape.swap/uikit'\nimport styled from 'styled-components'\nimport { Spinner } from 'theme-ui'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { registerToken } from 'utils/wallet'\nimport { useCombinedActiveList, WrappedTokenInfo } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken } from '../../hooks/Tokens'\nimport { CurrencyLogo } from '../Logo'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n  weight: 400;\n  font-size: 14px;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nconst CustomFixedList = styled(FixedSizeList)`\n  border-radius: 10px 0px 0px 10px;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance?.toExact()}>{balance?.toSignificant(4)}</StyledBalanceText>\n}\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n  const addToMetaMask = useCallback(\n    () =>\n      registerToken(\n        currency instanceof Token ? currency?.address : '',\n        currency?.symbol,\n        currency?.decimals,\n        currency instanceof WrappedTokenInfo ? currency?.tokenInfo.logoURI : '',\n      ).then(() => ''),\n    [currency],\n  )\n  // only show add or remove buttons if not on selected list\n  return (\n    <Flex\n      style={style}\n      sx={{\n        width: '100%',\n        background: 'white3',\n        height: '50px',\n        cursor: !isSelected && !otherSelected && 'pointer',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '4px 10px 4px 7px',\n        opacity: isSelected || otherSelected ? 0.5 : 1,\n        ':hover': {\n          background: !isSelected && !otherSelected && 'white4',\n        },\n      }}\n      key={`token-item-${key}`}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n    >\n      <Flex sx={{ alignItems: 'center' }}>\n        <CurrencyLogo currency={currency} size=\"30px\" style={{ borderRadius: '15px' }} />\n        <Flex sx={{ flexDirection: 'column', ml: '10px', alignItems: 'space-between' }}>\n          <Flex sx={{ alignItems: 'center' }}>\n            <Text title={currency.getName(chainId)} weight={700} sx={{ lineHeight: '22px' }}>\n              {currency.getSymbol(chainId)}\n            </Text>\n            <MetamaskIcon width=\"13px\" ml=\"7px\" mb=\"1px\" onClick={addToMetaMask} />\n          </Flex>\n          <Text size=\"12px\" weight={300} sx={{ lineHeight: '16px' }}>\n            {!isOnSelectedList && customAdded && t('Added by user •')} {currency.getName(chainId)}\n          </Text>\n        </Flex>\n      </Flex>\n      <Flex sx={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <Spinner width=\"20px\" height=\"20px\" /> : null}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  inactiveCurrencies,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  inactiveCurrencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH\n      ? [Currency.ETHER, ...currencies, ...inactiveCurrencies]\n      : [...currencies, ...inactiveCurrencies]\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, inactiveCurrencies, showETH])\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = index > currencies.length\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style} sx={{ alignItems: 'center', justifyContent: 'center' }}>\n            <Text size=\"14px\">{t('Expanded results from inactive Token Lists')}</Text>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      currencies.length,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <CustomFixedList\n      height={height}\n      width=\"100%\"\n      ref={fixedListRef as any}\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </CustomFixedList>\n  )\n}\n","import { Token, TokenAmount } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","/** @jsxImportSource theme-ui */\n/* eslint-disable no-restricted-syntax */\nimport React, { KeyboardEvent, useCallback, useMemo, useRef, useState } from 'react'\nimport { Currency, ETHER, Token } from '@apeswapfinance/sdk'\nimport { Text, Flex, Input } from '@ape.swap/uikit'\nimport { FixedSizeList } from 'react-window'\nimport styled from '@emotion/styled'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { TagInfo, useAllLists, useInactiveListUrls, WrappedTokenInfo } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAllTokens, useToken, useIsUserAddedToken } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column from '../layout/Column'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { createFilterToken, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nfunction useSearchInactiveTokenLists(search: string | undefined, minResults = 10): WrappedTokenInfo[] {\n  const lists = useAllLists()\n  const inactiveUrls = useInactiveListUrls()\n  const { chainId } = useActiveWeb3React()\n  const activeTokens = useAllTokens()\n  return useMemo(() => {\n    if (!search || search.trim().length === 0) return []\n    const filterToken = createFilterToken(search)\n    const exactMatches: WrappedTokenInfo[] = []\n    const rest: WrappedTokenInfo[] = []\n    const addressSet: { [address: string]: true } = {}\n    const trimmedSearchQuery = search.toLowerCase().trim()\n    for (const url of inactiveUrls) {\n      const list = lists[url].current\n      // eslint-disable-next-line no-continue\n      if (!list) continue\n      for (const tokenInfo of list.tokens) {\n        if (\n          tokenInfo.chainId === chainId &&\n          !(tokenInfo.address in activeTokens) &&\n          !addressSet[tokenInfo.address] &&\n          filterToken(tokenInfo)\n        ) {\n          const tags: TagInfo[] =\n            tokenInfo.tags\n              ?.map((tagId) => {\n                if (!list.tags?.[tagId]) return undefined\n                return { ...list.tags[tagId], id: tagId }\n              })\n              ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n          const wrapped: WrappedTokenInfo = new WrappedTokenInfo(tokenInfo, tags)\n          addressSet[wrapped.address] = true\n          if (\n            tokenInfo.name?.toLowerCase() === trimmedSearchQuery ||\n            tokenInfo.symbol?.toLowerCase() === trimmedSearchQuery\n          ) {\n            exactMatches.push(wrapped)\n          } else {\n            rest.push(wrapped)\n          }\n        }\n      }\n    }\n    return [...exactMatches, ...rest].slice(0, minResults)\n  }, [activeTokens, chainId, inactiveUrls, lists, minResults, search])\n}\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n  const { t } = useTranslation()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'et' || s === 'eth'\n  }, [debouncedQuery])\n\n  const filteredTokens: Token[] = useMemo(() => {\n    const filterToken = createFilterToken(debouncedQuery)\n    return Object.values(allTokens).filter(filterToken)\n  }, [allTokens, debouncedQuery])\n\n  const filteredQueryTokens = useSortedTokensByQuery(filteredTokens, debouncedQuery)\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    return [...filteredQueryTokens].sort(tokenComparator)\n  }, [filteredQueryTokens, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n    },\n    [onCurrencySelect],\n  )\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const filteredInactiveTokens = useSearchInactiveTokenLists(debouncedQuery)\n  const hasFilteredInactiveTokens = Boolean(filteredInactiveTokens?.length)\n\n  const getCurrencyListRows = useCallback(() => {\n    if (searchToken && !searchTokenIsAdded && !hasFilteredInactiveTokens) {\n      return (\n        <Column style={{ padding: '20px 0', height: '100%' }}>\n          <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n        </Column>\n      )\n    }\n\n    return filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n      <CurrencyList\n        height={335}\n        showETH={showETH}\n        currencies={filteredSortedTokens}\n        breakIndex={\n          Boolean(filteredInactiveTokens?.length) && filteredSortedTokens ? filteredSortedTokens.length : undefined\n        }\n        onCurrencySelect={handleCurrencySelect}\n        otherCurrency={otherSelectedCurrency}\n        selectedCurrency={selectedCurrency}\n        inactiveCurrencies={filteredInactiveTokens}\n        fixedListRef={fixedList}\n        showImportView={showImportView}\n        setImportToken={setImportToken}\n      />\n    ) : (\n      <Column style={{ padding: '20px', height: '100%' }}>\n        <Text color=\"gray\" textAlign=\"center\" mb=\"20px\">\n          {t('No results found')}\n        </Text>\n      </Column>\n    )\n  }, [\n    filteredInactiveTokens,\n    filteredSortedTokens,\n    handleCurrencySelect,\n    hasFilteredInactiveTokens,\n    otherSelectedCurrency,\n    searchToken,\n    searchTokenIsAdded,\n    selectedCurrency,\n    setImportToken,\n    showETH,\n    showImportView,\n    t,\n  ])\n\n  return (\n    <Flex sx={{ flexDirection: 'column' }}>\n      <Flex sx={{ position: 'relative', margin: '10px 0px 15px 0px' }}>\n        <StyledInput\n          id=\"token-search-input\"\n          placeholder={t('Name or Address')}\n          autoComplete=\"off\"\n          value={searchQuery}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n          icon=\"search\"\n          autoFocus\n        />\n      </Flex>\n      {showCommonBases && (\n        <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n      )}\n      {getCurrencyListRows()}\n    </Flex>\n  )\n}\n\nconst StyledInput = styled(Input)`\n  width: 420px;\n  max-width: 100% !important;\n  height: 40px;\n  border-radius: 10px;\n  border: none;\n  background-color: ${({ theme }) => theme.colors.white3};\n  color: ${({ theme }) => theme.colors.text};\n  placeholder-color: ${({ theme }) => theme.colors.gray};\n  ::placeholder {\n    color: ${(props) => props.theme.colors.text};\n  }\n  :focus {\n    box-shadow: none !important;\n  }\n`\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","/** @jsxImportSource theme-ui */\nimport React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Card, Flex, Input } from '@ape.swap/uikit'\nimport { useSelector } from 'react-redux'\nimport styled from '@emotion/styled'\nimport { Switch } from 'theme-ui'\nimport { TokenList } from '@uniswap/token-lists'\nimport { EXTENDED_LIST_DETAILS, UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\nimport { AppState, useAppDispatch } from '../../state'\nimport { disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\n\nimport uriToHttp from '../../utils/uriToHttp'\nimport Column, { AutoColumn } from '../layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../layout/Row'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.white2)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nconst StyledInput = styled(Input)`\n  width: 420px;\n  max-width: 100% !important;\n  border: none;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({\n  listUrl,\n  setListUrl,\n  setModalView,\n  setImportList,\n}: {\n  listUrl: string\n  setListUrl: (url: string) => void\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useAppDispatch()\n  const { current: list } = listsByUrl[listUrl]\n  // Extended doesn't need to be defined for each list\n  const extendedLogo = EXTENDED_LIST_DETAILS[list?.name]?.logo\n  const extendedName = EXTENDED_LIST_DETAILS[list?.name]?.name\n  const extendedWarning = EXTENDED_LIST_DETAILS[list?.name]?.warning\n  const extendedChainId = EXTENDED_LIST_DETAILS[list?.name]?.chainId\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  // TODO: allow users to update list versions and remove unwanted list\n  // const handleAcceptListUpdate = useCallback(() => {\n  //   if (!pending) return\n  //   dispatch(acceptListUpdate(listUrl))\n  // }, [dispatch, listUrl, pending])\n\n  // const handleRemoveList = useCallback(() => {\n  //   // eslint-disable-next-line no-alert\n  //   if (window.confirm('Please confirm you would like to remove this list')) {\n  //     dispatch(removeList(listUrl))\n  //   }\n  // }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  return extendedChainId && extendedChainId !== chainId ? (\n    <></>\n  ) : (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {extendedLogo || list.logoURI ? (\n        <ListLogo\n          size=\"40px\"\n          style={{ marginRight: '1rem', borderRadius: '20px' }}\n          logoURI={extendedLogo || list.logoURI}\n          alt={`${extendedName || list.name} list logo`}\n        />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{extendedName || list.name}</Text>\n        </Row>\n        <RowFixed>\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Flex sx={{ alignItems: 'flex-end' }}>\n        <Switch\n          sx={{\n            borderRadius: '8px',\n            backgroundColor: 'white3',\n            'input:checked ~ &': {\n              backgroundColor: 'yellow',\n            },\n          }}\n          checked={isActive}\n          onChange={() => {\n            if (isActive) {\n              handleDisableList()\n            } else {\n              if (!extendedWarning) {\n                handleEnableList()\n              }\n              if (extendedWarning) {\n                setImportList(list)\n                setModalView(CurrencyModalView.importList)\n                setListUrl(listUrl)\n              }\n            }\n          }}\n        />\n      </Flex>\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 350px;\n  overflow: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          // Always make apeswap list in top.\n          const keyword = 'apeswap'\n          if (l1.name.toLowerCase().includes(keyword) || l2.name.toLowerCase().includes(keyword)) {\n            return -1\n          }\n\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <Flex sx={{ position: 'relative', width: '100%', marginBottom: '20px' }}>\n        <StyledInput\n          id=\"list-add-input\"\n          placeholder={t('https:// or ipfs:// or ENS name')}\n          value={listUrlInput}\n          onChange={handleInput}\n          icon=\"search\"\n        />\n        {addError ? (\n          <Text color=\"error\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </Flex>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"gray\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button onClick={handleImport} size=\"sm\">\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow\n              key={listUrl}\n              listUrl={listUrl}\n              setListUrl={setListUrl}\n              setModalView={setModalView}\n              setImportList={setImportList}\n            />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","/** @jsxImportSource theme-ui */\nimport React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@apeswapfinance/sdk'\nimport { Text, Button, CloseIcon, LinkExternal, Link, Flex, Input } from '@ape.swap/uikit'\nimport { RowBetween, RowFixed } from 'components/layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport styled from '@emotion/styled'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getEtherscanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst StyledInput = styled(Input)`\n  width: 420px;\n  max-width: 100% !important;\n  border: none;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\" sx={{ margin: '20px 0px' }}>\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getEtherscanLink(token.address, 'address', chainId)} color=\"gray\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <CloseIcon onClick={() => removeToken(chainId, token.address)} mr=\"5px\" sx={{ cursor: 'pointer' }} />\n            <LinkExternal href={getEtherscanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex sx={{ position: 'relative', width: '100%', marginBottom: '20px' }}>\n        <StyledInput\n          id=\"token-search-input\"\n          placeholder=\"0x0000\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          icon=\"search\"\n        />\n      </Flex>\n      {!isAddressValid && <Text color=\"error\">Enter valid token address</Text>}\n      {searchToken && (\n        <ImportRow\n          token={searchToken}\n          showImportView={() => setModalView(CurrencyModalView.importToken)}\n          setImportToken={setImportToken}\n          style={{ height: 'fit-content' }}\n        />\n      )}\n      {tokenList}\n      <Footer>\n        <Text bold textAlign=\"center\">\n          {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n        </Text>\n        {userAddedTokens.length > 0 && (\n          <Button onClick={handleRemoveAll} size=\"sm\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Footer>\n    </Wrapper>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport { Token } from '@apeswapfinance/sdk'\nimport { Flex, Svg, Text, Toggle } from '@ape.swap/uikit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { textUnderlineHover } from 'views/Dex/styles'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n  const { t } = useTranslation()\n  return (\n    <div>\n      <Flex sx={{ alignItems: 'center', margin: '10px 0px 20px 0px' }}>\n        <Flex\n          sx={{ cursor: 'pointer', position: 'relative', width: 'fit-content', ...textUnderlineHover }}\n          onClick={() => setModalView(CurrencyModalView.search)}\n        >\n          <Svg icon=\"caret\" direction=\"left\" width=\"8px\" />\n          <Text size=\"14px\" ml=\"5px\">\n            Back\n          </Text>\n        </Flex>\n        <Toggle\n          labels={[t('LIST'), t('TOKENS')]}\n          checked={!showLists}\n          onChange={() => setShowLists((prev) => !prev)}\n          sx={{ ml: '20px' }}\n        />\n      </Flex>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </div>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox } from '@ape.swap/uikit'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { EXTENDED_LIST_DETAILS } from 'config/constants/lists'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const dispatch = useDispatch<AppDispatch>()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  const extendedLogo = EXTENDED_LIST_DETAILS[list?.name]?.logo\n  const extendedName = EXTENDED_LIST_DETAILS[list?.name]?.name\n  const extendedWarning = EXTENDED_LIST_DETAILS[list?.name]?.warning\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const { t } = useTranslation()\n\n  const handleAddList = useCallback(() => {\n    if (adding) {\n      dispatch(enableList(listURL))\n      onImport()\n    } else {\n      setAddError(null)\n      fetchList(listURL)\n        .then(() => {\n          dispatch(enableList(listURL))\n          onImport()\n        })\n        .catch((error) => {\n          setAddError(error.message)\n          dispatch(removeList(listURL))\n        })\n    }\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Flex sx={{ flexDirection: 'column', padding: '10px' }}>\n      <Flex sx={{ flexDirection: 'row', justifyContent: 'center' }}>\n        {(list.logoURI || extendedLogo) && (\n          <ListLogo\n            logoURI={extendedLogo || list.logoURI}\n            size=\"40px\"\n            style={{ borderRadius: '20px', marginRight: '10px' }}\n          />\n        )}\n        <Flex sx={{ flexDirection: 'column', margin: '10px 0px' }}>\n          <Flex>\n            <Text bold mr=\"6px\">\n              {extendedName || list.name}\n            </Text>\n            <TextDot />\n            <Text small color=\"gray\" ml=\"6px\">\n              {list.tokens.length} tokens\n            </Text>\n          </Flex>\n          {!extendedName && (\n            <Link small external href={`https://tokenlists.org/token-list?url=${listURL}`}>\n              {listURL}\n            </Link>\n          )}\n        </Flex>\n      </Flex>\n      <Flex sx={{ flexDirection: 'column', margin: '10px 0px', textAlign: 'center' }}>\n        <Text size=\"20px\" weight={700} textAlign=\"center\" color=\"error\" mb=\"16px\">\n          {t('Trade at your own risk!')}\n        </Text>\n        {extendedWarning ? (\n          <>\n            <Text color=\"error\">{extendedWarning}</Text>\n            <br />\n            <Text>\n              {t('Want to see your crypto project listed? ')}\n              <br />\n              <a\n                href=\"https://apeswap.click/partnership\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ textDecoration: 'underline' }}\n              >\n                {t('Apply to be listed today!')}\n              </a>\n            </Text>\n          </>\n        ) : (\n          <>\n            <Text color=\"error\" mb=\"8px\">\n              {t(\n                'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n              )}\n            </Text>\n            <Text bold color=\"error\" mb=\"16px\">\n              {typeof t('If you purchase a token from this list, you may not be able to sell it back.')}\n            </Text>\n            <Text>\n              {t('Want to see your crypto project listed? ')}\n              <br />\n              <br />\n              <a\n                href=\"https://apeswap.click/partnership\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ textDecoration: 'underline' }}\n              >\n                {t('Apply to be listed today!')}\n              </a>\n            </Text>\n          </>\n        )}\n        <Flex sx={{ alignItems: 'center', margin: '15px 0px 5px 0px', textAlign: 'center' }}>\n          <Flex sx={{ alignItems: 'center', margin: '15px 0px 5px 0px', width: '100%', justifyContent: 'center' }}>\n            <Checkbox\n              name=\"confirmed\"\n              type=\"checkbox\"\n              checked={confirmed}\n              onChange={() => setConfirmed(!confirmed)}\n              scale=\"sm\"\n            />\n            <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n              {t('I understand')}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex sx={{ justifyContent: 'center', margin: '10px 0px 0px 0px' }}>\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n        </Flex>\n      </Flex>\n      {addError ? (\n        <Text color=\"error\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n          {addError}\n        </Text>\n      ) : null}\n    </Flex>\n  )\n}\n\nexport default ImportList\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@apeswapfinance/sdk'\nimport { Flex, Text, ModalProps, ModalFooter, Modal } from '@ape.swap/uikit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\nimport { Box } from 'theme-ui'\n\ninterface CurrencySearchModalProps extends ModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport const modalProps = {\n  sx: {\n    minWidth: ['90%', '425px'],\n    width: ['250px'],\n    maxWidth: '425px',\n    height: ['calc(100vh - 10%)', 'auto'],\n  },\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n  const { t } = useTranslation()\n\n  return (\n    <Modal {...modalProps} onDismiss={onDismiss} title={t('Tokens')}>\n      <Flex\n        sx={{\n          flexDirection: 'column',\n          maxHeight: 'none',\n          height: [\n            (((modalView === CurrencyModalView.importToken || modalView === CurrencyModalView.importList) && '90%') ||\n              (modalView === CurrencyModalView.search && '95%')) ??\n              'auto',\n            'auto',\n          ],\n          width: ['auto'],\n          overflowY: 'auto',\n        }}\n        className=\"YOU\"\n      >\n        <Flex sx={{ flexDirection: 'column', width: '380px', maxWidth: '100%', alignSelf: 'center' }}>\n          {modalView === CurrencyModalView.search ? (\n            <CurrencySearch\n              onCurrencySelect={handleCurrencySelect}\n              selectedCurrency={selectedCurrency}\n              otherSelectedCurrency={otherSelectedCurrency}\n              showCommonBases={showCommonBases}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n            />\n          ) : modalView === CurrencyModalView.importToken && importToken ? (\n            <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n          ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n            <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n          ) : modalView === CurrencyModalView.manage ? (\n            <Manage\n              setModalView={setModalView}\n              setImportToken={setImportToken}\n              setImportList={setImportList}\n              setListUrl={setListUrl}\n            />\n          ) : (\n            ''\n          )}\n          {modalView === CurrencyModalView.search && (\n            <Box sx={{ marginBottom: ['30px', '0px'] }}>\n              <ModalFooter onDismiss={onDismiss}>\n                <Text\n                  onClick={() => setModalView(CurrencyModalView.manage)}\n                  className=\"list-token-manage-button\"\n                  sx={{ cursor: 'pointer', textDecoration: 'underline' }}\n                >\n                  {t('Manage Tokens')}\n                </Text>\n              </ModalFooter>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchChainIdFromUrl, fetchUserNetwork } from 'state/network'\nimport { TorusConnector } from '@web3-react/torus-connector'\nimport { CHAIN_PARAMS } from 'config/constants/chains'\nimport { hexStripZeros } from '@autonomylabs/limit-stop-orders/node_modules/@ethersproject/bytes'\nimport { BigNumber } from 'ethers'\nimport { useToast } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { replaceSwapState, SwapDelay } from 'state/swap/actions'\nimport { RouterTypes } from 'config/constants'\nimport { SmartRouter } from '@apeswapfinance/sdk'\n\nconst useSwitchNetwork = () => {\n  const { chainId, account, library, connector } = useWeb3React()\n  const provider = library?.provider\n  const dispatch = useDispatch()\n  const { toastError } = useToast()\n  const { t } = useTranslation()\n\n  const switchNetwork = useCallback(\n    async (userChainId: number) => {\n      if (connector instanceof TorusConnector) {\n        toastError(t('Chain Select Error: Torus Wallet is only available on BNB Chain.'))\n        return\n      }\n      if (account && userChainId !== chainId) {\n        const formattedChainId = hexStripZeros(BigNumber.from(userChainId).toHexString())\n        try {\n          await provider.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: formattedChainId }],\n          })\n          dispatch(fetchChainIdFromUrl(false))\n          dispatch(\n            replaceSwapState({\n              typedValue: null,\n              field: null,\n              inputCurrencyId: null,\n              outputCurrencyId: null,\n              recipient: null,\n              swapDelay: SwapDelay.INIT,\n              bestRoute: { routerType: RouterTypes.APE, smartRouter: SmartRouter.APE },\n            }),\n          )\n        } catch {\n          // If the user doesn't have the chain add it\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [CHAIN_PARAMS[userChainId]],\n          })\n          dispatch(fetchChainIdFromUrl(false))\n          try {\n            // Prompt the user to switch after adding the chain\n            await provider.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: formattedChainId }],\n            })\n            dispatch(fetchChainIdFromUrl(false))\n          } catch (error) {\n            console.warn(error)\n          }\n        }\n      } else {\n        dispatch(fetchUserNetwork(chainId, account, userChainId))\n      }\n      // TODO: Better implementation. This is a hotfix to reset the swap state on network change to not send previous addresses to the wrong multicall state\n      dispatch(\n        replaceSwapState({\n          typedValue: null,\n          field: null,\n          inputCurrencyId: null,\n          outputCurrencyId: null,\n          recipient: null,\n          swapDelay: SwapDelay.INIT,\n          bestRoute: { routerType: RouterTypes.APE, smartRouter: SmartRouter.APE },\n        }),\n      )\n    },\n    [chainId, account, provider, dispatch, connector, t, toastError],\n  )\n  return { switchNetwork }\n}\n\nexport default useSwitchNetwork\n","import { useMemo } from 'react'\nimport uriToHttp from 'utils/uriToHttp'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  return useMemo(() => {\n    return uri ? uriToHttp(uri) : []\n  }, [uri])\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport { Box } from 'theme-ui'\nimport { Token, Currency } from '@apeswapfinance/sdk'\nimport { Link, Tag } from '@apeswapfinance/uikit'\nimport { Text, Flex, Button, Checkbox, ErrorIcon } from '@ape.swap/uikit'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getEtherscanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport { EXTENDED_LIST_DETAILS } from 'config/constants/lists'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  const { t } = useTranslation()\n\n  return (\n    <Box className=\"boxCon\" sx={{ padding: '20px 20px 20px 20px' }}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Text sx={{ textAlign: 'center' }}>\n          <h1 style={{ fontSize: '26px', color: 'red', lineHeight: '35px' }}>{t('Trade at your own risk!')}</h1>\n          <br />\n          {t(\n            'The ApeSwap DEX is decentralized, meaning that anyone can create or add liquidity for a token. Unlisted tokens have not been reviewed by ApeSwap or passed our due diligence process. Unlisted tokens may present scam risks, including the loss of funds.',\n          )}\n          <br />\n          <br />\n          {t('Want to see your crypto project listed? ')}\n          <br />\n          <br />\n          <a\n            href=\"https://apeswap.click/partnership\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: 'underline' }}\n          >\n            {t('Apply to be listed today!')}\n          </a>\n        </Text>\n\n        {tokens.map((token) => {\n          const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n          // Extended doesn't need to be defined for each list\n          const extendedLogo = EXTENDED_LIST_DETAILS[list?.name]?.logo\n          const extendedName = EXTENDED_LIST_DETAILS[list?.name]?.name\n          const address = token.address ? `${truncateHash(token.address)}` : null\n          return (\n            <Box key={token.address} sx={{ marginTop: '24px' }}>\n              {list !== undefined ? (\n                <Tag\n                  variant=\"success\"\n                  outline\n                  startIcon={\n                    (list.logoURI || extendedLogo) && (\n                      <ListLogo\n                        logoURI={extendedLogo || list.logoURI}\n                        size=\"12px\"\n                        style={{ borderRadius: '6px', marginRight: '5px' }}\n                      />\n                    )\n                  }\n                >\n                  via {extendedName || list.name}\n                </Tag>\n              ) : (\n                <Tag variant=\"danger\" outline startIcon={<ErrorIcon color=\"error\" />}>\n                  {t('Unknown Source')}\n                </Tag>\n              )}\n              <Flex alignItems=\"center\">\n                <Text mr=\"8px\">{token.name}</Text>\n                <Text>({token.symbol})</Text>\n              </Flex>\n              {chainId && (\n                <Flex>\n                  <Text mr=\"10px\">{address}</Text>\n                  <Link href={getEtherscanLink(token.address, 'address', chainId)} external>\n                    <Text weight=\"bold\">{t('View on explorer')}</Text>\n                  </Link>\n                </Flex>\n              )}\n            </Box>\n          )\n        })}\n\n        <Flex sx={{ justifyContent: 'space-between', alignItems: 'center', marginTop: '24px' }}>\n          <Flex sx={{ alignItems: 'center' }} onClick={() => setConfirmed(!confirmed)}>\n            <Checkbox\n              scale=\"sm\"\n              name=\"confirmed\"\n              type=\"checkbox\"\n              checked={confirmed}\n              onChange={() => setConfirmed(!confirmed)}\n            />\n            <Text ml=\"8px\" sx={{ userSelect: 'none' }}>\n              {t('I understand')}\n            </Text>\n          </Flex>\n          <Button\n            variant=\"danger\"\n            disabled={!confirmed}\n            onClick={() => {\n              tokens.map((token) => addToken(token))\n              if (handleCurrencySelect) {\n                handleCurrencySelect(tokens[0])\n              }\n            }}\n            className=\".token-dismiss-button\"\n          >\n            {t('Import')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default ImportToken\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport {\n  JSBI,\n  Percent,\n  Router,\n  BonusRouter,\n  SwapParameters,\n  Trade,\n  TradeType,\n  SMART_ROUTER_ADDRESS,\n} from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport truncateHash from 'utils/truncateHash'\nimport { useTranslation } from 'contexts/Localization'\nimport { RouterTypeParams } from 'state/swap/actions'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE, RouterTypes } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\nimport { parseSmartAddress } from './useAddress'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\nexport enum SwapDelayState {\n  INVALID,\n  INPUT_DELAY,\n  LOADING_ROUTE,\n  VALID,\n}\n\nexport interface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\nexport interface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\nexport interface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\nexport type EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n * @param bestRoute The best route that will be used to facilitate the trade\n * @param executedSwap To be able to correctly differentiate between a executed swap vs a bonus check we need this flag\n */\nexport function useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n  bestRoute?: RouterTypeParams, // The best route that will be used to facilitate the trade\n  executedSwap = true, // To be able to correctly differentiate between a executed swap vs a bonus check we need this flag\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n  // Allowing transactions to be encoded even if no user is connected\n  const activeAccount = account || '0x0000000000000000000000000000000000000000'\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? activeAccount : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !chainId || !activeAccount || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(\n      chainId,\n      library,\n      activeAccount,\n      bestRoute?.routerType,\n      bestRoute?.smartRouter,\n      executedSwap,\n    )\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    if (bestRoute?.routerType === RouterTypes.BONUS && executedSwap) {\n      swapMethods.push(\n        BonusRouter.swapCallParameters(trade, {\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n          router: parseSmartAddress(SMART_ROUTER_ADDRESS, chainId, bestRoute.smartRouter),\n          masterInput: bestRoute?.bonusRouter.transactionArgs.masterInput,\n        }),\n      )\n      if (trade.tradeType === TradeType.EXACT_INPUT) {\n        swapMethods.push(\n          BonusRouter.swapCallParameters(trade, {\n            allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n            recipient,\n            deadline: deadline.toNumber(),\n            router: parseSmartAddress(SMART_ROUTER_ADDRESS, chainId, bestRoute.smartRouter),\n            masterInput: bestRoute?.bonusRouter.transactionArgs.masterInput,\n          }),\n        )\n      }\n    } else {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: false,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n      if (trade.tradeType === TradeType.EXACT_INPUT) {\n        swapMethods.push(\n          Router.swapCallParameters(trade, {\n            feeOnTransfer: true,\n            allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n            recipient,\n            deadline: deadline.toNumber(),\n          }),\n        )\n      }\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [activeAccount, allowedSlippage, chainId, deadline, library, recipient, bestRoute, trade, executedSwap])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n  bestRoute?: RouterTypeParams, // The best route that will be used to facilitate the trade\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName, bestRoute)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  const { t } = useTranslation()\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: t('Missing dependencies') }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: t('Invalid recipient') }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate:\n                    bestRoute?.routerType === RouterTypes.BONUS ? gasEstimate.mul(BigNumber.from('3')) : gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error(t('Unexpected issue with estimating the gas. Please try again.')) }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = t(\n                      `The transaction cannot succeed due to error: ${\n                        `${reason}. This is probably an issue with one of the tokens you are swapping` ??\n                        'Unknown error, check the logs'\n                      }.`,\n                    )\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error(t('Unexpected error. Please contact support: none of the calls threw an error'))\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.getSymbol(chainId)\n            const outputSymbol = trade.outputAmount.currency.getSymbol(chainId)\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error(t('Transaction rejected.'))\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(t(`Swap failed: %message%`, { message: error.message }))\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, bestRoute, recipientAddressOrName, swapCalls, addTransaction, t])\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(...methodArgs, hasManualGasPriceOverride ? { ...overrides } : { ...overrides })\n\n      return tx\n    },\n    [],\n  )\n\n  return { callWithGasPrice }\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@apeswapfinance/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport { useTranslation } from 'contexts/Localization'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppState, useAppDispatch } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onUserInput: (field: Field, typedValue: string) => void\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onUserInput,\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const { t } = useTranslation()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `${t('Insufficient')} ${currencies[Field.CURRENCY_A]?.getSymbol(chainId)} ${t('balance')}`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `${t('Insufficient')} ${currencies[Field.CURRENCY_B]?.getSymbol(chainId)} ${t('balance')}`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import auctionAbi from 'config/abi/auction.json'\nimport { AuctionsOverall, Auction, Nfa } from 'state/types'\nimport { getAuctionAddress } from 'utils/addressHelper'\nimport BigNumber from 'bignumber.js'\nimport { ZERO_ADDRESS } from 'config'\nimport multicall from 'utils/multicall'\n\nexport const fetchAuctionDetails = async (auctionContractAddress: string, chainId: number) => {\n  const call = [\n    {\n      address: auctionContractAddress,\n      name: 'activeAuctionNodeId',\n    },\n    {\n      address: auctionContractAddress,\n      name: 'minIncrementAmount',\n    },\n    {\n      address: auctionContractAddress,\n      name: 'minIncrementPercentage',\n    },\n    {\n      address: auctionContractAddress,\n      name: 'auctionFeePercent',\n    },\n    {\n      address: auctionContractAddress,\n      name: 'lastNodeId',\n    },\n  ]\n  const auctionDetails = await multicall(chainId, auctionAbi, call)\n  return auctionDetails\n}\n\nexport const fetchAllAuctions = async (nfas: Nfa[], chainId: number): Promise<AuctionsOverall> => {\n  const auctionContractAddress = getAuctionAddress(chainId)\n  const [activeAuctionId, minIncrementAmount, minIncrementPercentage, auctionFeePercent, pushedAuctions] =\n    await fetchAuctionDetails(auctionContractAddress, chainId)\n  const getAuctionCalls = [...Array(new BigNumber(pushedAuctions).toNumber())].map((e, i) => {\n    return {\n      address: auctionContractAddress,\n      name: 'getAuctionWithPosition',\n      params: [i + 1],\n    }\n  })\n  const allAuctions = await multicall(chainId, auctionAbi, getAuctionCalls)\n  const auctionData = {\n    activeAuctionId: new BigNumber(activeAuctionId).toNumber(),\n    auctionFeePercent: new BigNumber(auctionFeePercent).toNumber(),\n    minIncrementAmount: new BigNumber(minIncrementAmount).toNumber(),\n    minIncrementPercentage: new BigNumber(minIncrementPercentage).toNumber(),\n    pushedAuctions: new BigNumber(pushedAuctions).toNumber(),\n    auctionsRemovedCount: allAuctions.filter((auction) => auction.auction.seller === ZERO_ADDRESS).length,\n    auctions: allAuctions\n      .map((auction, i): Auction => {\n        return {\n          auctionId: i + 1,\n          nfa: nfas.find((nft) => nft.index === auction.node.data.toNumber()),\n          seller: auction.auction.seller,\n          highestBidder: auction.auction.highestBidder,\n          highestBid: auction.auction.highestBid.toString(),\n          timeExtension: auction.auction.timeExtension.toNumber(),\n          timeLength: auction.auction.timeLength.toNumber(),\n          minToExtend: auction.auction.minToExtend.toNumber(),\n          startTime: auction.auction.startTime.toNumber(),\n          endTime: auction.auction.endTime.toNumber(),\n        }\n      })\n      .filter(({ seller }) => seller !== ZERO_ADDRESS),\n  }\n  return auctionData\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchAllAuctions } from './fetchAllAuctions'\nimport { AuctionsOverall, AuctionsState, Nfa } from '../types'\n\nconst initialState: AuctionsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: null,\n}\n\nexport const auctionsSlice = createSlice({\n  name: 'auction',\n  initialState,\n  reducers: {\n    auctionsFetchStart: (state) => {\n      state.isLoading = true\n    },\n    auctionsFetchSucceeded: (state, action: PayloadAction<AuctionsOverall>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    auctionsFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n  },\n})\n\n// Actions\nexport const { auctionsFetchStart, auctionsFetchSucceeded, auctionsFetchFailed } = auctionsSlice.actions\n\nexport const fetchAuctions = (nfas: Nfa[], chainId: number) => async (dispatch) => {\n  try {\n    dispatch(auctionsFetchStart())\n    const auctions = await fetchAllAuctions(nfas, chainId)\n    dispatch(auctionsFetchSucceeded(auctions))\n  } catch (error) {\n    dispatch(auctionsFetchFailed())\n  }\n}\n\nexport default auctionsSlice.reducer\n","import { Nfa } from 'state/types'\n\nconst fetchNfas = async () => {\n  try {\n    const response = await fetch(\n      'https://raw.githubusercontent.com/ApeSwapFinance/non-fungible-apes/main/info/apesData.json',\n    )\n    const nfaResp = await response.json()\n    if (nfaResp.statusCode === 500) {\n      return null\n    }\n    const nfaImageReplace = nfaResp.map((nfa: Nfa) => {\n      return {\n        ...nfa,\n        image: `https://raw.githubusercontent.com/ApeSwapFinance/non-fungible-apes/main/images/${nfa.index}.png`,\n      }\n    })\n    return nfaImageReplace\n  } catch (error) {\n    return null\n  }\n}\n\nexport default fetchNfas\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Nfa, NfaState } from '../types'\nimport fetchNfas from './fetchNfas'\n\nconst initialState: NfaState = {\n  isInitialized: false,\n  isLoading: true,\n  data: null,\n}\n\nexport const lpTokenPricesSlice = createSlice({\n  name: 'nfas',\n  initialState,\n  reducers: {\n    nfasFetchStart: (state) => {\n      state.isLoading = true\n    },\n    nfasFetchSucceeded: (state, action: PayloadAction<Nfa[]>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n    nfasFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n  },\n})\n\n// Actions\nexport const { nfasFetchStart, nfasFetchSucceeded, nfasFetchFailed } = lpTokenPricesSlice.actions\n\nexport const fetchAllNfas = () => async (dispatch) => {\n  try {\n    dispatch(nfasFetchStart())\n    const nfas = await fetchNfas()\n    dispatch(nfasFetchSucceeded(nfas))\n  } catch (error) {\n    dispatch(nfasFetchFailed())\n  }\n}\nexport default lpTokenPricesSlice.reducer\n","import { Interface } from '@ethersproject/abi'\nimport multicallABI from 'config/abi/Multicall.json'\nimport { ethers } from 'ethers'\nimport { getMulticallAddress } from './addressHelper'\nimport getProvider from './getProvider'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (chainId: number, abi: any[], calls: Call[]) => {\n  const multicallAddress = getMulticallAddress(chainId)\n  const provider = getProvider(chainId)\n  const multi = new ethers.Contract(multicallAddress, multicallABI, provider)\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.aggregate(calldata)\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n  return res\n}\n\nexport default multicall\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const buttonHover = {\n  '&:not([disabled])': { borderColor: '#FFDA00', background: '#FFDA00' },\n  '&:disabled': {},\n}\n\nexport const textUnderlineHover: Record<string, ThemeUIStyleObject> = {\n  '::after': {\n    content: \"''\",\n    position: 'absolute',\n    background: 'text',\n    left: '0px',\n    bottom: '0px',\n    height: '2px',\n    width: '100%',\n    borderRadius: '10px',\n    transform: 'scaleX(0)',\n    transformOrigin: 'bottom right',\n    transition: 'transform 0.25s ease-out',\n    backfaceVisibility: 'hidden',\n  },\n  ':hover::after': {\n    transform: 'scaleX(1)',\n    transformOrigin: 'bottom left',\n  },\n}\n\nexport const dexStyles: Record<string, ThemeUIStyleObject> = {\n  pageContainer: {\n    justifyContent: 'center',\n    height: 'fit-content',\n    minHeight: '100vh',\n    padding: '75px 0px',\n  },\n  dexContainer: {\n    width: 'auto',\n    maxWidth: '420px',\n    height: 'fit-content',\n    background: 'white2',\n    padding: '15px',\n    borderRadius: '10px',\n    margin: '0px 10px',\n    flexDirection: 'column',\n  },\n  textWrap: {\n    wordBreak: 'break-all',\n    lineHeight: '15px',\n  },\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { getAddress } from '@ethersproject/address'\nimport { BLOCK_EXPLORER } from 'config/constants/chains'\nimport { Contract } from '@ethersproject/contracts'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport apeRouterManagerABI from 'config/abi/apeRouterManager.json'\nimport {\n  JSBI,\n  Percent,\n  Token,\n  CurrencyAmount,\n  Currency,\n  ETHER,\n  BONUS_ROUTER_ADDRESS,\n  SMART_ROUTER_ADDRESS,\n  SmartRouter,\n} from '@apeswapfinance/sdk'\nimport { parseAddress, parseSmartAddress } from 'hooks/useAddress'\nimport { RouterTypes } from 'config/constants'\n\nexport { default as formatAddress } from './formatAddress'\n\n// returns the checksummed address if the address is valid, otherwise returns false\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getEtherscanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: number,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BLOCK_EXPLORER[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BLOCK_EXPLORER[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BLOCK_EXPLORER[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BLOCK_EXPLORER[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BLOCK_EXPLORER[chainId]}/address/${data}`\n    }\n  }\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// COMEBACK TO CHECK\n// account is optional\nexport function getRouterContract(\n  _: number,\n  library: Web3Provider,\n  account?: string,\n  routerType?: RouterTypes,\n  smartRouter?: SmartRouter,\n  executedSwap = true, // To be able to correctly differentiate between a executed swap vs a bonus check we need this flag\n): Contract {\n  if (routerType === RouterTypes.BONUS && executedSwap) {\n    return getContract(\n      parseAddress(BONUS_ROUTER_ADDRESS, library.network?.chainId || 16),\n      apeRouterManagerABI,\n      library,\n      account,\n    )\n  }\n  return getContract(\n    parseSmartAddress(SMART_ROUTER_ADDRESS, library.network?.chainId || 16, smartRouter || SmartRouter.APE),\n    IUniswapV2Router02ABI,\n    library,\n    account,\n  )\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  isLinear: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  totalAmountRaised?: string // Used to show the subscription amount post iao\n  bananaToBurn?: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  offeringCurrency: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n  vestingTime?: string\n  vesting?: boolean\n  startBlock?: number\n  burnedTxUrl?: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'BANANA' = 'BANANA',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'ETH' = 'ETH',\n  'USDT' = 'USDT',\n  'FLR' = 'FLR',\n  'CFLR' = 'CFLR',\n  'SGB' = 'SGB',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'APEZONE' = 'ApeZone',\n  'CORE' = 'Core',\n  'JUNGLE' = 'Jungle',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56?: string\n  137?: string\n  14?: string\n  16?: string\n  19?: string\n}\n\nexport interface ChainToNumber {\n  97?: number\n  56?: number\n  137?: number\n  14?: number\n  16?: number\n  19?: number\n}\n\nexport interface ChainToString {\n  97?: string\n  56?: string\n  137?: string\n  14?: string\n  16?: string\n  19?: string\n}\n\nexport interface FarmStyles {\n  deprecated: any\n  warning: any\n  featured: any\n  inactive: any\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  style?: keyof FarmStyles\n  image?: string\n  disableApr?: boolean\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n  projectLink?: string\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingToken: Token\n  stakingLimit?: number\n  bonusEndBlock?: number\n  rewardToken: Token\n  contractAddress: Address\n  poolCategory?: PoolCategory\n  projectLink: string\n  twitter?: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  reflect?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  displayDecimals?: number\n  lpStaking?: boolean\n  lpTokens?: {\n    token: Token\n    quoteToken: Token\n  }\n  forAdmins?: boolean\n  emergencyWithdraw?: boolean\n  isEarnTokenLp?: boolean\n}\n\nexport interface NfaStakingPoolConfig {\n  sousId: number\n  tier: number\n  rewardToken: Token\n  contractAddress: Address\n  tokenPerBlock: string\n  isFinished: boolean\n  endBlock: number\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  dontFetch?: boolean\n  lpToken?: boolean\n  price?: number\n  active?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type Attributes = {\n  faceColor: string\n  baseColor: string\n  frames: string\n  mouths: string\n  eyes: string\n  hats: string\n  rarityScore: string\n  rarityTierNumber: number\n  rarityTierName: string\n  rarityOverallRank: number\n}\n\nexport type Nft = {\n  index: number\n  name: string\n  image: string\n  uri: string\n  attributes: Attributes\n}\n\nexport type Nfb = {\n  image: string\n}\n\nexport type NfbAttribute = {\n  traitType: string\n  value: string\n}\n\nexport type NfaAttribute = {\n  id: string\n  occurance: number\n  category: string\n  uri: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\n// Interfaces used in Vaults\nexport interface MasterChef {\n  pid: ChainToNumber\n  address: Address\n  rewardsPerBlock: ChainToString\n  rewardToken: Token\n}\n\nexport interface VaultConfig {\n  id: number\n  pid: number\n  type: 'MAX' | 'AUTO' | 'BURN'\n  version: 'V1' | 'V2'\n  availableChains: number[]\n  stratAddress: Address\n  platform: string\n  token: Token\n  quoteToken?: Token\n  stakeToken: Token\n  rewardToken: Token\n  masterchef: MasterChef\n  inactive?: boolean\n  depositFee?: number\n  rewardsInSeconds?: boolean\n  fee?: string\n}\n\nexport interface DualFarmConfig {\n  pid: number\n  network: number\n  stakeTokenAddress: string\n  rewarderAddress: string\n  dualImage?: boolean\n  stakeTokens: {\n    token0: Token\n    token1: Token\n  }\n  rewardTokens: {\n    token0: Token\n    token1?: Token\n  }\n}\n\nexport interface JungleFarmConfig {\n  jungleId: number\n  image?: string\n  tokenName: string\n  stakingToken: Token\n  stakingLimit?: number\n  bonusEndBlock?: number\n  rewardToken: Token\n  contractAddress: Address\n  projectLink: string\n  twitter?: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  reflect?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  displayDecimals?: number\n  lpStaking?: boolean\n  lpTokens?: {\n    token: Token\n    quoteToken: Token\n  }\n  forAdmins?: boolean\n  emergencyWithdraw?: boolean\n  isEarnTokenLp?: boolean\n  network: number\n}\n\n// Types used to check for live IAOs\nexport type LiveIfo = {\n  id: number\n  label: string\n  settings: {\n    id: number\n    tag: string\n    navItem: string\n  }[]\n}\n\nexport interface BillsConfig {\n  index: number\n  contractAddress: Address\n  billType: string\n  token: Token\n  quoteToken: Token\n  lpToken: Token\n  earnToken: Token\n  inactive?: boolean\n  projectLink?: string\n  twitter?: string\n}\n","import { useMatchBreakpoints } from '@apeswapfinance/uikit'\n\nconst useIsMobile = () => {\n  const { isXl, isLg, isXxl } = useMatchBreakpoints()\n  const isMobile = !isLg && !isXl && !isXxl\n  return isMobile\n}\n\nexport default useIsMobile\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledButton = styled(Button)`\n  display: flex;\n  align-self: center;\n  border: none;\n  text-decoration: underline;\n  margin-top: 10px;\n  text-transform: capitalize;\n`\n\nconst UnderlinedButton: React.FC<{ text: string; handleClick: () => void }> = ({ text, handleClick }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledButton variant=\"text\" onClick={handleClick}>\n      {t(text)}\n    </StyledButton>\n  )\n}\n\nexport default UnderlinedButton\n","import { getMiniChefAddress } from 'utils/addressHelper'\nimport { Call } from 'utils/multicall'\nimport { DualFarmConfig } from 'config/constants/types'\n\nconst fetchDualFarmCalls = (farm: DualFarmConfig, chainId: number): Call[] => {\n  const miniChefAddress = getMiniChefAddress(chainId)\n  const lpAddress = farm.stakeTokenAddress\n  const tokenAddress = farm.stakeTokens.token0.address[chainId]\n  const quoteTokenAddress = farm.stakeTokens.token1.address[chainId]\n  const { rewarderAddress } = farm\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: tokenAddress,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteTokenAddress,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [miniChefAddress],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    {\n      address: miniChefAddress,\n      name: 'poolInfo',\n      params: [farm.pid],\n    },\n    {\n      address: miniChefAddress,\n      name: 'totalAllocPoint',\n    },\n    {\n      address: miniChefAddress,\n      name: 'bananaPerSecond',\n    },\n    {\n      address: rewarderAddress,\n      name: 'poolInfo',\n      params: [farm.pid],\n    },\n    {\n      address: rewarderAddress,\n      name: 'rewardPerSecond',\n    },\n    {\n      // This isn't ideal, but reward address will cause calls to fail with this address, minChef will go through and then can be ignored on cleanup.\n      address: rewarderAddress !== '0x1F234B1b83e21Cb5e2b99b4E498fe70Ef2d6e3bf' ? rewarderAddress : miniChefAddress,\n      name: 'totalAllocPoint',\n    },\n  ]\n  return calls\n}\n\nexport default fetchDualFarmCalls\n","import BigNumber from 'bignumber.js'\nimport { DualFarm, FarmLpAprsType, TokenPrices } from 'state/types'\nimport { getDualFarmApr } from 'utils/apr'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber } from '../../utils/formatBalance'\n\nconst cleanDualFarmData = (\n  farmIds: number[],\n  chunkedFarms: any[],\n  tokenPrices: TokenPrices[],\n  bananaPrice: BigNumber,\n  farmLpAprs: FarmLpAprsType,\n  chainId: number,\n  dualFarms: DualFarm[],\n) => {\n  const data = chunkedFarms.map((chunk, index) => {\n    const dualFarmConfig = dualFarms?.find((farm) => farm.pid === farmIds[index])\n    const quoteToken = tokenPrices?.find(\n      (token) => token.address[chainId] === dualFarmConfig.stakeTokens.token0.address[chainId],\n    )\n    const token1 = tokenPrices?.find(\n      (token) => token.address[chainId] === dualFarmConfig.stakeTokens.token1.address[chainId],\n    )\n    const miniChefRewarderToken = tokenPrices?.find(\n      (token) => token.address[chainId] === dualFarmConfig.rewardTokens.token0.address[chainId],\n    )\n    const rewarderToken = tokenPrices?.find(\n      (token) => token.address[chainId] === dualFarmConfig.rewardTokens.token1.address[chainId],\n    )\n    const lpApr = farmLpAprs?.lpAprs?.find((lp) => lp.pid === dualFarmConfig.pid)?.lpApr * 100\n\n    const [\n      quoteTokenBalanceLP,\n      tokenBalanceLP,\n      lpTokenBalanceMC,\n      lpTotalSupply,\n      info,\n      totalAllocPoint,\n      miniChefRewardsPerSecond,\n      rewarderInfo,\n      rewardsPerSecond,\n      rewarderTotalAlloc,\n    ] = chunk\n\n    // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n    const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n    // Total value in staking in quote token value\n    const lpTotalInQuoteToken = new BigNumber(quoteTokenBalanceLP)\n      .div(new BigNumber(10).pow(18))\n      .times(new BigNumber(2))\n      .times(lpTokenRatio)\n\n    // Total value in pool in quote token value\n    const totalInQuoteToken = new BigNumber(quoteTokenBalanceLP)\n      .div(new BigNumber(10).pow(quoteToken?.decimals))\n      .times(new BigNumber(2))\n\n    // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n    const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(token1?.decimals)).times(lpTokenRatio)\n    const quoteTokenAmount = new BigNumber(quoteTokenBalanceLP)\n      .div(new BigNumber(10).pow(quoteToken?.decimals))\n      .times(lpTokenRatio)\n\n    let alloc = null\n    let multiplier = 'unset'\n    let miniChefPoolRewardPerSecond = null\n\n    const allocPoint = new BigNumber(info.allocPoint._hex)\n    const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n    miniChefPoolRewardPerSecond = getBalanceNumber(\n      poolWeight.times(miniChefRewardsPerSecond),\n      miniChefRewarderToken?.decimals,\n    )\n    alloc = poolWeight.toJSON()\n    multiplier = `${allocPoint.div(100).toString()}X`\n\n    const totalStaked = quoteTokenAmount.times(new BigNumber(2)).times(quoteToken?.price)\n    const totalValueInLp = new BigNumber(quoteTokenBalanceLP)\n      .div(new BigNumber(10).pow(quoteToken?.decimals))\n      .times(new BigNumber(2))\n      .times(quoteToken?.price)\n    const stakeTokenPrice = totalValueInLp.div(new BigNumber(getBalanceNumber(lpTotalSupply))).toNumber()\n\n    const rewarderAllocPoint = new BigNumber(rewarderInfo?.allocPoint?._hex)\n    let rewarderPoolWeight = null\n\n    if (dualFarmConfig.rewarderAddress === '0x1F234B1b83e21Cb5e2b99b4E498fe70Ef2d6e3bf') {\n      rewarderPoolWeight = rewarderAllocPoint.div(new BigNumber(10000))\n    } else {\n      rewarderPoolWeight = rewarderAllocPoint.div(new BigNumber(rewarderTotalAlloc))\n    }\n    const rewarderPoolRewardPerSecond = getBalanceNumber(\n      rewarderPoolWeight.times(rewardsPerSecond),\n      rewarderToken?.decimals,\n    )\n    const apr = getDualFarmApr(\n      totalStaked?.toNumber(),\n      miniChefRewarderToken?.price,\n      miniChefPoolRewardPerSecond?.toString(),\n      rewarderToken?.price,\n      rewarderPoolRewardPerSecond?.toString(),\n    )\n\n    const amountEarned = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: lpApr ? apr + lpApr : apr,\n      tokenPrice: bananaPrice,\n    })\n\n    const apy = getRoi({ amountEarned, amountInvested: 1000 / bananaPrice?.toNumber() }).toFixed(2)\n\n    return {\n      ...dualFarmConfig,\n      tokenAmount: tokenAmount.toJSON(),\n      totalStaked: totalStaked.toFixed(0),\n      quoteTokenAmount: quoteTokenAmount.toJSON(),\n      totalInQuoteToken: totalInQuoteToken.toJSON(),\n      lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n      tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n      stakeTokenPrice,\n      rewardToken0Price: miniChefRewarderToken?.price,\n      rewardToken1Price: rewarderToken?.price,\n      lpApr,\n      poolWeight: alloc,\n      // TODO Remove - HIDE MATIC/CRYTL farm with 1 alloc point while SINGULAR Vault withdraws\n      multiplier,\n      apr,\n      apy,\n    }\n  })\n  return data\n}\n\nexport default cleanDualFarmData\n","import erc20 from 'config/abi/erc20.json'\nimport miniApeV2 from 'config/abi/miniApeV2.json'\nimport BigNumber from 'bignumber.js'\nimport { DualFarm, FarmLpAprsType, TokenPrices } from 'state/types'\nimport { chunk } from 'lodash'\nimport multicall from 'utils/multicall'\nimport fetchDualFarmCalls from './fetchDualFarmCalls'\nimport cleanDualFarmData from './cleanDualFarmData'\n\nconst fetchDualFarms = async (\n  chainId: number,\n  tokenPrices: TokenPrices[],\n  bananaPrice: BigNumber,\n  farmLpAprs: FarmLpAprsType,\n  dualFarms: DualFarm[],\n) => {\n  const farmIds = []\n  const farmCalls = dualFarms.flatMap((farm) => {\n    farmIds.push(farm.pid)\n    return fetchDualFarmCalls(farm, chainId)\n  })\n  const vals = await multicall(chainId, [...miniApeV2, ...erc20], farmCalls)\n  const chunkSize = farmCalls.length / dualFarms.length\n  const chunkedFarms = chunk(vals, chunkSize)\n  return cleanDualFarmData(farmIds, chunkedFarms, tokenPrices, bananaPrice, farmLpAprs, chainId, dualFarms)\n}\n\nexport default fetchDualFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport miniChefABI from 'config/abi/miniApeV2.json'\nimport rewarderABI from 'config/abi/miniComplexRewarder.json'\nimport { DualFarm } from 'state/types'\nimport { getMiniChefAddress } from 'utils/addressHelper'\nimport multicall from 'utils/multicall'\n\nexport const fetchDualFarmUserAllowances = async (chainId: number, account: string, dualFarms: DualFarm[]) => {\n  const miniChefAddress = getMiniChefAddress(chainId)\n  const calls = dualFarms.map((farm) => {\n    const lpContractAddress = farm.stakeTokenAddress\n    return { address: lpContractAddress, name: 'allowance', params: [account, miniChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(chainId, erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchDualFarmUserTokenBalances = async (chainId: number, account: string, dualFarms: DualFarm[]) => {\n  const calls = dualFarms.map((farm) => {\n    const lpContractAddress = farm.stakeTokenAddress\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(chainId, erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchDualFarmUserStakedBalances = async (chainId: number, account: string, dualFarms: DualFarm[]) => {\n  const miniChefAddress = getMiniChefAddress(chainId)\n  const calls = dualFarms.map((farm) => {\n    return {\n      address: miniChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(chainId, miniChefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchDualMiniChefEarnings = async (chainId: number, account: string, dualFarms: DualFarm[]) => {\n  const miniChefAddress = getMiniChefAddress(chainId)\n  const calls = dualFarms.map((farm) => {\n    return {\n      address: miniChefAddress,\n      name: 'pendingBanana',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(chainId, miniChefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\nexport const fetchDualFarmRewarderEarnings = async (chainId: number, account: string, dualFarms: DualFarm[]) => {\n  const calls = dualFarms.map((farm) => {\n    return {\n      address: farm.rewarderAddress,\n      name: 'pendingToken',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(chainId, rewarderABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheDualFarms = []\n\nconst fetchDualFarmConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      tries++\n      const response = await axios.get(`${apeswapListUrl}/dualFarms.json`)\n      const dualFarmConfigResp = await response.data\n      if (dualFarmConfigResp.statusCode === 500) {\n        return null\n      }\n      cacheDualFarms = dualFarmConfigResp\n      return dualFarmConfigResp\n    }\n    return cacheDualFarms\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchDualFarmConfig\n","import { createSlice } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport fetchDualFarms from './fetchDualFarms'\nimport {\n  fetchDualMiniChefEarnings,\n  fetchDualFarmUserAllowances,\n  fetchDualFarmUserTokenBalances,\n  fetchDualFarmUserStakedBalances,\n  fetchDualFarmRewarderEarnings,\n} from './fetchDualFarmUser'\nimport { TokenPrices, DualFarm, DualFarmsState, FarmLpAprsType, AppThunk } from '../types'\nimport fetchDualFarmConfig from './api'\n\nconst initialState: DualFarmsState = { data: [] }\n\nexport const dualFarmsSlice = createSlice({\n  name: 'dualFarms',\n  initialState,\n  reducers: {\n    setInitialDualFarmData: (state, action) => {\n      state.data = action.payload\n    },\n    setDualFarmsPublicData: (state, action) => {\n      const liveFarmsData: DualFarm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setDualFarmUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((dualFarm) => {\n        const userDualFarmData = userData.find((entry) => entry.pid === dualFarm.pid)\n        return { ...dualFarm, userData: userDualFarmData }\n      })\n    },\n    updateDualFarmUserData: (state, action) => {\n      const { field, value, pid } = action.payload\n      const index = state.data.findIndex((p) => p.pid === pid)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setInitialDualFarmData, setDualFarmsPublicData, setDualFarmUserData, updateDualFarmUserData } =\n  dualFarmsSlice.actions\n\n// Thunks\n\nexport const setInitialDualFarmDataAsync = () => async (dispatch) => {\n  try {\n    const initialDualFarmState: DualFarm[] = await fetchDualFarmConfig()\n    dispatch(setInitialDualFarmData(initialDualFarmState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchDualFarmsPublicDataAsync =\n  (chainId: number, tokenPrices: TokenPrices[], bananaPrice: BigNumber, farmLpAprs: FarmLpAprsType): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const dualFarms = getState().dualFarms.data\n      const farms = await fetchDualFarms(chainId, tokenPrices, bananaPrice, farmLpAprs, dualFarms)\n      dispatch(setDualFarmsPublicData(farms))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\nexport const fetchDualFarmUserDataAsync =\n  (chainId: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const dualFarms = getState().dualFarms.data\n      const userFarmAllowances = await fetchDualFarmUserAllowances(chainId, account, dualFarms)\n      const userFarmTokenBalances = await fetchDualFarmUserTokenBalances(chainId, account, dualFarms)\n      const userStakedBalances = await fetchDualFarmUserStakedBalances(chainId, account, dualFarms)\n      const miniChefEarnings = await fetchDualMiniChefEarnings(chainId, account, dualFarms)\n      const rewarderEarnings = await fetchDualFarmRewarderEarnings(chainId, account, dualFarms)\n      const arrayOfUserDataObjects = dualFarms.map((dualFarm) => {\n        return {\n          pid: dualFarm.pid,\n          allowance: userFarmAllowances[dualFarm.pid],\n          tokenBalance: userFarmTokenBalances[dualFarm.pid],\n          stakedBalance: userStakedBalances[dualFarm.pid],\n          miniChefEarnings: miniChefEarnings[dualFarm.pid],\n          rewarderEarnings: rewarderEarnings[dualFarm.pid],\n        }\n      })\n      dispatch(setDualFarmUserData(arrayOfUserDataObjects))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const updateDualFarmUserAllowances =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const dualFarms = getState().dualFarms.data\n    const allowances = await fetchDualFarmUserAllowances(chainId, account, dualFarms)\n    const pidIndex = dualFarms.findIndex((f) => f.pid === pid)\n    dispatch(updateDualFarmUserData({ pid, field: 'allowance', value: allowances[pidIndex] }))\n  }\n\nexport const updateDualFarmUserTokenBalances =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const dualFarms = getState().dualFarms.data\n    const tokenBalances = await fetchDualFarmUserTokenBalances(chainId, account, dualFarms)\n    const pidIndex = dualFarms.findIndex((f) => f.pid === pid)\n    dispatch(updateDualFarmUserData({ pid, field: 'tokenBalance', value: tokenBalances[pidIndex] }))\n  }\n\nexport const updateDualFarmUserStakedBalances =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const dualFarms = getState().dualFarms.data\n    const stakedBalances = await fetchDualFarmUserStakedBalances(chainId, account, dualFarms)\n    const pidIndex = dualFarms.findIndex((f) => f.pid === pid)\n    dispatch(updateDualFarmUserData({ pid, field: 'stakedBalance', value: stakedBalances[pidIndex] }))\n  }\n\nexport const updateDualFarmUserEarnings =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const dualFarms = getState().dualFarms.data\n    const pendingRewards = await fetchDualMiniChefEarnings(chainId, account, dualFarms)\n    const pidIndex = dualFarms.findIndex((f) => f.pid === pid)\n    dispatch(updateDualFarmUserData({ pid, field: 'miniChefEarnings', value: pendingRewards[pidIndex] }))\n  }\n\nexport const updateDualFarmRewarderEarnings =\n  (chainId: number, pid, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const dualFarms = getState().dualFarms.data\n    const rewarderEarnings = await fetchDualFarmRewarderEarnings(chainId, account, dualFarms)\n    const pidIndex = dualFarms.findIndex((f) => f.pid === pid)\n    dispatch(updateDualFarmUserData({ pid, field: 'rewarderEarnings', value: rewarderEarnings[pidIndex] }))\n  }\n\nexport default dualFarmsSlice.reducer\n","import { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { SwiperContext } from '../contexts/SwiperProvider'\n\nconst useSwiper = () => {\n  const swiperContext = useContext(SwiperContext)\n  const { t } = useTranslation()\n\n  if (swiperContext === undefined) {\n    throw new Error(t('Swiper not found'))\n  }\n\n  return swiperContext\n}\n\nexport default useSwiper\n","import { apiBaseUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nconst getBillNftData = async (billNftId: string, billNftAddress: string) => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/bills/bsc/${billNftAddress}/${billNftId}`)\n    const billNftDataResp = await response.data\n    if (billNftDataResp.statusCode === 500) {\n      return null\n    }\n    return billNftDataResp\n  } catch (error) {\n    return null\n  }\n}\n/**\n * @deprecated API doesn't support it any more and its not used\n */\nexport const getNewBillNftData = async (billNftId: string, transactionHash: string) => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/bills/bsc/${billNftId}/${transactionHash}`)\n    const billNftDataResp = await response.data\n    if (billNftDataResp.statusCode === 500) {\n      return null\n    }\n    return billNftDataResp\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getBillNftData\n","import erc20ABI from 'config/abi/erc20.json'\nimport billAbi from 'config/abi/bill.json'\nimport { BillsConfig } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport BigNumber from 'bignumber.js'\nimport { UserBill } from 'state/types'\nimport getBillNftData from './getBillNftData'\n\nexport const fetchBillsAllowance = async (chainId: number, account: string, bills: BillsConfig[]) => {\n  const calls = bills.map((b) => ({\n    address: b.lpToken.address[chainId],\n    name: 'allowance',\n    params: [account, b.contractAddress[chainId]],\n  }))\n  const allowances = await multicall(chainId, erc20ABI, calls)\n  return bills.reduce((acc, bill, index) => ({ ...acc, [bill.index]: new BigNumber(allowances[index]).toString() }), {})\n}\n\nexport const fetchUserBalances = async (chainId: number, account: string, bills: BillsConfig[]) => {\n  const calls = bills.map((b) => ({\n    address: b.lpToken.address[chainId],\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(chainId, erc20ABI, calls)\n  const tokenBalances = bills.reduce(\n    (acc, bill, index) => ({ ...acc, [bill.index]: new BigNumber(tokenBalancesRaw[index]).toString() }),\n    {},\n  )\n\n  return tokenBalances\n}\n\nexport const fetchUserOwnedBillNftData = async (ownedBillsData: { id: string; billNftAddress: string }[]) => {\n  const billNftData = ownedBillsData?.map(async ({ id, billNftAddress }) => {\n    return { id, data: await getBillNftData(id, billNftAddress) }\n  })\n  return Promise.all(billNftData)\n}\n\nexport const fetchUserOwnedBills = async (\n  chainId: number,\n  account: string,\n  bills: BillsConfig[],\n): Promise<UserBill[]> => {\n  const billIdCalls = bills.map((b) => ({\n    address: b.contractAddress[chainId],\n    name: 'getBillIds',\n    params: [account],\n  }))\n  const billIds = await multicall(chainId, billAbi, billIdCalls)\n  const billsPendingRewardCall = []\n  const billDataCalls = []\n  billIds.map((idArray, index) =>\n    idArray[0].map(\n      (id: BigNumber) =>\n        id.gt(0) &&\n        (billDataCalls.push({ address: bills[index].contractAddress[chainId], name: 'billInfo', params: [id] }),\n        billDataCalls.push({ address: bills[index].contractAddress[chainId], name: 'billNft' }),\n        billsPendingRewardCall.push({\n          address: bills[index].contractAddress[chainId],\n          name: 'pendingPayoutFor',\n          params: [id],\n        })),\n    ),\n  )\n  const billData = await multicall(chainId, billAbi, billDataCalls)\n  const pendingRewardsCall = await multicall(chainId, billAbi, billsPendingRewardCall)\n\n  const result = []\n\n  for (let i = 0; i < billsPendingRewardCall.length; i++) {\n    const billDataPos = i === 0 ? 0 : i * 2\n    const data = {\n      address: billsPendingRewardCall[i].address,\n      id: billsPendingRewardCall[i].params[0].toString(),\n      payout: billData[billDataPos][0].toString(),\n      billNftAddress: billData[billDataPos + 1][0].toString(),\n      vesting: billData[billDataPos][1].toString(),\n      lastBlockTimestamp: billData[billDataPos][2].toString(),\n      truePricePaid: billData[billDataPos][3].toString(),\n      pendingRewards: pendingRewardsCall[i][0].toString(),\n    }\n    result.push(data)\n  }\n\n  return result\n}\n","import { BillsConfig } from 'config/constants/types'\nimport { Call } from 'utils/multicall'\n\nconst fetchBillsCalls = (bill: BillsConfig, chainId: number): Call[] => {\n  const standardCalls = [\n    // Get bill price with LP fees\n    {\n      address: bill.contractAddress[chainId],\n      name: 'trueBillPrice',\n    },\n    // Get bill current debt\n    {\n      address: bill.contractAddress[chainId],\n      name: 'currentDebt',\n    },\n    // Get bill current fee\n    {\n      address: bill.contractAddress[chainId],\n      name: 'currentFee',\n    },\n    // Get bill debt decay\n    {\n      address: bill.contractAddress[chainId],\n      name: 'debtDecay',\n    },\n    // Get bill debt ratio\n    {\n      address: bill.contractAddress[chainId],\n      name: 'debtRatio',\n    },\n    // Get bill debt ratio\n    {\n      address: bill.contractAddress[chainId],\n      name: 'totalDebt',\n    },\n    // Get bill debt ratio\n    {\n      address: bill.contractAddress[chainId],\n      name: 'totalPayoutGiven',\n    },\n    // Get bill debt ratio\n    {\n      address: bill.contractAddress[chainId],\n      name: 'totalPrincipalBilled',\n    },\n    // Get bill nft address\n    {\n      address: bill.contractAddress[chainId],\n      name: 'billNft',\n    },\n    // Terms\n    // (1) controlVariable (2) vestingTerm (3) minimumPrice (4) maxPayout (5) maxDebt\n    {\n      address: bill.contractAddress[chainId],\n      name: 'terms',\n    },\n    {\n      address: bill.contractAddress[chainId],\n      name: 'maxTotalPayout',\n    },\n  ]\n\n  return standardCalls\n}\n\nexport default fetchBillsCalls\n","import { BillsConfig } from 'config/constants/types'\nimport { TokenPrices } from 'state/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFirstNonZeroDigits } from 'utils/roundNumber'\n\nconst cleanBillsData = (\n  billIds: number[],\n  chunkedBills: any[],\n  tokenPrices: TokenPrices[],\n  chainId: number,\n  bills: BillsConfig[],\n) => {\n  const data = chunkedBills.map((chunk, index) => {\n    const billConfig = bills.find((bill) => bill.index === billIds[index])\n    const lpPrice = tokenPrices?.find((token) => token.address[chainId] === billConfig.lpToken.address[chainId])?.price\n    const earnTokenPrice = tokenPrices?.find(\n      (token) => token.address[chainId] === billConfig.earnToken.address[chainId],\n    )?.price\n    const [\n      trueBillPrice,\n      currentDebt,\n      currentFee,\n      debtDecay,\n      debtRatio,\n      totalDebt,\n      totalPayoutGiven,\n      totalPrincipalBilled,\n      billNft,\n      terms,\n      maxTotalPayout,\n    ] = chunk\n    const [controlVariable, vestingTerm, minimumPrice, maxPayout, maxDebt] = terms\n    const priceUsd = getBalanceNumber(trueBillPrice) * lpPrice\n    const discount = ((earnTokenPrice - priceUsd) / earnTokenPrice) * 100\n    const formatedPrice = priceUsd ? getFirstNonZeroDigits(priceUsd) : undefined\n    return {\n      ...billConfig,\n      price: trueBillPrice.toString(),\n      priceUsd: formatedPrice,\n      vestingTime: vestingTerm.toString(),\n      discount: discount.toFixed(2),\n      trueBillPrice: trueBillPrice.toString(),\n      currentDebt: currentDebt.toString(),\n      currentFee: currentFee.toString(),\n      debtDecay: debtDecay.toString(),\n      debtRatio: debtRatio.toString(),\n      totalDebt: totalDebt.toString(),\n      totalPayoutGiven: totalPayoutGiven.toString(),\n      maxTotalPayOut: maxTotalPayout.toString(),\n      totalPrincipalBilled: totalPrincipalBilled.toString(),\n      controlVariable: controlVariable.toString(),\n      minimumPrice: minimumPrice.toString(),\n      maxPayout: maxPayout.toString(),\n      maxDebt: maxDebt.toString(),\n      billNftAddress: billNft.toString(),\n      earnTokenPrice,\n      lpPrice,\n    }\n  })\n  return data\n}\n\nexport default cleanBillsData\n","import billsABI from 'config/abi/bill.json'\nimport { TokenPrices } from 'state/types'\nimport { chunk } from 'lodash'\nimport multicall from 'utils/multicall'\nimport { BillsConfig } from 'config/constants/types'\nimport fetchBillsCalls from './fetchBillsCalls'\nimport cleanBillsData from './cleanBillsData'\n\nconst fetchBills = async (chainId: number, tokenPrices: TokenPrices[], bills: BillsConfig[]) => {\n  const billIds = []\n  const billCalls = bills.flatMap((bill) => {\n    billIds.push(bill.index)\n    return fetchBillsCalls(bill, chainId)\n  })\n  const vals = await multicall(chainId, billsABI, billCalls)\n  const chunkSize = vals.length / bills.length\n  const chunkedBills = chunk(vals, chunkSize)\n  return cleanBillsData(billIds, chunkedBills, tokenPrices, chainId, bills)\n}\n\nexport default fetchBills\n","import { apeswapListUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nlet tries = 0\nlet cacheBills = []\n\nconst fetchBillsConfig = async () => {\n  try {\n    if (tries === 0) {\n      axiosRetry(axios, {\n        retries: 5,\n        retryCondition: () => true,\n      })\n      const response = await axios.get(`${apeswapListUrl}/bills.json`)\n      const billConfigResp = await response.data\n      if (billConfigResp.statusCode === 500) {\n        return null\n      }\n      tries++\n      cacheBills = billConfigResp\n      return billConfigResp\n    }\n    return cacheBills\n  } catch (error) {\n    tries = 0\n    return null\n  }\n}\n\nexport default fetchBillsConfig\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  fetchBillsAllowance,\n  fetchUserBalances,\n  fetchUserOwnedBills,\n  fetchUserOwnedBillNftData,\n} from './fetchBillsUser'\nimport { TokenPrices, AppThunk, BillsState, Bills } from '../types'\nimport fetchBills from './fetchBills'\nimport { getNewBillNftData } from './getBillNftData'\nimport fetchBillsConfig from './api'\n\nconst initialState: BillsState = { data: [] }\n\nexport const billsSlice = createSlice({\n  name: 'Bills',\n  initialState,\n  reducers: {\n    setInitialBillsData: (state, action) => {\n      state.data = action.payload\n    },\n    setBillsPublicData: (state, action) => {\n      const liveBillsData: Bills[] = action.payload\n      state.data = state.data.map((bill) => {\n        const liveBillData = liveBillsData.find((entry) => entry.index === bill.index)\n        return { ...bill, ...liveBillData }\n      })\n    },\n    setBillsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((bill) => {\n        const userBillData = userData.find((entry) => entry.index === bill.index)\n        return { ...bill, userData: userBillData }\n      })\n    },\n    setUserOwnedBillsData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((bill) => {\n        const userOwnedBillsData = userData.find((entry) => entry.index === bill.index)\n        return { ...bill, userOwnedBillsData: userOwnedBillsData?.userOwnedBills }\n      })\n    },\n    setUserOwnedBillsNftData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((bill) => {\n        const userOwnedBillsNftData = userData.find((entry) => entry.index === bill.index)\n        return { ...bill, userOwnedBillsNftData: userOwnedBillsNftData?.userOwnedBillsNfts }\n      })\n    },\n    updateBillsUserData: (state, action) => {\n      const { field, value, index } = action.payload\n      const i = state.data.findIndex((bill) => bill.index === index)\n      state.data[i] = { ...state.data[i], userData: { ...state.data[i].userData, [field]: value } }\n    },\n    updateBillsUserNftData: (state, action) => {\n      const { value, index } = action.payload\n      const i = state.data.findIndex((bill) => bill.index === index)\n      state.data[i] = {\n        ...state.data[i],\n        userOwnedBillsNftData: { ...state.data[i].userOwnedBillsNftData, ...value },\n      }\n    },\n  },\n})\n\n// Actions\nexport const {\n  setInitialBillsData,\n  setBillsPublicData,\n  setBillsUserData,\n  setUserOwnedBillsData,\n  setUserOwnedBillsNftData,\n  updateBillsUserData,\n} = billsSlice.actions\n\n// Thunks\n\nexport const setInitialBillsDataAsync = () => async (dispatch) => {\n  try {\n    const initialBillState: Bills[] = await fetchBillsConfig()\n    dispatch(setInitialBillsData(initialBillState || []))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const fetchBillsPublicDataAsync =\n  (chainId: number, tokenPrices: TokenPrices[]): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      const bills = getState().bills.data\n      const returnedBills = await fetchBills(chainId, tokenPrices, bills)\n      dispatch(setBillsPublicData(returnedBills))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const fetchBillsUserDataAsync =\n  (chainId: number, account): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      // fetch and set user bill interaction data\n      const bills = getState().bills.data\n      const allowances = await fetchBillsAllowance(chainId, account, bills)\n      const stakingTokenBalances = await fetchUserBalances(chainId, account, bills)\n      const userData = bills.map((bill) => ({\n        index: bill.index,\n        allowance: allowances[bill.index],\n        stakingTokenBalance: stakingTokenBalances[bill.index],\n      }))\n      dispatch(setBillsUserData(userData))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const fetchUserOwnedBillsDataAsync =\n  (chainId: number, account): AppThunk =>\n  async (dispatch, getState) => {\n    try {\n      // Fetch and set user owned bill data without NFT Data\n      const bills = getState().bills.data\n      const userOwnedBills = await fetchUserOwnedBills(chainId, account, bills)\n      const mapUserOwnedBills = bills.map((bill) =>\n        userOwnedBills.filter((b) => b.address === bill.contractAddress[chainId]),\n      )\n      const userOwnedBillsData = bills.map((bill, i) => ({\n        index: bill.index,\n        userOwnedBills: mapUserOwnedBills[i],\n      }))\n      dispatch(setUserOwnedBillsData(userOwnedBillsData))\n\n      // Fetch owned bill NFT data\n      const ownedBillsData = mapUserOwnedBills.flatMap((bs) => {\n        return bs.map((b) => {\n          return { id: b.id, billNftAddress: b.billNftAddress }\n        })\n      })\n      const userBillNftData = await fetchUserOwnedBillNftData(ownedBillsData)\n      const ownedBillsWithNftData = mapUserOwnedBills.map((bs, index) => {\n        return {\n          index: bills[index].index,\n          userOwnedBillsNfts: [\n            ...bs.map((b) => {\n              return userBillNftData.find((nftB) => parseInt(nftB.id) === parseInt(b.id))?.data\n            }),\n          ],\n        }\n      })\n      dispatch(setUserOwnedBillsNftData(ownedBillsWithNftData))\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\nexport const updateUserAllowance =\n  (chainId: number, index: number, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const bills = getState().bills.data\n    const allowances = await fetchBillsAllowance(chainId, account, bills)\n    dispatch(updateBillsUserData({ index, field: 'allowance', value: allowances[index] }))\n  }\n\nexport const updateUserBalance =\n  (chainId: number, index: string, account: string): AppThunk =>\n  async (dispatch, getState) => {\n    const bills = getState().bills.data\n    const tokenBalances = await fetchUserBalances(chainId, account, bills)\n    dispatch(updateBillsUserData({ index, field: 'stakingTokenBalance', value: tokenBalances[index] }))\n  }\n\n/**\n * @deprecated since multiple NFT contracts\n */\nexport const updateUserNftData =\n  (index: number, billNftId: string, transactionHash: string): AppThunk =>\n  async (dispatch) => {\n    const fetchedBillNftData = await getNewBillNftData(billNftId, transactionHash)\n    dispatch(updateBillsUserData({ index, value: fetchedBillNftData }))\n  }\n\nexport default billsSlice.reducer\n","import { Ifo } from './types'\nimport { ContextApi } from '../../contexts/Localization/types'\n\n// Used for configuring BNB IAOs\n\nconst ifos: (t: ContextApi['t']) => Ifo[] = (t) => [\n  {\n    id: 'chirpley',\n    address: '0x93D678a48176296D176a6C660e127c7eF4815db8',\n    isActive: true,\n    isLinear: true,\n    name: t('Chirpley'),\n    subTitle: t('The first fully automated, peer-to-peer influencer marketplace'),\n    description: t(\n      'Chirpley is a decentralized web 3.0 ecosystem that instantly automates influencer marketing campaigns by connecting brands with nano- and micro-influencers using artificial intelligence, machine learning, and blockchain technology. Chirpley’s platform speeds up matchmaking, dealmaking, price setting and campaign launching - changing the game for both brands and influencers.',\n    ),\n    launchDate: 'September 6th',\n    launchTime: '23:30 UTC',\n    saleAmount: '9,523,809.5 CHRP',\n    raiseAmount: '$200,000',\n    vestingTime: '6 Months',\n    projectSiteUrl: 'https://chirpley.ai/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'CHRP',\n    tokenDecimals: 18,\n    releaseBlockNumber: 21108461, // block to start showing contract details\n    vesting: true,\n  },\n  {\n    id: 'animalconcerts',\n    address: '0x4bcfC7571D650e707e9C6506e1ED0E3e434E9bb4', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: true,\n    name: t('Animal Concerts'),\n    subTitle: t('The Next Generation of Live Events in the Metaverse'),\n    description: t(\n      'Animal Concerts is streaming interactive metaverse concerts, enabling both established and emerging artists to deliver amazing next-generation fan experiences. The protocol welcomes a new paradigm for music distribution, working closely with artists to design and mint unique NFTs to personalize and enhance the fan experience while generating new and direct revenue for the artists involved.',\n    ),\n    launchDate: 'March 29th',\n    launchTime: '2:00 UTC',\n    saleAmount: '111,111,111 ANML',\n    raiseAmount: '$500,000',\n    vestingTime: '6 Months',\n    projectSiteUrl: 'https://animalconcerts.com/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'ANML',\n    tokenDecimals: 18,\n    releaseBlockNumber: 16465651, // block to start showing contract details\n    vesting: true,\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'trustnft',\n    address: '0x8F87424743074290a4682231B9e671C4b1c120a6', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: true,\n    name: t('TrustNFT'),\n    subTitle: t('Decentralized NFT Loans & Marketplace'),\n    description: t(\n      `TrustNFT is using AI and big data to accurately evaluate NFTs and unlock their potential for use as loan collateral. Users can combine DeFi with NFTs to earn yield on selected NFT-backed loans. The project addresses major problems in the NFT ecosystem, including low liquidity, investment risk, and the monetization of assets.`,\n    ),\n    launchDate: 'February 3rd',\n    launchTime: '1:00 UTC',\n    saleAmount: '30,000,000 TRUSTNFT',\n    raiseAmount: '$525,000',\n    vestingTime: '3 Months',\n    projectSiteUrl: 'https://trustnft.org/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'TRUSTNFT',\n    tokenDecimals: 18,\n    releaseBlockNumber: 14911408, // block to start showing contract details\n    vesting: true,\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'stz',\n    address: '0xa526477bBf22643bE96D02Ebf3934BA1721059f3', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: false,\n    name: t('99Starz'),\n    subTitle: t(`The World's Largest NFT Yield Ecosystem`),\n    description: t(\n      `99Starz is creating a results-driven, cross-chain GameFi ecosystem that will allow game studios, gamers, and collectors to participate and win in different ways together. Through their unique GameFi guild model and NFT leasing marketplace, 99Starz will cater to all aspects of the most popular blockchain gaming economies, including Axie Infinity, F1 Delta, and Sorare.`,\n    ),\n    launchDate: 'December 11th',\n    launchTime: '5:00 UTC',\n    saleAmount: '500,000 STZ',\n    raiseAmount: '$250,000',\n    vestingTime: '3 Months',\n    projectSiteUrl: 'https://99starz.io/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'STZ',\n    tokenDecimals: 18,\n    releaseBlockNumber: 22364007, // block to start showing contract details\n    vesting: true,\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'gan',\n    address: '0xdDb35EE8d3B54216B114190a1Bc14eB11408BE23', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: false,\n    name: t('Galactic Arena'),\n    subTitle: t('A Play-to-Earn NFT Battleground'),\n    description: t(\n      `Galactic Arena is creating a democratized NFT gaming battlefield! It doesn't matter where your NFT comes from, in this NFTverse, you can bring your favorite heroes with you! Make wagers on PvP battles in real time to top the leaderboard and earn prizes that include BNB, BUSD, and GAN!`,\n    ),\n    launchDate: 'November 4th',\n    launchTime: '16:00 UTC',\n    saleAmount: '80,000,000 GAN',\n    raiseAmount: '$400,000',\n    vestingTime: '3 Months',\n    projectSiteUrl: 'http://galacticarena.io/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'GAN',\n    tokenDecimals: 18,\n    releaseBlockNumber: 12364007, // block to start showing contract details\n    vesting: true,\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'nfty',\n    address: '0xc55114204b5fA30b34c360De0E938eB3B3d4c0f6', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: false,\n    name: t('NFTY Network'),\n    subTitle: t('An NFT Gating Ecosystem'),\n    description: t(\n      `NFTY Network is building a decentralized NFT ecosystem built to facilitate Access-to-Earn, powering digital asset ownership rewards. Their goal is to unlock the true potential of NFTs through gated experiences that connect Web2 and Web3 infrastructures.`,\n    ),\n    launchDate: 'September 29th',\n    launchTime: '17:00 UTC',\n    saleAmount: '57,200,000 NFTY',\n    raiseAmount: '$715,000',\n    vestingTime: '3 Months',\n    projectSiteUrl: 'https://nftynetwork.io/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'NFTY',\n    tokenDecimals: 18,\n    releaseBlockNumber: 11342539, // block to start showing contract details\n    vesting: true,\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'dragonary',\n    address: '0x9BC1bC6C4010A2b0384C59b9513d841AA8b5BDF4', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: false,\n    name: t('Dragonary'),\n    subTitle: t('Hatch Your Destiny'),\n    description: t(\n      `CoinaryTV is developing a brand new game called Dragonary for Desktop, iPhone, and Android, where users can play to earn in-game currency. Users will be able to collect, trade, and breed various dragon NFTs and battle against the game or other players to win!`,\n    ),\n    launchDate: 'August 7th',\n    launchTime: '16:00 UTC',\n    saleAmount: '60,000,000 CYT',\n    raiseAmount: '$600,000',\n    vestingTime: '3 Months',\n    projectSiteUrl: 'https://dragonary.com/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'CYT',\n    tokenDecimals: 18,\n    releaseBlockNumber: 9828870, // block to start showing contract details\n    vesting: true,\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'bishares',\n    address: '0x5B31A7124A4Abf8CA9B4090532A669783d8E11eE', // Leave empty for \"Coming Soon!\"\n    isActive: false,\n    isLinear: false,\n    name: t('BiShares'),\n    subTitle: t('Decentralized Index Funds'),\n    description: t(\n      `BiShares is creating BNB Chain’s first index fund for safely diversifying across multiple crypto assets. Use BNB to purchase a wide basket of assets and gain exposure to the broader crypto market and never miss out on a moon again.`,\n    ),\n    launchDate: 'July 9th',\n    launchTime: '03:00 UTC',\n    saleAmount: '128571 BISON',\n    raiseAmount: '$450,000',\n    totalAmountRaised: '$3,332,641',\n    projectSiteUrl: 'https://bishares.finance/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'BISON',\n    tokenDecimals: 18,\n    releaseBlockNumber: 8993971, // block to start showing contract details\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'hifi',\n    // address: '0xF9F1B0945A31FB2Ea429014e58fCA47dAEee4743', // Leave empty for \"Coming Soon!\"\n    address: '0x4D5e1E722e9280d44C564ef3FC14E0B03a50ad47', // IAO Aux contract!\"\n    isActive: false,\n    isLinear: false,\n    name: t('Hifi'),\n    subTitle: t('Decentralized Retro Gaming'),\n    description: t(\n      'HiFi is developing a decentralized retro gaming ecosystem driven by its community. It uses staking and play-to-earn rewards to create a completely new DeFi gaming experience.',\n    ),\n    launchDate: 'June 11',\n    launchTime: '03:00 UTC',\n    saleAmount: '120,000,000 HIFI',\n    raiseAmount: '$600,000',\n    totalAmountRaised: '$24,428,059',\n    projectSiteUrl: 'https://hifigamingsociety.com/',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'HIFI',\n    tokenDecimals: 18,\n    releaseBlockNumber: 8135430, // block to start showing contract details\n    // burnedTxUrl: '',\n  },\n  {\n    id: 'aperocket',\n    address: '0x8AC93DC2F83cEf4032FbC71070Dc5Af06fd9D105',\n    isActive: false,\n    isLinear: false,\n    name: t('ApeRocket'),\n    subTitle: t('Vaulting Platform'),\n    description: t(\n      'ApeRocket is building a suite of products that provide automated yield optimization strategies for BNB Chain leveraging ApeSwap liquidity.',\n    ),\n    launchDate: 'May. 25',\n    launchTime: '03:00 UTC',\n    saleAmount: ' 55,556 SPACE',\n    raiseAmount: '$500,000',\n    totalAmountRaised: '$18,498,896',\n    projectSiteUrl: 'https://aperocket.finance',\n    currency: 'BNB',\n    currencyAddress: '0x0000000000000000000000000000000000000000',\n    offeringCurrency: 'SPACE',\n    tokenDecimals: 18,\n    releaseBlockNumber: 7378325,\n    // burnedTxUrl: 'https://bscscan.com/tx/0x938454e722fdef0a2f34b16f16bed50f6deb692b942331a9a6e2cf96977e116b',\n  },\n  {\n    id: 'bitfresh',\n    address: '0x898aaD14CBebA249D4eEdC9bd22D9B533F0DDf73',\n    isActive: false,\n    isLinear: false,\n    name: t('Bitfresh'),\n    subTitle: t('Community-Driven iGaming Platform'),\n    description: t(\n      'Bitfresh is developing a blockchain-based community driven social iGaming experience that pays dividends to players and token holders. The platform will be filled with reward systems to give players many ways to win and earn over time.',\n    ),\n    launchDate: 'Apr. 24',\n    launchTime: '03:00 UTC',\n    saleAmount: '100,000,000 BFT',\n    raiseAmount: '$1,000,000',\n    totalAmountRaised: '$5,781,873',\n    bananaToBurn: '$500,000',\n    projectSiteUrl: 'https://www.bitfresh.win/public-sale',\n    currency: 'BANANA-BNB LP',\n    currencyAddress: '0xf65c1c0478efde3c19b49ecbe7acc57bb6b1d713',\n    offeringCurrency: 'BFT',\n    tokenDecimals: 18,\n    releaseBlockNumber: 6565331,\n    burnedTxUrl: 'https://bscscan.com/tx/0x938454e722fdef0a2f34b16f16bed50f6deb692b942331a9a6e2cf96977e116b',\n  },\n  {\n    id: 'jediyield',\n    address: '0xCBe256573185d767EfD4a797CB360880728B8fD8',\n    isActive: false,\n    isLinear: false,\n    name: t('Jedi Yield'),\n    subTitle: t('Yield Farm Aggregator'),\n    description: t(\n      'JDIYield is building a smart portal to increase convenience and security for BNB Chain yield farmers. Users will be able to freely stake or unstake their funds regardless of their accessibility to yield farming dapps. Moreover, users can monitor their portfolios, look at token graphs, and harvest their farms all in one place.',\n    ),\n    launchDate: 'Apr. 2',\n    launchTime: '03:00 UTC',\n    saleAmount: '7,000,000 JDI',\n    raiseAmount: '$700,000',\n    totalAmountRaised: '$5,749,119',\n    bananaToBurn: '$350,000',\n    projectSiteUrl: 'https://jdiyield.com/',\n    currency: 'BANANA-BNB LP',\n    currencyAddress: '0xf65c1c0478efde3c19b49ecbe7acc57bb6b1d713',\n    offeringCurrency: 'JDI',\n    tokenDecimals: 18,\n    releaseBlockNumber: 6044304,\n    burnedTxUrl: 'https://bscscan.com/tx/0x5f65d5ce713e115be0646c473688aa052c98896f49d9c0c09ecd13aa8d459a1e',\n  },\n  {\n    id: 'astronaut',\n    address: '0xd7e98ca54e6202fb6237b98c881817ed3e54d2ed',\n    isActive: false,\n    isLinear: false,\n    name: t('Astronaut'),\n    subTitle: t('Hybrid Launchpad'),\n    description: t(\n      'Astronaut is building a decentralized launchpad that enables projects to raise capital via crowdsourced fundraising.',\n    ),\n    launchDate: 'Mar. 15',\n    launchTime: '11PM EDT',\n    saleAmount: '2,000,000 NAUT',\n    raiseAmount: '$400,000',\n    totalAmountRaised: '$5,490,742',\n    bananaToBurn: '$200,000',\n    projectSiteUrl: 'https://astronaut.to/',\n    currency: 'BANANA-BNB LP',\n    currencyAddress: '0xf65c1c0478efde3c19b49ecbe7acc57bb6b1d713',\n    offeringCurrency: 'NAUT',\n    tokenDecimals: 8,\n    releaseBlockNumber: 5685490,\n    burnedTxUrl: 'https://bscscan.com/tx/0xbcfe28f2552d53f3cb49f37d6001aa7708070d3d17f75652c5096b7ecb4ce8fa',\n  },\n]\n\nexport const pastIfos: (t: ContextApi['t']) => Ifo[] = (t) => ifos(t).filter((ifo) => !ifo.isActive)\n\nexport default ifos\n","import { useCallback } from 'react'\nimport { useTreasury } from 'hooks/useContract'\nimport BigNumber from 'bignumber.js'\nimport track from 'utils/track'\n\nexport const buy = async (contract, amount) => {\n  try {\n    return contract.buy(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((tx) => {\n      return tx.hash\n    })\n  } catch (err) {\n    return console.warn(err)\n  }\n}\n\nexport const sell = async (contract, amount) => {\n  try {\n    return contract.sell(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((tx) => {\n      return tx.hash\n    })\n  } catch (err) {\n    return console.warn(err)\n  }\n}\n\nexport const useSellGoldenBanana = () => {\n  const treasuryContract = useTreasury()\n\n  const handleSell = useCallback(\n    async (amount: string) => {\n      try {\n        const txHash = await sell(treasuryContract, amount)\n        track({\n          event: 'gnana',\n          chain: 56,\n          data: {\n            amount,\n            cat: 'sell',\n          },\n        })\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [treasuryContract],\n  )\n\n  return { handleSell }\n}\n\nexport const useBuyGoldenBanana = () => {\n  const treasuryContract = useTreasury()\n\n  const handleBuy = useCallback(\n    async (amount: string) => {\n      try {\n        const txHash = await buy(treasuryContract, amount)\n        track({\n          event: 'gnana',\n          chain: 56,\n          data: {\n            amount,\n            cat: 'buy',\n          },\n        })\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [treasuryContract],\n  )\n\n  return { handleBuy }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserAutonomyPrepay = createAction<{ userAutonomyPrepay: boolean }>('user/updateUserAutonomyPrepay')\nexport const updateUserRecentTransactions = createAction<{ userRecentTransactions: boolean }>(\n  'user/updateRecentTransactions',\n)\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair',\n)\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n\nexport const hidePhishingWarningBanner = createAction<void>('user/hidePhishingWarningBanner')\n\nexport const setIsExchangeChartDisplayed = createAction<boolean>('user/toggleIsExchangeChartDisplayed')\n\nexport const setUnlimitedGnana = createAction<boolean>('user/setUnlimitedGnanaMinting')\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport useActiveWeb3React from './useActiveWeb3React'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onRequiresApproval?: (account) => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveTransaction = ({ onApprove, onRequiresApproval, onSuccess = noop }: ApproveConfirmTransaction) => {\n  const { account } = useActiveWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current(account).then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    handleApprove: async () => {\n      const receipt = await onApprove()\n      if (receipt.status) {\n        let payload: Web3Payload\n        dispatch({ type: 'approve_receipt', payload })\n        onSuccess(state)\n      } else {\n        let error: Web3Payload\n        dispatch({ type: 'approve_error', payload: error })\n      }\n    },\n  }\n}\n\nexport default useApproveTransaction\n","import React from 'react'\nimport { Flex } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{\n  error?: boolean\n  fontSize?: string\n  align?: string\n  removeLiquidity?: boolean\n  disabledText?: boolean\n}>`\n  color: ${({ error, theme }) => (error ? theme.colors.error : theme.colors.text)};\n  opacity: ${({ disabledText }) => disabledText && 0.4};\n  display: inline-block;\n  width: inherit;\n  height: 100%;\n  position: relative;\n  font-weight: 700;\n  minwidth: auto;\n  width: auto;\n  maxwidth: auto;\n  border: none;\n  outline: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: ${({ fontSize }) => fontSize || '16px'};\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  content: '%';\n  padding: 0 0 0 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.text};\n  }\n  ::after {\n    content: '%';\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  removeLiquidity,\n  disabledText,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  removeLiquidity?: boolean\n  error?: boolean\n  fontSize?: string\n  disabledText?: boolean\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const { t } = useTranslation()\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <Flex>\n      <StyledInput\n        {...rest}\n        value={value}\n        onChange={(event) => {\n          // replace commas with periods, because we exclusively uses period as the decimal separator\n          enforcer(event.target.value.replace(/,/g, '.'))\n          enforcer(event.target.value.replace(/%/g, ''))\n        }}\n        // universal input options\n        inputMode=\"decimal\"\n        title={t('Token Amount')}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        // text-specific options\n        type=\"text\"\n        pattern=\"^[0-9]*[.,]?[0-9]*$\"\n        placeholder={placeholder || '0.0'}\n        minLength={1}\n        maxLength={79}\n        spellCheck=\"false\"\n        fontSize=\"22px\"\n        style={{ marginRight: removeLiquidity ? '0px' : '10px' }}\n        removeLiquidity={removeLiquidity}\n        disabledText={disabledText}\n      />\n    </Flex>\n  )\n})\n\nexport default Input\n","import { Currency } from '@apeswapfinance/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '0px'};\n  transform: translate(8px, 0px);\n  margin-left: -8px;\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ zIndex: 2 }} />}\n      {currency1 && (\n        <CurrencyLogo\n          currency={currency1}\n          size={`${size.toString()}px`}\n          style={{ transform: 'translate(-8px, 0px)' }}\n        />\n      )}\n    </Wrapper>\n  )\n}\n","import { Text } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\nimport { buttonHover } from 'views/Dex/styles'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  swapSwitchContainer: {\n    width: '100%',\n    height: '50px',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  swapSwitchButton: {\n    background: 'yellow',\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    justifyContent: 'center',\n    paddingRight: '1px',\n    cursor: 'pointer',\n    transition: 'all .3s linear',\n    '&:active': {\n      transform: 'scale(0.9)',\n    },\n    ':hover': buttonHover,\n  },\n  SwapConfirmDisabledInputContainer: {\n    backgroundColor: 'white3',\n    borderRadius: '10px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    padding: '10px',\n    height: '60px',\n  },\n  outerLogoCircle: {\n    zIndex: 1,\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white2',\n    flexDirection: 'column',\n  },\n  innerLogoCircle: {\n    height: '22.5px',\n    width: '22.5px',\n    borderRadius: '22.5px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n    paddingRight: '.6px',\n  },\n}\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  font-size: 12px;\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.error\n      : severity === 2\n      ? theme.colors.yellow\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n","import { useEffect, useState } from 'react'\nimport useActiveWeb3React from './useActiveWeb3React'\nimport useRefresh from './useRefresh'\n\nexport const baseUrl = 'https://api.apeswap.com/api/v1'\n\nexport const apiBaseUrl = process.env.REACT_APP_API_BASE_URL || 'https://ape-swap-api.herokuapp.com'\nexport const moonPayBaseUrl =\n  process.env.REACT_APP_MOONPAY_BASE_URL ||\n  'https://buy-staging.moonpay.io?apiKey=pk_test_ofxbUiq0BDNvCBwRbO5mHjG7gKBKLWY2&colorCode=%23ffb300'\n\nexport const baseUrlStrapi = 'https://apeswap-strapi.herokuapp.com'\nconst EXCHANGE_SUBGRAPH_URL = 'https://graph.apeswap.finance/subgraphs/name/ape-swap/apeswap-subgraph'\nconst EXCHANGE_POLYGON_SUBGRAPH_URL = 'https://api.thegraph.com/subgraphs/name/apeswapfinance/dex-polygon'\n\nexport const apeswapListUrl =\n  process.env.REACT_APP_LISTS_CONFIG_URL || 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-lists/main/config'\n/* eslint-disable camelcase */\n\nexport interface TradePair {\n  swap_pair_contract: string\n  base_symbol: string\n  quote_symbol: string\n  last_price: number\n  base_volume_24_h: number\n  quote_volume_24_h: number\n}\n\nexport interface ApiStatResponse {\n  update_at: string\n  '24h_total_volume': number\n  total_value_locked: number\n  total_value_locked_all: number\n  trade_pairs: {\n    [key: string]: TradePair\n  }\n}\n\nexport interface SaleHistory {\n  from: string\n  to: string\n  tokenId: number\n  value: string\n  transactionHash: string\n  blockNumber: number\n}\n\nexport interface AuctionHistory {\n  bidder: string\n  amount: number\n  tokenId: number\n  transactionHash: string\n  blockNumber: number\n}\n\nexport const useGetNfaSales = (id: number) => {\n  const [sale, setSale] = useState<SaleHistory[] | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${apiBaseUrl}/nfas/history/${id}`)\n        const responsedata: SaleHistory[] = await response.json()\n\n        setSale(responsedata)\n      } catch (error) {\n        console.warn('Unable to fetch data:', error)\n      }\n    }\n    fetchData()\n  }, [setSale, id])\n  return sale\n}\n\nexport const useGetNfaAuctionHistory = () => {\n  const [history, setHistory] = useState<AuctionHistory[] | null>(null)\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${apiBaseUrl}/nfas/latestBids`)\n        const responsedata: AuctionHistory[] = await response.json()\n        setHistory(responsedata)\n      } catch (error) {\n        console.warn('Unable to fetch data:', error)\n      }\n    }\n    fetchData()\n  }, [setHistory, fastRefresh])\n  return history\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<ApiStatResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/stat`)\n        const responsedata: ApiStatResponse = await response.json()\n\n        setData(responsedata)\n      } catch (error) {\n        console.warn('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n\nconst RESERVES_QUERY = (address) => {\n  return `\n  {\n    pair(id: \"${address.toLowerCase()}\") {\n      id\n      token0 {\n        id\n        symbol\n        derivedETH\n      }\n      token1 {\n        id\n        symbol\n        derivedETH\n      }\n      token0Price\n      token1Price\n      reserve0\n      reserve1\n      totalSupply\n      reserveETH\n    }\n  }`\n}\n\nconst LIQUIDITY_QUERY = `{\n      uniswapFactories(first: 1) {\n        id\n        totalVolumeUSD\n        totalLiquidityUSD\n        totalLiquidityETH\n      }\n    }`\n\n// eslint-disable-next-line consistent-return\nexport const fetchReserveData = async (pairAddress) => {\n  try {\n    const query = RESERVES_QUERY(pairAddress)\n    const response = await fetch(EXCHANGE_SUBGRAPH_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query }),\n    })\n    const responsedata: any = await response.json()\n\n    return responsedata?.data?.pair\n  } catch (error) {\n    console.warn('Unable to fetch data:', error)\n  }\n}\n\n// eslint-disable-next-line consistent-return\nexport const fetchLiquidityData = async () => {\n  try {\n    const query = LIQUIDITY_QUERY\n    const responses = await Promise.all([\n      fetch(EXCHANGE_SUBGRAPH_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query }),\n      }),\n      fetch(EXCHANGE_POLYGON_SUBGRAPH_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query }),\n      }),\n    ])\n    const { data: bscData }: any = await responses[0].json()\n    const { data: polyData }: any = await responses[1].json()\n\n    const totalLiquidity =\n      parseFloat(bscData.uniswapFactories[0].totalLiquidityUSD) +\n      parseFloat(polyData.uniswapFactories[0].totalLiquidityUSD)\n    return totalLiquidity\n  } catch (error) {\n    console.warn('Unable to fetch data:', error)\n  }\n}\n\nexport const useLiquidityData = () => {\n  const [data, setData] = useState<any | number>(null)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchLiquidityData()\n        setData(response)\n      } catch (error) {\n        console.warn('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData, slowRefresh])\n\n  return data\n}\n\n// TODO: Update with production currencies once URL is updated\nconst defaultCurrencies = {\n  56: 'bnb_bsc',\n  1: 'eth',\n  137: 'matic_polygon',\n  14: 'flr',\n  16: 'cflr',\n  19: 'sgb',\n}\n\nexport const useMoonPayUrl = () => {\n  const { account, chainId } = useActiveWeb3React()\n  const defaultCurrency = defaultCurrencies[chainId] || defaultCurrencies[56]\n  const baseMoonPayUrl = `${moonPayBaseUrl}&defaultCurrencyCode=${defaultCurrency}`\n  const [url, setUrl] = useState<string>(baseMoonPayUrl)\n\n  useEffect(() => {\n    const fetchUrl = async () => {\n      try {\n        const response = await fetch(\n          `${apiBaseUrl}/user/sign/${account}?${new URLSearchParams({\n            url: baseMoonPayUrl,\n          })}`,\n        )\n        if (response.ok) {\n          const text = await response.text()\n          setUrl(text)\n        } else {\n          console.warn('Unable to load signed moonpay url data:', response.statusText)\n        }\n      } catch (error) {\n        console.warn('Unable to load signed moonpay url data:', error)\n      }\n    }\n\n    if (account) fetchUrl()\n  }, [account, baseMoonPayUrl])\n\n  return url\n}\n\nconst PAIR_CONFIGS = {\n  'BANANA/BUSD': {\n    address: '0x7bd46f6da97312ac2dbd1749f82e202764c0b914',\n    token: 'BANANA',\n    base: 'BUSD',\n  },\n  'BANANA/BNB': {\n    address: '0xF65C1C0478eFDe3c19b49EcBE7ACc57BB6B1D713',\n    token: 'BANANA',\n    base: 'WBNB',\n  },\n}\n\nexport const useChartData = (resolution = '60', pair = 'BANANA/BUSD') => {\n  const [data, setData] = useState<any | null>(null)\n  const currentPair = PAIR_CONFIGS[pair]\n  const to = Math.floor(Date.now() / 1000)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        /* const response = await fetch(\n          `${priceBaseUrl}&address=${currentPair.address}&token=${currentPair.token}&base=${currentPair.base}&from=0&to=${to}&resolution=${resolution}`,\n        )\n        const responsedata = await response.json()\n        const chartData = []\n        for (let i = 0; i < responsedata.c.length; i++) {\n          const candle = {\n            x: new Date(responsedata.t[i] * 1000),\n            y: [responsedata.o[i], responsedata.h[i], responsedata.l[i], responsedata.c[i]],\n          }\n          chartData.push(candle)\n        }\n        const volume = {\n          data: responsedata.v,\n          start: responsedata.t[0] * 1000,\n          end: responsedata.t[responsedata.t.length - 1] * 1000,\n        } */\n        setData(null)\n      } catch (error) {\n        console.warn('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData, resolution, currentPair, to])\n\n  return data\n}\n\nexport const getPromosHome = async () => {\n  const url = `${baseUrlStrapi}/homepages?_sort=order:ASC`\n  const resp = await fetch(url)\n  const data = await resp.json()\n\n  const promos = data.map((promo) => {\n    return {\n      header: promo.title,\n      text: promo.source,\n      text2: promo.source2,\n      link: promo.link_description,\n      pageLink: promo.link,\n      image: promo.image,\n    }\n  })\n\n  return promos\n}\n\nexport const getBurningGames = async () => {\n  const url = `${baseUrlStrapi}/burning-games?_sort=order:asc`\n  const resp = await fetch(url)\n  const data = await resp.json()\n\n  return data\n}\n\nexport const getNewsHome = async () => {\n  const url = `${baseUrlStrapi}/home-news?_sort=published_at:desc`\n  const resp = await fetch(url)\n  const data = await resp.json()\n  const news = data.map((curNews) => {\n    return {\n      id: curNews.id,\n      title: curNews.title,\n      description: curNews.description,\n      image: curNews.image,\n      link: curNews.link,\n    }\n  })\n\n  return news\n}\n\nexport const getFarmsHome = async () => {\n  const url = `${baseUrlStrapi}/home-farms`\n  const resp = await fetch(url)\n  const data = await resp.json()\n  const farms = data.map((farm) => {\n    return {\n      pid1: farm.pid1,\n      pid2: farm.pid2,\n    }\n  })\n\n  return farms\n}\n\nexport const getPoolsHome = async () => {\n  const url = `${baseUrlStrapi}/home-pools`\n  const resp = await fetch(url)\n  const data = await resp.json()\n  const pools = data.map((pool) => {\n    return {\n      sousId1: pool.sousId1,\n      sousId2: pool.sousId2,\n    }\n  })\n  return pools\n}\n\nexport const getHeadersHome = async () => {\n  const url = `${baseUrlStrapi}/home-banners?_sort=published_at:desc`\n  const resp = await fetch(url)\n  const data = await resp.json()\n  const headers = data.map((header) => {\n    return {\n      desktop: header.desktop,\n      tablet: header.tablet,\n      mobile: header.mobile,\n      link: header.link,\n      chain: header.chain,\n    }\n  })\n\n  return headers\n}\n\nexport const getSwapBanners = async () => {\n  if (window.sessionStorage.getItem('banners')) {\n    return JSON.parse(window.sessionStorage.getItem('banners'))\n  }\n  const url = `${baseUrlStrapi}/swapbanners`\n  const resp = await fetch(url)\n  const data = await resp.json()\n  const banners = data.map((banner) => {\n    return {\n      desktop: banner.desktop,\n      mobile: banner.mobile,\n      link: banner.link,\n      param: banner.param,\n    }\n  })\n  window.sessionStorage.setItem('banners', JSON.stringify(banners))\n\n  return banners\n}\n","/**\n * Rounds a number to precision amount of signifant numbers\n * @param n the number\n * @param precision how many significant numbers to show\n * @returns @number\n */\nexport const getFirstNonZeroDigits = (n: number, precision = 3) => {\n  return n.toFixed(precision - 1 - Math.floor(Math.log(n) / Math.log(10)))\n}\n","import React from 'react'\nimport { BillsM1, BillsM2, BillsM3 } from '@apeswapfinance/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { Content, RightText, InnerTextButton, Surround, RightHeader, RightContent } from './styles'\n\nconst BillsDiagram: React.FC = () => {\n  const theme = useTheme()\n  const { t } = useTranslation()\n\n  return (\n    <Surround>\n      <Content>\n        <BillsM1 width={50} bgColor={theme.theme.colors.white4} color={theme.theme.colors.text} mr={15} />\n        <RightContent>\n          <RightHeader>{t('Get LP')}</RightHeader>\n          <RightText>\n            <InnerTextButton href=\"https://apeswap.finance/add\" target=\"_blank\" rel=\"noopener noreferrer\">\n              {t('Click here')}\n            </InnerTextButton>{' '}\n            {t(\n              'to go to the liquidity provider page. Select the desired bill tokens (i.e. BANANA & BNB) and add liquidity.',\n            )}\n          </RightText>\n        </RightContent>\n      </Content>\n\n      <Content>\n        <BillsM2 width={50} bgColor={theme.theme.colors.white4} color={theme.theme.colors.text} mr={15} />\n        <RightContent>\n          <RightHeader>{t('Select and Buy')}</RightHeader>\n          <RightText>{t('Select the Bill of your preference, and click the buy button.')}</RightText>\n        </RightContent>\n      </Content>\n\n      <Content>\n        <BillsM3 width={50} bgColor={theme.theme.colors.white4} color={theme.theme.colors.text} mr={15} />\n        <RightContent>\n          <RightHeader>{t('Receive and Claim')}</RightHeader>\n          <RightText>{t('Receive your NFT, claim vested tokens or trade the NFT.')}</RightText>\n        </RightContent>\n      </Content>\n    </Surround>\n  )\n}\n\nexport default BillsDiagram\n","import { Pair, SmartRouter, Token } from '@apeswapfinance/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserRecentTransactions,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n  updateUserAutonomyPrepay,\n  setUnlimitedGnana,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function usePhishingBannerManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const showPhishingWarningBanner = useSelector<AppState, AppState['user']['showPhishingWarningBanner']>(\n    (state) => state.user.showPhishingWarningBanner,\n  )\n\n  const hideBanner = useCallback(() => {\n    dispatch(hidePhishingWarningBanner())\n  }, [dispatch])\n\n  return [showPhishingWarningBanner, hideBanner]\n}\n\n// Get user preference for exchange price chart\n// For mobile layout chart is hidden by default\nexport function useExchangeChartManager(isMobile: boolean): [boolean, (isDisplayed: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isChartDisplayed = useSelector<AppState, AppState['user']['isExchangeChartDisplayed']>(\n    (state) => state.user.isExchangeChartDisplayed,\n  )\n\n  const setUserChartPreference = useCallback(\n    (isDisplayed: boolean) => {\n      dispatch(setIsExchangeChartDisplayed(isDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isMobile ? false : isChartDisplayed, setUserChartPreference]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserAutonomyPrepay(): [boolean, (newAutonomyPrepay: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const autonomyPrepay = useSelector<AppState, AppState['user']['userAutonomyPrepay']>(\n    (state) => state.user.userAutonomyPrepay,\n  )\n\n  const setAutonomyPrepay = useCallback(\n    (newAutonomyPrepay: boolean) => {\n      dispatch(updateUserAutonomyPrepay({ userAutonomyPrepay: newAutonomyPrepay }))\n    },\n    [dispatch],\n  )\n\n  return [autonomyPrepay, setAutonomyPrepay]\n}\n\nexport function useUserRecentTransactions(): [boolean, (recentTransaction: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const recentTransactions = useSelector<AppState, AppState['user']['userRecentTransactions']>(\n    (state) => state.user.userRecentTransactions,\n  )\n\n  const setRecentTransactions = useCallback(\n    (newResentTransactions: boolean) => {\n      dispatch(updateUserRecentTransactions({ userRecentTransactions: newResentTransactions }))\n    },\n    [dispatch],\n  )\n\n  return [recentTransactions, setRecentTransactions]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n * @param smartRouter the router to be used\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token], smartRouter?: SmartRouter): Token {\n  return new Token(\n    tokenA.chainId,\n    Pair.getAddress(tokenA, tokenB, smartRouter || SmartRouter.APE),\n    18,\n    'Ape-LP',\n    'Apeswap LPs',\n  )\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n\nexport function useUserUnlimitedGnana(): [boolean, (allowUnlimitedGnana: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const unlimitedGnana = useSelector<AppState, AppState['user']['unlimitedGnana']>((state) => state.user.unlimitedGnana)\n\n  const setUnlimitedGnanaMinting = useCallback(\n    (allowUnlimitedGnana: boolean) => {\n      dispatch(setUnlimitedGnana(allowUnlimitedGnana))\n    },\n    [dispatch],\n  )\n\n  return [unlimitedGnana, setUnlimitedGnanaMinting]\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n`\n\nexport default Container\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","// Network chain ids\n\nimport { SmartRouter } from '@apeswapfinance/sdk'\nimport { ChainId } from '../../components/Menu/constants';\n\nexport const CHAIN_ID = {\n  BSC: 56,\n  BSC_TESTNET: 97,\n  MATIC: 137,\n  MATIC_TESTNET: 80001,\n  ETH: 1,\n  FLARE: 14,\n  COSTON: 16,\n  SONGBIRD: 19,\n}\n\n// Network labels\nexport const NETWORK_LABEL = {\n  [ChainId.BSC]: 'BSC',\n  [ChainId.BSC_TESTNET]: 'BSC Testnet',\n  [ChainId.MATIC]: 'Polygon',\n  [ChainId.MATIC_TESTNET]: 'Polygon Testnet',\n  [ChainId.MAINNET]: 'Ethereum',\n  [ChainId.FLARE]: 'Flare',\n  [ChainId.COSTON]: 'Coston',\n  [ChainId.SONGBIRD]: 'Songbird',\n}\n\nexport const NETWORK_INFO_LINK = {\n  [ChainId.BSC]: 'https://info.apeswap.finance',\n  [ChainId.BSC_TESTNET]: 'https://info.apeswap.finance',\n  [ChainId.MATIC]: 'https://polygon.info.apeswap.finance/',\n  [ChainId.MATIC_TESTNET]: 'https://polygon.info.apeswap.finance/',\n  [ChainId.MAINNET]: 'https://ethereum.info.apeswap.finance',\n  [ChainId.FLARE]: 'https://flare.info.flareswap.io',\n  [ChainId.COSTON]: 'https://coston.info.flareswap.io',\n  [ChainId.SONGBIRD]: 'https://songbird.info.flareswap.io',\n}\n\n// Network RPC nodes\nexport const NETWORK_RPC = {\n  [ChainId.BSC]: [\n    'https://bsc-dataseed1.ninicoin.io',\n    'https://bsc-dataseed.binance.org/',\n    'https://bsc-dataseed1.defibit.io',\n  ],\n  [ChainId.BSC_TESTNET]: ['https://data-seed-prebsc-2-s3.binance.org:8545/'],\n  [ChainId.MATIC]: ['https://polygon-rpc.com/'],\n  [ChainId.MATIC_TESTNET]: ['https://matic-mumbai.chainstacklabs.com'],\n  [ChainId.MAINNET]: ['https://eth-mainnet.nodereal.io/v1/43f9100965104de49b580d1fa1ab28c0'],\n  [ChainId.FLARE]: ['https://flare-api.flare.network/ext/C/rpc'],\n  [ChainId.COSTON]: ['https://coston-api.flare.network/ext/bc/C/rpc'],\n  [ChainId.SONGBIRD]: ['https://songbird.towolabs.com/rpc'],\n}\n\n// Network block explorers\nexport const BLOCK_EXPLORER = {\n  [ChainId.BSC]: 'https://bscscan.com',\n  [ChainId.BSC_TESTNET]: 'https://testnet.bscscan.com/',\n  [ChainId.MATIC]: 'https://polygonscan.com',\n  [ChainId.MATIC_TESTNET]: 'https://mumbai.polygonscan.com/',\n  [ChainId.MAINNET]: 'https://etherscan.io/',\n  [ChainId.FLARE]: 'https://flare-explorer.flare.network/',\n  [ChainId.COSTON]: 'https://coston-explorer.flare.network/',\n  [ChainId.SONGBIRD]: 'https://songbird-explorer.flare.network/',\n}\n\nexport const CHAIN_PARAMS = {\n  [ChainId.BSC]: {\n    chainId: '0x38',\n    chainName: 'Binance Smart Chain',\n    nativeCurrency: {\n      name: 'bnb',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.BSC],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.BSC]],\n  },\n  [ChainId.BSC_TESTNET]: {\n    chainId: '0x61',\n    chainName: 'Binance Smart Chain Testnet',\n    nativeCurrency: {\n      name: 'bnb',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.BSC_TESTNET],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.BSC_TESTNET]],\n  },\n  [ChainId.MATIC]: {\n    chainId: '0x89',\n    chainName: 'Matic',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.MATIC],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.MATIC]],\n  },\n  [ChainId.MATIC_TESTNET]: {\n    chainId: '0x89',\n    chainName: 'Matic',\n    nativeCurrency: {\n      name: 'Matic',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.MATIC_TESTNET],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.MATIC_TESTNET]],\n  },\n  [ChainId.MAINNET]: {\n    chainId: '0x1',\n    chainName: 'Ethereum',\n    nativeCurrency: {\n      name: 'Ethereum',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.MAINNET],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.MAINNET]],\n  },\n  [ChainId.FLARE]: {\n    chainId: '0x0E',\n    chainName: 'Flare',\n    nativeCurrency: {\n      name: 'Flare',\n      symbol: 'FLR',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.FLARE],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.FLARE]],\n  },\n  [ChainId.COSTON]: {\n    chainId: '0x10',\n    chainName: 'Coston',\n    nativeCurrency: {\n      name: 'Coston',\n      symbol: 'CFLR',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.COSTON],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.COSTON]],\n  },\n  [ChainId.SONGBIRD]: {\n    chainId: '0x13',\n    chainName: 'Songbird',\n    nativeCurrency: {\n      name: 'Songbird',\n      symbol: 'SGB',\n      decimals: 18,\n    },\n    rpcUrls: NETWORK_RPC[ChainId.SONGBIRD],\n    blockExplorerUrls: [BLOCK_EXPLORER[ChainId.SONGBIRD]],\n  },\n}\n\n// Ape price impact cutoff\nexport const APE_PRICE_IMPACT = 15\n\n// This sets the priority of when a router is used\n// After APE router should be in order of highest liquidity\nexport const PRIORITY_SMART_ROUTERS = {\n  [ChainId.MAINNET]: [SmartRouter.APE, SmartRouter.SUSHISWAP, SmartRouter.UNISWAP],\n  [ChainId.BSC]: [SmartRouter.APE, SmartRouter.PANCAKE, SmartRouter.BISWAP],\n  [ChainId.MATIC]: [SmartRouter.APE, SmartRouter.QUICKSWAP],\n  [ChainId.BSC_TESTNET]: [SmartRouter.APE],\n  // [ChainId.FLARE]: [SmartRouter.APE, SmartRouter.QUICKSWAP],\n  // [ChainId.COSTON]: [SmartRouter.APE, SmartRouter.QUICKSWAP],\n  // [ChainId.SONGBIRD]: [SmartRouter.APE, SmartRouter.QUICKSWAP],\n}\n\n// Wallchain Configs\n// If a router is in the priority list for a certain chain it must be added to the wallchain params\nexport const WALLCHAIN_PARAMS = {\n  [ChainId.BSC]: {\n    [SmartRouter.APE]: {\n      apiUrl: 'https://bsc.wallchains.com/upgrade_txn/',\n      apiKey: '85c578a5-ecb0-445c-8a95-4c0eba2f33b6',\n    },\n    [SmartRouter.PANCAKE]: {\n      apiUrl: 'https://bsc.wallchains.com/upgrade_txn/',\n      apiKey: 'c5f0eb9a-180b-4787-a5c0-db68292f6926',\n    },\n    [SmartRouter.BISWAP]: {\n      apiUrl: 'https://bsc.wallchains.com/upgrade_txn/',\n      apiKey: '1cdb6a88-fc95-4831-906a-9ed0e16c9c52',\n    },\n  },\n  [ChainId.BSC_TESTNET]: {\n    [SmartRouter.APE]: {\n      apiUrl: 'https://bsc.wallchains.com/upgrade_txn/',\n      apiKey: '85c578a5-ecb0-445c-8a95-4c0eba2f33b6',\n    },\n  },\n  [ChainId.MATIC]: {\n    [SmartRouter.APE]: {\n      apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n      apiKey: '5cf2b177-5fa5-477a-8cea-f2b54859af2a',\n    },\n    [SmartRouter.QUICKSWAP]: {\n      apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n      apiKey: '31f565ed-7bc1-44f4-8ca7-331897d65132',\n    },\n  },\n  // [ChainId.FLARE]: {\n  //   [SmartRouter.APE]: {\n  //     apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n  //     apiKey: '5cf2b177-5fa5-477a-8cea-f2b54859af2a',\n  //   },\n  //   [SmartRouter.QUICKSWAP]: {\n  //     apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n  //     apiKey: '31f565ed-7bc1-44f4-8ca7-331897d65132',\n  //   },\n  // },\n  // [ChainId.COSTON]: {\n  //   [SmartRouter.APE]: {\n  //     apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n  //     apiKey: '5cf2b177-5fa5-477a-8cea-f2b54859af2a',\n  //   },\n  //   [SmartRouter.QUICKSWAP]: {\n  //     apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n  //     apiKey: '31f565ed-7bc1-44f4-8ca7-331897d65132',\n  //   },\n  // },\n  // [ChainId.SONGBIRD]: {\n  //   [SmartRouter.APE]: {\n  //     apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n  //     apiKey: '5cf2b177-5fa5-477a-8cea-f2b54859af2a',\n  //   },\n  //   [SmartRouter.QUICKSWAP]: {\n  //     apiUrl: 'https://matic.wallchains.com/upgrade_txn/',\n  //     apiKey: '31f565ed-7bc1-44f4-8ca7-331897d65132',\n  //   },\n  // },\n  [ChainId.MAINNET]: {\n    [SmartRouter.APE]: {\n      apiUrl: 'https://eth.wallchains.com/upgrade_txn/',\n      apiKey: '498288e3-4c04-40e9-95a7-3ceb3f75096c',\n    },\n    [SmartRouter.UNISWAP]: {\n      apiUrl: 'https://eth.wallchains.com/upgrade_txn/',\n      apiKey: 'ff1e792c-b199-4393-8385-40e533e3687a',\n    },\n    [SmartRouter.SUSHISWAP]: {\n      apiUrl: 'https://eth.wallchains.com/upgrade_txn/',\n      apiKey: 'e04868d1-c99d-4bb3-9af9-fb2336310eaa',\n    },\n  },\n}\n\n// To display correct prices for each liquidity pool when need to swap the contract out\n// Routers in prioirty list must be in here\nexport const SMART_PRICE_GETTERS = {\n  [ChainId.BSC]: {\n    [SmartRouter.APE]: '0x5e545322b83626c745FE46144a15C00C94cBD803',\n    [SmartRouter.PANCAKE]: '0xF724471B00B5fACBA78D195bD241d090350a04Bd',\n    [SmartRouter.BISWAP]: '0x1828e426fF3ec9E037cff888CB13f84d5e95F4eF',\n  },\n  [ChainId.BSC_TESTNET]: {\n    [SmartRouter.APE]: '0xd722f9A2950E35Ab3EeD1d013c214671750A638B',\n  },\n  [ChainId.MATIC]: {\n    [SmartRouter.APE]: '0x05D6C73D7de6E02B3f57677f849843c03320681c',\n    [SmartRouter.QUICKSWAP]: '0xEe57c38d678CaE0cE16168189dB47238d8fe6553',\n  },\n  [ChainId.MAINNET]: {\n    [SmartRouter.APE]: '0x5fbFd1955EeA2F62F1AfD6d6E92223Ae859F7887',\n    [SmartRouter.UNISWAP]: '0x0187D959A28B0D3B490c2D898fA1CcD054cCC3cd',\n    [SmartRouter.SUSHISWAP]: '0x51FA9ed2908C76f51fDDA7fa0F6a1d57557668b2',\n  },\n  // [ChainId.FLARE]: {\n  //   [SmartRouter.APE]: '0x05D6C73D7de6E02B3f57677f849843c03320681c',\n  //   [SmartRouter.QUICKSWAP]: '0xEe57c38d678CaE0cE16168189dB47238d8fe6553',\n  // },\n  // [ChainId.COSTON]: {\n  //   [SmartRouter.APE]: '0x05D6C73D7de6E02B3f57677f849843c03320681c',\n  //   [SmartRouter.QUICKSWAP]: '0xEe57c38d678CaE0cE16168189dB47238d8fe6553',\n  // },\n  // [ChainId.SONGBIRD]: {\n  //   [SmartRouter.APE]: '0x05D6C73D7de6E02B3f57677f849843c03320681c',\n  //   [SmartRouter.QUICKSWAP]: '0xEe57c38d678CaE0cE16168189dB47238d8fe6553',\n  // },\n}\n\nexport const SMART_LP_FEES = {\n  [ChainId.BSC]: {\n    [SmartRouter.APE]: 20,\n    [SmartRouter.PANCAKE]: 25,\n    [SmartRouter.BISWAP]: 10,\n  },\n  [ChainId.BSC_TESTNET]: {\n    [SmartRouter.APE]: 20,\n  },\n  [ChainId.MATIC]: {\n    [SmartRouter.APE]: 20,\n    [SmartRouter.QUICKSWAP]: 30,\n  },\n  // [ChainId.FLARE]: {\n  //   [SmartRouter.APE]: 20,\n  //   [SmartRouter.QUICKSWAP]: 30,\n  // },\n  // [ChainId.COSTON]: {\n  //   [SmartRouter.APE]: 20,\n  //   [SmartRouter.QUICKSWAP]: 30,\n  // },\n  // [ChainId.SONGBIRD]: {\n  //   [SmartRouter.APE]: 20,\n  //   [SmartRouter.QUICKSWAP]: 30,\n  // },\n  [ChainId.MAINNET]: {\n    [SmartRouter.APE]: 20,\n    [SmartRouter.UNISWAP]: 30,\n    [SmartRouter.SUSHISWAP]: 25,\n  },\n}\n","import React from 'react'\nimport { Token } from '@apeswapfinance/sdk'\nimport { Modal, ModalProps } from '@ape.swap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props extends ModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import { useWeb3React } from '@web3-react/core'\nimport { useEffect, useReducer } from 'react'\nimport { useNonFungibleApes } from './useContract'\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n  const nonFungibleApesContract = useNonFungibleApes()\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await (await nonFungibleApesContract.balanceOf(account)).toNumber()\n\n        if (balanceOf > 0) {\n          let nfts: NftMap = {}\n\n          const tokenIdPromises = []\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, dispatch, nonFungibleApesContract])\n\n  return state\n}\n\nexport default useGetWalletNfts\n","import React, { createContext, useEffect, useRef, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMulticallAddress } from 'hooks/useAddress'\nimport useGetWalletNfts, { NftMap } from 'hooks/useGetWalletNfts'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { useNonFungibleApes } from 'hooks/useContract'\n\ntype State = {\n  isInitialized: boolean\n  hasClaimed: boolean\n  endBlockNumber: number\n  startBlockNumber: number\n  balanceOf: number\n}\n\ntype Context = {\n  nfts: NftMap\n  canBurnNft: boolean\n  getTokenIds: (bunnyId: number) => number[]\n  reInitialize: () => void\n} & State\n\nexport const NftProviderContext = createContext<Context | null>(null)\n\nconst NftProvider: React.FC = ({ children }) => {\n  const isMounted = useRef(true)\n  const [state, setState] = useState<State>({\n    isInitialized: false,\n    hasClaimed: false,\n    startBlockNumber: 0,\n    endBlockNumber: 0,\n    balanceOf: 0,\n  })\n  const { account } = useWeb3React()\n  const currentBlock = useBlockNumber()\n  const { nfts: nftList } = useGetWalletNfts()\n  const { isInitialized } = state\n  const multicallAddress = useMulticallAddress()\n  const nonFungibleApesContract = useNonFungibleApes()\n\n  // Static data\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n        }))\n      } catch (error) {\n        console.warn('an error occured', error)\n      }\n    }\n\n    fetchContractData()\n  }, [isInitialized, setState, multicallAddress])\n\n  // Data from the contract that needs an account\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const balanceOf = await nonFungibleApesContract.balanceOf(account)\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          balanceOf: balanceOf.toNumber(),\n        }))\n      } catch (error) {\n        console.warn('an error occured', error)\n      }\n    }\n\n    if (account) {\n      fetchContractData()\n    }\n  }, [isInitialized, account, setState, multicallAddress, nonFungibleApesContract])\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [isMounted])\n\n  const canBurnNft = currentBlock <= state.endBlockNumber\n  const getTokenIds = (bunnyId: number) => nftList[bunnyId]?.tokenIds\n\n  /**\n   * Allows consumers to re-fetch all data from the contract. Triggers the effects.\n   * For example when a transaction has been completed\n   */\n  const reInitialize = () => {\n    // Only attempt to re-initialize if the component is still mounted\n    // Transactions can take awhile so it is likely some users will navigate to another page\n    // before the transaction is finished\n    if (isMounted.current) {\n      setState((prevState) => ({ ...prevState, isInitialized: false }))\n    }\n  }\n\n  return (\n    <NftProviderContext.Provider value={{ ...state, nfts: nftList, canBurnNft, getTokenIds, reInitialize }}>\n      {children}\n    </NftProviderContext.Provider>\n  )\n}\n\nexport default NftProvider\n","import { apiBaseUrl } from 'hooks/api'\nimport axiosRetry from 'axios-retry'\nimport axios from 'axios'\n\nconst getTreasuryBreakdown = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/treasury`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getTreasuryAssetOverview = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/treasury/asset-overview`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getTreasuryHistory = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/treasury/history`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getOverviewTvl = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/overview/tvl`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getOverviewVolume = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/overview/volume`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getOverviewProtocolMetrics = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/overview/protocol-metrics`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getOverviewMcapTvlRatio = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/overview/mcap-tvl-ratio`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getOverviewBananaDistribution = async () => {\n  try {\n    axiosRetry(axios, {\n      retries: 5,\n      retryCondition: () => true,\n    })\n    const response = await axios.get(`${apiBaseUrl}/dashboard/overview/banana-distribution`)\n    const data = await response.data\n    if (data.statusCode === 500) {\n      return null\n    }\n    return data\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getTreasuryBreakdown\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { ProtocolDashboardState } from './types'\nimport getTreasuryBreakdown, {\n  getOverviewBananaDistribution,\n  getOverviewMcapTvlRatio,\n  getOverviewProtocolMetrics,\n  getOverviewTvl,\n  getOverviewVolume,\n  getTreasuryAssetOverview,\n  getTreasuryHistory,\n} from './api'\n\nconst initialState: ProtocolDashboardState = {\n  overviewTvl: null,\n  overviewVolume: [],\n  overviewProtocolMetrics: [],\n  overviewBananaDistribution: [],\n  overviewMcapTvlRatio: [],\n  treasuryAssetOverview: [],\n  treasuryHistory: [],\n  treasuryBreakdown: null,\n}\n\nexport const statsSlice = createSlice({\n  name: 'protocol-dashboard',\n  initialState,\n  reducers: {\n    setOverviewTvl: (state, action) => {\n      state.overviewTvl = action.payload\n    },\n    setOverviewVolume: (state, action) => {\n      state.overviewVolume = action.payload\n    },\n    setOverviewProtocolMetrics: (state, action) => {\n      state.overviewProtocolMetrics = action.payload\n    },\n    setOverviewBananaDistribution: (state, action) => {\n      state.overviewBananaDistribution = action.payload\n    },\n    setOverviewMcapTvlRatio: (state, action) => {\n      state.overviewMcapTvlRatio = action.payload\n    },\n    setTreasuryAssetOverview: (state, action) => {\n      state.treasuryAssetOverview = action.payload\n    },\n    setTreasuryHistory: (state, action) => {\n      state.treasuryHistory = action.payload\n    },\n    setTreasuryBreakdown: (state, action) => {\n      state.treasuryBreakdown = action.payload\n    },\n  },\n})\n\n// Actions\nexport const {\n  setOverviewTvl,\n  setOverviewVolume,\n  setOverviewProtocolMetrics,\n  setOverviewBananaDistribution,\n  setOverviewMcapTvlRatio,\n  setTreasuryAssetOverview,\n  setTreasuryHistory,\n  setTreasuryBreakdown,\n} = statsSlice.actions\n\n// Thunks\n\nexport const fetchOverviewTvl = () => async (dispatch) => {\n  const data = await getOverviewTvl()\n  dispatch(setOverviewTvl(data))\n}\n\nexport const fetchOverviewVolume = () => async (dispatch) => {\n  const data = await getOverviewVolume()\n  dispatch(setOverviewVolume(data))\n}\n\nexport const fetchOverviewProtocolMetrics = () => async (dispatch) => {\n  const data = await getOverviewProtocolMetrics()\n  dispatch(setOverviewProtocolMetrics(data))\n}\n\nexport const fetchOverviewBananaDistribution = () => async (dispatch) => {\n  const data = await getOverviewBananaDistribution()\n  dispatch(setOverviewBananaDistribution(data))\n}\n\nexport const fetchOverviewMcapTvlRatio = () => async (dispatch) => {\n  const data = await getOverviewMcapTvlRatio()\n  dispatch(setOverviewMcapTvlRatio(data))\n}\n\nexport const fetchTreasuryAssetOverview = () => async (dispatch) => {\n  const data = await getTreasuryAssetOverview()\n  dispatch(setTreasuryAssetOverview(data))\n}\n\nexport const fetchTreasuryHistory = () => async (dispatch) => {\n  const data = await getTreasuryHistory()\n  dispatch(setTreasuryHistory(data))\n}\n\nexport const fetchTreasuryBreakdown = () => async (dispatch) => {\n  const data = await getTreasuryBreakdown()\n  dispatch(setTreasuryBreakdown(data))\n}\n\nexport default statsSlice.reducer\n","import { ChainId } from '@apeswapfinance/sdk'\n\nconst contracts = {\n  banana: {\n    [ChainId.BSC_TESTNET]: '0x4Fb99590cA95fc3255D9fA66a1cA46c43C34b09a',\n    [ChainId.BSC]: '0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95',\n    [ChainId.MATIC]: '0x5d47baba0d66083c52009271faf3f50dcc01023c',\n    [ChainId.MAINNET]: '0x92df60c51c710a1b1c20e42d85e221f3a1bfc7f2',\n  },\n  syrup: {\n    [ChainId.BSC_TESTNET]: '0xAf1B22cBDbB502B2089885bcd230255f8B80243b',\n    [ChainId.BSC]: '0x86Ef5e73EDB2Fea111909Fe35aFcC564572AcC06',\n  },\n  masterChef: {\n    [ChainId.BSC_TESTNET]: '0xbbC5e1cD3BA8ED639b00927115e5f0e0040aA613',\n    [ChainId.BSC]: '0x5c8D727b265DBAfaba67E050f2f739cAeEB4A6F9',\n  },\n  sousChef: {\n    [ChainId.BSC_TESTNET]: '0xAf1B22cBDbB502B2089885bcd230255f8B80243b',\n    [ChainId.BSC]: '0x54aff400858Dcac39797a81894D9920f16972D1D',\n  },\n  nativeWrapped: {\n    [ChainId.BSC_TESTNET]: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    [ChainId.MATIC]: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n    [ChainId.MAINNET]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  },\n  lottery: {\n    [ChainId.BSC_TESTNET]: '0xe42Ff4758C37ccC3A54004b176384477bbBe70D6',\n    [ChainId.BSC]: '0x451bCf562A4d747da3455bBAFACe988d56dA6D83',\n  },\n  lotteryNFT: {\n    [ChainId.BSC_TESTNET]: '0x02A8F0b67aB46C5D8d7D79396f237E593628E261',\n    [ChainId.BSC]: '0x42020f11483279353ae4cEb1c6aab6aE98ca7f50',\n  },\n  mulltiCall: {\n    [ChainId.BSC]: '0x38ce767d81de3940CFa5020B55af1A400ED4F657',\n    [ChainId.BSC_TESTNET]: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n    [ChainId.MATIC]: '0x95028E5B8a734bb7E2071F96De89BABe75be9C8E',\n    [ChainId.MAINNET]: '0xeefBa1e63905eF1D7ACbA5a8513c70307C1cE441',\n  },\n  mulltiCallV3: {\n    [ChainId.BSC]: '0x47A307e3167820daf22a377D777371753758f59c',\n    [ChainId.BSC_TESTNET]: '',\n    [ChainId.MATIC]: '0x1F98415757620B543A52E61c46B32eB19261F984',\n    [ChainId.MATIC_TESTNET]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n    [ChainId.MAINNET]: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  },\n  busd: {\n    [ChainId.BSC_TESTNET]: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n    [ChainId.BSC]: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  },\n  wbnb: {\n    [ChainId.BSC_TESTNET]: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  ust: {\n    [ChainId.BSC]: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    [ChainId.BSC_TESTNET]: '',\n  },\n  usdt: {\n    [ChainId.BSC]: '0x55d398326f99059ff775485246999027b3197955',\n    [ChainId.BSC_TESTNET]: '',\n  },\n  bananaProfile: {\n    [ChainId.BSC]: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    [ChainId.BSC_TESTNET]: '0xb57ab339831cd5154ef2ed721ceba734aa9047bd',\n  },\n  nonFungibleApes: {\n    [ChainId.BSC]: '0x6afC012783e3a6eF8C5f05F8EeE2eDeF6a052Ec4',\n    [ChainId.BSC_TESTNET]: '0x34e9f595c4e00bf3b9149224e3109c9311267620',\n  },\n  nonFungibleBananas: {\n    [ChainId.BSC]: '0x9f707A412302a3aD64028A9F73f354725C992081',\n  },\n  rabbitMintingFarm: {\n    [ChainId.BSC]: '0x1C99222F857C1d72234703eC5b9Ed88089Bd7091',\n    [ChainId.BSC_TESTNET]: '0x8f4739a48883Fdd89b65DC245dD5774fC8f44a67',\n  },\n  eth: {\n    [ChainId.BSC]: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    [ChainId.BSC_TESTNET]: '0xd66c6b4f0be8ce5b39d52e0fd1344c389929b378',\n  },\n  claimRefund: {\n    [ChainId.BSC]: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    [ChainId.BSC_TESTNET]: '',\n  },\n  goldenBanana: {\n    [ChainId.BSC]: '0xdDb3Bd8645775F59496c821E4F55A7eA6A6dc299',\n    [ChainId.BSC_TESTNET]: '0x9407026d236DEAE22CC1F3c419A9e47CBfCFE9E5',\n  },\n  treasury: {\n    [ChainId.BSC]: '0xec4b9d1fd8A3534E31fcE1636c7479BcD29213aE',\n    [ChainId.BSC_TESTNET]: '0xbC5ed0829365a0d5bc3A4956A6A0549aE17f41Ab',\n  },\n  auction: {\n    [ChainId.BSC]: '0xaeCB396Be7F19618Db4C44d8e2E8C908228515E9',\n    [ChainId.BSC_TESTNET]: '0xe2782fb3f1c2506FA32484e728Bc42F578117dEC',\n  },\n  vaultApeV1: {\n    [ChainId.BSC]: '0x5711a833C943AD1e8312A9c7E5403d48c717e1aa',\n    [ChainId.MATIC]: '0x37ac7DE40A6fd71FD1559Aa00F154E8dcb72efdb',\n  },\n  vaultApeV2: {\n    [ChainId.BSC]: '0x38f010F1005fC70239d6Bc2173896CA35D624e8d',\n    [ChainId.BSC_TESTNET]: '0x29436C9fd14d9692012262Be4917712D4097D4B3',\n    [ChainId.MATIC]: '',\n  },\n  apePriceGetter: {\n    [ChainId.BSC]: '0x5e545322b83626c745FE46144a15C00C94cBD803',\n    [ChainId.BSC_TESTNET]: '0xd722f9A2950E35Ab3EeD1d013c214671750A638B',\n    [ChainId.MATIC]: '0x05D6C73D7de6E02B3f57677f849843c03320681c',\n    [ChainId.MAINNET]: '0x5fbFd1955EeA2F62F1AfD6d6E92223Ae859F7887',\n  },\n  miniApeV2: {\n    [ChainId.BSC]: '',\n    [ChainId.BSC_TESTNET]: '',\n    [ChainId.MATIC]: '0x54aff400858Dcac39797a81894D9920f16972D1D',\n  },\n  iazoFactoryProxy: {\n    [ChainId.BSC]: '0xD6C35D6551330a48Ed6d2e09b2BcBe38f6bA4C4a',\n    [ChainId.BSC_TESTNET]: '0x9739500a967fEAA2Ba373F8978085675eEF331a8',\n  },\n  iazoExposer: {\n    [ChainId.BSC]: '0xFdfb230bFa399EC32EA8e98c2E7E3CcD953C860A',\n    [ChainId.BSC_TESTNET]: '0xe977E40f29f699F75db2A137Af0B3Db2152404b6',\n  },\n  iazoSettings: {\n    [ChainId.BSC]: '0x624433b9C78dE84c8Dd3C9e906046017Bb03E3A6',\n    [ChainId.BSC_TESTNET]: '0x22FaB17bF074f07Ee2708868282897E619103369',\n  },\n}\n\nexport default contracts\n","import { SmartRouter } from '@apeswapfinance/sdk'\nimport { SMART_PRICE_GETTERS } from 'config/constants/chains'\nimport addresses from 'config/constants/contracts'\n\nexport const getBananaAddress = (chainId: number) => {\n  return addresses.banana[chainId]\n}\nexport const getGoldenBananaAddress = (chainId: number) => {\n  return addresses.goldenBanana[chainId]\n}\nexport const getTreasuryAddress = (chainId: number) => {\n  return addresses.treasury[chainId]\n}\nexport const getSyrupAddress = (chainId: number) => {\n  return addresses.syrup[chainId]\n}\nexport const getMasterChefAddress = (chainId: number) => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = (chainId: number) => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = (chainId: number) => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = (chainId: number) => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = (chainId: number) => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getBananaProfileAddress = (chainId: number) => {\n  return addresses.bananaProfile[chainId]\n}\nexport const getNonFungibleApesAddress = (chainId: number) => {\n  return addresses.nonFungibleApes[chainId]\n}\nexport const getNonFungibleBananasAddress = (chainId: number) => {\n  return addresses.nonFungibleBananas[chainId]\n}\nexport const getRabbitMintingFarmAddress = (chainId: number) => {\n  return addresses.rabbitMintingFarm[chainId]\n}\nexport const getClaimRefundAddress = (chainId: number) => {\n  return addresses.claimRefund[chainId]\n}\nexport const getAuctionAddress = (chainId: number) => {\n  return addresses.auction[chainId]\n}\nexport const getApePriceGetterAddress = (chainId: number) => {\n  return addresses.apePriceGetter[chainId]\n}\nexport const getSmartPriceGetter = (chainId: number, smartRouter?: SmartRouter) => {\n  return SMART_PRICE_GETTERS[chainId][smartRouter || SmartRouter.APE]\n}\nexport const getVaultApeAddressV1 = (chainId: number) => {\n  return addresses.vaultApeV1[chainId]\n}\nexport const getVaultApeAddressV2 = (chainId: number) => {\n  return addresses.vaultApeV2[chainId]\n}\nexport const getMiniChefAddress = (chainId: number) => {\n  return addresses.miniApeV2[chainId]\n}\nexport const getNativeWrappedAddress = (chainId: number) => {\n  return addresses.nativeWrapped[chainId]\n}\nexport const getIazoExposerAddress = (chainId: number) => {\n  return addresses.iazoExposer[chainId]\n}\nexport const getIazoSettingsAddress = (chainId: number) => {\n  return addresses.iazoSettings[chainId]\n}\nexport const getIazoFactoryAddress = (chainId: number) => {\n  return addresses.iazoFactoryProxy[chainId]\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId] ?? {}).reduce<{ [address: string]: Token }>(\n      (newMap, address) => {\n        newMap[address] = tokenMap[chainId][address].token\n        return newMap\n      },\n      {},\n    )\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isETH = currencyId?.toUpperCase() === 'ETH'\n  const token = useToken(isETH ? undefined : currencyId)\n  return isETH ? ETHER : token\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { ChainId } from '@apeswapfinance/sdk'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\nconst NFT_INDEX = 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/lists/nftindex.json'\nconst PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n// const CMC_ALL_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'\n// const COINGECKO_LIST = 'https://tokens.coingecko.com/uniswap/all.json'\n// const UNI_LIST = 'https://tokens.uniswap.org'\nconst QUICKSWAP = 'https://unpkg.com/quickswap-default-token-list@1.2.18/build/quickswap-default.tokenlist.json'\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  NFT_INDEX,\n  QUICKSWAP,\n  PANCAKE_100,\n  // COINGECKO_LIST,\n  // CMC_ALL_LIST,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n\ninterface ExtendedListType {\n  name: string\n  warning?: string\n  logo: string\n  chainId?: ChainId\n}\n\n// Original list name\nexport const EXTENDED_LIST_DETAILS: Record<string, ExtendedListType> = {\n  'PancakeSwap Extended': {\n    name: 'BNB Top 300',\n    warning:\n      'The ApeSwap DEX is decentralized, meaning that anyone can create or add liquidity for a token. Not all tokens on this list have been reviewed by ApeSwap or passed our due diligence process. Some tokens on this list may present scam risks, including the loss of funds.',\n    logo: 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/WBNB.svg',\n    chainId: ChainId.BSC,\n  },\n  'Quickswap Token List': {\n    name: 'Polygon List',\n    warning:\n      'The ApeSwap DEX is decentralized, meaning that anyone can create or add liquidity for a token. Not all tokens on this list have been reviewed by ApeSwap or passed our due diligence process. Some tokens on this list may present scam risks, including the loss of funds.',\n    logo: 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/MATIC.svg',\n    chainId: ChainId.MATIC,\n  },\n  'PancakeSwap Top 100': {\n    name: 'BNB Top 100',\n    warning:\n      'The ApeSwap DEX is decentralized, meaning that anyone can create or add liquidity for a token. Not all tokens on this list have been reviewed by ApeSwap or passed our due diligence process. Some tokens on this list may present scam risks, including the loss of funds.',\n    logo: 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/WBNB.svg',\n    chainId: ChainId.BSC,\n  },\n  'LICO Index List': {\n    name: 'LICO Index List',\n    logo: 'https://raw.githubusercontent.com/ApeSwapFinance/apeswap-token-lists/main/assets/LICO.svg',\n    chainId: ChainId.BSC,\n  },\n}\n","import { useEffect, useState } from 'react'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\nimport { ChainId, SmartRouter } from '@apeswapfinance/sdk'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport const parseAddress = (currAddress: Address, chainId: ChainId) => {\n  return currAddress[chainId]\n}\n\nexport const parseSmartAddress = (\n  currAddress: Record<ChainId, Record<SmartRouter, string>>,\n  chainId: ChainId,\n  smartRouter: SmartRouter,\n) => {\n  return currAddress[chainId][smartRouter]\n}\n\nconst useAddress = (curAddresses: Address) => {\n  const { chainId } = useActiveWeb3React()\n  const [address, setAddress] = useState(parseAddress(curAddresses, chainId))\n  useEffect(() => {\n    setAddress(parseAddress(curAddresses, chainId))\n  }, [chainId, curAddresses])\n  return address\n}\n\nexport const useBananaAddress = () => {\n  return useAddress(addresses.banana)\n}\nexport const useGoldenBananaAddress = () => {\n  return useAddress(addresses.goldenBanana)\n}\nexport const useTreasuryAddress = () => {\n  return useAddress(addresses.treasury)\n}\nexport const useSyrupAddress = () => {\n  return useAddress(addresses.syrup)\n}\nexport const useMasterChefAddress = () => {\n  return useAddress(addresses.masterChef)\n}\nexport const useMulticallAddress = () => {\n  return useAddress(addresses.mulltiCall)\n}\nexport const useMulticallV3Address = () => {\n  return useAddress(addresses.mulltiCallV3)\n}\nexport const useNativeWrapCurrencyAddress = () => {\n  return useAddress(addresses.nativeWrapped)\n}\nexport const useLotteryAddress = () => {\n  return useAddress(addresses.lottery)\n}\nexport const useLotteryTicketAddress = () => {\n  return useAddress(addresses.lotteryNFT)\n}\nexport const useBananaProfileAddress = () => {\n  return useAddress(addresses.bananaProfile)\n}\nexport const useNonFungibleApesAddress = () => {\n  return useAddress(addresses.nonFungibleApes)\n}\nexport const useRabbitMintingFarmAddress = () => {\n  return useAddress(addresses.rabbitMintingFarm)\n}\nexport const useClaimRefundAddress = () => {\n  return useAddress(addresses.claimRefund)\n}\nexport const useAuctionAddress = () => {\n  return useAddress(addresses.auction)\n}\nexport const useApePriceGetterAddress = () => {\n  return useAddress(addresses.apePriceGetter)\n}\n\nexport const useVaultApeAddressV1 = () => {\n  return useAddress(addresses.vaultApeV1)\n}\n\nexport const useVaultApeAddressV2 = () => {\n  return useAddress(addresses.vaultApeV2)\n}\n\nexport const useMiniChefAddress = () => {\n  return useAddress(addresses.miniApeV2)\n}\n\nexport const useIazoExposerAddress = () => {\n  return useAddress(addresses.iazoExposer)\n}\n\nexport const useIazoSettingsAddress = () => {\n  return useAddress(addresses.iazoSettings)\n}\n\nexport const useIazoFactoryAddress = () => {\n  return useAddress(addresses.iazoFactoryProxy)\n}\n","import { SmartRouter } from '@apeswapfinance/sdk'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { RouterTypes } from 'config/constants'\nimport {\n  Field,\n  replaceSwapState,\n  selectCurrency,\n  setBestRoute,\n  setRecipient,\n  setSwapDelay,\n  SwapDelay,\n  switchCurrencies,\n  typeInput,\n  RouterTypeParams,\n} from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n  readonly swapDelay: SwapDelay\n  readonly bestRoute: RouterTypeParams\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n  swapDelay: SwapDelay.INIT,\n  bestRoute: { routerType: RouterTypes.APE, smartRouter: SmartRouter.APE },\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (\n        state,\n        { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId, swapDelay, bestRoute } },\n      ) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n          swapDelay,\n          bestRoute,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n    .addCase(setSwapDelay, (state, { payload: { swapDelay } }) => {\n      state.swapDelay = swapDelay\n    })\n    .addCase(setBestRoute, (state, { payload: { bestRoute } }) => {\n      state.bestRoute = bestRoute\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface OrdersState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: OrdersState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<OrdersState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserRecentTransactions,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserAutonomyPrepay,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  hidePhishingWarningBanner,\n  setIsExchangeChartDisplayed,\n  setUnlimitedGnana,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  // Show previous transactions\n  userRecentTransactions: boolean\n\n  // Autonomy prepay\n  userAutonomyPrepay: boolean\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  isExchangeChartDisplayed: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n  showPhishingWarningBanner: boolean\n  unlimitedGnana: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userRecentTransactions: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  userAutonomyPrepay: false,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  isExchangeChartDisplayed: true,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n  showPhishingWarningBanner: true,\n  unlimitedGnana: false,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(updateUserAutonomyPrepay, (state, action) => {\n      state.userAutonomyPrepay = action.payload.userAutonomyPrepay\n    })\n    .addCase(updateUserRecentTransactions, (state, action) => {\n      state.userRecentTransactions = action.payload.userRecentTransactions\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    })\n    .addCase(hidePhishingWarningBanner, (state) => {\n      state.showPhishingWarningBanner = false\n    })\n    .addCase(setIsExchangeChartDisplayed, (state, { payload }) => {\n      state.isExchangeChartDisplayed = payload\n    })\n    .addCase(setUnlimitedGnana, (state, { payload }) => {\n      state.unlimitedGnana = payload\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nexport const initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.forEach((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { combineReducers } from '@reduxjs/toolkit'\nimport multicall from 'lib/state/multicall'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport profileReducer from './profile'\nimport statsReducer from './stats'\nimport statsOverallReducer from './statsOverall'\nimport auctionReducer from './auction'\nimport vaultReducer from './vaults'\nimport tokenPricesReducer from './tokenPrices'\nimport iazosReducer from './iazos'\nimport networkReducer from './network'\nimport nfaStakingPoolsReducer from './nfaStakingPools'\nimport dualFarmsReducer from './dualFarms'\nimport jungleFarmsReducer from './jungleFarms'\nimport blockReducer from './block'\nimport billsReducer from './bills'\nimport swap from './swap/reducer'\nimport orders from './orders/reducer'\nimport user from './user/reducer'\nimport lists from './lists/reducer'\nimport transactions from './transactions/reducer'\nimport burn from './burn/reducer'\nimport mint from './mint/reducer'\nimport lpPricesReducer from './lpPrices'\nimport nfasReducer from './nfas'\nimport protocolDashboardReducer from './protocolDashboard'\n\nconst reducer = combineReducers({\n  farms: farmsReducer,\n  block: blockReducer,\n  toasts: toastsReducer,\n  pools: poolsReducer,\n  profile: profileReducer,\n  stats: statsReducer,\n  statsOverall: statsOverallReducer,\n  auctions: auctionReducer,\n  vaults: vaultReducer,\n  tokenPrices: tokenPricesReducer,\n  lpTokenPrices: lpPricesReducer,\n  iazos: iazosReducer,\n  network: networkReducer,\n  nfaStakingPools: nfaStakingPoolsReducer,\n  dualFarms: dualFarmsReducer,\n  jungleFarms: jungleFarmsReducer,\n  bills: billsReducer,\n  nfas: nfasReducer,\n  protocolDashboard: protocolDashboardReducer,\n  multicall: multicall.reducer,\n  swap,\n  user,\n  lists,\n  transactions,\n  burn,\n  mint,\n  orders,\n})\n\nexport default reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query/react'\nimport { load, save } from 'redux-localstorage-simple'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport reducer from './reducer'\nimport updateVersion from './global/actions'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\nsetupListeners(store.dispatch)\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch()\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@apeswapfinance/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { useMemo } from 'react'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { Contract } from '@ethersproject/contracts'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { useSelector } from 'react-redux'\nimport { State } from 'state/types'\nimport ifo from 'config/abi/ifo.json'\nimport billAbi from 'config/abi/bill.json'\nimport multicallV3 from 'config/abi/multicallv3.json'\nimport billNftAbi from 'config/abi/billNft.json'\nimport ifoLinear from 'config/abi/ifoLinear.json'\nimport erc20 from 'config/abi/erc20.json'\nimport erc20Bytes from 'config/abi/erc20_bytes32.json'\nimport nonFungibleApes from 'config/abi/nonFungibleApes.json'\nimport treasuryAbi from 'config/abi/treasury.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport jungleChef from 'config/abi/jungleChef.json'\nimport nfaStakingAbi from 'config/abi/nfaStaking.json'\nimport profile from 'config/abi/bananaProfile.json'\nimport auction from 'config/abi/auction.json'\nimport vaultApeV1 from 'config/abi/vaultApeV1.json'\nimport vaultApeV2 from 'config/abi/vaultApeV2.json'\nimport apePriceGetter from 'config/abi/apePriceGetter.json'\nimport miniChef from 'config/abi/miniApeV2.json'\nimport multi from 'config/abi/Multicall.json'\nimport ensPublicResolver from 'config/abi/ens-public-resolver.json'\nimport ens from 'config/abi/ens-registrar.json'\nimport weth from 'config/abi/weth.json'\nimport { getContract } from 'utils'\nimport iazoExposerAbi from 'config/abi/iazoExposer.json'\nimport iazoSettingsAbi from 'config/abi/iazoSettings.json'\nimport iazoFactoryAbi from 'config/abi/iazoFactory.json'\nimport iazoAbi from 'config/abi/iazo.json'\nimport {\n  Treasury,\n  IazoExposer,\n  IazoFactory,\n  IazoSettings,\n  Iazo,\n  EnsPublicResolver,\n  EnsRegistrar,\n  Multicall,\n  ApePriceGetter,\n  SousChef,\n  Weth,\n  BananaProfile,\n  Masterchef,\n  Erc20,\n  Erc20Bytes32,\n  MiniApeV2,\n  Auction,\n  NfaStaking,\n  NonFungibleApes,\n  IfoLinear,\n  Ifo,\n  Bill,\n  BillNft,\n  VaultApeV1,\n  VaultApeV2,\n  JungleChef,\n  Multicallv3,\n} from 'config/abi/types'\nimport {\n  useApePriceGetterAddress,\n  useAuctionAddress,\n  useBananaAddress,\n  useBananaProfileAddress,\n  useGoldenBananaAddress,\n  useIazoExposerAddress,\n  useIazoFactoryAddress,\n  useIazoSettingsAddress,\n  useMasterChefAddress,\n  useMiniChefAddress,\n  useMulticallAddress,\n  useMulticallV3Address,\n  useNativeWrapCurrencyAddress,\n  useNonFungibleApesAddress,\n  useTreasuryAddress,\n  useVaultApeAddressV1,\n  useVaultApeAddressV2,\n} from './useAddress'\nimport useActiveWeb3React from './useActiveWeb3React'\n\nexport function useContract(abi: any, address: string | undefined, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || address === '0x0000000000000000000000000000000000000000' || !abi || !library) return null\n    try {\n      return getContract(address, abi, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, abi, library, withSignerIfPossible, account])\n}\n\nexport const useMulticallContract = () => {\n  return useContract(multi, useMulticallAddress(), false) as Multicall\n}\n\nexport const useIfoContract = (address: string, isLinear?: boolean) => {\n  return useContract(isLinear ? ifoLinear : ifo, address) as IfoLinear | Ifo\n}\n\nexport const useSafeIfoContract = (address?: string, isLinear?: boolean): Contract | undefined => {\n  return useContract(isLinear ? ifoLinear : ifo, address) as IfoLinear | Ifo\n}\n\nexport const useERC20 = (address: string) => {\n  return useContract(erc20, address) as Erc20\n}\n\nexport const useBanana = () => {\n  return useERC20(useBananaAddress()) as Erc20\n}\n\nexport const useGoldenBanana = () => {\n  return useERC20(useGoldenBananaAddress()) as Erc20\n}\n\nexport const useTreasury = () => {\n  return useContract(treasuryAbi, useTreasuryAddress()) as Treasury\n}\n\nexport const useNonFungibleApes = () => {\n  return useContract(nonFungibleApes, useNonFungibleApesAddress()) as NonFungibleApes\n}\n\nexport const useProfile = () => {\n  return useContract(profile, useBananaProfileAddress()) as BananaProfile\n}\n\nexport const useMasterchef = () => {\n  return useContract(masterChef, useMasterChefAddress()) as Masterchef\n}\n\nexport const useSousChef = (id) => {\n  // Using selector to avoid circular dependecies\n  const chainId = useSelector((state: State) => state.network.data.chainId)\n  const poolsConfig = useSelector((state: State) => state.pools.data)\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n\n  return useContract(sousChef, config.contractAddress[chainId]) as SousChef\n}\n\nexport const useJungleChef = (id) => {\n  const chainId = useSelector((state: State) => state.network.data.chainId)\n  const jungleFarmsConfig = useSelector((state: State) => state.jungleFarms.data)\n  const config = jungleFarmsConfig.find((pool) => pool.jungleId === id)\n\n  return useContract(jungleChef, config.contractAddress[chainId]) as JungleChef\n}\n\nexport const useNfaStakingChef = (id) => {\n  const nfaStakingPools = useSelector((state: State) => state.nfaStakingPools.data)\n  const config = nfaStakingPools.find((pool) => pool.sousId === id)\n  const rawAbi = nfaStakingAbi\n  return useContract(rawAbi, config.contractAddress[process.env.REACT_APP_CHAIN_ID]) as NfaStaking\n}\n\nexport const useAuction = () => {\n  return useContract(auction, useAuctionAddress()) as Auction\n}\n\nexport const useVaultApeV1 = () => {\n  return useContract(vaultApeV1, useVaultApeAddressV1()) as VaultApeV1\n}\n\nexport const useVaultApeV2 = () => {\n  return useContract(vaultApeV2, useVaultApeAddressV2()) as VaultApeV2\n}\n\nexport const useApePriceGetter = () => {\n  return useContract(apePriceGetter, useApePriceGetterAddress()) as ApePriceGetter\n}\n\nexport const useMiniChefContract = () => {\n  return useContract(miniChef, useMiniChefAddress()) as MiniApeV2\n}\n\nexport const useIazoExposerContract = () => {\n  return useContract(iazoExposerAbi, useIazoExposerAddress()) as IazoExposer\n}\nexport const useIazoSettingsContract = () => {\n  return useContract(iazoSettingsAbi, useIazoSettingsAddress()) as IazoSettings\n}\nexport const useIazoFactoryContract = () => {\n  return useContract(iazoFactoryAbi, useIazoFactoryAddress()) as IazoFactory\n}\n\nexport const useIazoContract = (address: string) => {\n  return useContract(iazoAbi, address) as Iazo\n}\n\nexport const useBillContract = (address: string) => {\n  return useContract(billAbi, address) as Bill\n}\n\nexport const useBillNftContract = (address: string) => {\n  return useContract(billNftAbi, address) as BillNft\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(ens, address, withSignerIfPossible) as EnsRegistrar\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(ensPublicResolver, address, withSignerIfPossible) as EnsPublicResolver\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(erc20, tokenAddress, withSignerIfPossible) as Erc20\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(erc20Bytes, tokenAddress, withSignerIfPossible) as Erc20Bytes32\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  return useContract(weth, useNativeWrapCurrencyAddress(), withSignerIfPossible) as Weth\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(IUniswapV2PairABI, pairAddress, withSignerIfPossible)\n}\n\nexport function useInterfaceMulticall() {\n  return useContract(multicallV3, useMulticallV3Address(), false) as Multicallv3\n}\n\nexport default useContract\n","import { Token, TokenAmount } from '@apeswapfinance/sdk'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\n\nimport { useTokenContract } from './useContract'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport {\n  Trade,\n  TokenAmount,\n  CurrencyAmount,\n  ETHER,\n  BONUS_ROUTER_ADDRESS,\n  SMART_ROUTER_ADDRESS,\n  SmartRouter,\n} from '@apeswapfinance/sdk'\nimport { AUTONOMY_MIDROUTER_ADDRESS } from '@autonomylabs/limit-stop-orders'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { RouterTypes } from 'config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\nimport { parseAddress, parseSmartAddress } from './useAddress'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account, chainId } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.getSymbol(chainId)}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(\n  trade?: Trade,\n  allowedSlippage = 0,\n  useAutonomy?: boolean,\n  routerType?: RouterTypes,\n  smartRouter?: SmartRouter,\n) {\n  const { chainId } = useActiveWeb3React()\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(\n    amountToApprove,\n    useAutonomy\n      ? parseAddress(AUTONOMY_MIDROUTER_ADDRESS, chainId)\n      : routerType === RouterTypes.BONUS\n      ? parseAddress(BONUS_ROUTER_ADDRESS, chainId)\n      : parseSmartAddress(SMART_ROUTER_ADDRESS, chainId, smartRouter || SmartRouter.APE),\n  )\n}\n","import { ChainId, Token } from '@apeswapfinance/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { createSelector } from '@reduxjs/toolkit'\nimport { fromPairs, groupBy, uniqBy } from 'lodash'\nimport DEFAULT_TOKEN_LIST from '@apeswapfinance/token-lists/lists/apeswap.json'\nimport { UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from 'config/constants/token-lists/sushiswap-v2-unsupported.tokenlist.json'\nimport { AppState } from '../index'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\nfunction enumKeys<O extends Record<string, unknown>, K extends keyof O = keyof O>(obj: O): K[] {\n  return Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]\n}\n\n// -------------------------------------\n//   Selectors\n// -------------------------------------\nconst selectorActiveUrls = (state: AppState) => state.lists.activeListUrls\nconst selectorByUrls = (state: AppState) => state.lists.byUrl\nconst activeListUrlsSelector = createSelector(selectorActiveUrls, (urls) =>\n  urls?.filter((url) => !UNSUPPORTED_LIST_URLS.includes(url)),\n)\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{\n  [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }>\n}>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.MATIC]: {},\n  [ChainId.MATIC_TESTNET]: {},\n  [ChainId.BSC]: {},\n  [ChainId.BSC_TESTNET]: {},\n  [ChainId.FLARE]: {},\n  [ChainId.COSTON]: {},\n  [ChainId.SONGBIRD]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nconst combineTokenMapsWithDefault = (lists: AppState['lists']['byUrl'], urls: string[]) => {\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  if (!urls) return defaultTokenMap\n  return combineMaps(combineTokenMaps(lists, urls), defaultTokenMap)\n}\n\nconst combineTokenMaps = (lists: AppState['lists']['byUrl'], urls: string[]) => {\n  if (!urls) return EMPTY_LIST\n  return (\n    urls\n      .slice()\n      // sort by priority so top priority goes last\n      .sort(sortByListPriority)\n      .reduce((allTokens, currentUrl) => {\n        const current = lists[currentUrl]?.current\n        if (!current) return allTokens\n        try {\n          const newTokens = Object.assign(listToTokenMap(current))\n          return combineMaps(allTokens, newTokens)\n        } catch (error) {\n          console.error('Could not show token list due to error', error)\n          return allTokens\n        }\n      }, EMPTY_LIST)\n  )\n}\n\nexport const combinedTokenMapFromUnsupportedUrlsSelector = createSelector([selectorByUrls], (lists) => {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = combineTokenMaps(lists, UNSUPPORTED_LIST_URLS)\n\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n})\n\nexport const combinedTokenMapFromActiveUrlsSelector = createSelector(\n  [selectorByUrls, selectorActiveUrls],\n  (lists, urls) => {\n    return combineTokenMapsWithDefault(lists, urls)\n  },\n)\n\nconst inactiveUrlSelector = createSelector([selectorByUrls, selectorActiveUrls], (lists, urls) => {\n  return Object.keys(lists).filter((url) => !urls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n})\n\nexport const combinedTokenMapFromInActiveUrlsSelector = createSelector(\n  [selectorByUrls, inactiveUrlSelector],\n  (lists, inactiveUrl) => {\n    return combineTokenMaps(lists, inactiveUrl)\n  },\n)\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const tokenMap: WrappedTokenInfo[] = uniqBy(\n    list.tokens,\n    (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`,\n  ).map((tokenInfo) => {\n    const tags: TagInfo[] =\n      tokenInfo.tags\n        ?.map((tagId) => {\n          if (!list.tags?.[tagId]) return undefined\n          return { ...list.tags[tagId], id: tagId }\n        })\n        ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n\n    return new WrappedTokenInfo(tokenInfo, tags)\n  })\n\n  const groupedTokenMap: { [chainId: string]: WrappedTokenInfo[] } = groupBy(tokenMap, (tokenInfo) => tokenInfo.chainId)\n\n  const tokenAddressMap = fromPairs(\n    Object.entries(groupedTokenMap).map(([chainId, tokenInfoList]) => [\n      chainId,\n      fromPairs(tokenInfoList.map((tokenInfo) => [tokenInfo.address, { token: tokenInfo, list }])),\n    ]),\n  ) as TokenAddressMap\n\n  // add chain id item if not exist\n  enumKeys(ChainId).forEach((chainId) => {\n    if (!(ChainId[chainId] in tokenAddressMap)) {\n      Object.defineProperty(tokenAddressMap, ChainId[chainId], {\n        value: {},\n      })\n    }\n  })\n\n  listCache?.set(list, tokenAddressMap)\n  return tokenAddressMap\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] }, // mainnet\n    [ChainId.MATIC]: { ...map1[ChainId.MATIC], ...map2[ChainId.MATIC] }, // matic\n    [ChainId.MATIC_TESTNET]: { ...map1[ChainId.MATIC_TESTNET], ...map2[ChainId.MATIC_TESTNET] }, // matic testnet\n    [ChainId.BSC]: { ...map1[ChainId.BSC], ...map2[ChainId.BSC] }, // bsc\n    [ChainId.BSC_TESTNET]: { ...map1[ChainId.BSC_TESTNET], ...map2[ChainId.BSC_TESTNET] }, // bsc testnet\n    [ChainId.FLARE]: { ...map1[ChainId.FLARE], ...map2[ChainId.FLARE] }, // FLARE\n    [ChainId.COSTON]: { ...map1[ChainId.COSTON], ...map2[ChainId.COSTON] }, // COSTON\n    [ChainId.SONGBIRD]: { ...map1[ChainId.SONGBIRD], ...map2[ChainId.SONGBIRD] }, // SONGBIRD\n  }\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector(activeListUrlsSelector)\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeTokens = useSelector(combinedTokenMapFromActiveUrlsSelector)\n  return activeTokens\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  return useSelector(combinedTokenMapFromInActiveUrlsSelector)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  return useSelector(combinedTokenMapFromUnsupportedUrlsSelector)\n}\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return useMemo(() => Boolean(activeListUrls?.includes(url)), [activeListUrls, url])\n}\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport multicall from 'lib/state/multicall'\nimport { useBlock } from 'state/block/hooks'\nimport { SkipFirst } from 'types/tuple'\n\nexport type { CallStateResult } from '@uniswap/redux-multicall' // re-export for convenience\nexport { NEVER_RELOAD } from '@uniswap/redux-multicall' // re-export for convenience\n\n// Create wrappers for hooks so consumers don't need to get latest block themselves\n\ntype SkipFirstTwoParams<T extends (...args: any) => any> = SkipFirst<Parameters<T>, 2>\n\nexport function useMultipleContractSingleData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useMultipleContractSingleData>\n) {\n  const { chainId, currentBlock } = useCallContext()\n  return multicall.hooks.useMultipleContractSingleData(chainId, currentBlock, ...args)\n}\n\nexport function useSingleCallResult(...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleCallResult>) {\n  const { chainId, currentBlock } = useCallContext()\n  return multicall.hooks.useSingleCallResult(chainId, currentBlock, ...args)\n}\n\nexport function useSingleContractMultipleData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleContractMultipleData>\n) {\n  const { chainId, currentBlock } = useCallContext()\n  return multicall.hooks.useSingleContractMultipleData(chainId, currentBlock, ...args)\n}\n\nexport function useSingleContractWithCallData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleContractWithCallData>\n) {\n  const { chainId, currentBlock } = useCallContext()\n  return multicall.hooks.useSingleContractWithCallData(chainId, currentBlock, ...args)\n}\n\nfunction useCallContext() {\n  const { chainId } = useActiveWeb3React()\n  const { currentBlock } = useBlock()\n  return { chainId, currentBlock }\n}\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber() // Notice: for really big numbers in JS, this can be a problematic??\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import styled from 'styled-components'\n\nconst Row = styled.div<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { useEffect } from 'react'\nimport { ConnectorNames, localStorageKey } from '@apeswapfinance/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(localStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import styled from 'styled-components'\nimport {\n  FarmsM1Icon,\n  FarmsM2Icon,\n  FarmsM3Icon,\n  FarmsM4Icon,\n  LendingM1Icon,\n  LendingM2Icon,\n  LendingM3Icon,\n  LendingM4Icon,\n  LendingM5Icon,\n  PoolsM1Icon,\n  PoolsM2Icon,\n  PoolsM3Icon,\n  PoolsM4Icon,\n  Text,\n} from '@apeswapfinance/uikit'\n\nexport const ModalBody = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 0px 20px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    height: 100%;\n    margin-top: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    margin-bottom: 10px;\n  }\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\nexport const RightContent = styled.div`\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 50%;\n  }\n`\nexport const StyledText = styled(Text)`\n  text-align: center;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    text-align: left;\n  }\n`\nexport const MiddleHeaderText = styled(StyledText)`\n  font-size: 22px;\n  line-height: 33px;\n`\nexport const MiddleText = styled(StyledText)`\n  font-size: 12px;\n  line-height: 14px;\n`\nexport const MiddleButton = styled.button`\n  color: ${({ theme }) => theme.colors.yellow};\n  text-decoration: underline;\n  font-size: 12px;\n  border: none;\n  background: transparent;\n  padding: 0;\n  font-weight: 500;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n\n// FARMS\nexport const MiniHeaderText = styled(StyledText)`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  color: ${({ theme }) => theme.colors.yellow};\n  text-transform: uppercase;\n`\nexport const MainHeaderText = styled(MiddleHeaderText)`\n  font-weight: 700;\n`\nexport const MiniButton = styled(MiddleButton)`\n  font-size: 16px;\n  line-height: 24px;\n`\n\n// LENDING ICONS\nexport const StyledLendingM1Icon = styled(LendingM1Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledLendingM2Icon = styled(LendingM2Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledLendingM3Icon = styled(LendingM3Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledLendingM4Icon = styled(LendingM4Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledLendingM5Icon = styled(LendingM5Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\n\n// FARMS ICONS\nexport const StyledFarmsM1Icon = styled(FarmsM1Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledFarmsM2Icon = styled(FarmsM2Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledFarmsM3Icon = styled(FarmsM3Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledFarmsM4Icon = styled(FarmsM4Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\n\n// POOLS ICONS\nexport const StyledPoolsM1Icon = styled(PoolsM1Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledPoolsM2Icon = styled(PoolsM2Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledPoolsM3Icon = styled(PoolsM3Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\nexport const StyledPoolsM4Icon = styled(PoolsM4Icon)`\n  width: 240px;\n  height: 120px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 320px;\n    height: 201px;\n  }\n`\n","import React from 'react'\nimport { ModalContentProps } from '@apeswapfinance/uikit'\nimport { ModalBody } from './styles'\n\nconst ModalContent: React.FC<ModalContentProps> = ({ Icon, children }) => {\n  return (\n    <ModalBody>\n      {Icon}\n      {children}\n    </ModalBody>\n  )\n}\n\nexport default ModalContent\n","import LendingBody1 from './LendingBody1'\nimport LendingBody2 from './LendingBody2'\nimport LendingBody3 from './LendingBody3'\nimport LendingBody4 from './LendingBody4'\nimport LendingBody5 from './LendingBody5'\n\nexport const LendingBodies = {\n  LendingBody1,\n  LendingBody2,\n  LendingBody3,\n  LendingBody4,\n  LendingBody5,\n}\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, RightContent, StyledLendingM1Icon } from '../styles'\n\nconst LendingBody1: React.FC = () => {\n  return (\n    <ModalContent Icon={<StyledLendingM1Icon />}>\n      <RightContent>\n        <StyledText>\n          Our network uses an &quot;overcollateral&quot; model. <br />\n          Users can borrow any type of asset listed, as long as they supply some of their own assets as collateral\n          first.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default LendingBody1\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, RightContent, StyledLendingM2Icon } from '../styles'\n\nconst LendingBody2: React.FC = () => {\n  return (\n    <ModalContent Icon={<StyledLendingM2Icon />}>\n      <RightContent>\n        <StyledText>\n          Suppliers earn interest paid by borrowers. <br />\n          When a supplied asset is enabled as collateral, suppliers can borrow from any of the available markets. <br />\n          The borrow amount is limited to 70% of the value of supplied assets.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default LendingBody2\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, RightContent, StyledLendingM3Icon } from '../styles'\n\nconst LendingBody3: React.FC = () => {\n  return (\n    <ModalContent Icon={<StyledLendingM3Icon />}>\n      <RightContent>\n        <StyledText>\n          Both suppliers and borrowers can earn BANANA rewards from the Rainmaker, depending on the market. <br />\n          BANANA rewards are independent of interest earned/owed.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default LendingBody3\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, RightContent, StyledLendingM4Icon } from '../styles'\n\nconst LendingBody4: React.FC = () => {\n  return (\n    <ModalContent Icon={<StyledLendingM4Icon />}>\n      <RightContent>\n        <StyledText>\n          Be sure to always keep an eye on your liquidation limit! <br />\n          If the amount borrowed exceeds 75% of the amount supplied, your position will be liquidated. <br />\n          Consider keeping a margin to account for volatility.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default LendingBody4\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiddleHeaderText, MiddleText, MiddleButton, RightContent, StyledLendingM5Icon } from '../styles'\n\nconst LendingBody5: React.FC = () => {\n  const learnMore = () => {\n    return window.open('https://lending.apeswap.finance/markets', '_blank')\n  }\n\n  return (\n    <ModalContent Icon={<StyledLendingM5Icon />}>\n      <RightContent>\n        <StyledText>\n          Users can pay back their borrowed assets and <br />\n          withdraw their supplied assets at any time.\n        </StyledText>\n        <MiddleHeaderText>Happy Lending!</MiddleHeaderText>\n        <MiddleText>\n          You can learn more about Lending <MiddleButton onClick={learnMore}>here.</MiddleButton>\n        </MiddleText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default LendingBody5\n","import FarmsBody1 from './FarmsBody1'\nimport FarmsBody2 from './FarmsBody2'\nimport FarmsBody3 from './FarmsBody3'\nimport FarmsBody4 from './FarmsBody4'\n\nexport const FarmsBodies = {\n  FarmsBody1,\n  FarmsBody2,\n  FarmsBody3,\n  FarmsBody4,\n}\n","import React from 'react'\nimport { useWalletModal } from '@ape.swap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, MiniButton, RightContent, StyledFarmsM1Icon } from '../styles'\n\nconst FarmsBody1: React.FC = () => {\n  const { login, logout } = useAuth()\n  const { t } = useTranslation()\n\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  const openConnectModal = () => {\n    onPresentConnectModal()\n  }\n\n  return (\n    <ModalContent Icon={<StyledFarmsM1Icon />}>\n      <RightContent>\n        <MiniHeaderText>{t('Step 1')}</MiniHeaderText>\n        <MainHeaderText>{t('Connect Your Wallet')}</MainHeaderText>\n        <StyledText>\n          <MiniButton onClick={openConnectModal}>{t('Click here')} </MiniButton>{' '}\n          {t('to connect your wallet to ApeSwap.')}\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default FarmsBody1\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, MiniButton, RightContent, StyledFarmsM2Icon } from '../styles'\n\nconst FarmsBody2: React.FC = () => {\n  const openLiquidityLink = () => {\n    return window.open('https://apeswap.finance/add', '_blank')\n  }\n\n  return (\n    <ModalContent Icon={<StyledFarmsM2Icon />}>\n      <RightContent>\n        <MiniHeaderText>Step 2</MiniHeaderText>\n        <MainHeaderText>Add Liquidity</MainHeaderText>\n        <StyledText>\n          Go to Trade &gt; <MiniButton onClick={openLiquidityLink}>Liquidity</MiniButton> and obtain the LP(s) you want\n          to Stake.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default FarmsBody2\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, MiniButton, RightContent, StyledFarmsM3Icon } from '../styles'\n\nconst FarmsBody3: React.FC = () => {\n  const openFarmsLink = () => {\n    return window.open('https://apeswap.finance/farms', '_blank')\n  }\n\n  return (\n    <ModalContent Icon={<StyledFarmsM3Icon />}>\n      <RightContent>\n        <MiniHeaderText>Step 3</MiniHeaderText>\n        <MainHeaderText>Stake</MainHeaderText>\n        <StyledText>\n          Head over to <MiniButton onClick={openFarmsLink}>Farms</MiniButton>, Enable your favorites and start Staking.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default FarmsBody3\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, RightContent, StyledFarmsM4Icon } from '../styles'\n\nconst FarmsBody4: React.FC = () => {\n  return (\n    <ModalContent Icon={<StyledFarmsM4Icon />}>\n      <RightContent>\n        <MiniHeaderText>Step 4</MiniHeaderText>\n        <MainHeaderText>Collect</MainHeaderText>\n        <StyledText>\n          Don&apos;t forget to Harvest your earnings periodically. You can reinvest them or cash out at any time!\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default FarmsBody4\n","import PoolsBody1 from './PoolsBody1'\nimport PoolsBody2 from './PoolsBody2'\nimport PoolsBody3 from './PoolsBody3'\nimport PoolsBody4 from './PoolsBody4'\n\nexport const PoolsBodies = {\n  PoolsBody1,\n  PoolsBody2,\n  PoolsBody3,\n  PoolsBody4,\n}\n","import React from 'react'\nimport { useWalletModal } from '@ape.swap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, MiniButton, RightContent, StyledPoolsM1Icon } from '../styles'\n\nconst PoolsBody1: React.FC = () => {\n  const { login, logout } = useAuth()\n  const { t } = useTranslation()\n\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  const openConnectModal = () => {\n    onPresentConnectModal()\n  }\n\n  return (\n    <ModalContent Icon={<StyledPoolsM1Icon />}>\n      <RightContent>\n        <MiniHeaderText>{t('Step 1')}</MiniHeaderText>\n        <MainHeaderText>{t('Connect Your Wallet')}</MainHeaderText>\n        <StyledText>\n          <MiniButton onClick={openConnectModal}>{t('Click here')} </MiniButton>{' '}\n          {t('to connect your wallet to ApeSwap.')}\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default PoolsBody1\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, MiniButton, RightContent, StyledPoolsM2Icon } from '../styles'\n\nconst PoolsBody2: React.FC = () => {\n  const openExchange = () => {\n    return window.open('https://apeswap.finance/swap', '_blank')\n  }\n\n  const openGnana = () => {\n    return window.open('https://apeswap.finance/gnana', '_blank')\n  }\n\n  return (\n    <ModalContent Icon={<StyledPoolsM2Icon />}>\n      <RightContent>\n        <MiniHeaderText>Step 2</MiniHeaderText>\n        <MainHeaderText>Get BANANA</MainHeaderText>\n        <StyledText>\n          If you don&apos;t own BANANA already, go to our <MiniButton onClick={openExchange}>Exchange</MiniButton> to\n          acquire some! (or <MiniButton onClick={openGnana}>GNANA</MiniButton>)\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default PoolsBody2\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, MiniButton, RightContent, StyledPoolsM3Icon } from '../styles'\n\nconst PoolsBody3: React.FC = () => {\n  const openPools = () => {\n    return window.open('https://apeswap.finance/pools', '_blank')\n  }\n\n  return (\n    <ModalContent Icon={<StyledPoolsM3Icon />}>\n      <RightContent>\n        <MiniHeaderText>Step 3</MiniHeaderText>\n        <MainHeaderText>Stake</MainHeaderText>\n        <StyledText>\n          Head over to <MiniButton onClick={openPools}>Pools</MiniButton>, Enable your favorites and start Staking.\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default PoolsBody3\n","import React from 'react'\nimport ModalContent from '../MarketingModalContent'\nimport { StyledText, MiniHeaderText, MainHeaderText, RightContent, StyledPoolsM4Icon } from '../styles'\n\nconst PoolsBody4: React.FC = () => {\n  return (\n    <ModalContent Icon={<StyledPoolsM4Icon />}>\n      <RightContent>\n        <MiniHeaderText>Step 4</MiniHeaderText>\n        <MainHeaderText>Collect</MainHeaderText>\n        <StyledText>\n          Don&apos;t forget to Harvest your earnings periodically. You can reinvest them or cash out at any time!\n        </StyledText>\n      </RightContent>\n    </ModalContent>\n  )\n}\n\nexport default PoolsBody4\n","import BillsBody1 from './BillsBody1'\n\nexport const BillsBodies = {\n  BillsBody1,\n}\n","import React from 'react'\nimport { StyledText, Description, TextButton, Hiw, MainBody, MainContentBody, StyledAnchor } from './styles'\nimport BillsDiagram from './BillsDiagram'\n\nconst BillsBody1: React.FC = () => {\n  return (\n    <MainBody>\n      <Description>\n        <StyledText>\n          Treasury Bills allows users to access tokens at a discount in exchange for their liquidity provider (LP)\n          tokens.\n        </StyledText>\n        <StyledText>\n          Each Treasury Bill is a unique NFT that represents the contract and its respective reward tokens, which vest\n          over a certain amount of time.\n        </StyledText>\n        <StyledAnchor\n          href=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/raise/treasury-bills\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <TextButton>For more info, visit the Treasury Bills page in our Documentation.</TextButton>\n        </StyledAnchor>\n        <Hiw>How It Works:</Hiw>\n      </Description>\n      <MainContentBody>\n        <BillsDiagram />\n      </MainContentBody>\n    </MainBody>\n  )\n}\n\nexport default BillsBody1\n","/** @jsxImportSource theme-ui */\nimport styled from 'styled-components'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const Bubble = styled.div<{ isActive?: boolean }>`\n  background: ${({ isActive, theme }) =>\n    isActive ? 'linear-gradient(53.53deg, #a16552 15.88%, #e1b242 92.56%)' : theme.colors.white4};\n  height: 8px;\n  width: 8px;\n  border-radius: 50px;\n  margin: 0px 2.5px 0px 2.5px;\n  cursor: pointer;\n`\nexport const showApe = (slide, isDark): ThemeUIStyleObject => ({\n  width: '100%',\n  height: '230px',\n  '@media screen and (min-width: 853px)': {\n    height: '500px',\n  },\n  background: `url(images/marketing-modals/questApe-${isDark ? 'dark-' : 'light-'}${slide}.svg)`,\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  backgroundSize: 'contain',\n})\n\nexport const subtitle = (isDark): ThemeUIStyleObject => ({\n  '@media screen and (max-width: 853px)': {\n    fontSize: '12px',\n    fontWeight: 400,\n    lineHeight: '12px',\n    textAlign: 'left',\n    color: isDark ? '#FAFAFA' : '#4D4040',\n    opacity: 0.5,\n  },\n  '@media screen and (min-width: 853px)': {\n    fontSize: '12px',\n    fontWeight: 400,\n    lineHeight: '18px',\n    letterSpacing: '0em',\n    textAlign: 'left',\n    color: isDark ? '#FAFAFA' : '#4D4040',\n    opacity: 0.5,\n  },\n})\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    overflowY: 'auto',\n    height: ['90%', '90%', '500px'],\n    flexWrap: 'wrap',\n    width: ['auto', 'auto', '100%'],\n    minWidth: ['auto', 'auto', '800px'],\n    maxWidth: ['auto', 'auto', '800px'],\n  },\n  imagesWrapper: {\n    width: '100%',\n    '@media screen and (min-width: 853px)': {\n      width: '380px',\n    },\n    justifyContent: 'center',\n  },\n  textWrapper: {\n    width: ['100%', '100%', '420px', '420px'],\n    textAlign: ['center', 'center', 'start'],\n    justifyContent: ['center', 'center', 'flex-start'],\n    padding: ['', '', '110px 20px 0 30px'],\n    flexWrap: 'wrap',\n  },\n  bubbleWrapper: {\n    width: '100%',\n    justifyContent: ['center', 'center', 'flex-start'],\n    margin: '20px 0 15px',\n    '@media screen and (min-width: 853px)': {\n      margin: '32px 0 20px 0',\n    },\n  },\n  text: {\n    width: '100%',\n    '@media screen and (max-width: 853px)': {\n      marginLeft: '30px',\n      textAlign: 'left',\n    },\n  },\n  title: {\n    fontWeight: 700,\n    '@media screen and (max-width: 853px)': {\n      fontSize: '18px',\n      lineHeight: '14px',\n      marginTop: '20px',\n      marginBottom: '5px',\n    },\n    '@media screen and (min-width: 853px)': {\n      fontSize: '24px',\n      lineHeight: '36px',\n    },\n  },\n  first: {\n    fontWeight: 700,\n    fontSize: '10px',\n    lineHeight: '14px',\n    color: '#FFB300',\n    '@media screen and (max-width: 853px)': {\n      marginTop: '15px',\n    },\n    '@media screen and (min-width: 853px)': {\n      fontWeight: 700,\n      fontSize: '10px',\n      lineHeight: '14px',\n      color: '#FFB300',\n      marginTop: '30px',\n    },\n  },\n  second: {\n    fontWeight: 700,\n    fontSize: '12px',\n    lineHeight: '14px',\n    marginTop: '4px',\n    '@media screen and (min-width: 853px)': {\n      fontSize: '22px',\n      marginTop: '7px',\n    },\n  },\n  third: {\n    fontWeight: 400,\n    fontStyle: 'normal',\n    lineHeight: '15px',\n    fontSize: '12px',\n    '@media screen and (max-width: 853px)': {\n      width: '220px',\n    },\n    '@media screen and (min-width: 853px)': {\n      fontSize: '14px',\n      lineHeight: '16px',\n      flex: 'none',\n      order: 1,\n      alignSelf: 'stretch',\n      flexGrow: 0,\n    },\n  },\n  thirdWrapper: {\n    '@media screen and (max-width: 853px)': {\n      width: '230px',\n      marginLeft: '30px',\n      textAlign: 'left',\n    },\n    marginTop: '15px',\n    width: '275px',\n  },\n  button: {\n    fontWeight: 700,\n    fontSize: '16px',\n    lineHeight: '24px',\n    fontStyle: 'normal',\n    '@media screen and (max-width: 853px)': {\n      width: '222px',\n    },\n    paddingTop: '5px',\n    paddingBottom: '5px',\n  },\n  defaultNoShow: {\n    justifySelf: 'flex-end',\n    alignSelf: ['flex-start', 'flex-start', 'flex-start', 'center'],\n    alignItems: 'center',\n    marginTop: '20px',\n    marginBottom: ['25px', '25px', '30px', '0px'],\n    width: ['222px'],\n  },\n  checkboxCon: {\n    alignItems: 'center',\n    width: '21px',\n    height: '21px',\n    paddingLeft: '4px',\n  },\n  checkboxText: {\n    fontSize: ['12px', '12px', '14px'],\n    fontWeight: 500,\n    lineHeight: '14px',\n    marginLeft: ['15px', '15px', '20px'],\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Box } from 'theme-ui'\nimport { Heading, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles } from '../styles'\n\nconst QuestSlide1 = () => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box sx={styles.text}>\n        <Heading sx={styles.first}>{t(\"Let's get started\").toUpperCase()}</Heading>\n        <Heading sx={styles.second}>{t('Hello, Crypto Adventurer')}</Heading>\n      </Box>\n      <Box sx={styles.thirdWrapper}>\n        <Text sx={styles.third}>{t('Complete the')}</Text>{' '}\n        <Text color=\"yellow\" sx={styles.third}>\n          <a\n            href=\"https://box.genki.io/RJ4LP3\"\n            style={{ textDecoration: 'underline' }}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('introductory Quests')}\n          </a>\n        </Text>{' '}\n        <Text sx={styles.third}>{t('to earn great rewards while you learn!')}</Text>\n      </Box>\n    </>\n  )\n}\n\nexport default QuestSlide1\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Box } from 'theme-ui'\nimport { Heading, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles } from '../styles'\n\nconst QuestSlide2 = () => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box sx={styles.text}>\n        <Heading sx={styles.first}>{t('Connect to Genki').toUpperCase()}</Heading>\n        <Heading sx={styles.second}>{t('You Have New Quests!')}</Heading>\n      </Box>\n      <Box sx={styles.thirdWrapper}>\n        <Text color=\"yellow\" sx={styles.third}>\n          <a\n            href=\"https://box.genki.io/RJ4LP3\"\n            style={{ textDecoration: 'underline' }}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('Visit GENKI')}\n          </a>\n        </Text>{' '}\n        <Text sx={styles.third}> {t('and connect your Wallet to access your available Quests.')}</Text>\n      </Box>\n    </>\n  )\n}\n\nexport default QuestSlide2\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Box } from 'theme-ui'\nimport { Heading, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles } from '../styles'\n\nconst QuestSlide3 = () => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box sx={styles.text}>\n        <Heading sx={styles.first}>{t('Get it done').toUpperCase()}</Heading>\n        <Heading sx={styles.second}>{t('Can You Complete Them All?')}</Heading>\n      </Box>\n      <Box sx={styles.thirdWrapper}>\n        <Text sx={styles.third}>{t('Complete the')}</Text>{' '}\n        <Text color=\"yellow\" sx={styles.third}>\n          <a\n            href=\"https://box.genki.io/RJ4LP3\"\n            style={{ textDecoration: 'underline' }}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('Quests')}\n          </a>\n        </Text>{' '}\n        <Text sx={styles.third}>{t('- the more you complete, the more chances you get!')}</Text>\n      </Box>\n    </>\n  )\n}\n\nexport default QuestSlide3\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Box } from 'theme-ui'\nimport { Heading, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles } from '../styles'\n\nconst QuestSlide4 = () => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box sx={styles.text}>\n        <Heading sx={styles.first}>{t('Ready, steady, go').toUpperCase()}</Heading>\n        <Heading sx={styles.second}>{t('Congratulations!')}</Heading>\n      </Box>\n      <Box sx={styles.thirdWrapper}>\n        <Text sx={styles.third}>{t('You are officially ready to begin your')}</Text>{' '}\n        <Text color=\"yellow\" sx={styles.third}>\n          <a\n            href=\"https://box.genki.io/RJ4LP3\"\n            style={{ textDecoration: 'underline' }}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            {t('DeFi journey')}\n          </a>\n        </Text>{' '}\n        <Text sx={styles.third}>{t('with ApeSwap. Good luck!')}</Text>\n      </Box>\n    </>\n  )\n}\n\nexport default QuestSlide4\n","import React from 'react'\nimport QuestSlide1 from './QuestSlide1'\nimport QuestSlide2 from './QuestSlide2'\nimport QuestSlide3 from './QuestSlide3'\nimport QuestSlide4 from './QuestSlide4'\n\nexport const QuestSlides = [\n  <QuestSlide1 key=\"quest1\" />,\n  <QuestSlide2 key=\"quest2\" />,\n  <QuestSlide3 key=\"quest3\" />,\n  <QuestSlide4 key=\"quest4\" />,\n]\n","/** @jsxImportSource theme-ui */\nimport React, { useContext, useState } from 'react'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore from 'swiper'\nimport 'swiper/swiper.min.css'\nimport { Box, Flex } from 'theme-ui'\nimport useSwiper from 'hooks/useSwiper'\nimport { Button, Checkbox, Heading, IconButton, Modal, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ThemeContext } from 'contexts/ThemeContext'\nimport { Bubble, showApe, styles, subtitle } from './styles'\nimport { QuestSlides } from './slides'\nimport { SwiperProps } from './types'\n\nconst MarketingSwipper: React.FC<SwiperProps> = ({ onDismiss, setDefaultNoShow, hideDefault, alreadySet }) => {\n  const { t } = useTranslation()\n  const { isDark } = useContext(ThemeContext)\n  const { swiper, setSwiper } = useSwiper()\n  const [activeSlide, setActiveSlide] = useState(0)\n\n  const slideNav = (index: number) => {\n    setActiveSlide(index)\n    swiper.slideTo(index)\n  }\n\n  const handleSlide = (event: SwiperCore) => {\n    setActiveSlide(event.activeIndex)\n  }\n\n  const handleNext = () => {\n    if (QuestSlides.length <= activeSlide + 1) {\n      onDismiss()\n    } else {\n      slideNav(activeSlide + 1)\n    }\n  }\n  const modalProps = {\n    minWidth: '280px',\n    maxWidth: '280px',\n    sx: {\n      padding: '0',\n    },\n  }\n\n  return (\n    <Modal onDismiss={onDismiss} {...modalProps}>\n      <Flex sx={styles.container}>\n        <Box sx={{ position: 'absolute', top: '20px', right: '20px' }}>\n          <IconButton width=\"15px\" icon=\"close\" color=\"text\" variant=\"transparent\" onClick={onDismiss} />\n        </Box>\n        <Flex sx={styles.imagesWrapper}>\n          <Box sx={showApe(activeSlide, isDark)} />\n        </Flex>\n        <Flex sx={styles.textWrapper}>\n          <Box sx={{ width: '100%', textAlign: 'left', marginLeft: '30px' }}>\n            <Heading sx={styles.title}>{t('Welcome to FlareSwap')}</Heading>\n            <Text sx={subtitle(isDark)}>{t('Your DeFi Journey Starts Here!')}</Text>\n          </Box>\n          <Swiper\n            id=\"marketingSwapper\"\n            onSwiper={setSwiper}\n            spaceBetween={20}\n            centeredSlides\n            resizeObserver\n            lazy\n            preloadImages={false}\n            onSlideChange={handleSlide}\n          >\n            {QuestSlides.map((slide) => {\n              return <SwiperSlide key={slide.key}>{slide}</SwiperSlide>\n            })}\n          </Swiper>\n          <Flex sx={styles.bubbleWrapper}>\n            {[...Array(QuestSlides.length)].map((_, i) => {\n              return (\n                <Bubble\n                  isActive={i === activeSlide}\n                  onClick={() => slideNav(i)}\n                  style={{ marginRight: '10px' }}\n                  key={i}\n                />\n              )\n            })}\n          </Flex>\n          <Flex\n            sx={{\n              width: '222px',\n            }}\n          >\n            <Button fullWidth onClick={handleNext} sx={styles.button}>\n              {activeSlide + 1 === QuestSlides.length ? t(\"I'm ready\") : t('Next')}\n            </Button>\n          </Flex>\n          <Flex sx={styles.defaultNoShow}>\n            <Flex sx={styles.checkboxCon}>\n              <Checkbox\n                id=\"checkbox\"\n                checked={alreadySet || hideDefault}\n                sx={{ backgroundColor: 'white2' }}\n                onChange={setDefaultNoShow}\n              />\n            </Flex>\n            <Text sx={styles.checkboxText}>{t('Don’t show this again')}</Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default React.memo(MarketingSwipper)\n","/** @jsxImportSource theme-ui */\nimport React, { useContext, useState } from 'react'\nimport { Box, Flex } from 'theme-ui'\nimport { Button, Checkbox, Heading, IconButton, Modal, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ThemeContext } from 'contexts/ThemeContext'\nimport { Bubble, showApe, styles, subtitle } from './styles'\nimport { QuestSlides } from './slides'\nimport { SwiperProps } from './types'\n\nconst CardView: React.FC<SwiperProps> = ({ onDismiss, setDefaultNoShow, hideDefault, alreadySet }) => {\n  const { t } = useTranslation()\n  const { isDark } = useContext(ThemeContext)\n  const [activeSlide, setActiveSlide] = useState(0)\n\n  const slideNav = (index: number) => {\n    setActiveSlide(index)\n  }\n\n  const handleNext = () => {\n    if (QuestSlides.length <= activeSlide + 1) {\n      onDismiss()\n    } else {\n      setActiveSlide(activeSlide + 1)\n    }\n  }\n\n  const modalProps = {\n    minWidth: 'unset',\n    maxWidth: 'none',\n    sx: {\n      padding: '0',\n    },\n  }\n\n  return (\n    <Modal onDismiss={onDismiss} {...modalProps}>\n      <Flex sx={styles.container}>\n        <Box sx={{ position: 'absolute', top: '20px', right: '20px' }}>\n          <IconButton width=\"15px\" icon=\"close\" color=\"text\" variant=\"transparent\" onClick={onDismiss} />\n        </Box>\n        <Flex sx={styles.imagesWrapper}>\n          <Box sx={showApe(activeSlide, isDark)} />\n        </Flex>\n        <Flex sx={styles.textWrapper}>\n          <Box sx={{ width: '100%' }}>\n            <Heading sx={styles.title}>{t('Welcome to FlareSwap').toUpperCase()}</Heading>\n          </Box>\n          <Box sx={{ width: '100%' }}>\n            <Text sx={subtitle(isDark)}>{t('Your DeFi Journey Starts Here!')}</Text>\n          </Box>\n          {QuestSlides[activeSlide]}\n          <Flex sx={styles.bubbleWrapper}>\n            {[...Array(QuestSlides.length)].map((_, i) => {\n              return (\n                <Bubble\n                  isActive={i === activeSlide}\n                  onClick={() => slideNav(i)}\n                  style={{ marginRight: '10px' }}\n                  key={i}\n                />\n              )\n            })}\n          </Flex>\n          <Flex sx={{ width: '240px' }}>\n            <Button fullWidth onClick={handleNext} sx={styles.button}>\n              {activeSlide + 1 === QuestSlides.length ? t(\"I'm ready\") : t('Next')}\n            </Button>\n          </Flex>\n          <Flex sx={styles.defaultNoShow}>\n            <Flex sx={styles.checkboxCon}>\n              <Checkbox\n                id=\"checkbox\"\n                checked={alreadySet || hideDefault}\n                sx={{ backgroundColor: 'white2' }}\n                onChange={setDefaultNoShow}\n              />\n            </Flex>\n            <Text sx={styles.checkboxText}>{t('Don’t show this again')}</Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default React.memo(CardView)\n","/** @jsxImportSource theme-ui */\nimport React, { useState } from 'react'\nimport { SET_DEFAULT_MODAL_KEY, SHOW_DEFAULT_MODAL_KEY } from 'config/constants'\nimport useIsMobile from 'hooks/useIsMobile'\nimport MarketingSwipper from './MarketingSwipper'\nimport CardView from './CardView'\n\nconst QuestModal: React.FC<{ onDismiss: () => void }> = ({ onDismiss }) => {\n  const isMobile = useIsMobile()\n  const [hideDefault, setHideDefault] = useState(false)\n\n  const sdmk = localStorage.getItem(SET_DEFAULT_MODAL_KEY)\n\n  const alreadySet = JSON.parse(sdmk)\n\n  const setDefaultNoShow = () => {\n    if (hideDefault) {\n      setHideDefault(false)\n      localStorage.removeItem(SET_DEFAULT_MODAL_KEY)\n    } else {\n      localStorage.setItem(SET_DEFAULT_MODAL_KEY, JSON.stringify('TRUE'))\n      localStorage.removeItem(SHOW_DEFAULT_MODAL_KEY)\n      setHideDefault(!hideDefault)\n    }\n  }\n\n  return isMobile ? (\n    <MarketingSwipper\n      onDismiss={onDismiss}\n      setDefaultNoShow={setDefaultNoShow}\n      hideDefault={hideDefault}\n      alreadySet={alreadySet}\n    />\n  ) : (\n    <CardView\n      onDismiss={onDismiss}\n      setDefaultNoShow={setDefaultNoShow}\n      hideDefault={hideDefault}\n      alreadySet={alreadySet}\n    />\n  )\n}\n\nexport default React.memo(QuestModal)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const modalProps = {\n  sx: {\n    minWidth: ['90%', '425px'],\n    width: ['200px'],\n    maxWidth: '425px',\n    height: ['calc(100vh - 15%)', 'auto'],\n  },\n}\n\nexport const gnanaStyles: Record<string, ThemeUIStyleObject> = {\n  gnanaContainer: {\n    flexDirection: 'column',\n    height: ['90%', 'auto'],\n    overflowY: 'auto',\n  },\n  headsUp: {\n    width: '100%',\n    alignItems: 'center',\n    padding: '10px',\n    borderRadius: '10px',\n    marginTop: '10px',\n  },\n  warningHeader: {\n    fontSize: ['18px', '22px'],\n    fontWeight: 700,\n  },\n  headsUpHeader: { flexDirection: 'column', justifyContent: 'space-between', alignItems: 'center', width: '100%' },\n  headsUpDescription: {\n    fontSize: ['12px'],\n    letterSpacing: '5%',\n    fontWeight: 500,\n    color: 'primaryBright',\n    textAlign: 'center',\n    lineHeight: '14px',\n  },\n  learnMoreBtn: {\n    textDecorationLine: 'underline',\n    fontSize: '12px',\n    fontWeight: 500,\n    color: 'primaryBright',\n    '&&:hover': {\n      color: 'primaryBright',\n    },\n  },\n  transactions: {\n    margin: '50px 0 0 0',\n    maxWidth: '100%',\n    width: '400px',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  displayMax: {\n    fontSize: '12px',\n    fontWeight: 500,\n  },\n  arrowDownContainer: {\n    width: '100%',\n    height: '50px',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  arrowDown: {\n    background: 'yellow',\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    justifyContent: 'center',\n    paddingRight: '1px',\n  },\n  checkboxContainer: {\n    alignItems: 'center',\n    width: '21px',\n    height: '21px',\n    marginRight: ['10px'],\n    paddingLeft: '4px',\n  },\n  checkboxText: {\n    fontSize: '12px',\n    fontWeight: 500,\n    lineHeight: '14px',\n    marginLeft: '10px',\n  },\n  renderActions: {\n    position: 'relative',\n    width: '100%',\n    marginTop: '10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Flex, Heading, Button, Text, ChevronRightIcon, Svg, Checkbox } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCurrency } from 'hooks/Tokens'\nimport { Field } from 'state/swap/actions'\nimport useTheme from 'hooks/useTheme'\nimport { useBananaAddress, useGoldenBananaAddress } from 'hooks/useAddress'\nimport { useBanana, useTreasury } from 'hooks/useContract'\nimport { useBuyGoldenBanana } from 'hooks/useGoldenBanana'\nimport { useToast } from 'state/hooks'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport useApproveTransaction from 'hooks/useApproveTransaction'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport UnlockButton from 'components/UnlockButton'\nimport Dots from 'components/Loader/Dots'\nimport DexPanel from 'views/Dex/components/DexPanel'\nimport { gnanaStyles } from './styles'\nimport { useUserUnlimitedGnana } from 'state/user/hooks'\n\nconst Gnana = () => {\n  const { account } = useActiveWeb3React()\n  const { isDark } = useTheme()\n  const MAX_BUY = 5000\n  const bananaToken = useCurrency(useBananaAddress())\n  const gnanaToken = useCurrency(useGoldenBananaAddress())\n  const { t } = useTranslation()\n  const [unlimitedGnana, setUnlimitedGnanaMinting] = useUserUnlimitedGnana()\n  const [unlimited, setUnlimited] = useState(unlimitedGnana)\n  const treasuryContract = useTreasury()\n  const [processing, setProcessing] = useState(false)\n  const [triedMore, setTriedMore] = useState(false)\n\n  const [val, setVal] = useState('0')\n  const { handleBuy } = useBuyGoldenBanana()\n  const gnanaVal = parseFloat(val) > 0 ? parseFloat(val) * 0.7 : 0\n  const { toastSuccess } = useToast()\n  const bananaContract = useBanana()\n  const accountBananaBalance = useCurrencyBalance(account, bananaToken)\n  const displayMax = unlimited ? 'unlimited' : MAX_BUY\n  const fullBananaBalance = accountBananaBalance?.toExact()\n\n  const handleSelectMax = useCallback(() => {\n    const max = parseInt(fullBananaBalance) < MAX_BUY || unlimited ? fullBananaBalance : MAX_BUY\n    setVal(max.toString())\n  }, [fullBananaBalance, unlimited, setVal])\n\n  const handleChange = useCallback(\n    (_, val) => {\n      if (!unlimited && parseInt(val) > MAX_BUY) {\n        setTriedMore(true)\n        return\n      }\n      setVal(val)\n    },\n    [unlimited],\n  )\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTriedMore(false)\n    }, 600)\n  }, [triedMore])\n\n  const {\n    isApproving: isApprovingBanana,\n    isApproved: isApprovedBanana,\n    handleApprove: handleApproveBanana,\n  } = useApproveTransaction({\n    onRequiresApproval: async (loadedAccount) => {\n      try {\n        const response = await bananaContract.allowance(loadedAccount, treasuryContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: async () => {\n      const trx = await bananaContract.approve(treasuryContract.address, ethers.constants.MaxUint256)\n      return await trx.wait()\n    },\n    onSuccess: async () => toastSuccess(t('Approved!')),\n  })\n\n  const buyGnana = useCallback(async () => {\n    try {\n      setProcessing(true)\n      await handleBuy(val)\n      setProcessing(false)\n      setVal('0')\n    } catch (e) {\n      setProcessing(false)\n      console.warn(e)\n    }\n  }, [handleBuy, val])\n\n  const handleCheckBox = useCallback(() => {\n    setUnlimited(!unlimited)\n    if (!unlimited) setUnlimitedGnanaMinting(true)\n    if (unlimited) {\n      setUnlimitedGnanaMinting(false)\n      setVal('0')\n    }\n  }, [unlimited, setUnlimitedGnanaMinting])\n\n  const disabled = processing || parseInt(val) === 0 || parseInt(val) > parseInt(fullBananaBalance)\n\n  const renderActions = () => {\n    if (!account) {\n      return <UnlockButton fullWidth />\n    }\n    if (isApprovedBanana) {\n      return (\n        <Button variant=\"primary\" onClick={buyGnana} disabled={disabled} fullWidth>\n          {(processing && (\n            <>\n              {t('LOADING')}\n              <Dots />\n            </>\n          )) ||\n            t('CONVERT')}\n        </Button>\n      )\n    }\n    if (isApprovingBanana) {\n      return (\n        <Button variant=\"primary\" onClick={handleApproveBanana} disabled={isApprovingBanana} fullWidth>\n          {t('APPROVE CONTRACT')}\n        </Button>\n      )\n    }\n  }\n\n  return (\n    <Flex sx={gnanaStyles.gnanaContainer}>\n      <Flex\n        sx={{\n          ...gnanaStyles.headsUp,\n          backgroundColor: (isDark && '#FFB30026') || 'yellow',\n          opacity: (isDark && 1) || 0.7,\n        }}\n      >\n        <Flex sx={gnanaStyles.headsUpHeader}>\n          <Heading as=\"h1\" sx={{ ...gnanaStyles.warningHeader, color: (isDark && 'yellow') || 'primaryBright' }}>\n            {t('HEADS UP, APES!')}\n          </Heading>\n\n          <Flex sx={{ padding: '2px', fontSize: ['14px'] }}>\n            <Text sx={gnanaStyles.headsUpDescription}>\n              {t(\n                'Buying GNANA involves paying a 28% burn fee and a 2% reflect fee for a total cost of 30%. This means that for every 1 BANANA you trade in, you will receive 0.7 GNANA.',\n              )}\n            </Text>\n          </Flex>\n\n          <Button\n            variant=\"text\"\n            sx={gnanaStyles.learnMoreBtn}\n            onClick={() => window.open('https://apeswap.finance/gnana', '_blank')}\n          >\n            {t('Learn More')} <ChevronRightIcon color=\"primaryBright\" />\n          </Button>\n        </Flex>\n      </Flex>\n\n      <Flex sx={gnanaStyles.transactions}>\n        <Flex sx={{ flexDirection: 'column' }}>\n          {/* FromTokenInput */}\n          <DexPanel\n            value={val}\n            panelText=\"From\"\n            currency={bananaToken}\n            otherCurrency={gnanaToken}\n            onUserInput={handleChange}\n            fieldType={Field.INPUT}\n            handleMaxInput={handleSelectMax}\n            onCurrencySelect={null}\n            disableTokenSelect\n          />\n          <Text sx={{ color: triedMore ? '#ff0000' : null, fontSize: '12px', fontWeight: 600 }}>\n            {t('*Current max conversion is %displayMax%', { displayMax })}\n          </Text>\n          {/* DownArrow */}\n          <Flex sx={gnanaStyles.arrowDownContainer}>\n            <Flex sx={gnanaStyles.arrowDown}>\n              <Svg icon=\"arrow\" width=\"8px\" color=\"primaryBright\" height='8px' />\n            </Flex>\n          </Flex>\n          <DexPanel\n            value={gnanaVal.toString()}\n            panelText=\"To\"\n            currency={gnanaToken}\n            otherCurrency={bananaToken}\n            onUserInput={handleChange}\n            fieldType={Field.OUTPUT}\n            handleMaxInput={handleSelectMax}\n            onCurrencySelect={null}\n            disabled\n            ordersDisabled\n            disableTokenSelect\n          />\n          {/* ToTokenInput */}\n          <Flex sx={{ marginTop: '20px', alignItems: 'center' }}>\n            <Flex sx={gnanaStyles.checkboxContainer}>\n              <Checkbox\n                id=\"checkbox\"\n                checked={unlimited}\n                sx={{ backgroundColor: 'white2' }}\n                onChange={handleCheckBox}\n              />\n            </Flex>\n            <Text sx={gnanaStyles.checkboxText}>\n              {t('I understand how GNANA works and I want to enable unlimited buy')}\n            </Text>\n          </Flex>\n        </Flex>\n\n        <Flex sx={gnanaStyles.renderActions}>{renderActions()}</Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(Gnana)\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Modal, ModalProps } from '@ape.swap/uikit'\nimport Gnana from './Gnana'\nimport { modalProps } from './styles'\n\nconst GnanaModal: React.FC<ModalProps> = ({ onDismiss }) => {\n  return (\n    <Modal zIndex={10} title=\"Get GNANA\" onDismiss={onDismiss} {...modalProps}>\n      <Gnana />\n    </Modal>\n  )\n}\n\nexport default GnanaModal\n","import React, { useMemo } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { MarketingModal } from '@ape.swap/uikit'\nimport { LendingBodies } from 'components/MarketingModalContent/Lending/'\nimport { FarmsBodies } from 'components/MarketingModalContent/Farms/'\nimport { PoolsBodies } from 'components/MarketingModalContent/Pools/'\nimport { BillsBodies } from 'components/MarketingModalContent/Bills/'\nimport { useTranslation } from 'contexts/Localization'\nimport SwiperProvider from 'contexts/SwiperProvider'\nimport MoonPayModal from 'views/Topup/MoonpayModal'\nimport QuestModal from '../MarketingModalContent/Quests/QuestModal'\nimport GnanaModal from 'components/GnanaModal'\nimport { SET_DEFAULT_MODAL_KEY, SHOW_DEFAULT_MODAL_KEY } from 'config/constants'\n\nconst MarketingModalCheck = () => {\n  const location = useLocation()\n  const history = useHistory()\n  const { t } = useTranslation()\n  useMemo(() => {\n    const onHomepage = history.location.pathname === '/'\n    const sdmk = localStorage.getItem(SET_DEFAULT_MODAL_KEY)\n    const isdm = localStorage.getItem(SHOW_DEFAULT_MODAL_KEY)\n\n    // This needs to be fixed but I didnt want to reset users local storage keys\n    // Basically first land users wont get the modal until they refresh so I added a showDefaultModalFlag variable\n    const isDefaultModalSet = JSON.parse(sdmk)\n    const isShowDefaultModal = JSON.parse(isdm)\n    const showDefaultModalFlag = isShowDefaultModal || (!isShowDefaultModal && !isDefaultModalSet)\n\n    if (!isDefaultModalSet) {\n      localStorage.setItem(SHOW_DEFAULT_MODAL_KEY, JSON.stringify('SHOW'))\n    }\n\n    if (showDefaultModalFlag && onHomepage) {\n      history.push({ search: '?modal=tutorial' })\n    }\n  }, [history])\n\n  const farmsRoute = location.search.includes('modal=1')\n  const poolsRoute = location.search.includes('modal=2')\n  const lendingRoute = location.search.includes('modal=3')\n  const billsRoute = location.search.includes('modal=bills')\n  const questRoute = location.search.includes('modal=tutorial')\n  const moonpayRoute = location.search.includes('modal=moonpay')\n  const getGnanaRoute = location.search.includes('modal=gnana')\n\n  const { LendingBody1, LendingBody2, LendingBody3, LendingBody4, LendingBody5 } = LendingBodies\n  const { FarmsBody1, FarmsBody2, FarmsBody3, FarmsBody4 } = FarmsBodies\n  const { PoolsBody1, PoolsBody2, PoolsBody3, PoolsBody4 } = PoolsBodies\n  const { BillsBody1 } = BillsBodies\n\n  const onDismiss = () => {\n    history.push({\n      pathname: location.pathname,\n    })\n  }\n\n  const lending = [\n    <LendingBody1 key=\"lend1\" />,\n    <LendingBody2 key=\"lend2\" />,\n    <LendingBody3 key=\"lend3\" />,\n    <LendingBody4 key=\"lend4\" />,\n    <LendingBody5 key=\"lend5\" />,\n  ]\n  const farms = [\n    <FarmsBody1 key=\"farm1\" />,\n    <FarmsBody2 key=\"farm2\" />,\n    <FarmsBody3 key=\"farm3\" />,\n    <FarmsBody4 key=\"farm4\" />,\n  ]\n  const pools = [\n    <PoolsBody1 key=\"pool1\" />,\n    <PoolsBody2 key=\"pool2\" />,\n    <PoolsBody3 key=\"pool3\" />,\n    <PoolsBody4 key=\"pool4\" />,\n  ]\n  const bills = [<BillsBody1 key=\"bill1\" />]\n\n  return lendingRoute ? (\n    <MarketingModal\n      title={t(\"Welcome to ApeSwap's Lending Network\")}\n      description={t('How does it work?')}\n      onDismiss={onDismiss}\n      startEarning={onDismiss}\n      startEarningText={t('Start Earning')}\n    >\n      {lending}\n    </MarketingModal>\n  ) : farmsRoute ? (\n    <MarketingModal\n      title={t(\"Welcome to ApeSwap's Farms\")}\n      description={t('Start earning passive income with your cryptocurrency!')}\n      onDismiss={onDismiss}\n      startEarning={onDismiss}\n      startEarningText={t('Start Earning')}\n    >\n      {farms}\n    </MarketingModal>\n  ) : poolsRoute ? (\n    <MarketingModal\n      title={t(\"Welcome to ApeSwap's Pools\")}\n      description={t('Earn tokens by staking BANANA or GNANA')}\n      onDismiss={onDismiss}\n      startEarning={onDismiss}\n      startEarningText={t('Start Earning')}\n    >\n      {pools}\n    </MarketingModal>\n  ) : billsRoute ? (\n    <MarketingModal\n      title={t('Welcome to ApeSwap Treasury Bills')}\n      onDismiss={onDismiss}\n      startEarning={onDismiss}\n      startEarningText={t(\"I'M READY\")}\n    >\n      {bills}\n    </MarketingModal>\n  ) : questRoute ? (\n    <SwiperProvider>\n      <QuestModal onDismiss={onDismiss} />\n    </SwiperProvider>\n  ) : moonpayRoute ? (\n    <MoonPayModal onDismiss={onDismiss} />\n  ) : getGnanaRoute ? (\n    <GnanaModal onDismiss={onDismiss} />\n  ) : null\n}\n\nexport default React.memo(MarketingModalCheck)\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { ApeSwapTheme } from '@apeswapfinance/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends ApeSwapTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Poppins', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@ape.swap/uikit'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { NETWORK_INFO_LINK } from 'config/constants/chains'\n\nconst bscConfig: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Exchange'),\n    lightIcon: 'ExchangeLightImage',\n    darkIcon: 'ExchangeDarkImage',\n    items: [\n      {\n        label: t('Swap'),\n        href: '/swap',\n        isNew: false,\n      },\n      {\n        label: t('Orders'),\n        href: '/limit-orders',\n        isNew: false,\n      },\n      {\n        label: t('Liquidity'),\n        href: '/add-liquidity',\n        isNew: false,\n      },\n      {\n        label: t('Pro Trading'),\n        href: 'https://pro.apeswap.finance',\n        isNew: true,\n      },\n      {\n        label: t('GNANA'),\n        href: '/gnana',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Stake'),\n    lightIcon: 'StakeLightImage',\n    darkIcon: 'StakeDarkImage',\n    items: [\n      {\n        label: t('Staking Pools'),\n        href: '/pools',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Maximizers'),\n        href: '/maximizers',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Farms'),\n        href: '/banana-farms',\n        isNew: false,\n      },\n      {\n        label: t('Jungle Farms'),\n        href: '/jungle-farms',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Raise'),\n    lightIcon: 'OfferingsLightImage',\n    darkIcon: 'OfferingsDarkImage',\n    items: [\n      {\n        label: t('Treasury Bills'),\n        href: '/treasury-bills',\n        isNew: false,\n      },\n      {\n        label: t('Official IAO'),\n        href: '/iao',\n        isNew: false,\n      },\n      {\n        label: t('Self-Serve IAO'),\n        href: '/ss-iao',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Collect'),\n    lightIcon: 'NfaLightImage',\n    darkIcon: 'NfaDarkImage',\n    items: [\n      {\n        label: t('NFA Collection'),\n        href: '/nft',\n        isNew: false,\n      },\n      {\n        label: t('NFA Auction'),\n        href: '/auction',\n        isNew: false,\n      },\n      {\n        label: t('NFA Staking'),\n        href: '/staking',\n        isNew: false,\n      },\n      {\n        label: t('NFA Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x6afc012783e3a6ef8c5f05f8eee2edef6a052ec4',\n        isNew: false,\n      },\n      {\n        label: t('NFB Collection'),\n        href: 'https://nftkey.app/collections/nfbs/',\n        isNew: false,\n      },\n      {\n        label: t('NFB Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x9f707a412302a3ad64028a9f73f354725c992081',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Lend'),\n    href: 'https://lending.apeswap.finance/',\n    isNew: false,\n  },\n  {\n    label: t('Explore'),\n    lightIcon: 'MoreLightImage',\n    darkIcon: 'MoreDarkImage',\n    items: [\n      {\n        label: t('ApeStats'),\n        href: '/apestats',\n        isNew: true,\n      },\n      {\n        label: t('Dashboard'),\n        href: 'protocol-dashboard',\n        isNew: true,\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://apeswap.gitbook.io/apeswap-finance/',\n        isNew: false,\n      },\n      {\n        label: t('Charts'),\n        href: NETWORK_INFO_LINK[ChainId.BSC],\n        isNew: false,\n      },\n      {\n        label: t('Governance'),\n        href: 'https://discuss.apeswap.finance',\n        isNew: false,\n      },\n    ],\n  },\n]\n\nexport default bscConfig\n","import { MenuEntry } from '@ape.swap/uikit'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { NETWORK_INFO_LINK } from 'config/constants/chains'\n\nconst flareConfig: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Exchange'),\n    lightIcon: 'ExchangeLightImage',\n    darkIcon: 'ExchangeDarkImage',\n    items: [\n      {\n        label: t('Swap'),\n        href: '/swap',\n        isNew: false,\n      },\n      {\n        label: t('Orders'),\n        href: '/limit-orders',\n        isNew: false,\n      },\n      {\n        label: t('Liquidity'),\n        href: '/add-liquidity',\n        isNew: false,\n      },\n      {\n        label: t('Pro Trading'),\n        href: 'https://pro.apeswap.finance',\n        isNew: true,\n      },\n      {\n        label: t('GNANA'),\n        href: '/gnana',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Stake'),\n    lightIcon: 'StakeLightImage',\n    darkIcon: 'StakeDarkImage',\n    items: [\n      {\n        label: t('Staking Pools'),\n        href: '/pools',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Maximizers'),\n        href: '/maximizers',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Farms'),\n        href: '/banana-farms',\n        isNew: false,\n      },\n      {\n        label: t('Jungle Farms'),\n        href: '/jungle-farms',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Raise'),\n    lightIcon: 'OfferingsLightImage',\n    darkIcon: 'OfferingsDarkImage',\n    items: [\n      {\n        label: t('Treasury Bills'),\n        href: '/treasury-bills',\n        isNew: false,\n      },\n      {\n        label: t('Official IAO'),\n        href: '/iao',\n        isNew: false,\n      },\n      {\n        label: t('Self-Serve IAO'),\n        href: '/ss-iao',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Collect'),\n    lightIcon: 'NfaLightImage',\n    darkIcon: 'NfaDarkImage',\n    items: [\n      {\n        label: t('NFA Collection'),\n        href: '/nft',\n        isNew: false,\n      },\n      {\n        label: t('NFA Auction'),\n        href: '/auction',\n        isNew: false,\n      },\n      {\n        label: t('NFA Staking'),\n        href: '/staking',\n        isNew: false,\n      },\n      {\n        label: t('NFA Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x6afc012783e3a6ef8c5f05f8eee2edef6a052ec4',\n        isNew: false,\n      },\n      {\n        label: t('NFB Collection'),\n        href: 'https://nftkey.app/collections/nfbs/',\n        isNew: false,\n      },\n      {\n        label: t('NFB Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x9f707a412302a3ad64028a9f73f354725c992081',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Lend'),\n    href: 'https://lending.apeswap.finance/',\n    isNew: false,\n  },\n  {\n    label: t('Explore'),\n    lightIcon: 'MoreLightImage',\n    darkIcon: 'MoreDarkImage',\n    items: [\n      {\n        label: t('ApeStats'),\n        href: '/apestats',\n        isNew: true,\n      },\n      {\n        label: t('Dashboard'),\n        href: 'protocol-dashboard',\n        isNew: true,\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://apeswap.gitbook.io/apeswap-finance/',\n        isNew: false,\n      },\n      {\n        label: t('Charts'),\n        href: NETWORK_INFO_LINK[ChainId.BSC],\n        isNew: false,\n      },\n      {\n        label: t('Governance'),\n        href: 'https://discuss.apeswap.finance',\n        isNew: false,\n      },\n    ],\n  },\n]\n\nexport default flareConfig\n","import { MenuEntry } from '@ape.swap/uikit'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { NETWORK_INFO_LINK } from 'config/constants/chains'\n\nconst costonConfig: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Exchange'),\n    lightIcon: 'ExchangeLightImage',\n    darkIcon: 'ExchangeDarkImage',\n    items: [\n      {\n        label: t('Swap'),\n        href: '/swap',\n        isNew: false,\n      },\n      {\n        label: t('Orders'),\n        href: '/limit-orders',\n        isNew: false,\n      },\n      {\n        label: t('Liquidity'),\n        href: '/add-liquidity',\n        isNew: false,\n      },\n      {\n        label: t('Pro Traders'),\n        href: 'https://pro.apeswap.finance',\n        isNew: true,\n      },\n      {\n        label: t('GNANA'),\n        href: '/gnana',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Stake'),\n    lightIcon: 'StakeLightImage',\n    darkIcon: 'StakeDarkImage',\n    items: [\n      {\n        label: t('Staking Pools'),\n        href: '/pools',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Maximizers'),\n        href: '/maximizers',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Farms'),\n        href: '/banana-farms',\n        isNew: false,\n      },\n      {\n        label: t('Jungle Farms'),\n        href: '/jungle-farms',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Raise'),\n    lightIcon: 'OfferingsLightImage',\n    darkIcon: 'OfferingsDarkImage',\n    items: [\n      {\n        label: t('Treasury Bills'),\n        href: '/treasury-bills',\n        isNew: false,\n      },\n      {\n        label: t('Official IAO'),\n        href: '/iao',\n        isNew: false,\n      },\n      {\n        label: t('Self-Serve IAO'),\n        href: '/ss-iao',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Collect'),\n    lightIcon: 'NfaLightImage',\n    darkIcon: 'NfaDarkImage',\n    items: [\n      {\n        label: t('NFA Collection'),\n        href: '/nft',\n        isNew: false,\n      },\n      {\n        label: t('NFA Auction'),\n        href: '/auction',\n        isNew: false,\n      },\n      {\n        label: t('NFA Staking'),\n        href: '/staking',\n        isNew: false,\n      },\n      {\n        label: t('NFA Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x6afc012783e3a6ef8c5f05f8eee2edef6a052ec4',\n        isNew: false,\n      },\n      {\n        label: t('NFB Collection'),\n        href: 'https://nftkey.app/collections/nfbs/',\n        isNew: false,\n      },\n      {\n        label: t('NFB Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x9f707a412302a3ad64028a9f73f354725c992081',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Lend'),\n    href: 'https://lending.apeswap.finance/',\n    isNew: false,\n  },\n  {\n    label: t('Explore'),\n    lightIcon: 'MoreLightImage',\n    darkIcon: 'MoreDarkImage',\n    items: [\n      {\n        label: t('ApeStats'),\n        href: '/apestats',\n        isNew: true,\n      },\n      {\n        label: t('Dashboard'),\n        href: 'protocol-dashboard',\n        isNew: true,\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://apeswap.gitbook.io/apeswap-finance/',\n        isNew: false,\n      },\n      {\n        label: t('Charts'),\n        href: NETWORK_INFO_LINK[ChainId.BSC],\n        isNew: false,\n      },\n      {\n        label: t('Governance'),\n        href: 'https://discuss.apeswap.finance',\n        isNew: false,\n      },\n    ],\n  },\n]\n\nexport default costonConfig\n","import { MenuEntry } from '@ape.swap/uikit'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { NETWORK_INFO_LINK } from 'config/constants/chains'\n\nconst songbirdConfig: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Exchange'),\n    lightIcon: 'ExchangeLightImage',\n    darkIcon: 'ExchangeDarkImage',\n    items: [\n      {\n        label: t('Swap'),\n        href: '/swap',\n        isNew: false,\n      },\n      {\n        label: t('Orders'),\n        href: '/limit-orders',\n        isNew: false,\n      },\n      {\n        label: t('Liquidity'),\n        href: '/add-liquidity',\n        isNew: false,\n      },\n      {\n        label: t('Pro Trading'),\n        href: 'https://pro.apeswap.finance',\n        isNew: true,\n      },\n      {\n        label: t('GNANA'),\n        href: '/gnana',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Stake'),\n    lightIcon: 'StakeLightImage',\n    darkIcon: 'StakeDarkImage',\n    items: [\n      {\n        label: t('Staking Pools'),\n        href: '/pools',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Maximizers'),\n        href: '/maximizers',\n        isNew: false,\n      },\n      {\n        label: t('BANANA Farms'),\n        href: '/banana-farms',\n        isNew: false,\n      },\n      {\n        label: t('Jungle Farms'),\n        href: '/jungle-farms',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Raise'),\n    lightIcon: 'OfferingsLightImage',\n    darkIcon: 'OfferingsDarkImage',\n    items: [\n      {\n        label: t('Treasury Bills'),\n        href: '/treasury-bills',\n        isNew: false,\n      },\n      {\n        label: t('Official IAO'),\n        href: '/iao',\n        isNew: false,\n      },\n      {\n        label: t('Self-Serve IAO'),\n        href: '/ss-iao',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Collect'),\n    lightIcon: 'NfaLightImage',\n    darkIcon: 'NfaDarkImage',\n    items: [\n      {\n        label: t('NFA Collection'),\n        href: '/nft',\n        isNew: false,\n      },\n      {\n        label: t('NFA Auction'),\n        href: '/auction',\n        isNew: false,\n      },\n      {\n        label: t('NFA Staking'),\n        href: '/staking',\n        isNew: false,\n      },\n      {\n        label: t('NFA Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x6afc012783e3a6ef8c5f05f8eee2edef6a052ec4',\n        isNew: false,\n      },\n      {\n        label: t('NFB Collection'),\n        href: 'https://nftkey.app/collections/nfbs/',\n        isNew: false,\n      },\n      {\n        label: t('NFB Liquidity'),\n        href: 'https://liquidcollectibles.io/collection/0x9f707a412302a3ad64028a9f73f354725c992081',\n        isNew: false,\n      },\n    ],\n  },\n  {\n    label: t('Lend'),\n    href: 'https://lending.apeswap.finance/',\n    isNew: false,\n  },\n  {\n    label: t('Explore'),\n    lightIcon: 'MoreLightImage',\n    darkIcon: 'MoreDarkImage',\n    items: [\n      {\n        label: t('ApeStats'),\n        href: '/apestats',\n        isNew: true,\n      },\n      {\n        label: t('Dashboard'),\n        href: 'protocol-dashboard',\n        isNew: true,\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://apeswap.gitbook.io/apeswap-finance/',\n        isNew: false,\n      },\n      {\n        label: t('Charts'),\n        href: NETWORK_INFO_LINK[ChainId.BSC],\n        isNew: false,\n      },\n      {\n        label: t('Governance'),\n        href: 'https://discuss.apeswap.finance',\n        isNew: false,\n      },\n    ],\n  },\n]\n\nexport default songbirdConfig\n","import { MenuEntry } from '@ape.swap/uikit'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { NETWORK_INFO_LINK } from 'config/constants/chains'\nimport { ContextApi } from '../../../contexts/Localization/types'\n\nconst maticConfig: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Exchange'),\n    lightIcon: 'ExchangeLightImage',\n    darkIcon: 'ExchangeDarkImage',\n    items: [\n      {\n        label: t('Swap'),\n        href: '/swap',\n        isNew: false,\n      },\n      {\n        label: t('Liquidity'),\n        href: '/add-liquidity',\n        isNew: false,\n      },\n      {\n        label: t('Pro Trading'),\n        href: 'https://pro.apeswap.finance',\n        isNew: true,\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    href: '/banana-farms',\n    isNew: false,\n  },\n  {\n    label: t('Explore'),\n    lightIcon: 'MoreLightImage',\n    darkIcon: 'MoreDarkImage',\n    items: [\n      {\n        label: t('ApeStats'),\n        href: '/apestats',\n        isNew: true,\n      },\n      {\n        label: t('Dashboard'),\n        href: 'protocol-dashboard',\n        isNew: true,\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://apeswap.gitbook.io/apeswap-finance/',\n        isNew: false,\n      },\n      {\n        label: t('Charts'),\n        href: NETWORK_INFO_LINK[ChainId.MATIC],\n        isNew: false,\n      },\n      {\n        label: t('Governance'),\n        href: 'https://discuss.apeswap.finance',\n        isNew: false,\n      },\n    ],\n  },\n]\n\nexport default maticConfig\n","import { ChainId } from '@apeswapfinance/sdk'\nimport { MenuEntry } from '@apeswapfinance/uikit'\nimport { NETWORK_INFO_LINK } from 'config/constants/chains'\nimport { ContextApi } from '../../../contexts/Localization/types'\n\nconst maticConfig: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Exchange'),\n    lightIcon: 'ExchangeLightImage',\n    darkIcon: 'ExchangeDarkImage',\n    items: [\n      {\n        label: t('Swap'),\n        href: '/swap',\n        isNew: false,\n      },\n      {\n        label: t('Liquidity'),\n        href: '/add-liquidity',\n        isNew: false,\n      },\n      {\n        label: t('Pro Trading'),\n        href: 'https://pro.apeswap.finance',\n        isNew: true,\n      },\n    ],\n  },\n  {\n    label: t('Explore'),\n    lightIcon: 'MoreLightImage',\n    darkIcon: 'MoreDarkImage',\n    items: [\n      {\n        label: t('ApeStats'),\n        href: '/apestats',\n        isNew: true,\n      },\n      {\n        label: t('Dashboard'),\n        href: 'protocol-dashboard',\n        isNew: true,\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://apeswap.gitbook.io/apeswap-finance/',\n      },\n      {\n        label: t('Charts'),\n        href: NETWORK_INFO_LINK[ChainId.MAINNET],\n      },\n      {\n        label: t('Governance'),\n        href: 'https://discuss.apeswap.finance',\n      },\n    ],\n  },\n  //   {\n  //     label: t('Pools'),\n  //     icon: 'PoolIcon',\n  //     href: '/pools',\n  //   },\n  //   {\n  //     label: t('IAO'),\n  //     icon: 'IfoIcon',\n  //     href: '/iao',\n  //   },\n  //   {\n  //     label: t('GNANA'),\n  //     icon: 'ApeZone',\n  //     href: '/gnana',\n  //   },\n]\n\nexport default maticConfig\n","import { MenuEntry } from '@ape.swap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst iframeConfig: (t: ContextApi['t']) => MenuEntry[] = () => []\n\nexport default iframeConfig\n","import React, { useEffect, useState } from 'react'\nimport { Navbar as UikitMenu, useModal } from '@ape.swap/uikit'\n// import { ChainId } from '@apeswapfinance/sdk'\nimport { ChainId } from './constants';\nimport { uauth } from 'utils/web3React'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport useAuth from 'hooks/useAuth'\nimport useTheme from 'hooks/useTheme'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { useBananaPrice } from 'state/tokenPrices/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile, useLiveIfoStatus } from 'state/hooks'\nimport useSelectNetwork from 'hooks/useSelectNetwork'\nimport track from 'utils/track'\nimport bscConfig from './chains/bscConfig'\nimport flareConfig from './chains/flareConfig'\nimport costonConfig from './chains/costonConfig'\nimport songbirdConfig from './chains/songbirdConfig'\nimport maticConfig from './chains/maticConfig'\nimport { languageList } from '../../config/localization/languages'\nimport ethConfig from './chains/ethConfig'\nimport iframeConfig from './chains/iframeConfig'\nimport MoonPayModal from '../../views/Topup/MoonpayModal'\n\nconst Menu = (props) => {\n  let isIframe = false\n  try {\n    isIframe = window.self !== window.top\n  } catch (e) {\n    console.error(e)\n  }\n  const { account, chainId } = useActiveWeb3React()\n  const { login, logout } = useAuth()\n  const { switchNetwork } = useSelectNetwork()\n  const { isDark, toggleTheme } = useTheme()\n  const { profile } = useProfile()\n  const { t, setLanguage, currentLanguage } = useTranslation()\n  const { liveIfos } = useLiveIfoStatus()\n  const { fastRefresh } = useRefresh()\n  const [uDName, setUDName] = useState(null)\n\n  const bananaPriceUsd = useBananaPrice()\n  const [onPresentModal] = useModal(<MoonPayModal />)\n  const currentMenu = (translate: ContextApi['t']) => {\n    if (chainId === ChainId.BSC && isIframe !== true) {\n      return bscConfig(translate)\n    }\n    if (chainId === ChainId.MATIC && isIframe !== true) {\n      return maticConfig(translate)\n    }\n    if (chainId === ChainId.MAINNET && isIframe !== true) {\n      return ethConfig(translate)\n    }\n    if (chainId === ChainId.FLARE && isIframe !== true) {\n      return flareConfig(translate)\n    }\n    if (chainId === ChainId.COSTON && isIframe !== true) {\n      return costonConfig(translate)\n    }\n    if (chainId === ChainId.SONGBIRD && isIframe !== true) {\n      return songbirdConfig(translate)\n    }\n    if (isIframe === true) {\n      return iframeConfig(translate)\n    }\n    return bscConfig(translate)\n  }\n\n  useEffect(() => {\n    uauth.uauth\n      .user()\n      .then((user) => setUDName(user.sub))\n      .catch(() => null)\n  }, [fastRefresh])\n\n  return (\n    <UikitMenu\n      uDName={uDName}\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      bananaPriceUsd={bananaPriceUsd}\n      t={t}\n      langs={languageList}\n      setLang={setLanguage}\n      currentLang={currentLanguage.language}\n      links={currentMenu(t)}\n      chainId={chainId}\n      switchNetwork={switchNetwork}\n      profile={{\n        image: profile ? profile?.rarestNft.image : null,\n        noProfileLink: '/nft',\n        profileLink: '',\n      }}\n      runFiat={onPresentModal}\n      track={track}\n      liveResult={liveIfos}\n      iframe={isIframe}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@apeswapfinance/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  poolContainer: {\n    height: 'fit-content',\n    width: '100%',\n    background: 'white3',\n    borderRadius: '10px',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0px 10px',\n    cursor: 'pointer',\n    flexDirection: 'column',\n    marginBottom: '10px',\n  },\n  innerContainer: {\n    height: '60px',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  titleContainer: {\n    alignItems: 'center',\n    background: 'white4',\n    borderRadius: '10px',\n    padding: '5px 10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useEffect, useState } from 'react'\nimport { JSBI, Pair, Percent } from '@apeswapfinance/sdk'\nimport { Text, Card, Flex, CardProps, Button, Svg } from '@ape.swap/uikit'\nimport { Link } from 'react-router-dom'\nimport { Box, Divider } from 'theme-ui'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport styled from 'styled-components'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getTokenUsdPrice } from 'utils/getTokenUsdPrice'\nimport { useTranslation } from 'contexts/Localization'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { AutoColumn } from '../layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\nimport { styles } from './styles'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nconst StyledText = styled(Text)`\n  font-size: 14px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 20px;\n  }\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account, chainId } = useActiveWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const { t } = useTranslation()\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <Box>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <StyledText color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </StyledText>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <StyledText small color=\"gray\">\n                    {currency0.getSymbol(chainId)}-{currency1.getSymbol(chainId)} LP\n                  </StyledText>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"gray\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"gray\" small>\n                    {`${t('Pooled')} ${currency0.getSymbol(chainId)}`}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"gray\" small>\n                    {`${t('Pooled')} ${currency1.getSymbol(chainId)}`}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </Box>\n        </Card>\n      ) : (\n        <Card>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            {t(\n              \"By adding liquidity you'll earn 0.2% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </Card>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair }: PositionCardProps) {\n  const { account, chainId } = useActiveWeb3React()\n\n  const [currencyPrice, setCurrencyPrice] = useState<number>(null)\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n  const { t } = useTranslation()\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  useEffect(() => {\n    const fetchCurrencyTokenPrice = async () => {\n      const tokenPriceReturned = await getTokenUsdPrice(chainId, pair?.liquidityToken?.address, 18, true, false)\n      setCurrencyPrice(tokenPriceReturned)\n    }\n    fetchCurrencyTokenPrice()\n  }, [pair, chainId])\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Flex sx={{ ...styles.poolContainer }} onClick={() => setShowMore((prev) => !prev)}>\n      <Flex sx={{ ...styles.innerContainer }}>\n        <Flex sx={{ ...styles.titleContainer }}>\n          <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={28} />\n          <Text size=\"14px\" weight={700} ml=\"5px\">\n            {!currency0 || !currency1 ? (\n              <Dots>Loading</Dots>\n            ) : (\n              `${currency0.getSymbol(chainId)} - ${currency1.getSymbol(chainId)}`\n            )}\n          </Text>\n        </Flex>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text mr=\"10px\" weight={700}>\n            {currencyPrice ? `$${(currencyPrice * parseFloat(userPoolBalance?.toSignificant(4))).toFixed(2)}` : '-'}\n          </Text>\n          <Svg icon=\"caret\" width=\"8px\" direction={showMore ? 'up' : 'down'} />\n        </Flex>\n      </Flex>\n      <AnimatePresence>\n        {showMore && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'fit-content' }}\n            transition={{ opacity: { duration: 0.2 } }}\n            exit={{ opacity: 0, height: 0 }}\n            sx={{ overflow: 'hidden', position: 'relative', width: '100%' }}\n          >\n            <Divider />\n            <Flex sx={{ width: '100%', flexDirection: 'column' }}>\n              <Flex sx={{ justifyContent: 'space-between', margin: '2.5px 0px' }}>\n                <Text size=\"14px\" weight={500}>\n                  {t('Total pooled tokens')}\n                </Text>\n                {userPoolBalance ? (\n                  <Text size=\"14px\" weight={700}>\n                    {userPoolBalance?.toSignificant(4)}\n                  </Text>\n                ) : (\n                  '-'\n                )}\n              </Flex>\n              <Flex sx={{ justifyContent: 'space-between', margin: '2.5px 0px' }}>\n                <Text size=\"14px\" weight={500}>\n                  {t('Pooled')} {currency0.getSymbol(chainId)}\n                </Text>\n                {token0Deposited ? (\n                  <Flex sx={{ alignItems: 'center' }}>\n                    <Text size=\"14px\" weight={700} mr=\"8px\">\n                      {token0Deposited?.toSignificant(6)}\n                    </Text>\n                    <CurrencyLogo size=\"20px\" currency={currency0} />\n                  </Flex>\n                ) : (\n                  '-'\n                )}\n              </Flex>\n              <Flex sx={{ justifyContent: 'space-between', margin: '2.5px 0px' }}>\n                <Text size=\"14px\" weight={500}>\n                  {t('Pooled')} {currency1.getSymbol(chainId)}\n                </Text>\n                {token1Deposited ? (\n                  <Flex sx={{ alignItems: 'center' }}>\n                    <Text size=\"14px\" weight={700} mr=\"8px\">\n                      {token1Deposited?.toSignificant(6)}\n                    </Text>\n                    <CurrencyLogo size=\"20px\" currency={currency1} />\n                  </Flex>\n                ) : (\n                  '-'\n                )}\n              </Flex>\n              <Flex sx={{ justifyContent: 'space-between', margin: '2.5px 0px' }}>\n                <Text size=\"14px\" weight={500}>\n                  {t('Share of pool')}\n                </Text>\n                <Text size=\"14px\" weight={700}>\n                  {poolTokenPercentage\n                    ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                    : '-'}\n                </Text>\n              </Flex>\n              {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n                <Flex mt=\"10px\">\n                  <Button\n                    as={Link}\n                    to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                    fullWidth\n                    mb=\"8px\"\n                    mr=\"10px\"\n                  >\n                    {t('Add')}\n                  </Button>\n                  <Button as={Link} to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`} mb=\"8px\" fullWidth>\n                    {t('Remove')}\n                  </Button>\n                </Flex>\n              )}\n            </Flex>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Flex>\n  )\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  topContainer: {\n    borderRadius: '10px',\n    width: '100%',\n    margin: '20px 0px 10px 0px',\n    background: 'white3',\n    padding: '30px 10px',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useMemo } from 'react'\nimport { Pair } from '@apeswapfinance/sdk'\nimport { Text, Flex, AddIcon, Button, Spinner } from '@ape.swap/uikit'\nimport { Link } from 'react-router-dom'\nimport UnlockButton from 'components/UnlockButton'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport FullPositionCard from '../../../components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from '../../../state/wallet/hooks'\nimport { usePairs } from '../../../hooks/usePairs'\nimport { toV2LiquidityToken, useTrackedTokenPairs, useUserRecentTransactions } from '../../../state/user/hooks'\nimport { dexStyles } from '../styles'\nimport DexNav from '../components/DexNav'\nimport { styles } from './styles'\nimport RecentTransactions from '../components/RecentTransactions'\n\nexport default function Pool() {\n  const { account } = useActiveWeb3React()\n  const [recentTransactions] = useUserRecentTransactions()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs],\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens],\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens,\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n  const { t } = useTranslation()\n\n  const renderBody = () => {\n    if (!account) {\n      return <></>\n    }\n    if (v2IsLoading) {\n      return (\n        <Flex sx={{ alignItems: 'center', justifyContent: 'center' }}>\n          <Spinner size={200} />\n        </Flex>\n      )\n    }\n    if (allV2PairsWithLiquidity?.length > 0) {\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\n        <FullPositionCard\n          key={v2Pair.liquidityToken.address}\n          pair={v2Pair}\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\n        />\n      ))\n    }\n    return (\n      <Flex sx={{ justifyContent: 'center' }}>\n        <Text textAlign=\"center\">{t('No liquidity found.')}</Text>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex sx={{ ...dexStyles.pageContainer }}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex sx={{ ...dexStyles.dexContainer }}>\n          <DexNav />\n          <Flex sx={{ flexDirection: 'column', maxWidth: '100%', width: '420px' }}>\n            <Flex sx={{ ...styles.topContainer }}>\n              <Text weight={700} sx={{ textTransform: 'uppercase' }}>\n                {t('Add liquidity to receive LP tokens')}\n              </Text>\n              {account ? (\n                <Button\n                  id=\"join-pool-button\"\n                  as={Link}\n                  to=\"/add-liquidity\"\n                  startIcon={<AddIcon color=\"white\" />}\n                  fullWidth\n                  mt=\"10px\"\n                >\n                  {t('Add Liquidity')}\n                </Button>\n              ) : (\n                <UnlockButton fullWidth mt=\"10px\" />\n              )}\n            </Flex>\n            {renderBody()}\n          </Flex>\n          {account && !v2IsLoading && (\n            <Flex sx={{ flexDirection: 'column', alignItems: 'center', margin: '20px 0px 10px 0px' }}>\n              <Text mb=\"8px\">{t('Dont see a pool you joined?')}</Text>\n              <Text style={{ textDecoration: 'underline' }} mb=\"8px\" as={Link} to=\"/find\">\n                {t('Find other LP tokens')}\n              </Text>\n            </Flex>\n          )}\n        </Flex>\n        {recentTransactions && <RecentTransactions />}\n      </Flex>\n    </Flex>\n  )\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\nimport { buttonHover } from 'views/Dex/styles'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  swapSwitchContainer: {\n    width: '100%',\n    height: '50px',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  swapSwitchButton: {\n    background: 'yellow',\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    justifyContent: 'center',\n    paddingRight: '1px',\n    cursor: 'pointer',\n    transition: 'all .3s linear',\n    '&:active': {\n      transform: 'scale(0.9)',\n    },\n    ':hover': buttonHover,\n  },\n  SwapConfirmDisabledInputContainer: {\n    backgroundColor: 'white3',\n    borderRadius: '10px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    padding: '10px',\n    height: '60px',\n  },\n  outerLogoCircle: {\n    zIndex: 1,\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white2',\n    flexDirection: 'column',\n  },\n  innerLogoCircle: {\n    height: '22.5px',\n    width: '22.5px',\n    borderRadius: '22.5px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n    paddingRight: '.6px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@apeswapfinance/sdk'\nimport { Text, ErrorIcon, Button, Flex, Svg } from '@ape.swap/uikit'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AutoColumn } from 'components/layout/Column'\nimport { RouterTypeParams } from 'state/swap/actions'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles } from './styles'\n\nexport default function SwapModalHeader({\n  trade,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n  bestRoute,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  bestRoute: RouterTypeParams\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n\n  const { chainId } = useActiveWeb3React()\n  const { priceImpactWithoutFee } = useMemo(\n    () => computeTradePriceBreakdown(chainId, bestRoute.smartRouter, trade),\n    [trade, chainId, bestRoute],\n  )\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = `${t('Output will be sent to')} ${truncatedRecipient}`\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <>\n      <Flex sx={{ ...styles.SwapConfirmDisabledInputContainer, transform: 'translate(0px, 12px)' }}>\n        <Text\n          size=\"22px\"\n          weight={700}\n          color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'yellow' : 'text'}\n        >\n          {trade.inputAmount.toSignificant(6)}\n        </Text>\n        <Flex sx={{ alignItems: 'center' }}>\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"30px\" />\n          <Text size=\"14px\" weight={700} ml=\"10px\">\n            {trade.inputAmount.currency.getSymbol(chainId)}\n          </Text>\n        </Flex>\n      </Flex>\n      <Flex sx={{ justifyContent: 'center' }}>\n        <Flex sx={styles.outerLogoCircle}>\n          <Flex sx={styles.innerLogoCircle}>\n            <Svg icon=\"arrow\" width=\"6px\" color=\"primaryBright\" />\n          </Flex>\n        </Flex>\n      </Flex>\n      <Flex sx={{ ...styles.SwapConfirmDisabledInputContainer, transform: 'translate(0px, -12px)' }}>\n        <Text\n          size=\"22px\"\n          weight={700}\n          color={\n            priceImpactSeverity > 2\n              ? 'error'\n              : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n              ? 'yellow'\n              : 'text'\n          }\n        >\n          {trade.outputAmount.toSignificant(6)}\n        </Text>\n        <Flex sx={{ alignItems: 'center' }}>\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"30px\" />\n          <Text size=\"14px\" weight={700} ml=\"10px\">\n            {trade.outputAmount.currency.getSymbol(chainId)}\n          </Text>\n        </Flex>\n      </Flex>\n      <>\n        {showAcceptChanges ? (\n          <Flex sx={{ margin: '10px 0px' }}>\n            <RowBetween>\n              <RowFixed>\n                <ErrorIcon mr=\"8px\" />\n                <Text bold>{t('Price Updated')}</Text>\n              </RowFixed>\n              <Button size=\"sm\" onClick={onAcceptChanges}>\n                {t('Accept')}\n              </Button>\n            </RowBetween>\n          </Flex>\n        ) : null}\n        {recipient !== null ? (\n          <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n            <Text>\n              {recipientSentToText}\n              <b title={recipient}>{truncatedRecipient}</b>\n              {postSentToText}\n            </Text>\n          </AutoColumn>\n        ) : null}\n      </>\n    </>\n  )\n}\n","import { Percent } from '@apeswapfinance/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from '../Orders/components/styles'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  dexTradeInfoContainer: {\n    border: '2px solid',\n    marginTop: '10px',\n    borderRadius: '10px',\n    borderColor: 'white3',\n    background: 'white3',\n    padding: '5px 10px',\n    width: '100%',\n    flexDirection: 'column',\n    height: 'fit-content',\n    cursor: 'pointer',\n    overflow: 'hidden',\n  },\n\n  normalRouterContainer: {\n    borderRadius: 4,\n    padding: '4px 6px',\n    margin: '2px 0px',\n    minHeight: '16px',\n    mr: '7px',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  bottomRouterContainer: {\n    width: '100%',\n    padding: '10px',\n    borderRadius: '10px',\n    margin: '10px 0px',\n    flexDirection: 'column',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport { Price } from '@apeswapfinance/sdk'\nimport { Text } from '@ape.swap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { dexStyles } from 'views/Dex/styles'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n  color?: string\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const { chainId } = useActiveWeb3React()\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `1 ${price?.baseCurrency?.getSymbol(chainId)} = ${formattedPrice} ${price?.quoteCurrency?.getSymbol(chainId)}`\n    : `1 ${price?.quoteCurrency?.getSymbol(chainId)} = ${formattedPrice} ${price?.baseCurrency?.getSymbol(chainId)}`\n\n  return (\n    <Text\n      size=\"12px\"\n      weight={700}\n      sx={{ ...dexStyles.textWrap }}\n      onClick={() => setShowInverted(!showInverted)}\n      mr=\"10px\"\n    >\n      {show && label}\n    </Text>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, HelpIcon, Svg, Text, TooltipBubble } from '@ape.swap/uikit'\nimport { Trade } from '@apeswapfinance/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport React, { useMemo, useState } from 'react'\nimport { Divider } from 'theme-ui'\nimport { Field, SwapDelay, RouterTypeParams } from 'state/swap/actions'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { RouterTypes } from 'config/constants'\nimport { CHAIN_PARAMS } from 'config/constants/chains'\nimport { dexStyles } from 'views/Dex/styles'\nimport FormattedPriceImpact from '../../../components/FormattedPriceImpact'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { computeTradePriceBreakdown, computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { styles } from './styles'\nimport TradePrice from './TradePrice'\n\nconst DexTradeInfo: React.FC<{\n  trade: Trade\n  allowedSlippage: number\n  bestRoute: RouterTypeParams\n  swapDelay?: SwapDelay\n  onSetSwapDelay?: (swapDelay: SwapDelay) => void\n  open?: boolean\n}> = ({ trade, allowedSlippage, swapDelay, bestRoute, open = false }) => {\n  const { chainId } = useActiveWeb3React()\n  const [showMore, setShowMore] = useState(open)\n  const isBonusRouter = bestRoute.routerType === RouterTypes.BONUS\n  const isSmartRouter = bestRoute.routerType === RouterTypes.SMART\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState(false)\n  const route = trade?.route?.path?.map((val, i) => {\n    return i < trade?.route?.path?.length - 1 ? `${val.getSymbol(chainId)} > ` : val.getSymbol(chainId)\n  })\n  const expectedOutput = trade?.outputAmount?.toSignificant(4)\n  // get custom setting values for user\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(\n    () => computeTradePriceBreakdown(chainId, bestRoute.smartRouter, trade),\n    [trade, bestRoute, chainId],\n  )\n\n  return trade && swapDelay !== SwapDelay.INIT ? (\n    <Flex sx={{ ...styles.dexTradeInfoContainer }}>\n      <Flex\n        sx={{ width: '100%', justifyContent: 'space-between', alignItems: 'center' }}\n        onClick={() => setShowMore((prev) => !prev)}\n      >\n        <TradePrice price={trade?.executionPrice} showInverted={showInverted} setShowInverted={setShowInverted} />\n        <Flex>\n          <Flex\n            sx={{\n              ...styles.normalRouterContainer,\n              background: isBonusRouter ? 'smartGradient' : 'white4',\n            }}\n          >\n            <Text\n              size=\"8px\"\n              color={isBonusRouter ? 'primaryBright' : 'text'}\n              weight={700}\n              sx={{ ...dexStyles.textWrap, lineHeight: isBonusRouter ? '10px' : '10px' }}\n            >\n              {isBonusRouter ? t('Bonus Router') : isSmartRouter ? t('Smart Router') : t('ApeSwap Router')}\n            </Text>\n          </Flex>\n          <Svg icon=\"caret\" direction={showMore ? 'up' : 'down'} />\n        </Flex>\n      </Flex>\n      <AnimatePresence>\n        {showMore && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'fit-content' }}\n            transition={{ opacity: { duration: 0.2 } }}\n            exit={{ opacity: 0, height: 0 }}\n            sx={{ position: 'relative' }}\n          >\n            <Divider />\n            <Flex sx={{ justifyContent: 'space-between', margin: '10px 0px' }}>\n              <Text size=\"12px\" sx={dexStyles.textWrap} mr=\"10px\">\n                {t('Price impact')}\n              </Text>\n              <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n            </Flex>\n            <Flex sx={{ justifyContent: 'space-between', margin: '10px 0px' }}>\n              <Text size=\"12px\" sx={dexStyles.textWrap} mr=\"10px\">\n                {t('Expected output')}\n              </Text>\n              <Text size=\"12px\" sx={dexStyles.textWrap}>\n                {expectedOutput} {trade.outputAmount.currency.getSymbol(chainId)}\n              </Text>\n            </Flex>\n            <Flex sx={{ justifyContent: 'space-between', margin: '10px 0px' }}>\n              <Text size=\"12px\" sx={dexStyles.textWrap} mr=\"10px\">\n                {t('Minimum received')}\n              </Text>\n              <Text size=\"12px\" sx={dexStyles.textWrap}>\n                {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)}{' '}\n                {trade.outputAmount.currency.getSymbol(chainId)}\n              </Text>\n            </Flex>\n            <Flex sx={{ justifyContent: 'space-between', margin: '10px 0px' }}>\n              <Text size=\"12px\" sx={dexStyles.textWrap} mr=\"10px\">\n                {t('Liquidity provider fee')}\n              </Text>\n              <Text size=\"12px\" sx={dexStyles.textWrap}>\n                {realizedLPFee\n                  ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.getSymbol(chainId)}`\n                  : '-'}\n              </Text>\n            </Flex>\n            {/**\n             * TODO: Break this up into a component\n             */}\n            <Flex\n              sx={{\n                ...styles.bottomRouterContainer,\n                background: isBonusRouter ? 'smartGradient' : 'white4',\n              }}\n            >\n              <Flex sx={{ justifyContent: 'space-between', margin: '4px 0px' }}>\n                <Text color={isBonusRouter ? 'primaryBright' : 'text'} size=\"12px\" weight={700} sx={dexStyles.textWrap}>\n                  {isBonusRouter ? t('Bonus Router') : isSmartRouter ? t('Smart Router') : t('ApeSwap Router')}\n                </Text>\n                <Flex sx={{ alignSelf: 'flex-end' }}>\n                  <TooltipBubble\n                    body={\n                      <Text size=\"12px\" weight={500} sx={{ lineHeight: '10px' }}>\n                        {isBonusRouter\n                          ? t(\n                              'The router used to upgrade transactions and return a swap bonus if the trade meets certain conditions.',\n                            )\n                          : isSmartRouter\n                          ? t(\n                              'The router used to facilitate transactions through other DEXs if ApeSwap’s DEX cannot fulfill them.',\n                            )\n                          : t('The native router that powers the majority of trades on the ApeSwap DEX.')}\n                      </Text>\n                    }\n                    placement=\"topRight\"\n                    transformTip=\"translate(22px, 0px)\"\n                    width=\"200px\"\n                  >\n                    <HelpIcon\n                      width=\"12px\"\n                      color={isBonusRouter ? 'primaryBright' : 'text'}\n                      sx={{ alignSelf: 'flex-end' }}\n                    />\n                  </TooltipBubble>\n                </Flex>\n              </Flex>\n              {isBonusRouter && (\n                <>\n                  <Flex sx={{ justifyContent: 'space-between', margin: '2px 0px' }}>\n                    <Text color=\"primaryBright\" size=\"10px\" sx={dexStyles.textWrap} mr=\"10px\">\n                      {t('Estimated swap bonus')}\n                    </Text>\n                    <Text color=\"primaryBright\" size=\"10px\" sx={dexStyles.textWrap}>\n                      ~ {(bestRoute?.bonusRouter?.summary?.searchSummary?.expectedKickbackProfit * 0.3).toFixed(6)}{' '}\n                      {CHAIN_PARAMS[chainId].nativeCurrency.symbol}{' '}\n                      {`(~$${(bestRoute?.bonusRouter?.summary?.searchSummary?.expectedUsdProfit * 0.3).toFixed(2)})`}\n                    </Text>\n                  </Flex>\n                </>\n              )}\n              <Flex sx={{ justifyContent: 'space-between', margin: '4px 0px' }}>\n                <Text color={isBonusRouter ? 'primaryBright' : 'text'} size=\"10px\" sx={dexStyles.textWrap}>\n                  {t('Route')}\n                </Text>\n                <Text color={isBonusRouter ? 'primaryBright' : 'text'} size=\"10px\" sx={dexStyles.textWrap}>\n                  {route}\n                </Text>\n              </Flex>\n            </Flex>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Flex>\n  ) : (\n    <></>\n  )\n}\n\nexport default React.memo(DexTradeInfo)\n","/** @jsxImportSource theme-ui */\nimport React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@apeswapfinance/sdk'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { useTranslation } from 'contexts/Localization'\nimport { Button, Text, Flex } from '@ape.swap/uikit'\nimport { Field, RouterTypeParams } from 'state/swap/actions'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport DexTradeInfo from './DexTradeInfo'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  bestRoute,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  bestRoute: RouterTypeParams\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const { priceImpactWithoutFee } = useMemo(\n    () => computeTradePriceBreakdown(chainId, bestRoute.smartRouter, trade),\n    [trade, chainId, bestRoute],\n  )\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? trade.outputAmount.currency.getSymbol(chainId)\n      : trade.inputAmount.currency.getSymbol(chainId)\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will be cancelled.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will be cancelled.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  return (\n    <Flex sx={{ flexDirection: 'column', transform: 'translate(0px, -10px)' }}>\n      <DexTradeInfo trade={trade} allowedSlippage={allowedSlippage} bestRoute={bestRoute} />\n      <Flex sx={{ margin: '10px 0px' }}>\n        <Text size=\"12px\" weight={500} sx={{ textAlign: 'center' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </Flex>\n      <>\n        <Button fullWidth onClick={onConfirm} disabled={disabledConfirm} mt=\"12px\" id=\"confirm-swap-or-send\">\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n        {swapErrorMessage ? 'eror' : null}\n      </>\n    </Flex>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@apeswapfinance/sdk'\nimport { ModalProps } from '@apeswapfinance/uikit'\nimport { Flex } from '@ape.swap/uikit'\nimport { RouterTypeParams } from 'state/swap/actions'\nimport TransactionConfirmationModal, { TransactionErrorContent } from 'components/TransactionConfirmationModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapModalHeader from './SwapModalHeader'\nimport SwapModalFooter from './SwapModalFooter'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  bestRoute: RouterTypeParams\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<ModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  bestRoute,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n        bestRoute={bestRoute}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade, bestRoute])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        bestRoute={bestRoute}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, bestRoute, trade])\n\n  // text to show while loading\n  const pendingText = `${t('Swapping')} ${trade?.inputAmount?.toSignificant(6) ?? ''} ${\n    trade?.inputAmount?.currency?.getSymbol(chainId) ?? ''\n  } for ${trade?.outputAmount?.toSignificant(6) ?? ''} ${trade?.outputAmount?.currency?.getSymbol(chainId) ?? ''}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={\n            swapErrorMessage.includes('INSUFFICIENT_OUTPUT_AMOUNT')\n              ? t('Slippage Error: Please check your slippage & try again!')\n              : swapErrorMessage\n          }\n        />\n      ) : (\n        <Flex sx={{ flexDirection: 'column' }}>\n          {modalHeader()}\n          {modalBottom()}\n        </Flex>\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage, t],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default React.memo(ConfirmSwapModal)\n","/** @jsxImportSource theme-ui */\nimport { Flex, Svg } from '@ape.swap/uikit'\nimport React from 'react'\nimport { styles } from './styles'\n\nconst SwapSwitchButton: React.FC<{ onClick?: () => void }> = ({ onClick }) => (\n  <Flex sx={styles.swapSwitchContainer}>\n    <Flex sx={styles.swapSwitchButton} onClick={onClick}>\n      <Svg icon=\"swapArrows\" width=\"13px\" color=\"primaryBright\" />\n    </Flex>\n  </Flex>\n)\n\nexport default React.memo(SwapSwitchButton)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Token selector container\n  dexActionsContainer: {\n    position: 'relative',\n    width: '100%',\n    marginTop: '10px',\n  },\n\n  navLinkContainer: {\n    width: '100%',\n    maxWidth: '225px',\n    paddingRight: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navIconContainer: {\n    width: '100%',\n    maxWidth: '60px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navLink: {\n    cursor: 'pointer',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Button, Flex, Text } from '@ape.swap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { RouterTypes } from 'config/constants'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { WrapType } from 'hooks/useWrapCallback'\nimport React from 'react'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { warningSeverity } from 'utils/prices'\nimport { styles } from './styles'\nimport { DexActionProps } from './types'\n\nconst DexActions: React.FC<DexActionProps> = ({\n  trade,\n  swapInputError,\n  isExpertMode,\n  showWrap,\n  wrapType,\n  priceImpactWithoutFee,\n  swapCallbackError,\n  userHasSpecifiedInputOutput,\n  routerType,\n  smartRouter,\n  disabled,\n  wrapInputError,\n  onWrap,\n  handleSwap,\n  onPresentConfirmModal,\n  setSwapState,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(\n    trade,\n    allowedSlippage,\n    false,\n    routerType,\n    smartRouter,\n  )\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const renderAction = () => {\n    if (!account) {\n      return <UnlockButton fullWidth />\n    }\n    if (showWrap) {\n      return (\n        <Button fullWidth onClick={onWrap} disabled={Boolean(wrapInputError)}>\n          {wrapType === WrapType.WRAP ? t('Wrap') : t('Unwrap')}\n        </Button>\n      )\n    }\n    if (!trade?.route && userHasSpecifiedInputOutput && !disabled) {\n      return (\n        <Text margin=\"10px 0px\" sx={{ width: '100%', textAlign: 'center' }}>\n          {t('Insufficient liquidity for this trade')}\n        </Text>\n      )\n    }\n    if (showApproveFlow) {\n      return (\n        <Button\n          fullWidth\n          onClick={approveCallback}\n          disabled={approval !== ApprovalState.NOT_APPROVED || disabled}\n          load={approval === ApprovalState.PENDING}\n        >\n          {approval === ApprovalState.PENDING\n            ? t('Approving')\n            : t('Approve %route% Router', {\n                route:\n                  routerType === RouterTypes.BONUS\n                    ? RouterTypes.BONUS\n                    : routerType === RouterTypes.SMART\n                    ? RouterTypes.SMART\n                    : 'APESWAP',\n              })}\n        </Button>\n      )\n    }\n    return (\n      <Button\n        fullWidth\n        onClick={() => {\n          if (isExpertMode) {\n            handleSwap()\n          } else {\n            setSwapState({\n              tradeToConfirm: trade,\n              attemptingTxn: false,\n              swapErrorMessage: undefined,\n              txHash: undefined,\n            })\n            onPresentConfirmModal()\n          }\n        }}\n        id=\"swap-button\"\n        disabled={!!swapInputError || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError || disabled}\n      >\n        {swapInputError ||\n          (priceImpactSeverity > 3 && !isExpertMode\n            ? t('Price Impact Too High')\n            : priceImpactSeverity > 2\n            ? t('Swap Anyway')\n            : t('Swap'))}\n      </Button>\n    )\n  }\n\n  return <Flex sx={{ ...styles.dexActionsContainer }}>{renderAction()}</Flex>\n}\n\nexport default React.memo(DexActions)\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Spinner } from 'theme-ui'\nimport { dexStyles } from 'views/Dex/styles'\nimport { styles } from './DexTradeInfo/styles'\n\nconst LoadingBestRoute: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <Flex sx={styles.dexTradeInfoContainer}>\n      <Flex sx={{ alignItems: 'center' }}>\n        <Spinner size=\"22px\" mr=\"15px\" color=\"text\" />\n        <Text size=\"12px\" sx={dexStyles.textWrap}>\n          {t('Fetching the best route')}\n        </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(LoadingBestRoute)\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Link, Flex } from '@ape.swap/uikit'\nimport { NETWORK_LABEL } from 'config/constants/chains'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../../hooks/useActiveWeb3React'\nimport { getEtherscanLink } from '../../../../utils'\n\nconst SInput = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.colors.white3};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.error : theme.colors.text)};\n  overflow: hidden;\n  font-size: 16px;\n  padding: 10px;\n  height: 40px;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.text};\n    text-align: center;\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.gray};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <Flex id={id} sx={{ flexDirection: 'column', width: '100%', marginTop: '10px' }}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex>\n          {address && chainId && (\n            <Link external small href={getEtherscanLink(name ?? address, 'address', chainId)} sx={{ fontSize: '12px' }}>\n              {t('View on %name%Scan', { name: NETWORK_LABEL[chainId] })}\n            </Link>\n          )}\n        </Flex>\n        <Flex sx={{ width: '100%', position: 'relative' }}>\n          <SInput\n            className=\"recipient-address-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            spellCheck=\"false\"\n            placeholder={t('Wallet Address or ENS name')}\n            error={error}\n            pattern=\"^(0x[a-fA-F0-9]{40})$\"\n            onChange={handleInput}\n            value={value}\n          />\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n","import { Flex, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { textUnderlineHover } from 'views/Dex/styles'\nimport AddressInputPanel from './AddressInputPanel'\n\nconst ExpertModeRecipient: React.FC<{\n  recipient: string\n  showWrap: boolean\n  isExpertMode: boolean\n  onChangeRecipient: (recipient: string) => void\n}> = ({ recipient, showWrap, isExpertMode, onChangeRecipient }) => {\n  const { t } = useTranslation()\n  return isExpertMode ? (\n    <Flex sx={{ alignItems: 'center', justifyContent: 'center', mt: '10px' }}>\n      {recipient === null && !showWrap && (\n        <Flex\n          sx={{ cursor: 'pointer', position: 'relative', width: 'fit-content', ...textUnderlineHover }}\n          onClick={() => onChangeRecipient('')}\n        >\n          <Text size=\"14px\" id=\"add-recipient-button\">\n            {t('Add recipient')}\n          </Text>\n        </Flex>\n      )}\n      {recipient !== null && !showWrap && (\n        <Flex\n          justify=\"space-between\"\n          style={{\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n          }}\n        >\n          <Flex\n            sx={{ cursor: 'pointer', position: 'relative', width: 'fit-content', ...textUnderlineHover }}\n            onClick={() => onChangeRecipient(null)}\n          >\n            {' '}\n            <Text size=\"14px\" id=\"remove-recipient-button\">\n              {t('Remove recipient')}\n            </Text>\n          </Flex>\n\n          <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n        </Flex>\n      )}\n    </Flex>\n  ) : (\n    <></>\n  )\n}\n\nexport default React.memo(ExpertModeRecipient)\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAllTokens, useCurrency } from 'hooks/Tokens'\nimport { Field, SwapDelay } from 'state/swap/actions'\nimport { Flex, useModal } from '@ape.swap/uikit'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { computeTradePriceBreakdown } from 'utils/prices'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport track from 'utils/track'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@apeswapfinance/sdk'\nimport { useExpertModeManager, useUserRecentTransactions, useUserSlippageTolerance } from 'state/user/hooks'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport maxAmountSpend from 'utils/maxAmountSpend'\nimport { dexStyles } from '../styles'\nimport DexPanel from '../components/DexPanel'\nimport DexNav from '../components/DexNav'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport SwapSwitchButton from './components/SwapSwitchButton'\nimport DexActions from './components/DexActions'\nimport DexTradeInfo from './components/DexTradeInfo'\nimport LoadingBestRoute from './components/LoadingBestRoute'\nimport ExpertModeRecipient from './components/ExpertModeRecipient'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport RecentTransactions from '../components/RecentTransactions'\n\nconst Swap: React.FC = () => {\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const history = useHistory()\n\n  const [tradeValueUsd, setTradeValueUsd] = useState(0)\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const [recentTransactions] = useUserRecentTransactions()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  const { INPUT, OUTPUT, independentField, typedValue, recipient, swapDelay, bestRoute } = useSwapState()\n\n  // the callback to execute the swap\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const [inputCurrency, outputCurrency] = [useCurrency(INPUT?.currencyId), useCurrency(OUTPUT?.currencyId)]\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n    bestRoute,\n  )\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n\n  const fetchingBestRoute =\n    swapDelay === SwapDelay.USER_INPUT ||\n    swapDelay === SwapDelay.FETCHING_SWAP ||\n    swapDelay === SwapDelay.FETCHING_BONUS\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(chainId, bestRoute.smartRouter, trade)\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false })) // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash])\n\n  const handleMaxInput = useCallback(\n    (field: Field) => {\n      if (maxAmountInput) {\n        onUserInput(field, maxAmountInput.toExact())\n      }\n    },\n    [maxAmountInput, onUserInput],\n  )\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n\n  const { routerType } = bestRoute\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(async (hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n        track({\n          event: 'swap',\n          value: tradeValueUsd,\n          chain: chainId,\n          data: {\n            router: routerType,\n            token1: trade?.inputAmount?.currency?.getSymbol(chainId),\n            token2: trade?.outputAmount?.currency?.getSymbol(chainId),\n            token1Amount: Number(trade?.inputAmount.toSignificant(6)),\n            token2Amount: Number(trade?.outputAmount.toSignificant(6)),\n          },\n        })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, trade, tradeValueUsd, chainId, t, routerType])\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault = useMemo(\n    () =>\n      urlLoadedTokens &&\n      urlLoadedTokens.filter((token: Token) => {\n        return !(token.address in defaultTokens)\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [urlLoadedTokens],\n  )\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      bestRoute={bestRoute}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'swapConfirmModal',\n  )\n\n  return (\n    <Flex sx={dexStyles.pageContainer}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex sx={dexStyles.dexContainer}>\n          <DexNav />\n          <Flex sx={{ margin: '25px 0px', maxWidth: '100%', width: '420px' }} />\n          <DexPanel\n            value={formattedAmounts[Field.INPUT]}\n            panelText=\"From\"\n            currency={inputCurrency}\n            otherCurrency={outputCurrency}\n            setTradeValueUsd={setTradeValueUsd}\n            fieldType={Field.INPUT}\n            onCurrencySelect={onCurrencySelection}\n            onUserInput={onUserInput}\n            handleMaxInput={handleMaxInput}\n            smartRouter={bestRoute.smartRouter}\n            independentField={independentField}\n            disabled={fetchingBestRoute}\n          />\n          <SwapSwitchButton onClick={onSwitchTokens} />\n          <DexPanel\n            value={formattedAmounts[Field.OUTPUT]}\n            panelText=\"To\"\n            currency={outputCurrency}\n            otherCurrency={inputCurrency}\n            fieldType={Field.OUTPUT}\n            onCurrencySelect={onCurrencySelection}\n            onUserInput={onUserInput}\n            smartRouter={bestRoute.smartRouter}\n            independentField={independentField}\n            disabled={fetchingBestRoute}\n          />\n\n          <ExpertModeRecipient\n            recipient={recipient}\n            showWrap={showWrap}\n            isExpertMode={isExpertMode}\n            onChangeRecipient={onChangeRecipient}\n          />\n          {showWrap ? (\n            <></>\n          ) : fetchingBestRoute ? (\n            <LoadingBestRoute />\n          ) : (\n            <DexTradeInfo\n              trade={v2Trade}\n              allowedSlippage={allowedSlippage}\n              bestRoute={bestRoute}\n              swapDelay={swapDelay}\n            />\n          )}\n          <DexActions\n            trade={trade}\n            wrapInputError={wrapInputError}\n            swapInputError={swapInputError}\n            isExpertMode={isExpertMode}\n            showWrap={showWrap}\n            wrapType={wrapType}\n            routerType={bestRoute.routerType}\n            smartRouter={bestRoute.smartRouter}\n            swapCallbackError={swapCallbackError}\n            priceImpactWithoutFee={priceImpactWithoutFee}\n            userHasSpecifiedInputOutput={userHasSpecifiedInputOutput}\n            onWrap={onWrap}\n            handleSwap={handleSwap}\n            onPresentConfirmModal={onPresentConfirmModal}\n            setSwapState={setSwapState}\n            disabled={fetchingBestRoute}\n          />\n        </Flex>\n        {recentTransactions && <RecentTransactions />}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(Swap)\n","import { Percent } from '@apeswapfinance/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          `This swap has a price impact of at least %percent%%. Please type the word \"%confirmWord%\" to continue with this swap.`,\n          {\n            percent: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        `This swap has a price impact of at least %percent%%. Please confirm that you would like to continue with this swap.`,\n        {\n          percent: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from '@apeswapfinance/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { usePair } from 'hooks/usePairs'\nimport { useTranslation } from 'contexts/Localization'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: CurrencyAmount\n    [Field.CURRENCY_B]?: CurrencyAmount\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n  const { t } = useTranslation()\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else if (tokens[independentField]) {\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n    const liquidityValue = liquidityValues[independentField]\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n      percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined,\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onUserInput,\n  }\n}\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  poolInfoContainer: {\n    width: '100%',\n    background: 'white3',\n    marginTop: '10px',\n    flexDirection: 'column',\n    borderRadius: '10px',\n    padding: '10px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Flex, Text } from '@ape.swap/uikit'\nimport { CurrencyAmount, Pair, Percent, TokenAmount } from '@apeswapfinance/sdk'\nimport { CurrencyLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport useTotalSupply from 'hooks/useTotalSupply'\nimport React from 'react'\nimport { Field } from 'state/burn/actions'\nimport { styles } from './styles'\n\nconst PoolInfo: React.FC<{\n  pair: Pair\n  parsedAmounts: {\n    LIQUIDITY_PERCENT: Percent\n    LIQUIDITY?: TokenAmount\n    CURRENCY_A?: CurrencyAmount\n    CURRENCY_B?: CurrencyAmount\n  }\n  chainId?: number\n}> = ({ pair, parsedAmounts, chainId }) => {\n  const { t } = useTranslation()\n  const totalPoolTokens = useTotalSupply(pair?.liquidityToken)\n  const lpAmount = parsedAmounts[Field.LIQUIDITY]?.divide(totalPoolTokens || '0')?.multiply('100')\n  return (\n    <Flex sx={{ ...styles.poolInfoContainer }}>\n      <Flex sx={{ justifyContent: 'space-between' }}>\n        <Text size=\"12px\" weight=\"light\">\n          {t('LPs To Remove')}\n        </Text>\n        <Text size=\"12px\" weight={700}>\n          {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) || '-'}\n        </Text>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between' }}>\n        <Text size=\"12px\" weight=\"light\">\n          {t('Share of Pool')}\n        </Text>\n        <Text size=\"12px\" weight={700}>\n          {lpAmount ? `${lpAmount.toSignificant(2)}%` : '-'}\n        </Text>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between' }}>\n        <Text size=\"12px\" weight=\"light\">\n          {t('Pooled %currency%', {\n            currency: pair?.token0?.getSymbol(chainId) || '-',\n          })}\n        </Text>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text size=\"12px\" weight={700} mr=\"5px\">\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) || '-'}\n          </Text>\n          <CurrencyLogo currency={pair?.token0} size=\"18px\" />\n        </Flex>\n      </Flex>\n      <Flex sx={{ justifyContent: 'space-between' }}>\n        <Text size=\"12px\" weight=\"light\">\n          {t('Pooled %currency%', {\n            currency: pair?.token1?.getSymbol(chainId) || '-',\n          })}\n        </Text>\n        <Flex sx={{ alignItems: 'center' }}>\n          <Text size=\"12px\" weight={700} mr=\"5px\">\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) || '-'}\n          </Text>\n          <CurrencyLogo currency={pair?.token1} size=\"18px\" />\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(PoolInfo)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  modalWrapper: {\n    flexDirection: 'column',\n  },\n  swapSwitchButton: {\n    backgroundColor: 'yellow',\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n  },\n  confirmDisabledInputContainer: {\n    backgroundColor: 'white3',\n    borderRadius: '10px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    padding: '10px',\n    height: '60px',\n  },\n  outerLogoCircle: {\n    zIndex: 1,\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white2',\n  },\n  innerLogoCircle: {\n    height: '22.5px',\n    width: '22.5px',\n    borderRadius: '22.5px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow',\n    paddingRight: '.6px',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Button, Flex, Text } from '@ape.swap/uikit'\nimport { Modal } from '@apeswapfinance/uikit'\nimport { DoubleCurrencyLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React from 'react'\nimport { Field } from 'state/burn/actions'\nimport { ConfirmationPendingContent, TransactionSubmittedContent } from 'components/TransactionConfirmationModal'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { RemoveLiquidityModalProps } from './types'\nimport { styles } from './styles'\nimport PoolInfo from '../PoolInfo'\n\nconst RemoveLiquidityModal: React.FC<RemoveLiquidityModalProps> = ({\n  pair,\n  title,\n  parsedAmounts,\n  txHash,\n  attemptingTxn,\n  onDismiss,\n  onRemove,\n}) => {\n  const { chainId } = useActiveWeb3React()\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const { t } = useTranslation()\n  const currencyA = pair?.token0\n  const currencyB = pair?.token1\n  const pendingText = `${t('Removing')} ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? ''} ${\n    currencyA?.getSymbol(chainId) ?? ''\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? ''} ${currencyB?.getSymbol(chainId) ?? ''}`\n  return (\n    <Modal title={title} maxWidth=\"420px\" onDismiss={onDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : txHash ? (\n        <TransactionSubmittedContent chainId={chainId} hash={txHash} onDismiss={onDismiss} />\n      ) : (\n        <Flex sx={{ ...styles.modalWrapper }}>\n          <>\n            <Flex sx={{ ...styles.confirmDisabledInputContainer, marginTop: '10px' }}>\n              <Text size=\"22px\" weight={700}>\n                {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n              </Text>\n              <Flex sx={{ alignItems: 'center' }}>\n                <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} size={30} />\n                <Text size=\"14px\" weight={700} ml=\"5px\">\n                  {`${currencyA?.getSymbol(chainId)} - ${currencyB?.getSymbol(chainId)}`}\n                </Text>\n              </Flex>\n            </Flex>\n            <Text size=\"14px\" textAlign=\"left\" mt=\"15px\" weight={500} style={{ textAlign: 'center' }}>\n              {t(\n                'Output is estimated. If the price changes by more than %allowedSlippage%% your transaction will revert.',\n                { allowedSlippage: allowedSlippage / 100 },\n              )}\n            </Text>\n            <PoolInfo pair={pair} parsedAmounts={parsedAmounts} chainId={chainId} />\n            <Button onClick={onRemove} fullWidth mt=\"15px\">\n              {t('Confirm Remove Liquidity')}\n            </Button>\n          </>\n        </Flex>\n      )}\n    </Modal>\n  )\n}\n\nexport default React.memo(RemoveLiquidityModal)\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Token selector container\n  dexActionsContainer: {\n    position: 'relative',\n    width: '100%',\n    marginTop: '10px',\n  },\n\n  navLinkContainer: {\n    width: '100%',\n    maxWidth: '225px',\n    paddingRight: '20px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navIconContainer: {\n    width: '100%',\n    maxWidth: '60px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n\n  navLink: {\n    cursor: 'pointer',\n  },\n}\n","/** @jsxImportSource theme-ui */\nimport { Button, Flex, useModal } from '@ape.swap/uikit'\nimport { ETHER, ROUTER_ADDRESS } from '@apeswapfinance/sdk'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber, Contract } from 'ethers'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { parseAddress } from 'hooks/useAddress'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { usePairContract } from 'hooks/useContract'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Field } from 'state/burn/actions'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from 'state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\nimport track from 'utils/track'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport RemoveLiquidityModal from '../RemoveLiquidityModal'\nimport { styles } from './styles'\nimport { RemoveLiquidityActionProps } from './types'\n\nconst RemoveLiquidityActions: React.FC<RemoveLiquidityActionProps> = ({\n  pair,\n  error,\n  parsedAmounts,\n  tradeValueUsd,\n}) => {\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false)\n  const [txHash, setTxHash] = useState<string>('')\n  const { t } = useTranslation()\n  const { account, chainId, library } = useActiveWeb3React()\n\n  // Currencies\n  const currencyA = pair?.token0\n  const currencyB = pair?.token1\n\n  // Tokens\n  const [tokenA, tokenB] = useMemo(\n    () => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)],\n    [currencyA, currencyB, chainId],\n  )\n\n  // Signature data\n  const [signatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n\n  // Approval\n  const [approval, approveCallback] = useApproveCallback(\n    parsedAmounts[Field.LIQUIDITY],\n    parseAddress(ROUTER_ADDRESS, chainId),\n  )\n\n  // Pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // Attempt to approve\n  const onAttemptToApprove = async () => {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n    return approveCallback()\n  }\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // Custom from users settings\n  const deadline = useTransactionDeadline()\n\n  // Check if user has expert mode set\n  const expertMode = useIsExpertMode()\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  const onRemove = async () => {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[]\n    let args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((err) => {\n            console.error(`estimateGas failed`, methodName, args, err)\n            return undefined\n          }),\n      ),\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate),\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${currencyA?.getSymbol(\n              chainId,\n            )} and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.getSymbol(chainId)}`,\n          })\n\n          setTxHash(response.hash)\n          track({\n            event: 'liquidity',\n            chain: chainId,\n            value: tradeValueUsd,\n            data: {\n              token1: currencyA?.getSymbol(chainId),\n              token2: currencyB?.getSymbol(chainId),\n              token1Amount: parsedAmounts[Field.CURRENCY_A]?.toSignificant(3),\n              token2Amount: parsedAmounts[Field.CURRENCY_B]?.toSignificant(3),\n              cat: 'remove',\n            },\n          })\n        })\n        .catch((err: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(err)\n        })\n    }\n  }\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    setTxHash('')\n  }, [])\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <RemoveLiquidityModal\n      title={t('Confirm Remove Liquidity')}\n      pair={pair}\n      parsedAmounts={parsedAmounts}\n      txHash={txHash}\n      attemptingTxn={attemptingTxn}\n      onDismiss={handleDismissConfirmation}\n      onRemove={onRemove}\n    />,\n    true,\n    true,\n    'removeLiquidityModal',\n  )\n\n  const renderAction = () => {\n    if (!account) {\n      return <UnlockButton fullWidth />\n    }\n    if (error) {\n      return (\n        <Button fullWidth disabled>\n          {error}\n        </Button>\n      )\n    }\n    if ((approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING) && !error) {\n      return (\n        <Flex sx={{ width: '100%' }}>\n          <Button\n            onClick={onAttemptToApprove}\n            disabled={approval === ApprovalState.PENDING}\n            load={approval === ApprovalState.PENDING}\n            fullWidth\n            sx={{ padding: '10px 2px' }}\n          >\n            {approval === ApprovalState.PENDING ? t('Enabling') : t('Enable')}\n          </Button>\n        </Flex>\n      )\n    }\n    return (\n      <Button\n        fullWidth\n        onClick={() => {\n          if (expertMode) {\n            onRemove()\n          } else {\n            onPresentAddLiquidityModal()\n          }\n        }}\n      >\n        {t('Remove Liquidity')}\n      </Button>\n    )\n  }\n\n  return <Flex sx={{ ...styles.dexActionsContainer }}>{renderAction()}</Flex>\n}\n\nexport default React.memo(RemoveLiquidityActions)\n","import React, { useCallback, useState } from 'react'\nimport { useCurrency } from 'hooks/Tokens'\nimport { Flex, Text } from '@ape.swap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Percent } from '@apeswapfinance/sdk'\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from 'state/burn/hooks'\nimport { useUserRecentTransactions } from 'state/user/hooks'\nimport { Field } from 'state/burn/actions'\nimport { dexStyles } from '../styles'\nimport DexPanel from '../components/DexPanel'\nimport DexNav from '../components/DexNav'\nimport PoolInfo from './components/PoolInfo'\nimport RemoveLiquidityActions from './components/Actions'\nimport MyPositions from '../components/MyPositions'\nimport RecentTransactions from '../components/RecentTransactions'\n\nfunction RemoveLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const [recentTransactions] = useUserRecentTransactions()\n  const [tradeValueUsd, setTradeValueUsd] = useState(0)\n\n  // Set currencies\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n\n  // allowance handling\n  const [, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, value: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, value)\n    },\n    [_onUserInput],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    onUserInput(Field.LIQUIDITY_PERCENT, '100')\n  }, [onUserInput])\n\n  return (\n    <Flex sx={{ ...dexStyles.pageContainer }}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex sx={{ ...dexStyles.dexContainer }}>\n          <DexNav />\n          <Flex sx={{ margin: '20px 0px 5px 0px', justifyContent: 'center', maxWidth: '100%', width: '420px' }}>\n            <Text weight={700}>{t('REMOVE LIQUIDITY')}</Text>\n          </Flex>\n          <MyPositions />\n          <DexPanel\n            value={formattedAmounts[Field.LIQUIDITY_PERCENT]}\n            setTradeValueUsd={setTradeValueUsd}\n            panelText={t('Remove:')}\n            currency={currencyA}\n            otherCurrency={currencyB}\n            fieldType={Field.LIQUIDITY_PERCENT}\n            onCurrencySelect={null}\n            onUserInput={(field, val) =>\n              parseInt(val) > 100\n                ? onUserInput(field, '100')\n                : val.toString() === ''\n                ? onUserInput(field, '0')\n                : onUserInput(field, parseInt(val).toString())\n            }\n            handleMaxInput={handleMaxInput}\n            showCommonBases\n            lpPair={pair}\n          />\n          <PoolInfo pair={pair} parsedAmounts={parsedAmounts} chainId={chainId} />\n          <RemoveLiquidityActions\n            pair={pair}\n            error={error}\n            parsedAmounts={parsedAmounts}\n            tradeValueUsd={tradeValueUsd}\n          />\n        </Flex>\n        {recentTransactions && <RecentTransactions />}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default React.memo(RemoveLiquidity)\n","/** @jsxImportSource theme-ui */\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Currency, ETHER, JSBI, TokenAmount } from '@apeswapfinance/sdk'\nimport { Text, useModal, Flex, Svg } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn, ColumnCenter } from '../../../components/layout/Column'\nimport { CurrencyLogo } from '../../../components/Logo'\nimport { MinimalPositionCard } from '../../../components/PositionCard'\nimport Row from '../../../components/layout/Row'\nimport CurrencySearchModal from '../../../components/SearchModal/CurrencySearchModal'\nimport { PairState, usePair } from '../../../hooks/usePairs'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { usePairAdder, useUserRecentTransactions } from '../../../state/user/hooks'\nimport { useTokenBalance } from '../../../state/wallet/hooks'\nimport StyledInternalLink from '../../../components/Links'\nimport { currencyId } from '../../../utils/currencyId'\nimport Dots from '../../../components/Loader/Dots'\nimport { dexStyles } from '../styles'\nimport { styles } from './styles'\nimport DexNav from '../components/DexNav'\nimport MyPositions from '../components/MyPositions'\nimport RecentTransactions from '../components/RecentTransactions'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1,\n}\n\nexport default function PoolFinder() {\n  const { account, chainId } = useActiveWeb3React()\n  const [recentTransactions] = useUserRecentTransactions()\n\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n  const { t } = useTranslation()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)),\n    )\n\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField],\n  )\n\n  const prerequisiteMessage = (\n    <Text textAlign=\"center\">\n      {!account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')}\n    </Text>\n  )\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={handleCurrencySelect}\n      selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n    />,\n    true,\n    true,\n    'selectCurrencyModal',\n  )\n\n  return (\n    <Flex sx={{ ...dexStyles.pageContainer }}>\n      <Flex sx={{ flexDirection: 'column' }}>\n        <Flex sx={{ ...dexStyles.dexContainer }}>\n          <DexNav />\n          <Flex sx={{ margin: '20px 0px 5px 0px', justifyContent: 'center', maxWidth: '100%', width: '420px' }}>\n            <Text weight={700}>{t('FIND YOUR LIQUIDITY')}</Text>\n          </Flex>\n          <MyPositions />\n          <Flex sx={{ ...styles.tokenContainer }}>\n            <Text sx={{ ...styles.swapDirectionText }}>{t('Token 1')}</Text>\n            <Flex\n              sx={{ ...styles.primaryFlex }}\n              onClick={() => {\n                onPresentCurrencyModal()\n                setActiveField(Fields.TOKEN0)\n              }}\n            >\n              <>\n                {currency0 ? (\n                  <Row>\n                    <CurrencyLogo currency={currency0} size=\"30px\" />\n                    <Text sx={{ ...styles.tokenText }}>{currency0.getSymbol(chainId)}</Text>\n                  </Row>\n                ) : (\n                  <Text sx={{ ...styles.tokenText }}>{t('Select a Token')}</Text>\n                )}\n                <Svg icon=\"caret\" />\n              </>\n            </Flex>\n          </Flex>\n          <Flex sx={{ margin: '10px 0px', justifyContent: 'center' }}>\n            <Flex\n              sx={{\n                ...styles.addContainer,\n              }}\n            >\n              <Text weight={700} sx={{ lineHeight: '0px' }}>\n                +\n              </Text>\n            </Flex>\n          </Flex>\n          <Flex sx={{ ...styles.tokenContainer }}>\n            <Text sx={{ ...styles.swapDirectionText }}>{t('Token 2')}</Text>\n            <Flex\n              sx={{ ...styles.primaryFlex }}\n              onClick={() => {\n                onPresentCurrencyModal()\n                setActiveField(Fields.TOKEN1)\n              }}\n            >\n              <>\n                {currency1 ? (\n                  <Row>\n                    <CurrencyLogo currency={currency1} size=\"30px\" />\n                    <Text sx={{ ...styles.tokenText }}>{currency1.getSymbol(chainId)}</Text>\n                  </Row>\n                ) : (\n                  <Text sx={{ ...styles.tokenText }}>{t('Select a Token')}</Text>\n                )}\n                <Svg icon=\"caret\" />\n              </>\n            </Flex>\n          </Flex>\n          {hasPosition && (\n            <ColumnCenter\n              style={{ justifyItems: 'center', backgroundColor: '', margin: '20px 0px', borderRadius: '12px' }}\n            >\n              <Text textAlign=\"center\">{t('Pool Found!')}</Text>\n              <StyledInternalLink to=\"/pool\">\n                <Text textAlign=\"center\" style={{ textDecoration: 'underline' }}>\n                  {t('Manage this pool.')}\n                </Text>\n              </StyledInternalLink>\n            </ColumnCenter>\n          )}\n\n          {currency0 && currency1 ? (\n            pairState === PairState.EXISTS ? (\n              hasPosition && pair ? (\n                <MinimalPositionCard pair={pair} />\n              ) : (\n                <AutoColumn gap=\"sm\" justify=\"center\" style={{ margin: '20px 0px' }}>\n                  <Text textAlign=\"center\">{t('You don’t have liquidity in this pool yet.')}</Text>\n                  <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\n                    <Text style={{ textDecoration: 'underline' }} textAlign=\"center\">\n                      {t('Add Liquidity')}\n                    </Text>\n                  </StyledInternalLink>\n                </AutoColumn>\n              )\n            ) : validPairNoLiquidity ? (\n              <AutoColumn gap=\"sm\" justify=\"center\" style={{ margin: '20px 0px' }}>\n                <Text textAlign=\"center\">No pool found.</Text>\n                <StyledInternalLink\n                  to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  style={{ textDecoration: 'underline' }}\n                >\n                  {t('Create pool.')}\n                </StyledInternalLink>\n              </AutoColumn>\n            ) : pairState === PairState.INVALID ? (\n              <AutoColumn gap=\"sm\" justify=\"center\">\n                <Text textAlign=\"center\" fontWeight={500}>\n                  {t('Invalid pair.')}\n                </Text>\n              </AutoColumn>\n            ) : pairState === PairState.LOADING ? (\n              <AutoColumn gap=\"sm\" justify=\"center\">\n                <Text textAlign=\"center\">\n                  {t('Loading')}\n                  <Dots />\n                </Text>\n              </AutoColumn>\n            ) : null\n          ) : (\n            <Flex sx={{ margin: '20px 0px', justifyContent: 'center' }}>{prerequisiteMessage}</Flex>\n          )}\n          {/* <CurrencySearchModal\n          isOpen={showSearch}\n          onCurrencySelect={handleCurrencySelect}\n          onDismiss={handleSearchDismiss}\n          showCommonBases\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n        /> */}\n        </Flex>\n        {recentTransactions && <RecentTransactions />}\n      </Flex>\n    </Flex>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// An internal link from the react-router-dom library that is correctly styled\nconst StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport default StyledInternalLink\n","import { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  tokenContainer: {\n    position: 'relative',\n    borderRadius: '10px',\n    width: '100%',\n    background: 'white3',\n    padding: '10px 0px',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  addContainer: {\n    height: '30px',\n    width: '30px',\n    borderRadius: '30px',\n    background: 'yellow',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  // Token selector container\n  primaryFlex: {\n    minWidth: 'max-content',\n    height: '40px',\n    background: 'white4',\n    padding: '5px 10px',\n    borderRadius: '10px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'all .3s linear',\n    '&:active': {\n      transform: 'scale(0.9)',\n    },\n    ':hover': { background: 'navMenuLogo' },\n  },\n  swapDirectionText: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    transform: 'translate(0px, -30px)',\n  },\n\n  // Token selected text\n  tokenText: {\n    fontSize: '14px',\n    margin: '0px 7.5px',\n    textTransform: 'uppercase',\n  },\n}\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function ResetScroll() {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'auto' })\n  }, [pathname])\n\n  return null\n}\n","import React, { useState, useEffect, Suspense, lazy, useCallback } from 'react'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { ResetCSS, ApeSwapTheme } from '@apeswapfinance/uikit'\nimport { ScrollToTop } from '@ape.swap/uikit'\nimport BigNumber from 'bignumber.js'\nimport MarketingModalCheck from 'components/MarketingModalCheck'\nimport { useFetchBananaPrice } from 'state/tokenPrices/hooks'\nimport { useFetchProfile, useUpdateNetwork, useFetchLiveIfoStatus, useFetchLiveTagsAndOrdering } from 'state/hooks'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { PageMeta } from 'components/layout/Page'\nimport * as Sentry from '@sentry/react'\nimport { BrowserTracing } from '@sentry/tracing'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport Pool from './views/Dex/Pool'\nimport Swap from './views/Dex/Swap'\nimport AddLiquidity from './views/Dex/AddLiquidity'\nimport RemoveLiquidity from './views/Dex/RemoveLiquidity'\nimport PoolFinder from './views/Dex/PoolFinder'\nimport ResetScroll from './utils/resetScroll'\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  integrations: [new BrowserTracing()],\n  tracesSampleRate: 0.1,\n})\n\ndeclare module '@emotion/react' {\n  export interface Theme extends ApeSwapTheme {}\n}\n\n// Route-based code splitting\nconst Home = lazy(() => import('./views/Homepage'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst JungleFarms = lazy(() => import('./views/JungleFarms'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst DualFarms = lazy(() => import('./views/DualFarms'))\nconst Nft = lazy(() => import('./views/Nft'))\nconst Nfa = lazy(() => import('./views/Nft/Nfa'))\nconst ApeZone = lazy(() => import('./views/ApeZone'))\nconst Stats = lazy(() => import('./views/Stats'))\nconst Auction = lazy(() => import('./views/Auction'))\nconst BurningGames = lazy(() => import('./views/BurningGames'))\nconst Iazos = lazy(() => import('./views/Iazos'))\nconst CreateIazo = lazy(() => import('./views/Iazos/components/CreateIazo'))\nconst IazoPage = lazy(() => import('./views/Iazos/components/IazoPage'))\nconst AdminPools = lazy(() => import('./views/AdminPools'))\nconst Vaults = lazy(() => import('./views/Vaults'))\nconst NfaStaking = lazy(() => import('./views/NfaStaking'))\nconst Bills = lazy(() => import('./views/Bills'))\nconst Orders = lazy(() => import('./views/Dex/Orders'))\nconst TermsOfUse = lazy(() => import('./views/LegalPages/TermsOfUse'))\nconst PrivacyPolicy = lazy(() => import('./views/LegalPages/PrivacyPolicy'))\nconst ProtocolDashboard = lazy(() => import('./views/ProtocolDashboard'))\n\nconst redirectSwap = () => import('./views/Dex/Swap/redirects')\nconst RedirectPathToSwapOnly = lazy(async () =>\n  redirectSwap().then((r) => ({\n    default: r.RedirectPathToSwapOnly,\n  })),\n)\nconst RedirectToSwap = lazy(async () =>\n  redirectSwap().then((r) => ({\n    default: r.RedirectToSwap,\n  })),\n)\n\nconst redirectAddLiquidity = () => import('./views/Dex/AddLiquidity/redirects')\nconst RedirectDuplicateTokenIds = lazy(async () =>\n  redirectAddLiquidity().then((r) => ({\n    default: r.RedirectDuplicateTokenIds,\n  })),\n)\nconst RedirectOldAddLiquidityPathStructure = lazy(async () =>\n  redirectAddLiquidity().then((r) => ({\n    default: r.RedirectOldAddLiquidityPathStructure,\n  })),\n)\nconst RedirectToAddLiquidity = lazy(async () =>\n  redirectAddLiquidity().then((r) => ({\n    default: r.RedirectToAddLiquidity,\n  })),\n)\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  useUpdateNetwork()\n  useEagerConnect()\n  useFetchBananaPrice()\n  usePollBlockNumber()\n  useFetchProfile()\n  useFetchLiveIfoStatus()\n  useFetchLiveTagsAndOrdering()\n\n  const { account, chainId } = useActiveWeb3React()\n  const [showScrollIcon, setShowScrollIcon] = useState(false)\n\n  const showScroll = useCallback(() => {\n    if (window.location.pathname === '/') {\n      setShowScrollIcon(false)\n    } else if (\n      window.location.pathname === '/banana-farms' ||\n      window.location.pathname === '/pools' ||\n      window.location.pathname === '/maximizers' ||\n      window.location.pathname === '/iazos'\n    ) {\n      setShowScrollIcon(true)\n    } else {\n      setShowScrollIcon(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    showScroll()\n    if (account) dataLayer?.push({ event: 'wallet_connect', user_id: account })\n  }, [account, showScroll])\n\n  const loadMenu = () => {\n    // ETH routes\n    if (chainId === ChainId.MAINNET) {\n      return (\n        <Menu>\n          <Suspense fallback={<PageLoader />}>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/terms\">\n                <TermsOfUse />\n              </Route>\n              <Route path=\"/privacy\">\n                <PrivacyPolicy />\n              </Route>\n              <Route path=\"/protocol-dashboard\">\n                <ProtocolDashboard />\n              </Route>\n              {/* Redirects */}\n              <Route path=\"/admin-pools\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/banana-farms\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/maximizers\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/treasury-bills\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route exact path=\"/nft\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/pools\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/jungle-farms\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/admin-pools\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/iao\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/auction\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route exact path=\"/nft\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/nft/:id\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/gnana\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/stats\">\n                <Redirect to=\"/apestats\" />\n              </Route>\n              <Route path=\"/apestats\">\n                <Stats />\n              </Route>\n              <Route exact path=\"/ss-iao\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/ss-iao/create\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/ss-iao/:id\">\n                <Redirect to=\"/\" />\n              </Route>\n              {/* SWAP ROUTES */}\n              <Route path=\"/swap\" component={Swap} />\n              <Route exact strict path=\"/limit-orders\" component={RedirectPathToSwapOnly} />\n              <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n              <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n              <Route exact strict path=\"/find\" component={PoolFinder} />\n              <Route exact strict path=\"/liquidity\" component={Pool} />\n              <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n              <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n              <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />{' '}\n              <Route exact path=\"/add-liquidity\" component={AddLiquidity} />\n              <Route exact path=\"/add-liquidity/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n              <Route exact path=\"/add-liquidity/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n              <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n              {/* SWAP ROUTES */}\n              <Route component={NotFound} />\n            </Switch>\n          </Suspense>\n        </Menu>\n      )\n    }\n\n    // MATIC routes\n    if (chainId === ChainId.MATIC || chainId === ChainId.MATIC_TESTNET) {\n      return (\n        <Menu>\n          <Suspense fallback={<PageLoader />}>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              {/* <Home />\n              </Route> */}\n              <Route path=\"/admin-pools\">\n                <AdminPools />\n              </Route>\n              <Route path=\"/protocol-dashboard\">\n                <ProtocolDashboard />\n              </Route>\n              <Route path=\"/banana-farms\">\n                <DualFarms />\n              </Route>\n              <Route path=\"/apestats\">\n                <Stats />\n              </Route>\n              <Route path=\"/terms\">\n                <TermsOfUse />\n              </Route>\n              <Route path=\"/privacy\">\n                <PrivacyPolicy />\n              </Route>\n              {/* Redirects */}\n              <Route path=\"/vaults\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/treasury-bills\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route exact path=\"/nft\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/pools\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/jungle-farms\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/admin-pools\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/iao\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/auction\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route exact path=\"/nft\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/nft/:id\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/gnana\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route exact path=\"/ss-iao\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/ss-iao/create\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route path=\"/ss-iao/:id\">\n                <Redirect to=\"/\" />\n              </Route>\n              {/* SWAP ROUTES */}\n              <Route path=\"/swap\" component={Swap} />\n              <Route exact strict path=\"/limit-orders\" component={RedirectPathToSwapOnly} />\n              <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n              <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n              <Route exact strict path=\"/find\" component={PoolFinder} />\n              <Route exact strict path=\"/liquidity\" component={Pool} />\n              <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n              <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n              <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n              <Route exact path=\"/add-liquidity\" component={AddLiquidity} />\n              <Route exact path=\"/add-liquidity/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n              <Route exact path=\"/add-liquidity/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n              <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n              {/* SWAP ROUTES */}\n              <Route component={NotFound} />\n            </Switch>\n          </Suspense>\n        </Menu>\n      )\n    }\n    // Default BSC routes\n    return (\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route exact path=\"/nft\">\n              <Nft />\n            </Route>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/banana-farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/protocol-dashboard\">\n              <ProtocolDashboard />\n            </Route>\n            <Route path=\"/jungle-farms\">\n              <JungleFarms />\n            </Route>\n            <Route path=\"/maximizers\">\n              <Vaults />\n            </Route>\n            <Route path=\"/treasury-bills\">\n              <Bills />\n            </Route>\n            <Route path=\"/admin-pools\">\n              <AdminPools />\n            </Route>\n            <Route path=\"/iao\">\n              <Ifos />\n            </Route>\n            <Route path=\"/auction\">\n              <Auction />\n            </Route>\n            <Route exact path=\"/ss-iao\">\n              <Iazos />\n            </Route>\n            <Route path=\"/ss-iao/create\">\n              <CreateIazo />\n            </Route>\n            <Route path=\"/ss-iao/:id\">\n              <IazoPage />\n            </Route>\n            <Route exact path=\"/nft\">\n              <Nft />\n            </Route>\n            <Route path=\"/nft/:id\">\n              <Nfa />\n            </Route>\n            <Route path=\"/staking\">\n              <NfaStaking />\n            </Route>\n            <Route path=\"/gnana\">\n              <ApeZone />\n            </Route>\n            <Route path=\"/apestats\">\n              <Stats />\n            </Route>\n            <Route path=\"/burn\">\n              <BurningGames />\n            </Route>\n            <Route path=\"/spinner\">\n              <PageLoader />\n            </Route>\n            <Route path=\"/terms\">\n              <TermsOfUse />\n            </Route>\n            <Route path=\"/privacy\">\n              <PrivacyPolicy />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* SWAP ROUTES */}\n            <Route path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/limit-orders\" component={Orders} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Pool} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/add-liquidity\" component={AddLiquidity} />\n            <Route exact path=\"/add-liquidity/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add-liquidity/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n            {/* SWAP ROUTES */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    )\n  }\n\n  // COSTON routes\n  if (chainId === ChainId.COSTON) {\n    return (\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/terms\">\n              <TermsOfUse />\n            </Route>\n            <Route path=\"/privacy\">\n              <PrivacyPolicy />\n            </Route>\n            <Route path=\"/protocol-dashboard\">\n              <ProtocolDashboard />\n            </Route>\n            {/* Redirects */}\n            <Route path=\"/admin-pools\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/banana-farms\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/maximizers\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/treasury-bills\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route exact path=\"/nft\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/pools\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/jungle-farms\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/admin-pools\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/iao\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/auction\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route exact path=\"/nft\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/nft/:id\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/gnana\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/stats\">\n              <Redirect to=\"/apestats\" />\n            </Route>\n            <Route path=\"/apestats\">\n              <Stats />\n            </Route>\n            <Route exact path=\"/ss-iao\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/ss-iao/create\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/ss-iao/:id\">\n              <Redirect to=\"/\" />\n            </Route>\n            {/* SWAP ROUTES */}\n            <Route path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/limit-orders\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Pool} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />{' '}\n            <Route exact path=\"/add-liquidity\" component={AddLiquidity} />\n            <Route exact path=\"/add-liquidity/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add-liquidity/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n            {/* SWAP ROUTES */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    )\n  }\n\n  return (\n    <Router>\n      <PageMeta />\n      <ResetScroll />\n      <ResetCSS />\n      <GlobalStyle />\n      <MarketingModalCheck />\n      {showScrollIcon && <ScrollToTop />}\n      {loadMenu()}\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","/** @jsxImportSource theme-ui */\nimport { Flex, Modal, Text } from '@ape.swap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { apiBaseUrl } from 'hooks/api'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React, { ReactNode, useEffect, useMemo, useState } from 'react'\nimport axios from 'axios'\n\nconst BLOCKED_ADDRESSES: string[] = [\n  '0x7Db418b5D567A4e0E8c59Ad71BE1FcE48f3E6107',\n  '0x72a5843cc08275C8171E582972Aa4fDa8C397B2A',\n  '0x7F19720A857F834887FC9A7bC0a0fBe7Fc7f8102',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x1da5821544e25c636c1417Ba96Ade4Cf6D2f9B5A',\n  '0x9F4cda013E354b8fC285BF4b9A60460cEe7f7Ea9',\n  '0x19Aa5Fe80D33a56D56c78e82eA5E50E5d80b4Dff',\n  '0x2f389cE8bD8ff92De3402FFCe4691d17fC4f6535',\n  '0xe7aa314c77F4233C18C6CC84384A9247c0cf367B',\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n  '0xC8a65Fadf0e0dDAf421F28FEAb69Bf6E2E589963',\n  '0x308eD4B7b49797e1A98D3818bFF6fe5385410370',\n  '0xC455f7fd3e0e12afd51fba5c106909934D8A0e4a',\n  '0x3CBdeD43EFdAf0FC77b9C55F6fC9988fCC9b757d',\n  '0x67d40EE1A85bf4a4Bb7Ffae16De985e8427B6b45',\n  '0x6F1cA141A28907F78Ebaa64fb83A9088b02A8352',\n  '0x6aCDFBA02D390b97Ac2b2d42A63E85293BCc160e',\n  '0x48549a34ae37b12f6a30566245176994e17c6b4a',\n  '0x5512d943ed1f7c8a43f3435c85f7ab68b30121b0',\n  '0xC455f7fd3e0e12afd51fba5c106909934D8A0e4a',\n  '0x629e7Da20197a5429d30da36E77d06CdF796b71A',\n  '0x7FF9cFad3877F21d41Da833E2F775dB0569eE3D9',\n  '0x098B716B8Aaf21512996dC57EB0615e2383E2f96',\n  '0xfEC8A60023265364D066a1212fDE3930F6Ae8da7',\n  '0x8589427373D6D84E98730D7795D8f6f8731FDA16',\n  '0x722122dF12D4e14e13Ac3b6895a86e84145b6967',\n  '0xDD4c48C0B24039969fC16D1cdF626eaB821d3384',\n  '0xd90e2f925DA726b50C4Ed8D0Fb90Ad053324F31b',\n  '0xd96f2B1c14Db8458374d9Aca76E26c3D18364307',\n  '0x4736dCf1b7A3d580672CcE6E7c65cd5cc9cFBa9D',\n  '0xD4B88Df4D29F5CedD6857912842cff3b20C8Cfa3',\n  '0x910Cbd523D972eb0a6f4cAe4618aD62622b39DbF',\n  '0xA160cdAB225685dA1d56aa342Ad8841c3b53f291',\n  '0xFD8610d20aA15b7B2E3Be39B396a1bC3516c7144',\n  '0xF60dD140cFf0706bAE9Cd734Ac3ae76AD9eBC32A',\n  '0x22aaA7720ddd5388A3c0A3333430953C68f1849b',\n  '0xBA214C1c1928a32Bffe790263E38B4Af9bFCD659',\n  '0xb1C8094B234DcE6e03f10a5b673c1d8C69739A00',\n  '0x527653eA119F3E6a1F5BD18fbF4714081D7B31ce',\n  '0x58E8dCC13BE9780fC42E8723D8EaD4CF46943dF2',\n  '0xD691F27f38B395864Ea86CfC7253969B409c362d',\n  '0xaEaaC358560e11f52454D997AAFF2c5731B6f8a6',\n  '0x1356c899D8C9467C7f71C195612F8A395aBf2f0a',\n  '0xA60C772958a3eD56c1F15dD055bA37AC8e523a0D',\n  '0x169AD27A470D064DEDE56a2D3ff727986b15D52B',\n  '0x0836222F2B2B24A3F36f98668Ed8F0B38D1a872f',\n  '0xF67721A2D8F736E75a49FdD7FAd2e31D8676542a',\n  '0x9AD122c22B14202B4490eDAf288FDb3C7cb3ff5E',\n  '0x905b63Fff465B9fFBF41DeA908CEb12478ec7601',\n  '0x07687e702b410Fa43f4cB4Af7FA097918ffD2730',\n  '0x94A1B5CdB22c43faab4AbEb5c74999895464Ddaf',\n  '0xb541fc07bC7619fD4062A54d96268525cBC6FfEF',\n  '0x12D66f87A04A9E220743712cE6d9bB1B5616B8Fc',\n  '0x47CE0C6eD5B0Ce3d3A51fdb1C52DC66a7c3c2936',\n  '0x23773E65ed146A459791799d01336DB287f25334',\n  '0xD21be7248e0197Ee08E0c20D4a96DEBdaC3D20Af',\n  '0x610B717796ad172B316836AC95a2ffad065CeaB4',\n  '0x178169B423a011fff22B9e3F3abeA13414dDD0F1',\n  '0xbB93e510BbCD0B7beb5A853875f9eC60275CF498',\n  '0x2717c5e28cf931547B621a5dddb772Ab6A35B701',\n  '0x03893a7c7463AE47D46bc7f091665f1893656003',\n  '0xCa0840578f57fE71599D29375e16783424023357',\n  '0x58E8dCC13BE9780fC42E8723D8EaD4CF46943dF2',\n  '0x8589427373D6D84E98730D7795D8f6f8731FDA16',\n  '0x722122dF12D4e14e13Ac3b6895a86e84145b6967',\n  '0xDD4c48C0B24039969fC16D1cdF626eaB821d3384',\n  '0xd90e2f925DA726b50C4Ed8D0Fb90Ad053324F31b',\n  '0xd96f2B1c14Db8458374d9Aca76E26c3D18364307',\n  '0x4736dCf1b7A3d580672CcE6E7c65cd5cc9cFBa9D',\n]\n\nexport default function Blocklist({ children }: { children: ReactNode }) {\n  const { t } = useTranslation()\n  const [geoLocation, setGeoLocation] = useState<{ isRestrictedRegion: boolean; countryCode: string }>({\n    isRestrictedRegion: false,\n    countryCode: '',\n  })\n  const { account } = useActiveWeb3React()\n\n  // Fetch country code to check if the region is allowed\n  useEffect(() => {\n    const fetchLocation = async () => {\n      const resp = await axios.get(`${apiBaseUrl}/check`)\n      const { isRestrictedRegion, countryCode } = resp?.data\n      setGeoLocation({ isRestrictedRegion, countryCode })\n    }\n    fetchLocation()\n  }, [])\n\n  const blockedAddress: boolean = useMemo(\n    () => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1),\n    [account],\n  )\n\n  if (blockedAddress) {\n    return (\n      <Flex>\n        <Text>{t('Blocked address')}</Text>\n      </Flex>\n    )\n  }\n  if (geoLocation.isRestrictedRegion) {\n    return (\n      <>\n        <Modal minWidth=\"360px\" maxWidth=\"600px\">\n          <Flex sx={{ width: 'auto', height: 'auto', justifyContent: 'center', flexDirection: 'column' }}>\n            <Text weight={700} sx={{ fontFamily: 'poppins', fontSize: '32px' }}>\n              Notice\n            </Text>\n            <br />\n            <Text\n              sx={{ fontFamily: 'poppins' }}\n            >{`Due to recent events causing increased legal scrutiny throughout the DeFi industry, ApeSwap has been given no choice but to restrict select regions from accessing our offerings. You are receiving this notice, because it appears you are visiting from a restricted region, ${geoLocation.countryCode}.`}</Text>\n            <br />\n            <Text sx={{ fontFamily: 'poppins' }}>\n              We say this with heavy hearts, as censorship of any kind has been deeply against our ethos since day 1. We\n              do not make this move lightly, but it is necessary for the continuity of our protocol & the safety of\n              several core team contributors. We apologize in advance for inconveniences caused.\n            </Text>\n            <br />\n            <Text sx={{ fontFamily: 'poppins' }}>\n              For more information about this change or to find out how it impacts you, please visit{' '}\n              <a\n                href=\"https://t.me/ape_swap\"\n                rel=\"noopener noreferrer\"\n                sx={{ textDecoration: 'underline', color: 'grey' }}\n              >\n                our Telegram.\n              </a>\n            </Text>\n          </Flex>\n        </Modal>\n      </>\n    )\n  }\n  return <>{children}</>\n}\n","import React from 'react'\nimport { ModalProvider } from '@ape.swap/uikit'\nimport { ModalProvider as OldModalProvider } from '@apeswapfinance/uikit'\nimport { Web3ReactProvider, createWeb3ReactRoot } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\nimport { BlockNumberProvider } from 'lib/hooks/useBlockNumber'\nimport NftProvider from 'views/Nft/contexts/NftProvider'\nimport { NetworkContextName } from 'config/constants'\nimport { LanguageProvider } from './contexts/Localization'\nimport Blocklist from 'components/Blocklist'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nconst queryClient = new QueryClient()\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Provider store={store}>\n          <BlockNumberProvider>\n            <HelmetProvider>\n              <ThemeContextProvider>\n                <NftProvider>\n                  <LanguageProvider>\n                    <Blocklist>\n                      <RefreshContextProvider>\n                        <ModalProvider>\n                          <OldModalProvider>\n                            <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n                          </OldModalProvider>\n                        </ModalProvider>\n                      </RefreshContextProvider>\n                    </Blocklist>\n                  </LanguageProvider>\n                </NftProvider>\n              </ThemeContextProvider>\n            </HelmetProvider>\n          </BlockNumberProvider>\n        </Provider>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport { useCallback, useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useAllLists } from 'state/lists/hooks'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    UNSUPPORTED_LIST_URLS.forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR: {\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n            // automatically update minor/patch as long as bump matches the min update\n            if (bump >= min) {\n              dispatch(acceptListUpdate(listUrl))\n            } else {\n              console.error(\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`,\n              )\n            }\n            break\n          }\n          // update any active or inactive lists\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n            break\n          default:\n            break\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getEtherscanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { useToast } from 'state/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const currentBlock = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              // eslint-disable-next-line no-unused-expressions\n              receipt.status === 1\n                ? toastSuccess('Transaction Successful', {\n                    text: 'View Transaction',\n                    url: getEtherscanLink(receipt.transactionHash, 'transaction', chainId),\n                  })\n                : toastError('Transaction Failed')\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import { MulticallUpdater } from 'lib/state/multicall'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\nimport ListsUpdater from './state/lists/updater'\nimport TransactionUpdater from './state/transactions/updater'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n      <Updaters />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}
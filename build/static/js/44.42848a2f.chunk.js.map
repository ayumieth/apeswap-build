{"version":3,"sources":["state/strapi/useFetchBurningGames.ts","views/BurningGames/CardBurningGame.tsx","views/BurningGames/BurningGames.tsx"],"names":["useFetchBurningGames","useState","data","loading","state","setState","useEffect","fetchData","a","getBurningGames","games","console","error","ColumnFull","styled","Card","props","showDescription","theme","colors","navbar","ContainerGeneral","div","ContainerDescription","text","mediaQueries","lg","ButtonSocial","Button","yellow","FullImage","pathImage","ContainerTitle","gray","ContainerResumeInfo","PlayButton","PlayText","Text","StyledArrowDropDownIcon","ArrowDropDownIcon","down","CardBurningGame","game","sortDirection","setSortDirection","className","image","url","fontWeight","name","subtitle","as","href","link","target","color","width","height","onClick","fontSize","description","twitter","src","alt","telegram","id","HeadingContainer","Header","banner","md","StyledHeading","Heading","xs","xl","StyledPage","Page","CardFull","BaseLayout","isMobile","Cards","SubtitleHeading","ContainerPrincipal","background","BurningGames","isDesktop","useMatchBreakpoints","isXl","isDark","useTheme","t","useTranslation","length","map","i","index"],"mappings":"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","file":"static/js/44.42848a2f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { getBurningGames } from '../../hooks/api'\n\nconst useFetchBurningGames = () => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const games = await getBurningGames()\n        setState({\n          data: games,\n          loading: false,\n        })\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n    fetchData()\n  }, [])\n\n  return state\n}\n\nexport default useFetchBurningGames\n","import React, { useState } from 'react'\nimport { Card, Text, Button, ArrowDropDownIcon } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\n\ninterface DropdownProps {\n  down?: boolean\n}\n\nconst ColumnFull = styled(Card)<{ showDescription: boolean }>`\n  border-radius: 5px;\n  text-align: center;\n  width: 100%;\n  margin-bottom: 25px;\n  display: grid;\n  height: ${(props) => (props.showDescription ? '450px !important' : '235px')};\n  padding: 16px;\n  background: ${({ theme }) => theme.colors.navbar};\n`\nconst ContainerGeneral = styled.div`\n  display: flex;\n  height: 200px;\n`\nconst ContainerDescription = styled.div`\n  position: relative;\n  height: inherit;\n  width: inherit;\n  margin-top: 25px;\n  font-size: 22px;\n  text-align: left;\n\n  .social-description {\n    display: flex;\n    position: absolute;\n    width: 100%;\n    bottom: 0px;\n  }\n\n  .content-description {\n    padding-top: 8px;\n    color: ${({ theme }) => theme.colors.text};\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    .content-description {\n      font-size: 16px;\n    }\n  }\n`\nconst ButtonSocial = styled(Button)`\n  cursor: pointer;\n  width: 50px;\n  height: 50px;\n  background-color: ${({ theme }) => theme.colors.yellow};\n  margin-right: 10px;\n  border-radius: 15px;\n  padding-top: 12px;\n  img {\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    max-width: 100px;\n  }\n`\nconst FullImage = styled.div<{ pathImage: string }>`\n  margin-right: 15px;\n  width: 50%;\n  height: 100%;\n  background-image: url(${(props) => props.pathImage || ''});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-radius: 7px;\n`\nconst ContainerTitle = styled.div`\n  display: grid;\n  justify-content: flex-start;\n  text-align: left;\n  line-height: 1.5;\n  .partner-name {\n    color: ${({ theme }) => theme.colors.gray};\n    font-size: 15px;\n  }\n  .sub-name {\n    font-size: 18px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    .partner-name {\n      font-size: 24px;\n    }\n    .sub-name {\n      font-size: 32px;\n    }\n  }\n`\n\nconst ContainerResumeInfo = styled.div`\n  padding-top: 10px;\n  position: relative;\n  width: 50%;\n  height: 100%;\n  border-radius: 7px;\n  .buttons {\n    position: absolute;\n    width: 100%;\n    bottom: 0px;\n    display: flex;\n  }\n`\nconst PlayButton = styled(Button)`\n  width: 100%;\n  height: 35px;\n  background-color: ${({ theme }) => theme.colors.yellow};\n  border-radius: 10px;\n  :focus {\n    outline: none !important;\n    box-shadow: none !important;\n    background-color: ${({ theme }) => theme.colors.yellow};\n  }\n`\nconst PlayText = styled(Text)`\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 36px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 20px;\n  }\n`\nconst StyledArrowDropDownIcon = styled(ArrowDropDownIcon)<DropdownProps>`\n  transform: ${({ down }) => (!down ? 'rotate(180deg)' : 'rotate(0)')};\n  margin-left: 15px;\n  margin-top: 2px;\n  'rotate(180deg)':'rotate(0)'cursor: pointer;\n`\nconst CardBurningGame: React.FC<any> = ({ game }) => {\n  const [sortDirection, setSortDirection] = useState<boolean | 'desc' | 'asc'>('desc')\n  return (\n    <>\n      <ColumnFull className=\"column-full\" key={game.id} showDescription={sortDirection === 'asc'}>\n        <ContainerGeneral className=\"container-general\">\n          <FullImage pathImage={game.image?.url} />\n          <ContainerResumeInfo className=\"container-resumen-info\">\n            <ContainerTitle className=\"container-title\">\n              <Text className=\"partner-name\" fontWeight={600}>\n                {game.name}\n              </Text>\n              <Text className=\"sub-name\" fontWeight={600}>\n                {game.subtitle}\n              </Text>\n            </ContainerTitle>\n            <div className=\"buttons\">\n              <PlayButton as=\"a\" href={game.link} target=\"_blank\">\n                <PlayText color=\"white\">OPEN DAPP</PlayText>\n              </PlayButton>\n              <StyledArrowDropDownIcon\n                width=\"27px\"\n                height=\"28px\"\n                down={sortDirection === 'desc'}\n                onClick={() => setSortDirection(sortDirection === 'desc' ? 'asc' : 'desc')}\n              />\n            </div>\n          </ContainerResumeInfo>\n        </ContainerGeneral>\n        <ContainerDescription>\n          <Text fontWeight={600} fontSize=\"17\">\n            {game.subtitle}\n          </Text>\n          <div className=\"content-description\">{game.description}</div>\n          <div className=\"social-description\">\n            {game.twitter && (\n              <ButtonSocial as=\"a\" href={game.twitter} target=\"_blank\">\n                <img src=\"/images/social/twitter.svg\" alt=\"twitter\" />\n              </ButtonSocial>\n            )}\n            {game.telegram && (\n              <ButtonSocial as=\"a\" href={game.telegram} target=\"_blank\">\n                <img src=\"/images/social/telegram.svg\" alt=\"telegram\" />\n              </ButtonSocial>\n            )}\n          </div>\n        </ContainerDescription>\n      </ColumnFull>\n    </>\n  )\n}\n\nexport default CardBurningGame\n","import React from 'react'\nimport { Heading, BaseLayout, useMatchBreakpoints, Text } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\nimport Page from 'components/layout/Page'\nimport useTheme from 'hooks/useTheme'\nimport useFetchBurningGames from 'state/strapi/useFetchBurningGames'\nimport { useTranslation } from 'contexts/Localization'\nimport CardBurningGame from './CardBurningGame'\n\nconst HeadingContainer = styled.div`\n  max-width: 1024px;\n  margin-left: auto;\n  margin-right: auto;\n`\nconst Header = styled.div<{ banner: string }>`\n  position: relative;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  padding-top: 36px;\n  padding-left: 10px;\n  padding-right: 10px;\n  background-image: ${(props) =>\n    props.banner ? `url(/images/burning-games/${props.banner})` : 'url(/images/burning-games/burning.png)'};\n  background-repeat: no-repeat;\n  background-size: 100%;\n  height: 300px;\n  background-position: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\nconst StyledHeading = styled(Heading)`\n  font-size: 32px;\n  max-width: 176px !important;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    font-size: 36px;\n    max-width: 240px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 44px;\n    max-width: 400px !important;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    font-size: 60px;\n    max-width: 600px !important;\n  }\n`\n\nconst StyledPage = styled(Page)`\n  padding-left: 5px;\n  padding-right: 5px;\n  width: 100vw;\n  margin-bottom: 20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`\n\nconst CardFull = styled(BaseLayout)<{ isMobile: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  .column-full {\n    height: ${(props) => (props.isMobile ? '160px' : '225px')};\n    .container-general {\n      height: ${(props) => (props.isMobile ? '130px' : '193px')};\n    }\n    .container-resumen-info {\n      width: 65%;\n      padding-top: 20px;\n    }\n    border: ${(props) => props.isMobile && '2px solid #ffb300'};\n  }\n`\nconst Cards = styled(BaseLayout)<{ isMobile: boolean }>`\n  & > div {\n    ${({ theme }) => theme.mediaQueries.md} {\n      grid-column: span 6;\n    }\n\n    grid-column: span 12;\n  }\n\n  .column-full {\n    height: ${(props) => (props.isMobile ? '160px' : '225px')};\n    margin-bottom: 0px;\n    .container-general {\n      height: ${(props) => (props.isMobile ? '130px' : '193px')};\n    }\n    .container-resumen-info {\n      width: 65%;\n      padding-top: 20px;\n    }\n  }\n  & > * {\n    width: 100%;\n    margin-bottom: 32px;\n  }\n`\nconst SubtitleHeading = styled(Text)<{ isMobile: boolean }>`\n  font-size: ${(props) => (props.isMobile ? '16px' : '22px')};\n  width: ${(props) => (props.isMobile ? '50%' : '100%')};\n`\nconst ContainerPrincipal = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n`\nconst BurningGames: React.FC = () => {\n  const { data } = useFetchBurningGames()\n\n  const { isXl: isDesktop } = useMatchBreakpoints()\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n\n  let banner = ''\n\n  if (!isDark && isDesktop) banner = 'burning.svg'\n  if (isDark && isDesktop) banner = 'burning-night.svg'\n  if (!isDark && !isDesktop) banner = 'burning-mobile.png'\n  if (isDark && !isDesktop) banner = 'burning-night-mobile.png'\n\n  return (\n    <ContainerPrincipal>\n      <Header banner={banner}>\n        <HeadingContainer>\n          <StyledHeading as=\"h1\">{t('BANANA Burns')}</StyledHeading>\n          <SubtitleHeading isMobile={!isDesktop} fontWeight={400} color=\"white\">\n            {t('Partners Supporting The Jungle')}\n          </SubtitleHeading>\n        </HeadingContainer>\n      </Header>\n\n      <StyledPage width=\"1130px\">\n        {data.length !== 0 && (\n          <CardFull isMobile={!isDesktop}>\n            <CardBurningGame game={data[0]} />\n          </CardFull>\n        )}\n        <Cards isMobile={!isDesktop}>{data.map((i, index) => index > 0 && <CardBurningGame game={i} />)}</Cards>\n      </StyledPage>\n    </ContainerPrincipal>\n  )\n}\n\nexport default BurningGames\n"],"sourceRoot":""}
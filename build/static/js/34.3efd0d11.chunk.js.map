{"version":3,"sources":["utils/getDotPos.ts","hooks/useDimensions.ts","hooks/useIntersectionObserver.ts","views/Homepage/components/LaunchCalendar/styles.tsx","views/Homepage/components/LaunchCalendar/LaunchCalendar.tsx","views/Homepage/components/News/styles.tsx","views/Homepage/components/News/News.tsx","views/Homepage/styles.tsx","views/Homepage/components/Services/styles.tsx","views/Homepage/components/Services/Services.tsx","views/Homepage/components/Services/defaultServiceData.ts","views/Homepage/components/StatCards/styles.tsx","views/Homepage/components/StatCards/StatCards.tsx","views/Homepage/components/StatCards/statsData.ts","views/Homepage/components/TrendingTokens/styles.ts","views/Homepage/components/TrendingTokens/TrendingTokens.tsx","views/Homepage/components/Values/styles.tsx","views/Homepage/components/Values/defaultValues.ts","views/Homepage/components/Values/Values.tsx","views/Homepage/components/WelcomeContent/styles.tsx","views/Homepage/components/WelcomeContent/WelcomeContent.tsx","views/Homepage/Home.tsx"],"names":["getDotPos","index","carouselLength","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useIntersectionObserver","observerRefElement","setObserverRefElement","element","observerRef","intersectionObserverRef","useRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","current","IntersectionObserver","entry","rootMargin","threshold","observe","disconnect","LaunchCalendarWrapper","styled","div","ColorWrap","theme","colors","white2","LaunchCard","white3","CalendarImg","image","Bubble","isActive","white4","LaunchText","Text","SkeletonWrapper","LaunchCalendar","loadNews","setLoadNews","today","Date","setHours","getHours","useFetchHomepageLaunchCalendar","useSwiper","swiper","setSwiper","activeSlide","setActiveSlide","useTheme","launchCal","useHomepageLaunchCalendar","sortLaunch","filter","launch","launchTime","launchCalLength","length","t","useTranslation","ref","bold","justifyContent","style","overflow","id","initialSlide","onSwiper","spaceBetween","slidesPerView","resizeObserver","centeredSlides","lazy","preloadImages","onSlideChange","event","activeIndex","breakpoints","map","i","date","slide","maxWidth","minWidth","alignItems","flexDirection","fontSize","getUTCDate","toUTCString","split","getUTCHours","getUTCMinutes","mt","display","image1","url","image2","textLine1","textLine2","textLine3","fill","text","Array","alignContent","position","bottom","left","_","onClick","slideTo","NewsCard","NewsWrapper","SwiperCore","use","Autoplay","News","history","useHistory","chainId","useActiveWeb3React","loadImages","setLoadImages","useFetchHomepageNews","fetchedNews","useHomepageNews","sortedNews","orderBy","filterNews","news","StartTime","EndTime","newsLength","autoplay","delay","disableOnInteraction","loop","loopedSlides","slideNumber","newsUrl","CardLink","isModal","push","search","open","cardImageUrl","listLength","bannerId","clickUrl","chainIdentifier","track","chain","data","banner","React","memo","Banner","isDark","FadeIn","keyframes","YieldCard","ServiceWrapper","Services","loadServices","setLoadServices","useFetchHomepageServiceStats","serviceData","useHomepageServiceStats","displayData","title","description","backgroundImg","link","stats","defaultServiceData","service","displayStats","stat","tokenImage","stakeToken","name","lpTokenName","rewardToken","marketName","token","handleEachService","href","rel","mb","pl","background","borderRadius","ServiceTokenDisplay","token1","token2","token3","stakeLp","iconFill","earnTokenName","billArrow","color","apy","toFixed","discount","apr","textAlign","padding","start","StyledCard","Card","mediaQueries","sm","CardWrapper","StatCards","useMatchBreakpoints","isSm","isXs","loadStats","setLoadStats","isMobile","useFetchHomepageStats","rawStats","useHomepageStats","logo","Tvl","value","Trade","MarketCap","Partners","statsData","lineHeight","end","decimals","duration","separator","TrendingTokensWrapper","TokenContainer","Title","Container","CATEGORIES","TrendingTokens","loadTokens","setLoadTokens","selectedCat","setSelectedCat","useFetchHomepageTokenStats","tokens","useHomepageTokenStats","tokenStartIndex","tokenEndIndex","tokenDisplayRange","setTokenDisplayRange","useInterval","tokenListLength","prev","ChainId","MATIC","Math","floor","random","charAt","toUpperCase","slice","flexWrap","as","Link","to","contractAddress","active","tokenTicker","variation","percentChange","category","src","logoUrl","alt","ml","tokenPrice","ValuesWrapper","ValueCard","md","ValueImage","ValueText","defaultValues","logoImg","Values","loadValues","setLoadValues","isMd","swiperFlag","animation","variant","ContentContainer","lg","HeadingText","xxl","BuyBanana","Button","yellow","LearnMore","WelcomeContent","fullWidth","target","Home","SwiperProvider","BSC"],"mappings":"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","file":"static/js/34.3efd0d11.chunk.js","sourcesContent":["export const getDotPos = (index, carouselLength) => {\n  return index >= carouselLength * 2\n    ? index - carouselLength * 2\n    : index - carouselLength < 0\n    ? index\n    : index - carouselLength\n}\n","import { useState, useEffect } from 'react'\n\nexport interface Size {\n  width: number | undefined\n  height: number | undefined\n}\n\n// Hook\nexport default function useWindowSize(): Size {\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  })\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    handleResize()\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n  return windowSize\n}\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const [observerRefElement, setObserverRefElement] = useState(null)\n  const [observerRef] = useState(() => (element) => setObserverRefElement(element))\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet && observerRefElement) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRefElement)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerRefElement, observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import { Text } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\n\nexport const LaunchCalendarWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 95vw;\n  max-width: 1412px;\n  height: 500px;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const ColorWrap = styled.div`\n  display: flex;\n  background: ${({ theme }) => theme.colors.white2};\n  align-items: center;\n  justify-content: center;\n`\n\nexport const LaunchCard = styled.div`\n  width: 219px;\n  height: 263px;\n  border-radius: 10px;\n  padding: 10px 5px 10px 5px;\n  background: ${({ theme }) => theme.colors.white3};\n`\n\nexport const CalendarImg = styled.div<{ image: string }>`\n  width: 84px;\n  height: 84px;\n  border-radius: 10px;\n  background: url(${({ image }) => image});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nexport const Bubble = styled.div<{ isActive?: boolean }>`\n  background: ${({ isActive, theme }) =>\n    isActive ? 'linear-gradient(53.53deg, #a16552 15.88%, #e1b242 92.56%)' : theme.colors.white4};\n  height: 14px;\n  width: 14px;\n  border-radius: 50px;\n  margin: 0px 2.5px 0px 2.5px;\n  cursor: pointer;\n`\n\nexport const LaunchText = styled(Text)`\n  position: absolute;\n  font-size: 22px;\n  top: 40px;\n  text-align: center;\n  width: 100%;\n`\n\nexport const SkeletonWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  height: 500px;\n  align-items: center;\n  max-width: 1412px;\n  width: 95vw;\n  top: 0;\n  justify-content: center;\n  padding-bottom: 50px;\n  & :nth-child(2),\n  & :nth-child(3),\n  & :nth-child(4),\n  & :nth-child(5),\n  & :nth-child(6) {\n    display: none;\n  }\n  @media screen and (min-width: 555px) and (max-width: 855px) {\n    justify-content: space-around;\n    & :nth-child(2) {\n      display: block;\n    }\n  }\n  @media screen and (min-width: 855px) and (max-width: 1155px) {\n    justify-content: space-around;\n    & :nth-child(2),\n    & :nth-child(3) {\n      display: block;\n    }\n  }\n  @media screen and (min-width: 1155px) and (max-width: 1405px) {\n    justify-content: space-between;\n    & :nth-child(2),\n    & :nth-child(3),\n    & :nth-child(4) {\n      display: block;\n    }\n  }\n  @media screen and (min-width: 1405px) {\n    justify-content: space-between;\n    & :nth-child(2),\n    & :nth-child(3),\n    & :nth-child(4),\n    & :nth-child(5),\n    & :nth-child(6) {\n      display: block;\n    }\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport { Flex, Skeleton, Text } from '@apeswapfinance/uikit'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport SwiperCore from 'swiper'\nimport { useFetchHomepageLaunchCalendar, useHomepageLaunchCalendar } from 'state/hooks'\nimport { useTheme } from 'styled-components'\nimport useSwiper from 'hooks/useSwiper'\nimport { QuestionMark } from 'components/Icons'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Bubble,\n  CalendarImg,\n  ColorWrap,\n  LaunchCalendarWrapper,\n  LaunchCard,\n  LaunchText,\n  SkeletonWrapper,\n} from './styles'\n\nconst LaunchCalendar: React.FC = () => {\n  const [loadNews, setLoadNews] = useState(false)\n  const today = new Date()\n  today.setHours(today.getHours() - 6)\n  useFetchHomepageLaunchCalendar(loadNews)\n  const { swiper, setSwiper } = useSwiper()\n  const [activeSlide, setActiveSlide] = useState(0)\n  const theme = useTheme()\n  const launchCal = useHomepageLaunchCalendar()\n  const sortLaunch = launchCal?.filter((launch) => new Date(launch.launchTime) > today)\n  const launchCalLength = sortLaunch?.length || 0\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const { t } = useTranslation()\n\n  const slideNewsNav = (index: number) => {\n    setActiveSlide(index)\n    swiper.slideTo(index)\n  }\n\n  const handleSlide = (event: SwiperCore) => {\n    setActiveSlide(event.activeIndex)\n  }\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadNews(true)\n    }\n  }, [isIntersecting])\n\n  return (\n    <>\n      <div ref={observerRef} />\n      <ColorWrap>\n        <LaunchCalendarWrapper>\n          <LaunchText bold>{t('Launch Calendar')}</LaunchText>\n          <Flex justifyContent=\"space-around\" style={{ width: '100%', overflow: 'hidden' }}>\n            {sortLaunch ? (\n              <Swiper\n                id=\"launchSwiper\"\n                initialSlide={0}\n                onSwiper={setSwiper}\n                spaceBetween={20}\n                slidesPerView=\"auto\"\n                resizeObserver\n                centeredSlides\n                lazy\n                preloadImages={false}\n                onSlideChange={handleSlide}\n                breakpoints={{\n                  480: {\n                    centeredSlides: false,\n                  },\n                }}\n              >\n                {sortLaunch?.map((launch, i) => {\n                  const date = new Date(launch.launchTime)\n                  const slide = (\n                    <SwiperSlide style={{ maxWidth: '219px', minWidth: '219px' }} key={launch?.textLine1}>\n                      <LaunchCard>\n                        <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                          <Text fontSize=\"30px\" bold>\n                            {date.getUTCDate()} {date.toUTCString().split(' ')[2]}\n                          </Text>\n                          <Text fontSize=\"12px\">\n                            {date.getUTCHours()}:{date?.getUTCMinutes() === 0 ? '00' : date?.getUTCMinutes()} UTC\n                          </Text>\n                        </Flex>\n                        <Flex\n                          mt=\"10px\"\n                          justifyContent=\"space-around\"\n                          alignItems=\"center\"\n                          flexDirection=\"row\"\n                          style={{ display: 'flex' }}\n                        >\n                          <CalendarImg image={launch.image1?.url} />\n                          {launch?.image2 && <CalendarImg image={launch.image2?.url} />}\n                        </Flex>\n                        <Flex\n                          mt=\"10px\"\n                          flexDirection=\"column\"\n                          justifyContent=\"center\"\n                          alignItems=\"center\"\n                          style={{ display: 'flex' }}\n                        >\n                          <Text>{launch.textLine1}</Text>\n                          {launch?.textLine2 && <Text>{launch.textLine2}</Text>}\n                          {launch?.textLine3 && <Text>{launch.textLine3}</Text>}\n                        </Flex>\n                      </LaunchCard>\n                    </SwiperSlide>\n                  )\n\n                  if (i === launchCalLength - 1) {\n                    return (\n                      <>\n                        {slide}\n                        <SwiperSlide style={{ maxWidth: '219px', minWidth: '219px' }} key={launch?.textLine1}>\n                          <LaunchCard>\n                            <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '100%' }}>\n                              <QuestionMark fill={theme.colors.text} />\n                            </Flex>\n                          </LaunchCard>\n                        </SwiperSlide>\n                      </>\n                    )\n                  }\n                  return slide\n                })}\n              </Swiper>\n            ) : (\n              <SkeletonWrapper>\n                {[...Array(6)].map(() => {\n                  return <Skeleton width=\"219px\" height=\"219px\" key=\"id\" />\n                })}\n              </SkeletonWrapper>\n            )}\n          </Flex>\n          <Flex\n            justifyContent=\"center\"\n            alignContent=\"center\"\n            style={{ position: 'absolute', bottom: '35px', left: '0', width: '100%' }}\n          >\n            {[...Array(launchCalLength + 1)].map((_, i) => {\n              return <Bubble isActive={i === activeSlide} onClick={() => slideNewsNav(i)} key={i} />\n            })}\n          </Flex>\n        </LaunchCalendarWrapper>\n      </ColorWrap>\n    </>\n  )\n}\n\nexport default LaunchCalendar\n","import styled from 'styled-components'\n\nexport const NewsCard = styled.div<{ image: string; index: number; listLength: number }>`\n  height: 332.5px;\n  min-width: 266px;\n  max-width: 266px;\n  opacity: 1;\n  flex-shrink: 1;\n  background: url(${({ image }) => image});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  border-radius: 10px;\n  transition: ease 1000ms;\n  cursor: pointer;\n`\n\nexport const NewsWrapper = styled.div`\n  display: flex;\n  height: 500px;\n  align-items: center;\n  overflow: hidden;\n  max-width: 1412px;\n  width: 95vw;\n  justify-content: center;\n  padding-bottom: 50px;\n`\n\nexport const SkeletonWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  height: 500px;\n  align-items: center;\n  max-width: 1412px;\n  width: 95vw;\n  top: 0;\n  justify-content: center;\n  padding-bottom: 50px;\n  & :nth-child(2),\n  & :nth-child(3),\n  & :nth-child(4),\n  & :nth-child(5) {\n    display: none;\n  }\n  @media screen and (min-width: 555px) and (max-width: 855px) {\n    justify-content: space-around;\n    & :nth-child(2) {\n      display: block;\n    }\n  }\n  @media screen and (min-width: 855px) and (max-width: 1155px) {\n    justify-content: space-around;\n    & :nth-child(2),\n    & :nth-child(3) {\n      display: block;\n    }\n  }\n  @media screen and (min-width: 1155px) and (max-width: 1405px) {\n    justify-content: space-between;\n    & :nth-child(2),\n    & :nth-child(3),\n    & :nth-child(4) {\n      display: block;\n    }\n  }\n  @media screen and (min-width: 1405px) {\n    justify-content: space-between;\n    & :nth-child(2),\n    & :nth-child(3),\n    & :nth-child(4),\n    & :nth-child(5) {\n      display: block;\n    }\n  }\n`\n\nexport const Bubble = styled.div<{ isActive?: boolean }>`\n  background: ${({ isActive, theme }) =>\n    isActive ? 'linear-gradient(53.53deg, #a16552 15.88%, #e1b242 92.56%)' : theme.colors.white4};\n  height: 14px;\n  width: 14px;\n  border-radius: 50px;\n  margin: 0px 2.5px 0px 2.5px;\n  cursor: pointer;\n`\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Box } from 'theme-ui'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport useSwiper from 'hooks/useSwiper'\nimport { orderBy } from 'lodash'\nimport SwiperCore, { Autoplay } from 'swiper'\nimport 'swiper/swiper.min.css'\nimport { Flex, Skeleton } from '@apeswapfinance/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useFetchHomepageNews, useHomepageNews } from 'state/hooks'\nimport track from 'utils/track'\nimport { getDotPos } from 'utils/getDotPos'\nimport { Bubble, NewsCard, NewsWrapper, SkeletonWrapper } from './styles'\n\nconst SLIDE_DELAY = 5000\n\nSwiperCore.use([Autoplay])\n\nconst News: React.FC = () => {\n  const history = useHistory()\n  const { chainId } = useActiveWeb3React()\n  const [loadImages, setLoadImages] = useState(false)\n  useFetchHomepageNews(loadImages)\n  const today = new Date()\n  const fetchedNews = useHomepageNews()\n  const sortedNews = orderBy(fetchedNews, 'CardPosition')\n  const filterNews = sortedNews?.filter(\n    (news) =>\n      (new Date(news.StartTime) <= today && new Date(news.EndTime) > today) || (!news.StartTime && !news.EndTime),\n  )\n  const newsLength = filterNews?.length || 0\n  const { swiper, setSwiper } = useSwiper()\n  const [activeSlide, setActiveSlide] = useState(0)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n\n  const slideNewsNav = (index: number) => {\n    setActiveSlide(index)\n    swiper.slideTo(newsLength + index)\n  }\n\n  const handleSlide = (event: SwiperCore) => {\n    const slideNumber = getDotPos(event.activeIndex, newsLength)\n    setActiveSlide(slideNumber)\n  }\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadImages(true)\n    }\n  }, [isIntersecting])\n\n  const trackBannersClick = (bannerId: number, clickUrl: string, chainIdentifier: string | number) => {\n    track({\n      event: 'newsClick',\n      chain: chainIdentifier,\n      data: {\n        banner: bannerId,\n        clickUrl,\n      },\n    })\n  }\n\n  const clickNews = (newsUrl, isModal) => (isModal ? history.push({ search: newsUrl }) : window.open(newsUrl, '_blank'))\n\n  return (\n    <>\n      <div ref={observerRef} />\n      <Flex\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ position: 'relative', width: '100%' }}\n      >\n        <NewsWrapper>\n          <Flex justifyContent=\"space-between\" style={{ width: '100%', overflow: 'hidden' }}>\n            {filterNews?.length > 0 ? (\n              <Swiper\n                id=\"newsSwiper\"\n                autoplay={{\n                  delay: filterNews?.length === 5 ? 10000000 : SLIDE_DELAY,\n                  disableOnInteraction: false,\n                }}\n                loop\n                onSwiper={setSwiper}\n                spaceBetween={20}\n                slidesPerView=\"auto\"\n                loopedSlides={newsLength}\n                centeredSlides\n                resizeObserver\n                lazy\n                preloadImages={false}\n                onSlideChange={handleSlide}\n              >\n                {filterNews?.map((news, index) => {\n                  return (\n                    <SwiperSlide style={{ maxWidth: '266px', minWidth: '266px' }} key={news.id}>\n                      <Box onClick={() => clickNews(news?.CardLink, news?.isModal)}>\n                        <NewsCard\n                          index={activeSlide}\n                          image={news?.cardImageUrl?.url}\n                          key={news?.cardImageUrl?.url}\n                          listLength={newsLength}\n                          onClick={() => trackBannersClick(index + 1, news?.CardLink, chainId)}\n                        />\n                      </Box>\n                    </SwiperSlide>\n                  )\n                })}\n              </Swiper>\n            ) : (\n              <SkeletonWrapper>\n                {[...Array(5)].map((i) => {\n                  return <Skeleton width=\"266px\" height=\"332.5px\" key={i} />\n                })}\n              </SkeletonWrapper>\n            )}\n          </Flex>\n        </NewsWrapper>\n        {loadImages && (\n          <Flex justifyContent=\"center\" alignContent=\"center\" style={{ position: 'absolute', bottom: '50px' }}>\n            {[...Array(newsLength)].map((_, i) => {\n              return <Bubble isActive={i === activeSlide} onClick={() => slideNewsNav(i)} key={i} />\n            })}\n          </Flex>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(News)\n","import styled, { keyframes } from 'styled-components'\n\nexport const Banner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  height: 788px;\n  width: 100%;\n  background-image: ${({ theme }) => (theme.isDark ? 'url(images/banner-night.svg)' : 'url(images/banner-day.svg)')};\n  background-size: cover;\n  background-repeat: no-repeat;\n`\nexport const FadeIn = keyframes`\n    0%{opacity: .5};\n    100%{opacity: 1};\n`\n\nexport const FadeOut = keyframes`\n    0%{opacity: 1};\n    100%{opacity: 0};\n`\n","import styled from 'styled-components'\nimport { FadeIn } from '../../styles'\n\nexport const ColorWrap = styled.div`\n  position: relative;\n  display: flex;\n  background: ${({ theme }) => theme.colors.white2};\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n`\n\nexport const YieldCard = styled.div<{ image?: string }>`\n  position: relative;\n  min-width: 338px;\n  max-width: 338px;\n  height: 442px;\n  opacity: 1;\n  padding: 20px 20px;\n  border-radius: 10px;\n  background: url(${({ theme, image }) => (theme.isDark ? `${image}-dark.svg` : `${image}-light.svg`)});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  animation: ${FadeIn} 0.5s linear;\n`\n\nexport const Bubble = styled.div<{ isActive?: boolean }>`\n  background: ${({ isActive, theme }) =>\n    isActive ? 'linear-gradient(53.53deg, #a16552 15.88%, #e1b242 92.56%)' : theme.colors.white4};\n  height: 14px;\n  width: 14px;\n  border-radius: 50px;\n  margin: 0px 2.5px 0px 2.5px;\n  cursor: pointer;\n  display: block;\n  @media screen and (min-width: 1488px) {\n    display: none;\n  }\n`\n\nexport const ServiceWrapper = styled.div`\n  display: flex;\n  height: 610px;\n  width: 95vw;\n  max-width: 1412px;\n  align-items: center;\n  justify-content: space-between;\n  overflow: hidden;\n`\n","import React, { useEffect, useState } from 'react'\nimport { Flex, Skeleton, Text } from '@apeswapfinance/uikit'\nimport SwiperCore from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport useSwiper from 'hooks/useSwiper'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport useWindowSize from 'hooks/useDimensions'\nimport { ServiceData } from 'state/types'\nimport { useFetchHomepageServiceStats, useHomepageServiceStats } from 'state/hooks'\nimport ServiceTokenDisplay from 'components/ServiceTokenDisplay'\nimport { useTranslation } from 'contexts/Localization'\nimport { getDotPos } from 'utils/getDotPos'\nimport { ServiceWrapper, YieldCard, ColorWrap, Bubble } from './styles'\nimport { defaultServiceData } from './defaultServiceData'\n\nconst Services: React.FC = () => {\n  const { swiper, setSwiper } = useSwiper()\n  const [loadServices, setLoadServices] = useState(false)\n  useFetchHomepageServiceStats(loadServices)\n  const [activeSlide, setActiveSlide] = useState(0)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const { width } = useWindowSize()\n  const { t } = useTranslation()\n  const serviceData = useHomepageServiceStats()\n  const displayData =\n    serviceData &&\n    defaultServiceData(t).map((service) => {\n      return { ...service, stats: serviceData[service.id] }\n    })\n  const slideNewsNav = (index: number) => {\n    setActiveSlide(index)\n    swiper.slideTo(displayData?.length + index)\n    swiper.autoplay.start()\n  }\n\n  const handleSlide = (event: SwiperCore) => {\n    const slideNumber = getDotPos(event.activeIndex, displayData.length)\n    setActiveSlide(slideNumber)\n  }\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadServices(true)\n    }\n  }, [isIntersecting])\n\n  const handleEachService = (id: string, service: ServiceData) => {\n    if (id === 'farmDetails' || id === 'poolDetails' || id === 'billDetails') {\n      const tokenImage =\n        id === 'farmDetails'\n          ? service.stakeToken.name.split('-')\n          : id === 'billDetails'\n          ? service?.lpTokenName.split('-')\n          : [service.stakeToken.name, service.rewardToken.name]\n      const name =\n        id === 'farmDetails'\n          ? service.stakeToken.name\n          : id === 'billDetails'\n          ? service?.lpTokenName\n          : service.rewardToken.name\n      return { name, tokenImage }\n    }\n    if (id === 'lendingDetails') {\n      return { name: service.marketName, tokenImage: [service.token.name] }\n    }\n    return {}\n  }\n\n  const displayStats = (id: string, link: string, stats: ServiceData[]) => {\n    return (\n      <>\n        <Flex\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          style={{ position: 'absolute', bottom: '60px', height: '250px', width: '300px' }}\n        >\n          {stats?.map((stat) => {\n            const { name, tokenImage } = handleEachService(id, stat)\n            return (\n              <a href={stat?.link} rel=\"noopener noreferrer\" key={stat?.apr}>\n                <Flex\n                  mt=\"5px\"\n                  mb=\"5px\"\n                  pl=\"20px\"\n                  style={{\n                    width: '100%',\n                    height: '70px',\n                    background: 'rgba(11, 11, 11, .55)',\n                    borderRadius: '10px',\n                  }}\n                >\n                  {id === 'farmDetails' ? (\n                    <ServiceTokenDisplay\n                      token1={tokenImage[0]}\n                      token2={tokenImage[1]}\n                      token3={stat.rewardToken.name}\n                      stakeLp\n                      iconFill=\"white\"\n                    />\n                  ) : id === 'billDetails' ? (\n                    <ServiceTokenDisplay\n                      token1={tokenImage[0]}\n                      token2={tokenImage[1]}\n                      token3={stat.earnTokenName}\n                      stakeLp\n                      billArrow\n                      iconFill=\"white\"\n                    />\n                  ) : id === 'poolDetails' ? (\n                    <ServiceTokenDisplay token1={tokenImage[0]} token2={tokenImage[1]} iconFill=\"white\" />\n                  ) : (\n                    <ServiceTokenDisplay token1={tokenImage[0]} />\n                  )}\n                  <Flex pl=\"15px\" justifyContent=\"center\" flexDirection=\"column\">\n                    <Text bold style={{ width: '100%', color: 'white' }}>\n                      {name}\n                    </Text>\n                    {id === 'lendingDetails' ? (\n                      <Text style={{ width: '100%', color: 'white' }}>APY: {stat.apy.toFixed(2)}%</Text>\n                    ) : id === 'billDetails' ? (\n                      <Text style={{ width: '100%', color: 'white' }}>\n                        Discount:{' '}\n                        <span style={{ color: stat.discount > 0 ? 'white' : '#DF4141' }}>\n                          {stat.discount.toFixed(2)}%\n                        </span>\n                      </Text>\n                    ) : (\n                      <Text style={{ width: '100%', color: 'white' }}>APR: {(stat.apr * 100).toFixed(2)}%</Text>\n                    )}\n                  </Flex>\n                </Flex>\n              </a>\n            )\n          })}\n        </Flex>\n        <a href={link} rel=\"noopener noreferrer\">\n          <Flex alignItems=\"center\" justifyContent=\"center\" style={{ textAlign: 'center' }}>\n            <Text color=\"white\" fontSize=\"16px\" bold>\n              {t('See All')} {'>'}\n            </Text>\n          </Flex>\n        </a>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div ref={observerRef} />\n      <ColorWrap>\n        <ServiceWrapper>\n          {displayData ? (\n            width < 1488 ? (\n              <Swiper\n                id=\"serviceSwiper\"\n                initialSlide={0}\n                onSwiper={setSwiper}\n                spaceBetween={20}\n                slidesPerView=\"auto\"\n                loopedSlides={displayData?.length}\n                loop\n                centeredSlides\n                resizeObserver\n                lazy\n                preloadImages={false}\n                onSlideChange={handleSlide}\n                breakpoints={{\n                  480: {\n                    centeredSlides: false,\n                  },\n                }}\n              >\n                {displayData?.map((service) => {\n                  return (\n                    <SwiperSlide style={{ maxWidth: '338px', minWidth: '338px' }} key={service.title}>\n                      <YieldCard image={service.backgroundImg}>\n                        <Flex flexDirection=\"column\" justifyContent=\"space-between\" style={{ height: '100%' }}>\n                          <Flex flexDirection=\"column\">\n                            <Flex>\n                              <Text color=\"white\" fontSize=\"23px\" bold>\n                                {service.title}\n                              </Text>\n                            </Flex>\n                            <Flex padding=\"0px 40px 0px 0px\">\n                              <Text color=\"white\" bold fontSize=\"15px\">\n                                {service.description}\n                              </Text>\n                            </Flex>\n                          </Flex>\n                          {displayStats(service.id, service.link, service.stats)}\n                        </Flex>\n                      </YieldCard>\n                    </SwiperSlide>\n                  )\n                })}\n              </Swiper>\n            ) : (\n              displayData?.map((service) => {\n                return (\n                  <YieldCard image={service.backgroundImg} key={service.id}>\n                    <Flex flexDirection=\"column\" justifyContent=\"space-between\" style={{ height: '100%' }}>\n                      <Flex flexDirection=\"column\">\n                        <Flex>\n                          <Text color=\"white\" fontSize=\"23px\" bold>\n                            {service.title}\n                          </Text>\n                        </Flex>\n                        <Flex padding=\"0px 40px 0px 0px\">\n                          <Text color=\"white\" bold fontSize=\"15px\">\n                            {service.description}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                      {displayStats(service.id, service.link, service.stats)}\n                    </Flex>\n                  </YieldCard>\n                )\n              })\n            )\n          ) : (\n            [...Array(4)].map((i) => {\n              return (\n                <YieldCard key={i}>\n                  <Skeleton height=\"100%\" width=\"100%\" />\n                </YieldCard>\n              )\n            })\n          )}\n          <Flex\n            justifyContent=\"center\"\n            alignContent=\"center\"\n            style={{ position: 'absolute', bottom: '35px', left: '0', width: '100%' }}\n          >\n            {[...Array(displayData?.length)].map((_, i) => {\n              return <Bubble isActive={i === activeSlide} onClick={() => slideNewsNav(i)} key={i} />\n            })}\n          </Flex>\n        </ServiceWrapper>\n      </ColorWrap>\n    </>\n  )\n}\n\nexport default React.memo(Services)\n","import { DefaultServiceData } from './types'\nimport { ContextApi } from '../../../../contexts/Localization/types'\n\nexport const defaultServiceData: (t: ContextApi['t']) => DefaultServiceData[] = (t) => [\n  {\n    id: 'poolDetails',\n    title: t('Staking Pools'),\n    description: t('Earn partner tokens by staking BANANA or GNANA'),\n    backgroundImg: 'images/homepage-pools',\n    link: '/pools',\n    stats: [],\n  },\n  {\n    id: 'farmDetails',\n    title: t('Yield Farms'),\n    description: t('Earn BANANA or partner tokens by staking LP tokens'),\n    backgroundImg: 'images/homepage-farms',\n    link: '/banana-farms',\n    stats: [],\n  },\n  {\n    id: 'lendingDetails',\n    title: t('Lending Network'),\n    description: t('Earn interest by supplying popular tokens'),\n    backgroundImg: 'images/homepage-lending',\n    link: 'https://lending.apeswap.finance/markets',\n    stats: [],\n  },\n  {\n    id: 'billDetails',\n    title: t('Treasury Bills'),\n    description: t('Create protocol-owned liquidity with yield-generating NFTs'),\n    backgroundImg: 'images/homepage-bills',\n    link: '/treasury-bills',\n    stats: [],\n  },\n]\n","import { Card } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\n\nexport const StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  height: 100px;\n  max-width: 325px;\n  min-width: 260px;\n  width: 100%;\n  border-radius: 10px;\n  padding: 15px 0px 15px 0px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 131px;\n  }\n`\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  margin: 0px 40px 0px 40px;\n  align-items: center;\n  max-width: 1412px;\n  z-index: 2;\n  width: 95vw;\n  border-radius: 10px;\n  ${StyledCard}:nth-child(1) {\n    border-radius: 10px 10px 0px 0px;\n    border-bottom: ${({ theme }) => `1px solid ${theme.colors.white4}`};\n  }\n  ${StyledCard}:nth-child(2), ${StyledCard}:nth-child(3) {\n    border-radius: 0px;\n    border-bottom: ${({ theme }) => `1px solid ${theme.colors.white4}`};\n    border-top: ${({ theme }) => `1px solid ${theme.colors.white4}`};\n  }\n  ${StyledCard}:nth-child(4) {\n    border-radius: 0px 0px 10px 10px;\n    border-top: ${({ theme }) => `1px solid ${theme.colors.white4}`};\n  }\n  @media screen and (min-width: 575px) and (max-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(260px, 325px));\n    margin: 0px 0px 0px 0px;\n    justify-content: space-between;\n    ${StyledCard}:nth-child(1), ${StyledCard}:nth-child(2) {\n      border-radius: 10px 10px 0px 0px;\n      border-bottom: ${({ theme }) => `1px solid ${theme.colors.white4}`};\n    }\n    ${StyledCard}:nth-child(3), ${StyledCard}:nth-child(4) {\n      border-radius: 0px 0px 10px 10px;\n      border-top: ${({ theme }) => `1px solid ${theme.colors.white4}`};\n    }\n  }\n  @media screen and (min-width: 1200px) {\n    display: grid;\n    justify-content: space-between;\n    ${StyledCard}:nth-child(1), ${StyledCard}:nth-child(2), \n    ${StyledCard}:nth-child(3), ${StyledCard}:nth-child(4) {\n      border-radius: 10px;\n    }\n    grid-template-columns: repeat(4, minmax(260px, 325px));\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport { Flex, Text, useMatchBreakpoints, Skeleton } from '@apeswapfinance/uikit'\nimport CountUp from 'react-countup'\nimport { useTheme } from 'styled-components'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { useFetchHomepageStats, useHomepageStats } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { StyledCard, CardWrapper } from './styles'\nimport { statsData } from './statsData'\n\nconst StatCards: React.FC = () => {\n  const { isSm, isXs } = useMatchBreakpoints()\n  const [loadStats, setLoadStats] = useState(false)\n  const isMobile = isSm || isXs\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const { t } = useTranslation()\n  useFetchHomepageStats(loadStats)\n  const rawStats = useHomepageStats()\n  const theme = useTheme()\n  const stats = statsData(t).map((stat) => {\n    return { ...stat, value: rawStats ? rawStats[stat.id] : null }\n  })\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadStats(true)\n    }\n  }, [isIntersecting])\n\n  return (\n    <>\n      <div ref={observerRef} />\n      <Flex alignItems=\"center\" justifyContent=\"center\" style={{ width: '100%' }}>\n        <CardWrapper>\n          {stats?.map((stat) => {\n            return (\n              <StyledCard key={stat.id}>\n                {!isMobile && (\n                  <Flex mb=\"20px\" justifyContent=\"center\" alignItems=\"center\" style={{ height: '10px' }}>\n                    <stat.logo fill={theme.colors.text} color={theme.colors.background} />\n                  </Flex>\n                )}\n                <Flex justifyContent=\"center\" alignItems=\"center\" style={{ width: '100%' }}>\n                  <Text style={{ lineHeight: '20px', textAlign: 'center' }}>{stat.title}</Text>\n                </Flex>\n                <Flex justifyContent=\"center\" alignItems=\"center\" style={{ width: '100%' }}>\n                  {stat?.value ? (\n                    <Text fontSize=\"28px\" bold style={{ lineHeight: '30px' }}>\n                      {stat?.title !== t('Partners') && '$'}\n                      <CountUp end={stat?.value} decimals={0} duration={1} separator=\",\" />\n                    </Text>\n                  ) : (\n                    <Skeleton width=\"220px\" height=\"30px\" />\n                  )}\n                </Flex>\n              </StyledCard>\n            )\n          })}\n        </CardWrapper>\n      </Flex>\n    </>\n  )\n}\n\nexport default React.memo(StatCards)\n","import { Tvl, MarketCap, Partners, Trade } from 'components/Icons'\nimport { StatType } from './types'\nimport { ContextApi } from '../../../../contexts/Localization/types'\n\nexport const statsData: (t: ContextApi['t']) => StatType[] = (t) => [\n  {\n    logo: Tvl,\n    title: t('Total Value Locked'),\n    value: null,\n    id: 'tvl',\n  },\n  {\n    logo: Trade,\n    title: t('Total Trade Volume'),\n    value: null,\n    id: 'totalVolume',\n  },\n  {\n    logo: MarketCap,\n    title: t('Market Cap'),\n    value: null,\n    id: 'marketCap',\n  },\n  {\n    logo: Partners,\n    title: t('Partners'),\n    value: null,\n    id: 'partnerCount',\n  },\n]\n","import { Text } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\nimport { FadeIn } from '../../styles'\n\nexport const TrendingTokensWrapper = styled.div`\n  position: relative;\n  max-width: 1412px;\n  width: 95vw;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  flex-direction: column;\n  background: ${({ theme }) => theme.colors.white2};\n  border-radius: 10px;\n  z-index: 1;\n  padding: 15px 20px 0px 20px;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: grid;\n    grid-template-rows: 50px 150px 20px;\n    width: 95vw;\n    padding: 20px calc(40% - 200px);\n  }\n  @media screen and (min-width: 1200px) {\n    width: 95vw;\n    display: flex;\n    flex-direction: row;\n    padding: 0px 40px 0px 220px;\n  }\n`\n\nexport const TokenContainer = styled.div<{ active?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 83px;\n  cursor: pointer;\n  opacity: 1;\n  animation: ${FadeIn} 2s ease-in;\n`\n\nexport const Title = styled(Text)`\n  text-align: center;\n  @media screen and (min-width: 1200px) {\n    left: 40px;\n    width: 170px;\n    position: absolute;\n    text-align: left;\n  }\n`\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport CountUp from 'react-countup'\nimport useInterval from 'hooks/useInterval'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { Flex, Text, Skeleton } from '@apeswapfinance/uikit'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { ChainId } from '@apeswapfinance/sdk'\nimport { Link } from 'react-router-dom'\nimport { useFetchHomepageTokenStats, useHomepageTokenStats } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport track from 'utils/track'\nimport { Container, Title, TokenContainer, TrendingTokensWrapper } from './styles'\nimport { TokenDisplayAmount } from './types'\n\nconst NUMBER_OF_TOKENS_TO_DISPLAY = 6\nconst TOKEN_DELAY = 10000\nconst CATEGORIES = ['primary', 'partner', 'trending']\n\nconst TrendingTokens: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const [loadTokens, setLoadTokens] = useState(false)\n  const [selectedCat, setSelectedCat] = useState('')\n  useFetchHomepageTokenStats(loadTokens, selectedCat)\n  const tokens = useHomepageTokenStats()\n  const [tokenDisplayRange, setTokenDisplayRange] = useState<TokenDisplayAmount>({\n    tokenStartIndex: 0,\n    tokenEndIndex: NUMBER_OF_TOKENS_TO_DISPLAY,\n  })\n  const { t } = useTranslation()\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const swapTokens = () => {\n    const tokenListLength = tokens?.length\n    if (tokenListLength % NUMBER_OF_TOKENS_TO_DISPLAY !== 0) {\n      setTokenDisplayRange(tokenDisplayRange)\n    } else if (tokenDisplayRange.tokenEndIndex + NUMBER_OF_TOKENS_TO_DISPLAY > tokenListLength) {\n      setTokenDisplayRange({\n        tokenStartIndex: 0,\n        tokenEndIndex: NUMBER_OF_TOKENS_TO_DISPLAY,\n      })\n    } else {\n      setTokenDisplayRange((prev) => ({\n        tokenStartIndex: prev.tokenEndIndex,\n        tokenEndIndex: tokenDisplayRange.tokenEndIndex + NUMBER_OF_TOKENS_TO_DISPLAY,\n      }))\n    }\n  }\n  useInterval(swapTokens, TOKEN_DELAY)\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadTokens(true)\n    }\n  }, [isIntersecting])\n\n  useEffect(() => {\n    if (chainId === ChainId.MATIC) {\n      setSelectedCat('polygon')\n    } else {\n      setSelectedCat(CATEGORIES[Math.floor(Math.random() * CATEGORIES.length)])\n    }\n  }, [chainId])\n\n  return (\n    <>\n      <div ref={observerRef} />\n      <Container>\n        <TrendingTokensWrapper>\n          <Title>\n            {t(selectedCat?.charAt(0)?.toUpperCase() + selectedCat?.slice(1))} {t('Tokens')}\n          </Title>\n          <Flex flexWrap=\"wrap\" justifyContent=\"space-between\" alignItems=\"space-between\" style={{ width: '100%' }}>\n            {tokens ? (\n              <>\n                {tokens?.slice(tokenDisplayRange.tokenStartIndex, tokenDisplayRange.tokenEndIndex)?.map((token, i) => {\n                  return (\n                    <TokenContainer\n                      as={Link}\n                      to={`/swap/?outputCurrency=${token?.contractAddress}`}\n                      key={token?.contractAddress}\n                      active={i >= tokenDisplayRange.tokenStartIndex && i < tokenDisplayRange.tokenEndIndex}\n                      onClick={() =>\n                        track({\n                          event: 'tokenClick',\n                          chain: chainId,\n                          data: {\n                            token: token?.tokenTicker,\n                            variation: token?.percentChange,\n                            category: selectedCat,\n                          },\n                        })\n                      }\n                    >\n                      <Flex>\n                        <img\n                          src={token?.logoUrl}\n                          alt={token?.tokenTicker}\n                          style={{\n                            height: '36px',\n                            width: '36px',\n                            borderRadius: '50px',\n                          }}\n                        />\n                      </Flex>\n                      <Flex flexDirection=\"column\" ml=\"10px\" style={{ height: '36px', width: '100px' }}>\n                        <Flex\n                          alignItems=\"center\"\n                          justifyContent=\"space-between\"\n                          style={{ width: '100%', height: '50%' }}\n                        >\n                          <Text fontSize=\"12px\">{token?.tokenTicker}</Text>\n                          <Text fontSize=\"12px\" color={token?.percentChange < 0 ? 'red' : 'green'}>\n                            {token?.percentChange > 0 && '+'}\n                            <CountUp end={token?.percentChange * 100} decimals={2} duration={1.5} />%\n                          </Text>\n                        </Flex>\n                        <Flex alignItems=\"center\" style={{ width: '100%', height: '50%' }}>\n                          <Text>\n                            $\n                            <CountUp\n                              end={token?.tokenPrice}\n                              decimals={token?.tokenPrice > 1 ? 2 : token?.tokenPrice > 0.01 ? 4 : 6}\n                              duration={1.5}\n                              separator=\",\"\n                            />\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </TokenContainer>\n                  )\n                })}\n              </>\n            ) : (\n              [...Array(NUMBER_OF_TOKENS_TO_DISPLAY)].map((i) => {\n                return (\n                  <TokenContainer active key={i}>\n                    <Flex style={{ width: '136px' }}>\n                      <Skeleton height=\"50px\" width=\"136px\" />\n                    </Flex>\n                  </TokenContainer>\n                )\n              })\n            )}\n          </Flex>\n        </TrendingTokensWrapper>\n      </Container>\n    </>\n  )\n}\n\nexport default React.memo(TrendingTokens)\n","import { Text } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\n\nexport const ValuesWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 550px;\n  width: 100%;\n`\n\nexport const ValueCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 338px;\n  height: 397px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin: 0px 20px 0px 20px;\n  }\n`\n\nexport const ValueImage = styled.div<{ image?: string }>`\n  height: 200px;\n  width: 200px;\n  border-radius: 100px;\n  background-image: ${({ image }) => `url(${image})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n`\n\nexport const Bubble = styled.div<{ isActive?: boolean }>`\n  background: ${({ isActive, theme }) =>\n    isActive ? 'linear-gradient(53.53deg, #a16552 15.88%, #e1b242 92.56%)' : theme.colors.white4};\n  height: 14px;\n  width: 14px;\n  border-radius: 50px;\n  margin: 0px 2.5px 0px 2.5px;\n  cursor: pointer;\n  display: block;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nexport const ValueText = styled(Text)`\n  position: absolute;\n  font-size: 22px;\n  top: 25px;\n  text-align: center;\n  width: 100%;\n`\n","import { Values } from './types'\nimport { ContextApi } from '../../../../contexts/Localization/types'\n\nexport const defaultValues: (t: ContextApi['t']) => Values[] = (t) => [\n  {\n    title: t('Accessibility'),\n    description: t(\n      'We create tools for users to leverage DeFi opportunities, regardless of location, background, wealth, or experience.',\n    ),\n    logoImg: 'images/accessibility.png',\n  },\n  {\n    title: t('Transparency'),\n    description: t(\n      'We build together through transparent governance and processes that ensure our community understands our goals.',\n    ),\n    logoImg: 'images/transparency.png',\n  },\n  {\n    title: t('Security'),\n    description: t('We ensure that the safety of the funds of our users and partners is our highest priority.'),\n    logoImg: 'images/security.png',\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport { Flex, Text, useMatchBreakpoints, Skeleton } from '@apeswapfinance/uikit'\nimport SwiperCore, { Autoplay } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport useSwiper from 'hooks/useSwiper'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { useTranslation } from 'contexts/Localization'\nimport { getDotPos } from 'utils/getDotPos'\nimport { Bubble, ValueCard, ValueImage, ValuesWrapper, ValueText } from './styles'\nimport { defaultValues } from './defaultValues'\n\nconst SLIDE_DELAY = 5000\nSwiperCore.use([Autoplay])\n\nconst Values: React.FC = () => {\n  const { swiper, setSwiper } = useSwiper()\n  const [activeSlide, setActiveSlide] = useState(0)\n  const [loadValues, setLoadValues] = useState(false)\n  const { isMd, isSm, isXs } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const swiperFlag = isMd || isSm || isXs\n\n  const slideVal = (index: number) => {\n    setActiveSlide(index)\n    swiper.slideTo(defaultValues(t).length + index)\n    swiper.autoplay.start()\n  }\n\n  const handleSlide = (event: SwiperCore) => {\n    const slideNumber = getDotPos(event.activeIndex, defaultValues(t).length)\n    setActiveSlide(slideNumber)\n  }\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadValues(true)\n    }\n  }, [isIntersecting])\n\n  return (\n    <>\n      <div ref={observerRef} />\n      <ValuesWrapper>\n        <ValueText bold> {t('Our Values')} </ValueText>\n        <Flex justifyContent=\"center\" style={{ width: '100%' }}>\n          {swiperFlag ? (\n            <Swiper\n              id=\"valuesSwiper\"\n              initialSlide={defaultValues(t).length}\n              autoplay={{\n                delay: SLIDE_DELAY,\n                disableOnInteraction: false,\n              }}\n              loop\n              onSwiper={setSwiper}\n              spaceBetween={30}\n              slidesPerView=\"auto\"\n              loopedSlides={defaultValues(t).length}\n              centeredSlides\n              onSlideChange={handleSlide}\n            >\n              {defaultValues(t).map((value) => {\n                return (\n                  <SwiperSlide style={{ maxWidth: '338px', minWidth: '338px' }} key={value.title}>\n                    <ValueCard key={value.title}>\n                      {loadValues ? (\n                        <ValueImage image={value.logoImg} />\n                      ) : (\n                        <Skeleton animation=\"waves\" variant=\"circle\" height=\"200px\" width=\"200px\" />\n                      )}\n                      <Text fontSize=\"25px\" bold>\n                        {value.title}\n                      </Text>\n                      <Text textAlign=\"center\">{value.description}</Text>\n                    </ValueCard>\n                  </SwiperSlide>\n                )\n              })}\n            </Swiper>\n          ) : (\n            defaultValues(t).map((value) => {\n              return (\n                <ValueCard key={value.title}>\n                  {loadValues ? (\n                    <ValueImage image={value.logoImg} />\n                  ) : (\n                    <Skeleton animation=\"waves\" variant=\"circle\" height=\"200px\" width=\"200px\" />\n                  )}\n                  <Text fontSize=\"25px\" bold>\n                    {value.title}\n                  </Text>\n                  <Text textAlign=\"center\">{value.description}</Text>\n                </ValueCard>\n              )\n            })\n          )}\n        </Flex>\n        <Flex\n          justifyContent=\"center\"\n          alignContent=\"center\"\n          style={{ position: 'absolute', bottom: '35px', left: '0', width: '100%' }}\n        >\n          {[...Array(defaultValues(t).length)].map((_, i) => {\n            return <Bubble isActive={i === activeSlide} onClick={() => slideVal(i)} key={i} />\n          })}\n        </Flex>\n      </ValuesWrapper>\n    </>\n  )\n}\n\nexport default Values\n","import { Button, Text } from '@apeswapfinance/uikit'\nimport styled from 'styled-components'\n\nexport const ContentContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-self: center;\n  justify-content: space-between;\n  text-align: center;\n  max-width: 1412px;\n  width: 95vw;\n  height: 300px;\n  margin-bottom: 100px;\n  top: 100px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n    height: 300px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 400px;\n    margin-bottom: 175px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 95vw;\n    padding-top: 50px;\n  }\n`\n\nexport const HeadingText = styled(Text)`\n  font-size: 35px;\n  line-height: 40px;\n  font-weight: 700;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n    line-height: 50px;\n  }\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    font-size: 60px;\n    line-height: 70px;\n  }\n`\n\nexport const BuyBanana = styled(Button)`\n  font-size: 16px;\n  font-weight: 700;\n  height: 44px;\n  width: 100%;\n  margin-right: 25px;\n  line-height: 5px;\n  background-color: ${({ theme }) => (theme.isDark ? theme.colors.yellow : theme.colors.text)};\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: auto;\n  }\n  :hover {\n    background-color: ${({ theme }) => (theme.isDark ? theme.colors.yellow : theme.colors.text)} !important;\n    opacity: 0.7;\n  }\n`\n\nexport const LearnMore = styled(Button)`\n  font-size: 16px;\n  font-weight: 700;\n  height: 44px;\n  line-height: 5px;\n  width: 100%;\n  margin-top: 10px;\n  border: 3px solid ${({ theme }) => (theme.isDark ? theme.colors.yellow : theme.colors.text)};\n  color: ${({ theme }) => (theme.isDark ? theme.colors.yellow : theme.colors.text)};\n  background-color: rgb(0, 0, 0, 0);\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    margin-top: 0px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: auto;\n    margin-top: 0px;\n  }\n  :hover {\n    background-color: rgb(0, 0, 0, 0) !important;\n    border: 3px solid ${({ theme }) => (theme.isDark ? theme.colors.yellow : theme.colors.text)} !important;\n    color: ${({ theme }) => (theme.isDark ? theme.colors.yellow : theme.colors.text)} !important;\n    opacity: 0.7;\n  }\n`\n","import React from 'react'\nimport { ApeSwapRoundIcon, Flex, Text, useMatchBreakpoints } from '@apeswapfinance/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BuyBanana, ContentContainer, HeadingText, LearnMore } from './styles'\n\nconst WelcomeContent: React.FC = () => {\n  const { isSm, isXs } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const isMobile = isSm || isXs\n\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" style={{ width: '100%' }}>\n      <ContentContainer>\n        <Flex flexDirection=\"column\" style={{ maxWidth: '740px' }}>\n          <HeadingText>{t('Welcome to the Most Connected DeFi Hub')}</HeadingText>\n          {!isMobile && (\n            <>\n              <br />\n              <br />\n              <Text>\n                {t(\n                  'Whether you are new to crypto or you are a DeFi veteran, ApeSwap has the tools, community, and connections to support your decentralized finance needs.',\n                )}\n              </Text>\n            </>\n          )}\n          <br />\n          <br />\n          <Flex>\n            {isMobile ? (\n              <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" style={{ width: '100%' }}>\n                <a href=\"/swap\" rel=\"noopener noreferrer\" style={{ width: '90%' }}>\n                  <BuyBanana fullWidth>\n                    {t('Ape In')}\n                    <ApeSwapRoundIcon ml=\"10px\" width=\"27px\" height=\"27px\" />\n                  </BuyBanana>\n                </a>\n                <a\n                  href=\"https://apeswap.gitbook.io/apeswap-finance/welcome/master\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ width: '90%' }}\n                >\n                  <LearnMore>{t('Learn More')}</LearnMore>\n                </a>\n              </Flex>\n            ) : (\n              <Flex justifyContent=\"space-between\" style={{ width: 'auto' }}>\n                <a href=\"/swap\" rel=\"noopener noreferrer\">\n                  <BuyBanana>\n                    {t('Ape In')}\n                    <ApeSwapRoundIcon ml=\"10px\" width=\"27px\" height=\"27px\" />\n                  </BuyBanana>\n                </a>\n                <a\n                  href=\"https://apeswap.gitbook.io/apeswap-finance/welcome/master\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <LearnMore>{t('Learn More')}</LearnMore>\n                </a>\n              </Flex>\n            )}\n          </Flex>\n        </Flex>\n\n        {/*\n         Will be added later\n         {!isMobile && (\n          <Flex alignItems=\"center\" justifyContent=\"center\" paddingBottom=\"100px\">\n            <Spinner size={400} />\n          </Flex>\n        )} */}\n      </ContentContainer>\n    </Flex>\n  )\n}\n\nexport default React.memo(WelcomeContent)\n","import { ChainId } from '@apeswapfinance/sdk'\nimport SwiperProvider from 'contexts/SwiperProvider'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport React from 'react'\nimport LaunchCalendar from './components/LaunchCalendar/LaunchCalendar'\nimport News from './components/News/News'\nimport Services from './components/Services/Services'\nimport StatCards from './components/StatCards/StatCards'\nimport TrendingTokens from './components/TrendingTokens/TrendingTokens'\nimport Values from './components/Values/Values'\nimport WelcomeContent from './components/WelcomeContent/WelcomeContent'\nimport { Banner } from './styles'\n\nconst Home: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n\n  return (\n    <>\n      <Banner />\n      <WelcomeContent />\n      <StatCards />\n      <TrendingTokens />\n      <SwiperProvider>\n        <News />\n      </SwiperProvider>\n      {chainId === ChainId.BSC && (\n        <SwiperProvider>\n          <Services />\n        </SwiperProvider>\n      )}\n      <SwiperProvider>\n        <Values />\n      </SwiperProvider>\n      <SwiperProvider>\n        <LaunchCalendar />\n      </SwiperProvider>\n    </>\n  )\n}\n\nexport default React.memo(Home)\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useReward.ts","views/PoolsLegacy/components/SearchInput.tsx","state/nfaStakingPools/hooks.ts","views/NfaStaking/components/PoolCard/DetailsSection.tsx","views/NfaStaking/components/PoolCard/ExpandableSectionButton/ExpandableSectionButton.tsx","views/NfaStaking/components/PoolCard/CardActions/HarvestActions.tsx","views/NfaStaking/components/PoolCard/CardActions/ApprovalAction.tsx","views/NfaStaking/components/DepositModal.tsx","views/NfaStaking/components/WithdrawModal.tsx","views/NfaStaking/components/PoolCard/CardActions/StakeActions.tsx","views/NfaStaking/components/PoolCard/CardHeading.tsx","views/NfaStaking/components/PoolCard/PoolCard.tsx","views/NfaStaking/NfaStaking.tsx","utils/getTimePeriods.ts","utils/callHelpers.ts","hooks/useProgressiveImage.ts","components/Banner/styles.ts","components/Banner/index.tsx","views/Nft/components/Image.tsx","components/ModalActions/ModalActions.tsx"],"names":["useReward","rewardRef","callback","handleReward","useCallback","a","current","rewardMe","StyledInput","styled","Input","theme","colors","white3","mediaQueries","sm","InputWrapper","div","md","Container","SearchInput","value","onChange","useState","toggled","setToggled","inputEl","useRef","icon","ref","onBlur","useNfaStakingPools","nfaStakingPools","useSelector","state","data","Wrapper","StyledText","Text","StyledTextGreen","StyledLink","Link","DetailsSection","bscScanAddress","totalStaked","rewardTokenPrice","pendingReward","tokenDecimals","blocksRemaining","t","useTranslation","earnings","BigNumber","rawEarningsBalance","getBalanceNumber","timeUntilEnd","getTimePeriods","BSC_BLOCK_TIME","justifyContent","fontSize","toFixed","days","months","hours","minutes","external","href","bold","xs","primary","ExpandableSectionButton","expanded","role","width","defaultProps","StyledButton","Button","HarvestActions","sousId","earningTokenBalance","pendingTx","setPendingTx","onReward","useNfaStakingHarvest","disabled","onClick","catch","ApprovalAction","nfaStakingPoolContract","isLoading","pendingApprove","setPendingApprove","onApprove","useNfaStakingApprove","handleApprove","console","warn","height","endIcon","spin","color","OwnedNfaWrapper","lg","Nfa","props","active","DepositModal","onConfirm","onDismiss","tier","profile","useProfile","ownedFilteredNfas","ownedNfts","filter","nfa","attributes","rarityTierNumber","selectedNfas","setSelectedNfas","title","marginBottom","map","index","length","undefined","includes","i","Image","src","image","alt","name","rarityTier","ModalActions","fullWidth","style","borderRadius","UnderlinedButton","text","handleClick","WithdrawModal","stakedNfas","useFetchNfas","nfas","useNfas","mappedNfas","IconButtonWrapper","StyledIconButton","IconButton","StyledHeadingGreen","Heading","StyledFlex","Flex","StakeAction","pool","stakedBalance","isApproved","firstStake","rawStakedBalance","displayBalance","toLocaleString","onStake","useNfaStake","onUnstake","useNfaUnstake","useModal","val","onPresentDeposit","onPresentWithdraw","alignItems","mt","flexDirection","marginRight","mr","PoolFinishedSash","StyledBackground","StyledHeading","StyledText1","StyledText2","StyledText3","StyledText4","StyledFlexContainer","StyledFlexEarned","StyledFlexEarnedSmall","LabelContainer","LabelContainer2","ButtonContainer","StyledImage","img","StyledImageHolder","StyledArrow","NumberHolder","StyledNumber","CardHeading","stakeToken","earnToken","removed","earnTokenImage","showExpandableSection","userData","stakingTokenBalance","accountHasStakedBalance","toNumber","allowance","maximumFractionDigits","account","useWeb3React","hideTier","fontWeight","display","pr","isStaked","contractAddress","process","UnlockButton","sx","ExpandingWrapper","PCard","navbar","PoolCard","apr","startBlock","endBlock","rewardToken","currentBlock","useBlockNumber","setShowExpandableSection","blocksUntilStart","Math","max","symbol","poolAPR","price","personalValueStaked","addLiquidityUrl","ControlContainer","Card","ToggleWrapper","ToggleContainer","xl","LabelWrapper","ViewControls","StyledCheckbox","Checkbox","CardContainer","ButtonCheckWrapper","StyledPage","Page","FlexLayout","NfaStaking","dispatch","useAppDispatch","setInitialNfaStakingDataAsync","useSetNfaStakingPools","slowRefresh","useRefresh","useActiveWeb3React","chainId","tokenPrices","useTokenPrices","useEffect","fetchNfaStakingPoolsPublicDataAsync","fetchNfaStakingPoolsUserDataAsync","usePollNfaStakingData","stakedOnly","setStakedOnly","searchQuery","setSearchQuery","isActive","useLocation","pathname","allNfaStakingPools","loadMoreRef","stakedOnlyPools","isGreaterThan","partition","isFinished","finishedPools","openPools","cardLayout","chosenPools","lowercaseQuery","toLowerCase","poolsToShow","Banner","banner","link","maxWidth","margin","titleColor","event","target","checked","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","floor","approve","lpContract","masterChefContract","address","ethers","constants","MaxUint256","then","trx","wait","stake","pid","amount","enterStaking","times","pow","toString","deposit","sousStake","sousChefContract","jungleStake","jungleChefContract","unstake","leaveStaking","withdraw","sousUnstake","jungleUnstake","sousEmegencyWithdraw","emergencyWithdraw","harvest","soushHarvest","jungleHarvest","bid","auctionContract","id","nextAuction","endAuction","listNfa","auctionLength","timeToExtend","minimumExtendTime","minimumBid","pushToAuction","removeAuction","nfaStake","nfaStakingChefContract","ids","nfaStakeHarvest","nfaUnstake","harvestMaximizer","vaultApeContract","harvestAll","stakeVaultV1","vaultUnstakeV1","stakeVaultV2","vaultUnstakeV2","vaultUnstakeAll","withdrawAll","miniChefStake","miniChefContract","miniChefHarvest","miniChefUnstake","withdrawAndHarvest","createNewIazo","iazoFactoryContract","iazoOwner","iazoToken","baseToken","burnRemains","unitParams","creationFee","createIAZO","userDeposit","iazoContract","userDepositNative","userWithdraw","withdrawOfferTokensOnFailure","userBuyBill","billContract","user","lpAmount","maxPrice","userClaimBill","billIds","batchRedeem","userTransferBillNft","billNft","billId","fromAddress","toAddress","useProgressiveImage","sourceLoaded","setSourceLoaded","onload","styles","position","top","left","lineHeight","textTransform","padding","FlexImage","listViewBreak","FlexSkeleton","Skeleton","LearnMoreArrow","ArrowDropDownIcon","children","history","useHistory","isDark","useTheme","loaded","backgroundImage","toUpperCase","variant","bannerLink","push","search","window","open","textDecoration","React","memo","sway","keyframes","imageBorderRadius","gradient","backgroundSize","TierSvg","TierNumber","p","gradientStyle","StyledModalActions","primaryDark","StyledModalAction","Children","child"],"mappings":"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","file":"static/js/29.ea586fd9.chunk.js","sourcesContent":["import { useCallback } from 'react'\n\nconst useReward = (rewardRef, callback) => {\n  const handleReward = useCallback(\n    async (...args) => {\n      await callback(...args)\n      // TODO error visual effect\n      // .catch(() => rewardRef.current?.punishMe())\n      rewardRef.current?.rewardMe()\n    },\n    [callback, rewardRef],\n  )\n\n  return handleReward\n}\n\nexport default useReward\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@apeswapfinance/uikit'\nimport styled from '@emotion/styled'\n\nconst StyledInput = styled(Input)`\n  border-radius: 20px;\n  background: ${({ theme }) => theme.colors.white3};\n  margin-left: auto;\n  height: 28px;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 32px;\n  }\n\n  :focus {\n    box-shadow: 0px 0px 0px 1px #ffb300, 0px 0px 0px 4px rgb(255 179 0 / 40%) !important;\n  }\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  width: 140px;\n\n  @media screen and (min-width: 340px) {\n    width: 160px;\n  }\n\n  @media screen and (min-width: 360px) {\n    width: 180px;\n  }\n\n  @media screen and (min-width: 390px) {\n    width: 200px;\n  }\n\n  @media screen and (min-width: 460px) {\n    width: 220px;\n  }\n\n  @media screen and (min-width: 500px) {\n    width: 240px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 244px;\n    display: block;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 220px;\n    display: block;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 244px;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput icon=\"search\" ref={inputEl} value={value} onChange={onChange} onBlur={() => setToggled(false)} />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","// NfaStakingPools\n\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useRefresh from 'hooks/useRefresh'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useTokenPrices } from 'state/tokenPrices/hooks'\nimport { NfaStakingPool, State } from 'state/types'\nimport {\n  fetchNfaStakingPoolsPublicDataAsync,\n  fetchNfaStakingPoolsUserDataAsync,\n  setInitialNfaStakingDataAsync,\n} from '.'\n\nexport const usePollNfaStakingData = () => {\n  const { slowRefresh } = useRefresh()\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const { tokenPrices } = useTokenPrices()\n  useEffect(() => {\n    dispatch(fetchNfaStakingPoolsPublicDataAsync(chainId, tokenPrices))\n    if (account) {\n      dispatch(fetchNfaStakingPoolsUserDataAsync(chainId, account))\n    }\n  }, [account, dispatch, chainId, tokenPrices, slowRefresh])\n}\n\nexport const useNfaStakingPools = (): NfaStakingPool[] => {\n  const nfaStakingPools = useSelector((state: State) => state.nfaStakingPools.data)\n  return nfaStakingPools\n}\n\nexport const useNfaStakingPoolFromPid = (sousId): NfaStakingPool => {\n  const nfaStakingPool = useSelector((state: State) => state.nfaStakingPools.data.find((p) => p.sousId === sousId))\n  return nfaStakingPool\n}\n\nexport const useAllNfaStakingPools = (): NfaStakingPool[] => {\n  const nfaStakingPools = useSelector((state: State) => state.nfaStakingPools.data)\n  return nfaStakingPools\n}\n\nexport const useSetNfaStakingPools = () => {\n  const dispatch = useAppDispatch()\n  const nfaStakingPools = useNfaStakingPools()\n  if (nfaStakingPools.length === 0) {\n    dispatch(setInitialNfaStakingDataAsync())\n  }\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, Flex, Link } from '@apeswapfinance/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { BSC_BLOCK_TIME } from 'config'\nimport getTimePeriods from 'utils/getTimePeriods'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n  multiplier?: string\n  totalStaked?: number\n  personalValueStaked?: number\n  blocksRemaining?: number\n  isFinished?: boolean\n  blocksUntilStart?: number\n  stakedTokenPrice?: number\n  rewardTokenPrice?: number\n  pendingReward?: BigNumber\n  projectSite?: string\n  tokenDecimals?: number\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n  margin-left: 24px;\n  margin-right: 24px;\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 600;\n`\n\nconst StyledTextGreen = styled(Text)`\n  font-weight: 600;\n  color: #38a611;\n`\n\nconst StyledLink = styled(Link)`\n  font-size: 12px;\n  text-decoration-line: underline;\n  margin-bottom: 14px;\n  font-weight: 800;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  totalStaked,\n  rewardTokenPrice,\n  pendingReward,\n  tokenDecimals,\n  blocksRemaining,\n}) => {\n  const { t } = useTranslation()\n\n  const earnings = new BigNumber(pendingReward || 0)\n  const rawEarningsBalance = getBalanceNumber(earnings, tokenDecimals)\n  const timeUntilEnd = getTimePeriods(blocksRemaining * BSC_BLOCK_TIME)\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{t('Staked Amount')}:</StyledText>\n        <StyledTextGreen fontSize=\"12px\">{totalStaked}</StyledTextGreen>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{t('Earned Value')}:</StyledText>\n        <StyledTextGreen fontSize=\"12px\">${(rawEarningsBalance * rewardTokenPrice).toFixed(2)}</StyledTextGreen>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <StyledText fontSize=\"12px\">{t('End')}:</StyledText>\n        <StyledText fontSize=\"12px\">{`${timeUntilEnd.days + timeUntilEnd.months * 30}d, ${timeUntilEnd.hours}h, ${\n          timeUntilEnd.minutes\n        }m`}</StyledText>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <StyledLink external href={bscScanAddress} bold={false}>\n          {t('View on BscScan')}\n        </StyledLink>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from '@apeswapfinance/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin-left: 5px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-left: 10px;\n  }\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\">\n      {expanded ? <ArrowDropUpIcon width=\"10px\" /> : <ArrowDropDownIcon width=\"10px\" />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport useReward from 'hooks/useReward'\nimport { useNfaStakingHarvest } from 'hooks/useHarvest'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nconst StyledButton = styled(Button)`\n  font-weight: 600;\n`\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  sousId: number\n  earningTokenPrice?: number\n  isBnbPool?: boolean\n  isLoading?: boolean\n  emergencyWithdraw?: boolean\n  tokenDecimals: number\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({ earnings, tokenDecimals, sousId }) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, tokenDecimals)\n  const rewardRef = useRef(null)\n  const [pendingTx, setPendingTx] = useState(false)\n  const onReward = useReward(rewardRef, useNfaStakingHarvest(sousId).onReward)\n\n  const renderButton = () => {\n    return (\n      <StyledButton\n        disabled={earningTokenBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward().catch(() => {\n            rewardRef.current?.rewardMe()\n          })\n          setPendingTx(false)\n        }}\n      >\n        {t('HARVEST')}\n      </StyledButton>\n    )\n  }\n\n  return renderButton()\n}\n\nexport default HarvestActions\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Button, AutoRenewIcon } from '@apeswapfinance/uikit'\nimport { useNfaStakingApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledButton = styled(Button)`\n  font-weight: 600;\n`\n\ninterface ApprovalActionProps {\n  nfaStakingPoolContract: string\n  sousId: number\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ nfaStakingPoolContract, sousId, isLoading = false }) => {\n  const [pendingApprove, setPendingApprove] = useState(false)\n  const { onApprove } = useNfaStakingApprove(nfaStakingPoolContract, sousId)\n  const { t } = useTranslation()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      await onApprove()\n    } catch (e) {\n      console.warn(e)\n    }\n  }, [onApprove])\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <StyledButton\n          disabled={pendingApprove}\n          onClick={async () => {\n            setPendingApprove(true)\n            await handleApprove()\n            setPendingApprove(false)\n          }}\n          endIcon={pendingApprove && <AutoRenewIcon spin color=\"currentColor\" />}\n        >\n          {t('ENABLE')}\n        </StyledButton>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React, { useState } from 'react'\nimport { Button, Modal, AutoRenewIcon, Text } from '@apeswapfinance/uikit'\nimport Image from 'views/Nft/components/Image'\nimport styled from 'styled-components'\nimport ModalActions from 'components/ModalActions'\nimport { useProfile } from 'state/hooks'\nimport UnderlinedButton from 'components/UnderlinedButton'\nimport { useTranslation } from '../../../contexts/Localization'\n\ninterface DepositModalProps {\n  tier: number\n  onConfirm: (ids: number[]) => void\n  onDismiss?: () => void\n}\n\nconst OwnedNfaWrapper = styled.div`\n  width: 305px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  align-self: center;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 405px;\n  }\n`\n\nconst Nfa = styled.div<{ active: boolean }>`\n  width: 80px;\n  height: 80px;\n  box-shadow: 0px 0px ${(props) => (props.active ? '15px #ffb300' : '2px black')};\n  cursor: pointer;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 15px;\n`\n\nconst DepositModal: React.FC<DepositModalProps> = ({ onConfirm, onDismiss, tier }) => {\n  const { profile } = useProfile()\n  const ownedFilteredNfas = profile?.ownedNfts?.filter((nfa) => {\n    return nfa.attributes.rarityTierNumber === tier\n  })\n  const [selectedNfas, setSelectedNfas] = useState([])\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n\n  const handleNfaChange = (index) => {\n    if (selectedNfas.includes(index)) {\n      setSelectedNfas(selectedNfas.filter((i) => i !== index))\n    } else {\n      setSelectedNfas([...selectedNfas, index])\n    }\n  }\n\n  return (\n    <Modal title={`${t('Deposit')} ${t('Tier')} ${tier} ${t('NFAs')}`} onDismiss={onDismiss}>\n      <Text marginBottom=\"20px\">\n        {t('NFAs Selected')}:\n        {selectedNfas?.map((index) => {\n          return ` ${index},`\n        })}\n      </Text>\n      <OwnedNfaWrapper>\n        {ownedFilteredNfas?.length !== 0 || ownedFilteredNfas === undefined ? (\n          ownedFilteredNfas?.map((nfa) => {\n            return (\n              <Nfa\n                onClick={() => handleNfaChange(nfa.index)}\n                active={selectedNfas?.includes(nfa.index)}\n                key={nfa.index}\n              >\n                <Image src={nfa.image} alt={nfa.name} rarityTier={nfa.attributes.rarityTierNumber} />\n              </Nfa>\n            )\n          })\n        ) : (\n          <Text marginBottom=\"20px\">{t('You do not have any tier %tier% NFAs in your wallet', { tier })} 😢</Text>\n        )}\n      </OwnedNfaWrapper>\n      <ModalActions>\n        <Button\n          fullWidth\n          disabled={pendingTx || selectedNfas?.length === 0}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(selectedNfas)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React, { useState } from 'react'\nimport { Button, Modal, AutoRenewIcon, Text } from '@apeswapfinance/uikit'\nimport Image from 'views/Nft/components/Image'\nimport styled from 'styled-components'\nimport { useFetchNfas, useNfas } from 'state/hooks'\nimport ModalActions from 'components/ModalActions'\nimport { useTranslation } from 'contexts/Localization'\nimport UnderlinedButton from 'components/UnderlinedButton'\n\ninterface WithdrawModalProps {\n  onConfirm: (amount: number[]) => void\n  onDismiss?: () => void\n  stakedNfas: number[]\n}\n\nconst OwnedNfaWrapper = styled.div`\n  width: 305px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  align-self: center;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 405px;\n  }\n`\n\nconst Nfa = styled.div<{ active: boolean }>`\n  width: 80px;\n  height: 80px;\n  box-shadow: 0px 0px ${(props) => (props.active ? '15px #ffb300' : '2px black')};\n  cursor: pointer;\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 15px;\n`\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, stakedNfas }) => {\n  useFetchNfas()\n  const [selectedNfas, setSelectedNfas] = useState([])\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const { nfas } = useNfas()\n  const mappedNfas = nfas?.filter((nfa) => stakedNfas.includes(nfa.index))\n\n  const handleNfaChange = (index) => {\n    if (selectedNfas.includes(index)) {\n      setSelectedNfas(selectedNfas.filter((i) => i !== index))\n    } else {\n      setSelectedNfas([...selectedNfas, index])\n    }\n  }\n\n  return (\n    <Modal title={t('Withdraw NFAs')} onDismiss={onDismiss}>\n      <Text marginBottom=\"20px\">\n        {t('NFAs Selected')}:\n        {selectedNfas.map((index) => {\n          return ` ${index},`\n        })}\n      </Text>\n      <OwnedNfaWrapper>\n        {mappedNfas.length !== 0 ? (\n          mappedNfas?.map((nfa) => {\n            return (\n              <Nfa onClick={() => handleNfaChange(nfa.index)} active={selectedNfas.includes(nfa.index)} key={nfa.index}>\n                <Image src={nfa.image} alt={nfa.name} rarityTier={nfa.attributes.rarityTierNumber} />\n              </Nfa>\n            )\n          })\n        ) : (\n          <Text marginBottom=\"20px\">{t('You do not have any NFAs staked')} 😢</Text>\n        )}\n      </OwnedNfaWrapper>\n      <ModalActions>\n        <Button\n          fullWidth\n          disabled={pendingTx || selectedNfas.length === 0}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(selectedNfas)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          endIcon={pendingTx && <AutoRenewIcon spin color=\"currentColor\" />}\n          style={{\n            borderRadius: '10px',\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n        <UnderlinedButton text={t('Cancel')} handleClick={onDismiss} />\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { NfaStakingPool } from 'state/types'\nimport { Flex, Heading, useModal, Text, Button, MinusIcon, AddIcon, IconButton } from '@apeswapfinance/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useNfaStake } from 'hooks/useStake'\nimport { useNfaUnstake } from 'hooks/useUnstake'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\n\ninterface StakeActionsProps {\n  pool: NfaStakingPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  tier: number\n  isBnbPool?: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n  isApproved?: boolean\n  firstStake?: boolean\n  stakedNfas?: number[]\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst StyledIconButton = styled(IconButton)`\n  width: 34px;\n  height: 34px;\n`\nconst StyledHeadingGreen = styled(Heading)`\n  font-size: 14px;\n  color: #38a611;\n  font-weight: 800;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 20px;\n    color: #38a611;\n  }\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nconst StyledFlex = styled(Flex)`\n  width: 100%;\n  margin-left: 117px;\n  margin-right: 35px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 217px;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  font-weight: 600;\n`\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakedBalance,\n  isApproved,\n  firstStake,\n  tier,\n  stakedNfas,\n}) => {\n  const { t } = useTranslation()\n\n  const { sousId } = pool\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance, 0)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const { onStake } = useNfaStake(sousId)\n  const { onUnstake } = useNfaUnstake(sousId)\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      onConfirm={async (val) => {\n        await onStake(val)\n      }}\n      tier={tier}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      onConfirm={async (val) => {\n        await onUnstake(val)\n      }}\n      stakedNfas={stakedNfas}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    return (\n      rawStakedBalance !== 0 && (\n        <IconButtonWrapper>\n          <StyledIconButton onClick={onPresentWithdraw} mr=\"6px\">\n            <MinusIcon color=\"white\" width=\"12px\" height=\"12px\" />\n          </StyledIconButton>\n          <StyledIconButton onClick={onPresentDeposit}>\n            <AddIcon color=\"white\" width=\"16px\" height=\"16px\" />\n          </StyledIconButton>\n          <></>\n        </IconButtonWrapper>\n      )\n    )\n  }\n\n  if (firstStake) {\n    return <StyledButton onClick={onPresentDeposit}>{t('STAKE NFA')}</StyledButton>\n  }\n\n  return (\n    <StyledFlex justifyContent=\"space-between\" alignItems=\"center\" mt=\"5px\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" marginRight=\"6px\">\n        <StyledText>{t('Staked')}</StyledText>\n        <StyledHeadingGreen color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>\n          {displayBalance}\n        </StyledHeadingGreen>\n      </Flex>\n      {isApproved && renderStakingButtons()}\n    </StyledFlex>\n  )\n}\n\nexport default StakeAction\n","/** @jsxImportSource theme-ui */\nimport React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from '@emotion/styled'\nimport { useWeb3React } from '@web3-react/core'\nimport { NfaStakingPool } from 'state/types'\nimport { Flex, Heading, Text } from '@apeswapfinance/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport ExpandableSectionButton from './ExpandableSectionButton'\nimport HarvestActions from './CardActions/HarvestActions'\nimport ApprovalAction from './CardActions/ApprovalAction'\nimport StakeAction from './CardActions/StakeActions'\nimport Image from '../../../Nft/components/Image'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  apr?: BigNumber\n  pool?: NfaStakingPool\n  stakeToken?: string\n  earnToken?: string\n  tokenSymbol?: string\n  addLiquidityUrl?: string\n  bananaPrice?: BigNumber\n  poolAPR?: string\n  removed?: boolean\n  sousId?: number\n  lpSymbol?: string\n  earnTokenImage?: string\n  showExpandableSection?: boolean\n  stakingTokenAddress?: string\n  rewardTokenPrice?: number\n  tier?: number\n}\n\nconst PoolFinishedSash = styled.div`\n  @media (max-width: 1000px) {\n    background-image: url('/images/gnanaSash.svg');\n    background-position: top right;\n    background-repeat: no-repeat;\n    height: 35px;\n    position: absolute;\n    right: -3px;\n    top: -1.5px;\n    width: 45px;\n  }\n`\n\nconst StyledBackground = styled(Flex)`\n  margin-left: 10px;\n\n  @media (min-width: 500px) {\n    justify-content: space-between;\n    background: rgb(255, 179, 0, 0.4);\n    border-radius: 20px;\n    width: 200px;\n    align-items: flex-end;\n    height: 80px;\n    margin-left: 0px;\n    padding-left: 7px;\n    padding-right: 7px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 121px;\n  }\n`\n\nconst StyledHeading = styled(Heading)`\n  font-size: 12px;\n  font-weight: 800;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    text-align: start;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 22px;\n  }\n`\n\nconst StyledText1 = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 15px;\n  }\n`\n\nconst StyledText2 = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n  margin-top: 1px;\n`\n\nconst StyledText3 = styled(Text)`\n  font-size: 12px;\n  color: #38a611;\n  font-weight: 800;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 25px;\n    line-height: 29px;\n  }\n`\n\nconst StyledText4 = styled(Text)`\n  font-size: 12px;\n  font-weight: 600;\n  margin-top: 1px;\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n  }\n`\n\nconst StyledFlexContainer = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-left: 6px;\n  margin-right: 8px;\n  align-items: center;\n  flex: 1;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    margin-right: 15px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 15px;\n    margin-right: 15px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    width: 100%;\n  }\n`\n\nconst StyledFlexEarned = styled(Flex)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    margin-right: 0px;\n    flex-direction: column;\n  }\n`\n\nconst StyledFlexEarnedSmall = styled(Flex)`\n  margin-right: 10px;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: 10px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst LabelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-top: 10px;\n  width: 120px;\n  margin-right: 10px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n  }\n`\n\nconst LabelContainer2 = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n  }\n`\n\nconst ButtonContainer = styled.div`\n  width: 180px;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst StyledImage = styled.img`\n  display: none;\n  align-self: center;\n\n  @media (min-width: 500px) {\n    display: flex;\n    width: 45px;\n    height: 45px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 65px;\n    height: 65px;\n  }\n`\n\nconst StyledImageHolder = styled.div`\n  align-self: center;\n  @media (min-width: 500px) {\n    width: 45px;\n    height: 45px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 65px;\n    height: 65px;\n  }\n`\n\nconst StyledArrow = styled.img`\n  display: none;\n  align-self: center;\n\n  @media (min-width: 500px) {\n    display: flex;\n    width: 12px;\n    height: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 24px;\n    height: 24px;\n  }\n`\n\nconst NumberHolder = styled.div`\n  position: absolute;\n  align-self: center;\n  display: flex;\n  border-radius: 50%;\n  top: 28px;\n  align-items: center;\n  justify-content: center;\n  @media (min-width: 500px) {\n    width: 45px;\n    height: 45px;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 65px;\n    height: 65px;\n  }\n`\n\nconst StyledNumber = styled.div`\n  opacity: 0;\n  font-weight: 800;\n\n  @media (min-width: 500px) {\n    opacity: 1;\n    line-height: 0px;\n    font-size: 30px;\n    margin-right: 1px;\n    margin-bottom: 20px;\n    color: white;\n    z-index: 1;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    margin-right: 1px;\n    margin-bottom: 0px;\n  }\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  pool,\n  stakeToken,\n  earnToken,\n  tier,\n  removed,\n  sousId,\n  earnTokenImage,\n  showExpandableSection,\n}) => {\n  const { t } = useTranslation()\n  const { userData } = pool\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const earnings = new BigNumber(pool.userData?.pendingReward || 0)\n  const allowance = userData?.allowance\n  const rawEarningsBalance = getBalanceNumber(earnings, 18)\n  const displayBalance = rawEarningsBalance\n    ? rawEarningsBalance.toLocaleString(undefined, { maximumFractionDigits: 4 })\n    : '?'\n  const isLoading = !pool.userData\n  const { account } = useWeb3React()\n  const bananaPerDay = 0\n\n  const cardHeaderButton = () => {\n    if (!account) {\n      return <UnlockButton sx={{ fontWeight: 600, fontSize: '11.5px' }} />\n    }\n    if (!allowance) {\n      return (\n        <ApprovalAction nfaStakingPoolContract={pool.contractAddress[CHAIN_ID]} sousId={sousId} isLoading={isLoading} />\n      )\n    }\n    if (allowance && !accountHasStakedBalance) {\n      return (\n        <StakeAction\n          pool={pool}\n          stakingTokenBalance={stakingTokenBalance}\n          stakedBalance={stakedBalance}\n          isStaked={accountHasStakedBalance}\n          firstStake={!accountHasStakedBalance}\n          tier={tier}\n        />\n      )\n    }\n    return <HarvestActions earnings={earnings} sousId={sousId} isLoading={isLoading} tokenDecimals={18} />\n  }\n\n  return (\n    <Flex>\n      <StyledBackground>\n        <StyledImageHolder>\n          <NumberHolder>\n            <StyledNumber>{tier}</StyledNumber>\n          </NumberHolder>\n          <Image rarityTier={tier} borderRadius=\"50%\" hideTier />\n        </StyledImageHolder>\n        <StyledArrow src=\"/images/arrow.svg\" alt=\"arrow\" />\n        <StyledImage src={`/images/tokens/${earnTokenImage || `${earnToken}.svg`}`} alt={earnToken} />\n      </StyledBackground>\n      <StyledFlexContainer>\n        <LabelContainer>\n          <StyledHeading>\n            {t('Tier')} {tier}\n          </StyledHeading>\n          {!removed && (\n            <Text fontWeight={600} style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n              <StyledText1>\n                {t('BPD')}: {bananaPerDay}\n              </StyledText1>\n            </Text>\n          )}\n          <StyledFlexEarnedSmall>\n            <StyledText4 color=\"primary\" pr=\"3px\">\n              {t(`${earnToken}`)}\n            </StyledText4>\n            <StyledText2 color=\"primary\" pr=\"3px\">\n              {t('Earned')}\n            </StyledText2>\n            <StyledText3>{displayBalance}</StyledText3>\n          </StyledFlexEarnedSmall>\n        </LabelContainer>\n        <LabelContainer2>\n          <StyledFlexEarned>\n            <Flex>\n              <StyledText4 color=\"primary\" pr=\"3px\">\n                {earnToken}\n              </StyledText4>\n              <StyledText2 color=\"primary\" pr=\"3px\">\n                {t('Earned')}\n              </StyledText2>\n            </Flex>\n            <StyledText3>{displayBalance}</StyledText3>\n          </StyledFlexEarned>\n          <ButtonContainer>\n            {cardHeaderButton()}\n            <ExpandableSectionButton expanded={showExpandableSection} />\n          </ButtonContainer>\n        </LabelContainer2>\n        {stakeToken === 'GNANA' && <PoolFinishedSash />}\n      </StyledFlexContainer>\n    </Flex>\n  )\n}\n\nexport default CardHeading\n","import BigNumber from 'bignumber.js'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@apeswapfinance/uikit'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { NfaStakingPool } from 'state/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport StakeAction from './CardActions/StakeActions'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\ninterface HarvestProps {\n  pool: NfaStakingPool\n  removed: boolean\n}\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.white3};\n`\n\nconst PCard = styled.div`\n  align-self: baseline;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  text-align: center;\n  max-width: 530px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.navbar};\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool, removed }) => {\n  const { sousId, tier, apr, totalStaked, startBlock, endBlock, userData, rewardToken, contractAddress } = pool\n  const { account } = useWeb3React()\n  const currentBlock = useBlockNumber()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const allowance = userData?.allowance\n  const stakedNfas = userData?.stakedNfas\n\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const isApproved = account && allowance\n  const pendingReward = userData?.pendingReward\n  const toggleExpand = () => {\n    setShowExpandableSection(!showExpandableSection)\n  }\n  return (\n    <PCard onClick={toggleExpand}>\n      <CardHeading\n        pool={pool}\n        earnToken={rewardToken.symbol}\n        sousId={sousId}\n        apr={new BigNumber(apr)}\n        poolAPR={apr?.toFixed(2)}\n        showExpandableSection={showExpandableSection}\n        removed={removed}\n        rewardTokenPrice={rewardToken?.price}\n        tier={tier}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <Flex>\n          <StakeAction\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isApproved={isApproved}\n            isStaked={accountHasStakedBalance}\n            tier={tier}\n            stakedNfas={stakedNfas}\n          />\n          <></>\n        </Flex>\n        <DetailsSection\n          totalStaked={getBalanceNumber(totalStaked, 0)}\n          personalValueStaked={getBalanceNumber(stakedBalance, 0)}\n          blocksRemaining={blocksRemaining}\n          blocksUntilStart={blocksUntilStart}\n          rewardTokenPrice={rewardToken?.price}\n          addLiquidityUrl=\"https://apeswap.finance/swap\"\n          pendingReward={pendingReward}\n          bscScanAddress={`https://bscscan.com/address/${contractAddress[CHAIN_ID]}`}\n        />\n      </ExpandingWrapper>\n    </PCard>\n  )\n}\n\nexport default PoolCard\n","import React, { useState, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Text, Card, Checkbox } from '@apeswapfinance/uikit'\nimport { partition } from 'lodash'\nimport { useSetNfaStakingPools, usePollNfaStakingData, useNfaStakingPools } from 'state/nfaStakingPools/hooks'\nimport Page from 'components/layout/Page'\nimport Banner from 'components/Banner'\nimport { useTranslation } from 'contexts/Localization'\nimport SearchInput from '../PoolsLegacy/components/SearchInput'\nimport PoolCard from './components/PoolCard/PoolCard'\n\nconst ControlContainer = styled(Card)`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n  justify-content: center;\n  flex-direction: column;\n  overflow: visible;\n  padding-bottom: 10px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    height: 59px;\n    padding: 0px;\n    justify-content: flex-start;\n    padding-left: 50px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 0px;\n  cursor: pointer;\n  ${Text} {\n    margin-left: 4px;\n    ${({ theme }) => theme.mediaQueries.md} {\n      margin-left: 8px;\n    }\n  } ;\n`\n\nconst ToggleContainer = styled.div`\n  position: absolute;\n  right: 5%;\n  display: flex;\n  flex-direction: column;\n  height: 75px;\n  margin-left: 15px;\n  justify-content: space-between;\n  transform: translateY(-25px);\n  ${({ theme }) => theme.mediaQueries.md} {\n    position: relative;\n    height: auto;\n    margin-left: 0px;\n    align-items: center;\n    justify-content: space-between;\n    width: 180px;\n    transform: translateY(0px);\n    flex-direction: row;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 200px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    width: 225px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  > ${Text} {\n    font-size: 12px;\n  }\n\n  margin-left: 30px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    margin-left: 0px;\n    align-items: center;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: center;\n    align-items: center;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledText = styled(Text)`\n  font-weight: 600;\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 15px !important;\n  }\n`\n\ninterface CheckboxProps {\n  checked?: boolean\n}\n\nconst StyledCheckbox = styled(Checkbox)<CheckboxProps>`\n  height: 21px;\n  width: 21px;\n  margin-left: 50px;\n`\n\nconst CardContainer = styled.div`\n  margin-top: 17px;\n`\n\nconst ButtonCheckWrapper = styled.div`\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 100%;\n  margin-right: 30px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: fit-content;\n  }\n`\nconst StyledPage = styled(Page)`\n  padding-left: 5px;\n  padding-right: 5px;\n  width: 100vw;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  & > * {\n    width: 100%;\n    margin-bottom: 32px;\n  }\n`\n\nconst NfaStaking: React.FC = () => {\n  useSetNfaStakingPools()\n  usePollNfaStakingData()\n  const [stakedOnly, setStakedOnly] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const { pathname } = useLocation()\n  const isActive = !pathname.includes('history')\n  const allNfaStakingPools = useNfaStakingPools()\n  const { t } = useTranslation()\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const stakedOnlyPools = allNfaStakingPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const [finishedPools, openPools] = partition(allNfaStakingPools, (pool) => pool.isFinished)\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (stakedOnly) {\n      chosenPools = isActive ? stakedOnlyPools : openPools\n    } else {\n      chosenPools = isActive ? openPools : finishedPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = searchQuery.toLowerCase()\n      chosenPools = chosenPools.filter((pool) => `tier ${pool.tier}`.includes(lowercaseQuery))\n    }\n    return chosenPools\n  }\n\n  const cardLayout = (\n    <CardContainer>\n      <FlexLayout>\n        {poolsToShow().map((pool) => (\n          <PoolCard key={pool.sousId} pool={pool} removed={false} />\n        ))}\n      </FlexLayout>\n    </CardContainer>\n  )\n\n  return (\n    <>\n      <StyledPage width=\"1130px\">\n        <Banner\n          banner=\"nfa-staking\"\n          link=\"https://apeswap.gitbook.io/apeswap-finance/product-and-features/stake\"\n          title={t('Nfa Staking Pools')}\n          maxWidth={1130}\n          margin=\"0 0 20px 0px\"\n          titleColor=\"primaryBright\"\n        />\n        <ControlContainer>\n          <ViewControls>\n            <LabelWrapper>\n              <StyledText mr=\"15px\">{t('Search')}</StyledText>\n              <SearchInput onChange={handleChangeQuery} value={searchQuery} />\n            </LabelWrapper>\n            <ButtonCheckWrapper>\n              <ToggleContainer>\n                <ToggleWrapper onClick={() => setStakedOnly(!stakedOnly)}>\n                  <StyledCheckbox checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\n                  <StyledText>{t('Staked')}</StyledText>\n                </ToggleWrapper>\n              </ToggleContainer>\n            </ButtonCheckWrapper>\n          </ViewControls>\n        </ControlContainer>\n        {cardLayout}\n        <div ref={loadMoreRef} />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default NfaStaking\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number, days?: boolean) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS && !days) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS && !days) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { Contract, ethers } from 'ethers'\nimport {\n  VaultApeV1,\n  Iazo,\n  SousChef,\n  Masterchef,\n  Erc20,\n  MiniApeV2,\n  Auction,\n  NfaStaking,\n  IazoFactory,\n  Bill,\n  BillNft,\n  VaultApeV2,\n  JungleChef,\n} from 'config/abi/types'\n\nexport const approve = async (lpContract: Erc20, masterChefContract: Contract) => {\n  return lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stake = async (masterChefContract: Masterchef, pid, amount) => {\n  if (pid === 0) {\n    return masterChefContract\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .then((trx) => {\n        return trx.wait()\n      })\n  }\n\n  return masterChefContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const sousStake = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const sousStakeBnb = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleStake = async (jungleChefContract: JungleChef, amount) => {\n  return jungleChefContract.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const unstake = async (masterChefContract: Masterchef, pid, amount) => {\n  if (pid === 0) {\n    return masterChefContract\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .then((trx) => {\n        return trx.wait()\n      })\n  }\n  return masterChefContract\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const sousUnstake = async (sousChefContract: SousChef, amount) => {\n  return sousChefContract.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleUnstake = async (jungleChefContract: JungleChef, amount) => {\n  return jungleChefContract.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const sousEmegencyWithdraw = async (sousChefContract: SousChef) => {\n  return sousChefContract.emergencyWithdraw().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const harvest = async (masterChefContract: Masterchef, pid) => {\n  if (pid === 0) {\n    return masterChefContract.leaveStaking('0').then((trx) => {\n      return trx.wait()\n    })\n  }\n  return masterChefContract.deposit(pid, '0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const soushHarvest = async (sousChefContract: SousChef) => {\n  return sousChefContract.deposit('0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const jungleHarvest = async (jungleChefContract: JungleChef) => {\n  return jungleChefContract.deposit('0').then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const bid = async (auctionContract: Auction, amount, id) => {\n  return auctionContract\n    .bid(id, { value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const nextAuction = async (auctionContract: Auction, id) => {\n  return auctionContract.endAuction(id).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const listNfa = async (\n  auctionContract: Auction,\n  id,\n  auctionLength,\n  timeToExtend,\n  minimumExtendTime,\n  minimumBid,\n) => {\n  return auctionContract\n    .pushToAuction(\n      id,\n      auctionLength,\n      timeToExtend,\n      minimumExtendTime,\n      new BigNumber(minimumBid).times(new BigNumber(10).pow(18)).toString(),\n    )\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const removeAuction = async (auctionContract: Auction, id) => {\n  return auctionContract.removeAuction(id).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaStake = async (nfaStakingChefContract: NfaStaking, ids) => {\n  return nfaStakingChefContract.deposit(ids).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaStakeHarvest = async (nfaStakingChefContract: NfaStaking) => {\n  return nfaStakingChefContract.deposit([]).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const nfaUnstake = async (nfaStakingChefContract: NfaStaking, ids) => {\n  return nfaStakingChefContract.withdraw(ids).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const harvestMaximizer = async (vaultApeContract: VaultApeV2, pid) => {\n  return vaultApeContract.harvestAll(pid).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stakeVaultV1 = async (vaultApeContract: VaultApeV1, pid, amount) => {\n  return vaultApeContract['deposit(uint256,uint256)'](\n    pid,\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n  ).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const vaultUnstakeV1 = async (vaultApeContract: VaultApeV1, pid, amount) => {\n  return vaultApeContract['withdraw(uint256,uint256)'](\n    pid,\n    new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n  ).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const stakeVaultV2 = async (vaultApeContract: VaultApeV2, pid, amount) => {\n  return vaultApeContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const vaultUnstakeV2 = async (vaultApeContract: VaultApeV2, pid, amount) => {\n  return vaultApeContract\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const vaultUnstakeAll = async (vaultApeContract: VaultApeV1 | VaultApeV2, pid) => {\n  return vaultApeContract.withdrawAll(pid).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const miniChefStake = async (miniChefContract: MiniApeV2, pid, amount, account) => {\n  return miniChefContract\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const miniChefHarvest = async (miniChefContract: MiniApeV2, pid, account) => {\n  return miniChefContract.harvest(pid, account).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const miniChefUnstake = async (miniChefContract: MiniApeV2, pid, amount, account) => {\n  return miniChefContract\n    .withdrawAndHarvest(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\n/* \nunitParams[9]\n0: tokenPrice - string\n1: amount - string (hardcap)\n2: softCap - string\n3: startTime - string (unix timstamp)\n4: activeTime - number (seconds)\n5: lockPeriod - number (seconds)\n6: maxSpendPerBuyer - string\n7: liquidityPercent - number\n8: listingPrice - number (if 0 same as tokenPrice)\n*/\nexport const createNewIazo = async (\n  iazoFactoryContract: IazoFactory, // Contract\n  iazoOwner, // Address\n  iazoToken, // Address\n  baseToken, // Address\n  burnRemains, // Bool\n  unitParams, // uint256[9]\n  creationFee, // string\n) => {\n  return iazoFactoryContract\n    .createIAZO(iazoOwner, iazoToken, baseToken, burnRemains, unitParams, {\n      value: creationFee,\n    })\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const userDeposit = async (iazoContract: Iazo, amount) => {\n  return iazoContract.userDeposit(amount).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userDepositNative = async (iazoContract: Iazo, amount) => {\n  return iazoContract.userDepositNative({ value: amount }).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userWithdraw = async (iazoContract: Iazo) => {\n  return iazoContract.userWithdraw().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const withdrawOfferTokensOnFailure = async (iazoContract: Iazo) => {\n  return iazoContract.withdrawOfferTokensOnFailure().then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userBuyBill = async (billContract: Bill, user: string, lpAmount: string, maxPrice: string) => {\n  return billContract\n    .deposit(new BigNumber(lpAmount).times(new BigNumber(10).pow(18)).toString(), maxPrice, user)\n    .then((trx) => {\n      return trx.wait()\n    })\n}\n\nexport const userClaimBill = async (billContract: Bill, billIds: string[]) => {\n  return billContract.batchRedeem(billIds).then((trx) => {\n    return trx.wait()\n  })\n}\n\nexport const userTransferBillNft = async (billNft: BillNft, billId: string, fromAddress: string, toAddress: string) => {\n  return billNft['safeTransferFrom(address,address,uint256)'](fromAddress, toAddress, billId).then((trx) => {\n    return trx.wait()\n  })\n}\n","import { useEffect, useState } from 'react'\n\nconst useProgressiveImage = (src: string) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null)\n  useEffect(() => {\n    const img = new Image()\n    img.src = src\n    img.onload = () => setSourceLoaded(src)\n  }, [src])\n\n  return sourceLoaded\n}\n\nexport default useProgressiveImage\n","import { ArrowDropDownIcon, Flex, Skeleton } from '@ape.swap/uikit'\nimport styled from '@emotion/styled'\nimport { ThemeUIStyleObject } from 'theme-ui'\n\nexport const styles: Record<string, ThemeUIStyleObject> = {\n  // Style for the banner flex\n  flexPrimary: {\n    position: 'relative',\n    width: '100%',\n  },\n  // Style for title container\n  titleContainer: {\n    position: 'absolute',\n    flexDirection: 'column',\n    top: '20%',\n    left: '5%',\n    width: '45%',\n  },\n  // Style for the banner text\n  titleText: {\n    fontWeight: 700,\n    lineHeight: '4.5vw',\n    fontSize: '5vw',\n    '@media screen and (min-width: 1130px)': {\n      lineHeight: '50px',\n      fontSize: '55px',\n    },\n  },\n  // Style for learn more text\n  learnText: {\n    mt: '5%',\n    fontSize: 'calc(6px + 1.5vw)',\n    textTransform: 'capitalize',\n    padding: 0,\n    fontWeight: 600,\n    '@media screen and (min-width: 1130px)': {\n      fontSize: '22.5px',\n    },\n  },\n}\n\nexport const FlexImage = styled(Flex)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const FlexSkeleton = styled(Skeleton)<{ maxWidth?: number; listViewBreak?: boolean }>`\n  border-radius: 10px;\n  width: 100%;\n  height: 24vw;\n  @media screen and (min-width: 500px) and (max-width: 851px) {\n    height: ${({ listViewBreak }) => (listViewBreak ? '120px' : '24vw')};\n  }\n  @media screen and (min-width: ${({ maxWidth }) => maxWidth}px) {\n    height: ${({ maxWidth }) => maxWidth / 4}px;\n    width: ${({ maxWidth }) => maxWidth}px;\n  }\n`\n\nexport const LearnMoreArrow = styled(ArrowDropDownIcon)`\n  transform: rotate(270deg);\n  margin-left: 10px;\n  width: calc(4px + 0.9vw);\n  @media screen and (min-width: 1130px) {\n    width: 14px;\n  }\n`\n","/** @jsxImportSource theme-ui */\nimport { useHistory } from 'react-router-dom'\nimport { Flex, Button } from '@ape.swap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { Text } from 'theme-ui'\nimport useProgressiveImage from 'hooks/useProgressiveImage'\nimport React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { styles, FlexImage, LearnMoreArrow, FlexSkeleton } from './styles'\nimport { BannerTypes, ColorProps } from './types'\n\nconst Banner: React.FC<{\n  banner: BannerTypes\n  link: string\n  title?: string\n  children?: React.FC\n  listViewBreak?: boolean\n  margin?: string\n  titleColor?: ColorProps\n  maxWidth?: number\n}> = ({ banner, children, title, listViewBreak, margin, titleColor, link, maxWidth = 1200 }) => {\n  const history = useHistory()\n  const { isDark } = useTheme()\n  const { t } = useTranslation()\n  const loaded = useProgressiveImage(`../images/new-banners/${banner}-${isDark ? 'night' : 'day'}.svg`)\n\n  const openBannerLink = (bannerLink: string) =>\n    bannerLink.includes('modal') ? history.push({ search: bannerLink }) : window.open(bannerLink, '_blank')\n\n  // Media breaks are used until tablet mode on list view is designed\n  return (\n    <Flex sx={{ ...styles.flexPrimary, margin }}>\n      {loaded ? (\n        <FlexImage sx={{ backgroundImage: `url(${loaded})` }} maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      ) : (\n        <FlexSkeleton maxWidth={maxWidth} listViewBreak={listViewBreak} />\n      )}\n      <Flex sx={{ ...styles.titleContainer }}>\n        <Text\n          sx={{\n            ...styles.titleText,\n            color: titleColor || 'text',\n            '@media screen and (min-width: 500px) and (max-width: 851px)': {\n              fontSize: listViewBreak ? '25px' : '5vw',\n              lineHeight: listViewBreak ? '25px' : '5vw',\n            },\n          }}\n        >\n          {title.toUpperCase()}\n        </Text>\n        <Button\n          variant=\"text\"\n          onClick={() => openBannerLink(link)}\n          sx={{\n            ...styles.learnText,\n            color: titleColor || 'text',\n\n            '&&&:hover': {\n              textDecoration: 'none',\n              color: titleColor || 'text',\n            },\n          }}\n        >\n          {t('Learn More')} <LearnMoreArrow color={titleColor || 'text'} />\n        </Button>\n      </Flex>\n      {children}\n    </Flex>\n  )\n}\n\nexport default React.memo(Banner)\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\ninterface ImageProps {\n  src?: string\n  alt?: string\n  originalLink?: string\n  rarityTier: number\n  borderRadius?: string\n  hideTier?: boolean\n  imageBorderRadius?: boolean\n}\n\ninterface ContainerProps {\n  gradient: string\n  backgroundSize: string\n  borderRadius?: string\n}\n\nconst sway = keyframes`\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n`\n\nconst StyledImage = styled.img<{ imageBorderRadius: boolean }>`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: ${(props) => (props.imageBorderRadius ? '32px 32px 0 0' : 0)};\n`\n\nconst Container = styled.div<ContainerProps>`\n  background: ${(props) => props.gradient};\n  background-size: ${(props) => props.backgroundSize};\n  position: relative;\n  overflow: hidden;\n  padding-bottom: 100%;\n  animation: ${sway} 20s ease infinite;\n  border-radius: ${(props) => props.borderRadius};\n`\n\nconst TierSvg = styled.div`\n  position: absolute;\n  top: 2.5%;\n  right: 5%;\n  mix-blend-mode: screen;\n  font-size: 50px;\n  fill: rgba(255, 255, 255, 0.1);\n`\n\nconst TierNumber = styled.p`\n  font-weight: 800;\n`\n\nconst Image: React.FC<ImageProps> = ({ src, alt, rarityTier, borderRadius, hideTier, imageBorderRadius }) => {\n  let gradientStyle = ''\n  let backgroundSize = ''\n  if (rarityTier === 1) {\n    gradientStyle = 'linear-gradient(90deg, rgba(0,83,255,1) 0%, rgba(73,252,69,1) 100%);'\n    backgroundSize = '200% 200%'\n  } else if (rarityTier === 2) {\n    gradientStyle =\n      'radial-gradient(circle, rgba(255,0,0,0.6189426112241772) 10%, rgba(121, 7, 242, .75) 70%,rgba(255,162,0,.8) 100%);'\n    backgroundSize = '200% 200%'\n  } else if (rarityTier === 3) {\n    gradientStyle =\n      'linear-gradient( 293.5deg,  rgba(254,255,42,1) .2%, rgba(251,148,207,1) 9.9%, rgba(181,149,208,1) 22.9%, rgba(254,255,42,1) 36.4%, rgba(181,149,208,1) 50.1%, rgba(0,255,252,1) 61.1%, rgba(181,149,208,1) 71.2%, rgba(254,255,42,1) 84.2%, rgba(0,255,252,1) 92.2% );'\n    backgroundSize = '300% 300%'\n  } else if (rarityTier === 4) {\n    gradientStyle =\n      'radial-gradient(circle, rgba(255,255,255,.7) 0%, rgba(255,255,255,0) 70%), linear-gradient(-45deg, rgba(255, 255, 0, .1),rgba(255, 0, 0, .1) ,rgba(255, 255, 0, .1),rgba(0, 255, 255, .1), rgba(255, 255, 255, .1),rgba(255, 255, 0, .1), rgba(255, 0, 255, .1) ,rgba(0, 255, 0, .1), rgba(255, 255, 0, .1)), url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/13471/sparkles.gif)'\n    backgroundSize = '100% 100%'\n  } else if (rarityTier === 5) {\n    gradientStyle =\n      'radial-gradient(circle, rgba(243,255,35,1) 0%, rgba(148,187,233,0) 80%), url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/13471/sparkles.gif)'\n    backgroundSize = '100% 100%'\n  }\n\n  return (\n    <Container gradient={gradientStyle} backgroundSize={backgroundSize} borderRadius={borderRadius}>\n      {!hideTier && (\n        <TierSvg>\n          <TierNumber>{rarityTier}</TierNumber>\n        </TierSvg>\n      )}\n      {src && <StyledImage src={src} alt={alt} imageBorderRadius={imageBorderRadius} />}\n    </Container>\n  )\n}\n\nexport default React.memo(Image)\n","import React from 'react'\nimport styled from 'styled-components'\n\n// import Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  // const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {/* {i < l - 1 && <Spacer />} */}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n"],"sourceRoot":""}